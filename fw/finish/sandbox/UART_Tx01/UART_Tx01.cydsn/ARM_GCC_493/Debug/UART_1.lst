ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	UART_1_initVar
  18              		.bss
  19              		.type	UART_1_initVar, %object
  20              		.size	UART_1_initVar, 1
  21              	UART_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.UART_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	UART_1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	UART_1_Start, %function
  29              	UART_1_Start:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1.c"
   1:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC4/UART_1.c **** * Version 2.50
   4:.\Generated_Source\PSoC4/UART_1.c **** *
   5:.\Generated_Source\PSoC4/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/UART_1.c **** *
   8:.\Generated_Source\PSoC4/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_1.c **** *
  10:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_1.c **** 
  17:.\Generated_Source\PSoC4/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_IntClock.h"
  20:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC4/UART_1.c **** 
  22:.\Generated_Source\PSoC4/UART_1.c **** 
  23:.\Generated_Source\PSoC4/UART_1.c **** /***************************************
  24:.\Generated_Source\PSoC4/UART_1.c **** * Global data allocation
  25:.\Generated_Source\PSoC4/UART_1.c **** ***************************************/
  26:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 2


  27:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:.\Generated_Source\PSoC4/UART_1.c **** 
  29:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:.\Generated_Source\PSoC4/UART_1.c **** 
  35:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:.\Generated_Source\PSoC4/UART_1.c **** 
  48:.\Generated_Source\PSoC4/UART_1.c **** 
  49:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
  51:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC4/UART_1.c **** *
  53:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  54:.\Generated_Source\PSoC4/UART_1.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Enable() function.
  58:.\Generated_Source\PSoC4/UART_1.c **** *
  59:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
  60:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC4/UART_1.c **** *
  62:.\Generated_Source\PSoC4/UART_1.c **** * Return:
  63:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  64:.\Generated_Source\PSoC4/UART_1.c **** *
  65:.\Generated_Source\PSoC4/UART_1.c **** * Global variables:
  66:.\Generated_Source\PSoC4/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC4/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC4/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:.\Generated_Source\PSoC4/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC4/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:.\Generated_Source\PSoC4/UART_1.c **** *
  72:.\Generated_Source\PSoC4/UART_1.c **** * Reentrant:
  73:.\Generated_Source\PSoC4/UART_1.c **** *  No.
  74:.\Generated_Source\PSoC4/UART_1.c **** *
  75:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void) 
  77:.\Generated_Source\PSoC4/UART_1.c **** {
  32              		.loc 1 77 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 3


  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC4/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC4/UART_1.c ****     if(UART_1_initVar == 0u)
  40              		.loc 1 79 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC4/UART_1.c ****     {
  81:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
  45              		.loc 1 81 0
  46 000c FFF7FEFF 		bl	UART_1_Init
  82:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u;
  47              		.loc 1 82 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  83:.\Generated_Source\PSoC4/UART_1.c ****     }
  84:.\Generated_Source\PSoC4/UART_1.c **** 
  85:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
  52              		.loc 1 85 0
  53 0016 FFF7FEFF 		bl	UART_1_Enable
  86:.\Generated_Source\PSoC4/UART_1.c **** }
  54              		.loc 1 86 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	UART_1_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	UART_1_Start, .-UART_1_Start
  65              		.section	.text.UART_1_Init,"ax",%progbits
  66              		.align	2
  67              		.global	UART_1_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	UART_1_Init, %function
  71              	UART_1_Init:
  72              	.LFB3:
  87:.\Generated_Source\PSoC4/UART_1.c **** 
  88:.\Generated_Source\PSoC4/UART_1.c **** 
  89:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
  91:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  92:.\Generated_Source\PSoC4/UART_1.c **** *
  93:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  94:.\Generated_Source\PSoC4/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC4/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:.\Generated_Source\PSoC4/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC4/UART_1.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC4/UART_1.c **** *
  99:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 4


 100:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 101:.\Generated_Source\PSoC4/UART_1.c **** *
 102:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 103:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 104:.\Generated_Source\PSoC4/UART_1.c **** *
 105:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void) 
 107:.\Generated_Source\PSoC4/UART_1.c **** {
  73              		.loc 1 107 0
  74              		.cfi_startproc
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:.\Generated_Source\PSoC4/UART_1.c **** 
 110:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC4/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_errorStatus = 0u;
 115:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC4/UART_1.c **** 
 117:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC4/UART_1.c **** 
 123:.\Generated_Source\PSoC4/UART_1.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 125:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:.\Generated_Source\PSoC4/UART_1.c **** 
 129:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC4/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC4/UART_1.c **** 
 136:.\Generated_Source\PSoC4/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
 139:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC4/UART_1.c ****         #else
 142:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  81              		.loc 1 142 0
  82 0004 034B     		ldr	r3, .L6
  83 0006 4722     		mov	r2, #71
  84 0008 1A70     		strb	r2, [r3]
 143:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 5


 145:.\Generated_Source\PSoC4/UART_1.c **** 
 146:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC4/UART_1.c ****         #else
 150:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  85              		.loc 1 150 0
  86 000a 034B     		ldr	r3, .L6+4
  87 000c 0122     		mov	r2, #1
  88 000e 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC4/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC4/UART_1.c **** 
 153:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:.\Generated_Source\PSoC4/UART_1.c **** 
 155:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister( \
 157:.\Generated_Source\PSoC4/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC4/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC4/UART_1.c **** }
  89              		.loc 1 160 0
  90 0010 BD46     		mov	sp, r7
  91              		@ sp needed
  92 0012 80BD     		pop	{r7, pc}
  93              	.L7:
  94              		.align	2
  95              	.L6:
  96 0014 83000F40 		.word	1074724995
  97 0018 82000F40 		.word	1074724994
  98              		.cfi_endproc
  99              	.LFE3:
 100              		.size	UART_1_Init, .-UART_1_Init
 101              		.section	.text.UART_1_Enable,"ax",%progbits
 102              		.align	2
 103              		.global	UART_1_Enable
 104              		.code	16
 105              		.thumb_func
 106              		.type	UART_1_Enable, %function
 107              	UART_1_Enable:
 108              	.LFB4:
 161:.\Generated_Source\PSoC4/UART_1.c **** 
 162:.\Generated_Source\PSoC4/UART_1.c **** 
 163:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 165:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/UART_1.c **** *
 167:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC4/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:.\Generated_Source\PSoC4/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC4/UART_1.c **** *  operation.
 172:.\Generated_Source\PSoC4/UART_1.c **** 
 173:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 174:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 175:.\Generated_Source\PSoC4/UART_1.c **** *
 176:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 177:.\Generated_Source\PSoC4/UART_1.c **** *  None.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 6


 178:.\Generated_Source\PSoC4/UART_1.c **** *
 179:.\Generated_Source\PSoC4/UART_1.c **** * Global Variables:
 180:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC4/UART_1.c **** *
 182:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void) 
 184:.\Generated_Source\PSoC4/UART_1.c **** {
 109              		.loc 1 184 0
 110              		.cfi_startproc
 111 0000 90B5     		push	{r4, r7, lr}
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 83B0     		sub	sp, sp, #12
 117              		.cfi_def_cfa_offset 24
 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 120              		.loc 1 186 0
 121 0006 FC1D     		add	r4, r7, #7
 122 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 123 000c 031C     		mov	r3, r0
 124 000e 2370     		strb	r3, [r4]
 187:.\Generated_Source\PSoC4/UART_1.c **** 
 188:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:.\Generated_Source\PSoC4/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 191:.\Generated_Source\PSoC4/UART_1.c **** 
 192:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:.\Generated_Source\PSoC4/UART_1.c **** 
 195:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableRxInt();
 197:.\Generated_Source\PSoC4/UART_1.c **** 
 198:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:.\Generated_Source\PSoC4/UART_1.c **** 
 204:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:.\Generated_Source\PSoC4/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 125              		.loc 1 207 0
 126 0010 0B4A     		ldr	r2, .L9
 127 0012 0B4B     		ldr	r3, .L9
 128 0014 1B78     		ldrb	r3, [r3]
 129 0016 DBB2     		uxtb	r3, r3
 130 0018 2021     		mov	r1, #32
 131 001a 0B43     		orr	r3, r1
 132 001c DBB2     		uxtb	r3, r3
 133 001e 1370     		strb	r3, [r2]
 208:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 7


 210:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 134              		.loc 1 211 0
 135 0020 084A     		ldr	r2, .L9+4
 136 0022 084B     		ldr	r3, .L9+4
 137 0024 1B78     		ldrb	r3, [r3]
 138 0026 DBB2     		uxtb	r3, r3
 139 0028 1021     		mov	r1, #16
 140 002a 0B43     		orr	r3, r1
 141 002c DBB2     		uxtb	r3, r3
 142 002e 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 215:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC4/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC4/UART_1.c **** 
 218:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 220:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC4/UART_1.c **** 
 222:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 143              		.loc 1 222 0
 144 0030 FB1D     		add	r3, r7, #7
 145 0032 1B78     		ldrb	r3, [r3]
 146 0034 181C     		mov	r0, r3
 147 0036 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC4/UART_1.c **** }
 148              		.loc 1 223 0
 149 003a BD46     		mov	sp, r7
 150 003c 03B0     		add	sp, sp, #12
 151              		@ sp needed
 152 003e 90BD     		pop	{r4, r7, pc}
 153              	.L10:
 154              		.align	2
 155              	.L9:
 156 0040 93000F40 		.word	1074725011
 157 0044 92000F40 		.word	1074725010
 158              		.cfi_endproc
 159              	.LFE4:
 160              		.size	UART_1_Enable, .-UART_1_Enable
 161              		.section	.text.UART_1_Stop,"ax",%progbits
 162              		.align	2
 163              		.global	UART_1_Stop
 164              		.code	16
 165              		.thumb_func
 166              		.type	UART_1_Stop, %function
 167              	UART_1_Stop:
 168              	.LFB5:
 224:.\Generated_Source\PSoC4/UART_1.c **** 
 225:.\Generated_Source\PSoC4/UART_1.c **** 
 226:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 228:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/UART_1.c **** *
 230:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 231:.\Generated_Source\PSoC4/UART_1.c **** *  Disables the UART operation.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 8


 232:.\Generated_Source\PSoC4/UART_1.c **** *
 233:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 234:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 235:.\Generated_Source\PSoC4/UART_1.c **** *
 236:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 237:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 238:.\Generated_Source\PSoC4/UART_1.c **** *
 239:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void) 
 241:.\Generated_Source\PSoC4/UART_1.c **** {
 169              		.loc 1 241 0
 170              		.cfi_startproc
 171 0000 90B5     		push	{r4, r7, lr}
 172              		.cfi_def_cfa_offset 12
 173              		.cfi_offset 4, -12
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 83B0     		sub	sp, sp, #12
 177              		.cfi_def_cfa_offset 24
 178 0004 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 180              		.loc 1 243 0
 181 0006 FC1D     		add	r4, r7, #7
 182 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 183 000c 031C     		mov	r3, r0
 184 000e 2370     		strb	r3, [r4]
 244:.\Generated_Source\PSoC4/UART_1.c **** 
 245:.\Generated_Source\PSoC4/UART_1.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 248:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:.\Generated_Source\PSoC4/UART_1.c **** 
 250:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 185              		.loc 1 252 0
 186 0010 0B4A     		ldr	r2, .L12
 187 0012 0B4B     		ldr	r3, .L12
 188 0014 1B78     		ldrb	r3, [r3]
 189 0016 DBB2     		uxtb	r3, r3
 190 0018 2021     		mov	r1, #32
 191 001a 8B43     		bic	r3, r1
 192 001c DBB2     		uxtb	r3, r3
 193 001e 1370     		strb	r3, [r2]
 253:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:.\Generated_Source\PSoC4/UART_1.c **** 
 256:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC4/UART_1.c **** 
 260:.\Generated_Source\PSoC4/UART_1.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 9


 264:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableRxInt();
 266:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:.\Generated_Source\PSoC4/UART_1.c **** 
 269:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 194              		.loc 1 270 0
 195 0020 084A     		ldr	r2, .L12+4
 196 0022 084B     		ldr	r3, .L12+4
 197 0024 1B78     		ldrb	r3, [r3]
 198 0026 DBB2     		uxtb	r3, r3
 199 0028 1021     		mov	r1, #16
 200 002a 8B43     		bic	r3, r1
 201 002c DBB2     		uxtb	r3, r3
 202 002e 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC4/UART_1.c **** 
 272:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 274:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:.\Generated_Source\PSoC4/UART_1.c **** 
 277:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 203              		.loc 1 277 0
 204 0030 FB1D     		add	r3, r7, #7
 205 0032 1B78     		ldrb	r3, [r3]
 206 0034 181C     		mov	r0, r3
 207 0036 FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC4/UART_1.c **** }
 208              		.loc 1 278 0
 209 003a BD46     		mov	sp, r7
 210 003c 03B0     		add	sp, sp, #12
 211              		@ sp needed
 212 003e 90BD     		pop	{r4, r7, pc}
 213              	.L13:
 214              		.align	2
 215              	.L12:
 216 0040 93000F40 		.word	1074725011
 217 0044 92000F40 		.word	1074725010
 218              		.cfi_endproc
 219              	.LFE5:
 220              		.size	UART_1_Stop, .-UART_1_Stop
 221              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 222              		.align	2
 223              		.global	UART_1_ReadControlRegister
 224              		.code	16
 225              		.thumb_func
 226              		.type	UART_1_ReadControlRegister, %function
 227              	UART_1_ReadControlRegister:
 228              	.LFB6:
 279:.\Generated_Source\PSoC4/UART_1.c **** 
 280:.\Generated_Source\PSoC4/UART_1.c **** 
 281:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 284:.\Generated_Source\PSoC4/UART_1.c **** *
 285:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 10


 286:.\Generated_Source\PSoC4/UART_1.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC4/UART_1.c **** *
 288:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 290:.\Generated_Source\PSoC4/UART_1.c **** *
 291:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 292:.\Generated_Source\PSoC4/UART_1.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC4/UART_1.c **** *
 294:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC4/UART_1.c **** {
 229              		.loc 1 296 0
 230              		.cfi_startproc
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC4/UART_1.c ****         return(0u);
 237              		.loc 1 298 0
 238 0004 0023     		mov	r3, #0
 299:.\Generated_Source\PSoC4/UART_1.c ****     #else
 300:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC4/UART_1.c **** }
 239              		.loc 1 302 0
 240 0006 181C     		mov	r0, r3
 241 0008 BD46     		mov	sp, r7
 242              		@ sp needed
 243 000a 80BD     		pop	{r7, pc}
 244              		.cfi_endproc
 245              	.LFE6:
 246              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 247              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 248              		.align	2
 249              		.global	UART_1_WriteControlRegister
 250              		.code	16
 251              		.thumb_func
 252              		.type	UART_1_WriteControlRegister, %function
 253              	UART_1_WriteControlRegister:
 254              	.LFB7:
 303:.\Generated_Source\PSoC4/UART_1.c **** 
 304:.\Generated_Source\PSoC4/UART_1.c **** 
 305:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 308:.\Generated_Source\PSoC4/UART_1.c **** *
 309:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 310:.\Generated_Source\PSoC4/UART_1.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC4/UART_1.c **** *
 312:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 313:.\Generated_Source\PSoC4/UART_1.c **** *  control:  control register value
 314:.\Generated_Source\PSoC4/UART_1.c **** *
 315:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 316:.\Generated_Source\PSoC4/UART_1.c **** *  None.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 11


 317:.\Generated_Source\PSoC4/UART_1.c **** *
 318:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC4/UART_1.c **** {
 255              		.loc 1 320 0
 256              		.cfi_startproc
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 021C     		mov	r2, r0
 266 0008 FB1D     		add	r3, r7, #7
 267 000a 1A70     		strb	r2, [r3]
 321:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC4/UART_1.c ****         if(0u != control)
 323:.\Generated_Source\PSoC4/UART_1.c ****         {
 324:.\Generated_Source\PSoC4/UART_1.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC4/UART_1.c ****         }
 326:.\Generated_Source\PSoC4/UART_1.c ****     #else
 327:.\Generated_Source\PSoC4/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC4/UART_1.c **** }
 268              		.loc 1 329 0
 269 000c BD46     		mov	sp, r7
 270 000e 02B0     		add	sp, sp, #8
 271              		@ sp needed
 272 0010 80BD     		pop	{r7, pc}
 273              		.cfi_endproc
 274              	.LFE7:
 275              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 276 0012 C046     		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 277              		.align	2
 278              		.global	UART_1_SetTxInterruptMode
 279              		.code	16
 280              		.thumb_func
 281              		.type	UART_1_SetTxInterruptMode, %function
 282              	UART_1_SetTxInterruptMode:
 283              	.LFB8:
 330:.\Generated_Source\PSoC4/UART_1.c **** 
 331:.\Generated_Source\PSoC4/UART_1.c **** 
 332:.\Generated_Source\PSoC4/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC4/UART_1.c ****     *
 337:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 338:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC4/UART_1.c ****     *
 340:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 341:.\Generated_Source\PSoC4/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC4/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC4/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 12


 345:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC4/UART_1.c ****     *
 352:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 353:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 354:.\Generated_Source\PSoC4/UART_1.c ****     *
 355:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 356:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC4/UART_1.c ****     *
 358:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC4/UART_1.c ****     {
 361:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 362:.\Generated_Source\PSoC4/UART_1.c ****     }
 363:.\Generated_Source\PSoC4/UART_1.c **** 
 364:.\Generated_Source\PSoC4/UART_1.c **** 
 365:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC4/UART_1.c ****     *
 369:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 370:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC4/UART_1.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC4/UART_1.c ****     *
 373:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 374:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 375:.\Generated_Source\PSoC4/UART_1.c ****     *
 376:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 377:.\Generated_Source\PSoC4/UART_1.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC4/UART_1.c ****     *
 379:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 380:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC4/UART_1.c ****     *
 388:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 389:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 390:.\Generated_Source\PSoC4/UART_1.c ****     *
 391:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:.\Generated_Source\PSoC4/UART_1.c ****     {
 394:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC4/UART_1.c **** 
 396:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC4/UART_1.c **** 
 398:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC4/UART_1.c **** 
 401:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 13


 402:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 403:.\Generated_Source\PSoC4/UART_1.c **** 
 404:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:.\Generated_Source\PSoC4/UART_1.c **** 
 407:.\Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC4/UART_1.c ****         {
 409:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC4/UART_1.c **** 
 412:.\Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC4/UART_1.c ****             {
 414:.\Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC4/UART_1.c ****             }
 416:.\Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC4/UART_1.c **** 
 419:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC4/UART_1.c ****             {
 421:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC4/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:.\Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC4/UART_1.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC4/UART_1.c ****                             */
 430:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC4/UART_1.c ****                         }
 432:.\Generated_Source\PSoC4/UART_1.c ****                     #else
 433:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC4/UART_1.c ****             }
 437:.\Generated_Source\PSoC4/UART_1.c ****         }
 438:.\Generated_Source\PSoC4/UART_1.c ****         else
 439:.\Generated_Source\PSoC4/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:.\Generated_Source\PSoC4/UART_1.c ****         }
 442:.\Generated_Source\PSoC4/UART_1.c **** 
 443:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 444:.\Generated_Source\PSoC4/UART_1.c **** 
 445:.\Generated_Source\PSoC4/UART_1.c ****     #else
 446:.\Generated_Source\PSoC4/UART_1.c **** 
 447:.\Generated_Source\PSoC4/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC4/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 449:.\Generated_Source\PSoC4/UART_1.c **** 
 450:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC4/UART_1.c **** 
 452:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 453:.\Generated_Source\PSoC4/UART_1.c ****     }
 454:.\Generated_Source\PSoC4/UART_1.c **** 
 455:.\Generated_Source\PSoC4/UART_1.c **** 
 456:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 14


 459:.\Generated_Source\PSoC4/UART_1.c ****     *
 460:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 461:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC4/UART_1.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC4/UART_1.c ****     *
 464:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 465:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 466:.\Generated_Source\PSoC4/UART_1.c ****     *
 467:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 468:.\Generated_Source\PSoC4/UART_1.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC4/UART_1.c ****     *
 470:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effect:
 471:.\Generated_Source\PSoC4/UART_1.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC4/UART_1.c ****     *  register read.
 475:.\Generated_Source\PSoC4/UART_1.c ****     *
 476:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 477:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC4/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC4/UART_1.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC4/UART_1.c ****     *   bits.
 483:.\Generated_Source\PSoC4/UART_1.c ****     *
 484:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC4/UART_1.c ****     {
 487:.\Generated_Source\PSoC4/UART_1.c ****         uint8 status;
 488:.\Generated_Source\PSoC4/UART_1.c **** 
 489:.\Generated_Source\PSoC4/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:.\Generated_Source\PSoC4/UART_1.c **** 
 491:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC4/UART_1.c ****         {
 494:.\Generated_Source\PSoC4/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC4/UART_1.c ****         }
 497:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC4/UART_1.c **** 
 499:.\Generated_Source\PSoC4/UART_1.c ****         return(status);
 500:.\Generated_Source\PSoC4/UART_1.c ****     }
 501:.\Generated_Source\PSoC4/UART_1.c **** 
 502:.\Generated_Source\PSoC4/UART_1.c **** 
 503:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetChar
 505:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC4/UART_1.c ****     *
 507:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 508:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:.\Generated_Source\PSoC4/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC4/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC4/UART_1.c ****     *
 512:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 513:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 514:.\Generated_Source\PSoC4/UART_1.c ****     *
 515:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 15


 516:.\Generated_Source\PSoC4/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC4/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC4/UART_1.c ****     *
 519:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 520:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC4/UART_1.c ****     *
 528:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 529:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 530:.\Generated_Source\PSoC4/UART_1.c ****     *
 531:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:.\Generated_Source\PSoC4/UART_1.c ****     {
 534:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC4/UART_1.c **** 
 537:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC4/UART_1.c **** 
 541:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 543:.\Generated_Source\PSoC4/UART_1.c **** 
 544:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:.\Generated_Source\PSoC4/UART_1.c **** 
 547:.\Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC4/UART_1.c ****         {
 549:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC4/UART_1.c ****             {
 553:.\Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC4/UART_1.c ****             }
 555:.\Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC4/UART_1.c **** 
 558:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC4/UART_1.c ****             {
 560:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:.\Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC4/UART_1.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC4/UART_1.c ****                             */
 569:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC4/UART_1.c ****                         }
 571:.\Generated_Source\PSoC4/UART_1.c ****                     #else
 572:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 16


 573:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC4/UART_1.c ****             }
 576:.\Generated_Source\PSoC4/UART_1.c **** 
 577:.\Generated_Source\PSoC4/UART_1.c ****         }
 578:.\Generated_Source\PSoC4/UART_1.c ****         else
 579:.\Generated_Source\PSoC4/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC4/UART_1.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:.\Generated_Source\PSoC4/UART_1.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC4/UART_1.c ****                 {
 587:.\Generated_Source\PSoC4/UART_1.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC4/UART_1.c ****                 }
 589:.\Generated_Source\PSoC4/UART_1.c ****             }
 590:.\Generated_Source\PSoC4/UART_1.c ****         }
 591:.\Generated_Source\PSoC4/UART_1.c **** 
 592:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 593:.\Generated_Source\PSoC4/UART_1.c **** 
 594:.\Generated_Source\PSoC4/UART_1.c ****     #else
 595:.\Generated_Source\PSoC4/UART_1.c **** 
 596:.\Generated_Source\PSoC4/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:.\Generated_Source\PSoC4/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC4/UART_1.c ****         {
 599:.\Generated_Source\PSoC4/UART_1.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:.\Generated_Source\PSoC4/UART_1.c **** 
 602:.\Generated_Source\PSoC4/UART_1.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC4/UART_1.c ****             {
 606:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC4/UART_1.c ****             }
 608:.\Generated_Source\PSoC4/UART_1.c ****         }
 609:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC4/UART_1.c **** 
 611:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 612:.\Generated_Source\PSoC4/UART_1.c ****     }
 613:.\Generated_Source\PSoC4/UART_1.c **** 
 614:.\Generated_Source\PSoC4/UART_1.c **** 
 615:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetByte
 617:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC4/UART_1.c ****     *
 619:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 620:.\Generated_Source\PSoC4/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC4/UART_1.c ****     *  condition.
 622:.\Generated_Source\PSoC4/UART_1.c ****     *
 623:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 624:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 625:.\Generated_Source\PSoC4/UART_1.c ****     *
 626:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 627:.\Generated_Source\PSoC4/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC4/UART_1.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 17


 630:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 631:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 632:.\Generated_Source\PSoC4/UART_1.c ****     *
 633:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:.\Generated_Source\PSoC4/UART_1.c ****     {
 636:.\Generated_Source\PSoC4/UART_1.c ****         
 637:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC4/UART_1.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 641:.\Generated_Source\PSoC4/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_errorStatus = 0u;
 643:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 644:.\Generated_Source\PSoC4/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:.\Generated_Source\PSoC4/UART_1.c ****     #else
 646:.\Generated_Source\PSoC4/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC4/UART_1.c ****         
 649:.\Generated_Source\PSoC4/UART_1.c ****     }
 650:.\Generated_Source\PSoC4/UART_1.c **** 
 651:.\Generated_Source\PSoC4/UART_1.c **** 
 652:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC4/UART_1.c ****     *
 656:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 657:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC4/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC4/UART_1.c ****     *    account.
 663:.\Generated_Source\PSoC4/UART_1.c ****     *
 664:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 665:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 666:.\Generated_Source\PSoC4/UART_1.c ****     *
 667:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 668:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC4/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC4/UART_1.c ****     *
 671:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 672:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC4/UART_1.c ****     *
 676:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 677:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 678:.\Generated_Source\PSoC4/UART_1.c ****     *
 679:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 680:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC4/UART_1.c ****     *
 682:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC4/UART_1.c ****                                                             
 685:.\Generated_Source\PSoC4/UART_1.c ****     {
 686:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 18


 687:.\Generated_Source\PSoC4/UART_1.c **** 
 688:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC4/UART_1.c **** 
 690:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 692:.\Generated_Source\PSoC4/UART_1.c **** 
 693:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:.\Generated_Source\PSoC4/UART_1.c ****         {
 695:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC4/UART_1.c ****             {
 697:.\Generated_Source\PSoC4/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC4/UART_1.c ****             }
 699:.\Generated_Source\PSoC4/UART_1.c ****             else
 700:.\Generated_Source\PSoC4/UART_1.c ****             {
 701:.\Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
 702:.\Generated_Source\PSoC4/UART_1.c ****             }
 703:.\Generated_Source\PSoC4/UART_1.c ****         }
 704:.\Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:.\Generated_Source\PSoC4/UART_1.c ****         {
 706:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:.\Generated_Source\PSoC4/UART_1.c ****         }
 708:.\Generated_Source\PSoC4/UART_1.c ****         else
 709:.\Generated_Source\PSoC4/UART_1.c ****         {
 710:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:.\Generated_Source\PSoC4/UART_1.c ****         }
 712:.\Generated_Source\PSoC4/UART_1.c **** 
 713:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 714:.\Generated_Source\PSoC4/UART_1.c **** 
 715:.\Generated_Source\PSoC4/UART_1.c ****     #else
 716:.\Generated_Source\PSoC4/UART_1.c **** 
 717:.\Generated_Source\PSoC4/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC4/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC4/UART_1.c **** 
 720:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC4/UART_1.c **** 
 722:.\Generated_Source\PSoC4/UART_1.c ****         return(size);
 723:.\Generated_Source\PSoC4/UART_1.c ****     }
 724:.\Generated_Source\PSoC4/UART_1.c **** 
 725:.\Generated_Source\PSoC4/UART_1.c **** 
 726:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC4/UART_1.c ****     *
 730:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 731:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC4/UART_1.c ****     *
 733:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 734:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 735:.\Generated_Source\PSoC4/UART_1.c ****     *
 736:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 737:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 738:.\Generated_Source\PSoC4/UART_1.c ****     *
 739:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 740:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 19


 744:.\Generated_Source\PSoC4/UART_1.c ****     *
 745:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 746:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 747:.\Generated_Source\PSoC4/UART_1.c ****     *
 748:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 749:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC4/UART_1.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC4/UART_1.c ****     *
 753:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
 754:.\Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC4/UART_1.c ****     *
 756:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC4/UART_1.c ****     {
 759:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC4/UART_1.c **** 
 761:.\Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 763:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 764:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/UART_1.c **** 
 767:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC4/UART_1.c **** 
 769:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 771:.\Generated_Source\PSoC4/UART_1.c **** 
 772:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC4/UART_1.c **** 
 777:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 778:.\Generated_Source\PSoC4/UART_1.c **** 
 779:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC4/UART_1.c **** 
 781:.\Generated_Source\PSoC4/UART_1.c ****     }
 782:.\Generated_Source\PSoC4/UART_1.c **** 
 783:.\Generated_Source\PSoC4/UART_1.c **** 
 784:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC4/UART_1.c ****     *
 788:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 789:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC4/UART_1.c ****     *  UART.
 791:.\Generated_Source\PSoC4/UART_1.c ****     *
 792:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 793:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 796:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 798:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 800:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 20


 801:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 802:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC4/UART_1.c ****     *
 804:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 805:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 806:.\Generated_Source\PSoC4/UART_1.c ****     *
 807:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 808:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC4/UART_1.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC4/UART_1.c ****     *
 812:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC4/UART_1.c ****                                                         
 815:.\Generated_Source\PSoC4/UART_1.c ****     {
 816:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC4/UART_1.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC4/UART_1.c ****                 {
 820:.\Generated_Source\PSoC4/UART_1.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC4/UART_1.c ****                 }
 822:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC4/UART_1.c **** 
 828:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC4/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC4/UART_1.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC4/UART_1.c ****             {
 837:.\Generated_Source\PSoC4/UART_1.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC4/UART_1.c ****             }
 839:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC4/UART_1.c ****     }
 841:.\Generated_Source\PSoC4/UART_1.c **** 
 842:.\Generated_Source\PSoC4/UART_1.c **** 
 843:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC4/UART_1.c ****     *
 847:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 848:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC4/UART_1.c ****     *
 850:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 851:.\Generated_Source\PSoC4/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC4/UART_1.c ****     *
 853:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 854:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 855:.\Generated_Source\PSoC4/UART_1.c ****     *
 856:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 21


 858:.\Generated_Source\PSoC4/UART_1.c ****     {
 859:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 860:.\Generated_Source\PSoC4/UART_1.c ****     }
 861:.\Generated_Source\PSoC4/UART_1.c **** 
 862:.\Generated_Source\PSoC4/UART_1.c **** 
 863:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC4/UART_1.c ****     *
 867:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 868:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC4/UART_1.c ****     *
 870:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 871:.\Generated_Source\PSoC4/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC4/UART_1.c ****     *
 873:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 874:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 875:.\Generated_Source\PSoC4/UART_1.c ****     *
 876:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC4/UART_1.c ****     {
 879:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 880:.\Generated_Source\PSoC4/UART_1.c ****     }
 881:.\Generated_Source\PSoC4/UART_1.c **** 
 882:.\Generated_Source\PSoC4/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:.\Generated_Source\PSoC4/UART_1.c **** 
 884:.\Generated_Source\PSoC4/UART_1.c **** 
 885:.\Generated_Source\PSoC4/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC4/UART_1.c ****     *
 890:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 891:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC4/UART_1.c ****     *  interrupt.
 893:.\Generated_Source\PSoC4/UART_1.c ****     *
 894:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 895:.\Generated_Source\PSoC4/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC4/UART_1.c ****     *
 901:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 902:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 903:.\Generated_Source\PSoC4/UART_1.c ****     *
 904:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 905:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC4/UART_1.c ****     *
 907:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC4/UART_1.c ****     {
 284              		.loc 1 909 0
 285              		.cfi_startproc
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 22


 289              		.cfi_offset 14, -4
 290 0002 82B0     		sub	sp, sp, #8
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 021C     		mov	r2, r0
 295 0008 FB1D     		add	r3, r7, #7
 296 000a 1A70     		strb	r2, [r3]
 910:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 297              		.loc 1 910 0
 298 000c 034A     		ldr	r2, .L18
 299 000e FB1D     		add	r3, r7, #7
 300 0010 1B78     		ldrb	r3, [r3]
 301 0012 1370     		strb	r3, [r2]
 911:.\Generated_Source\PSoC4/UART_1.c ****     }
 302              		.loc 1 911 0
 303 0014 BD46     		mov	sp, r7
 304 0016 02B0     		add	sp, sp, #8
 305              		@ sp needed
 306 0018 80BD     		pop	{r7, pc}
 307              	.L19:
 308 001a C046     		.align	2
 309              	.L18:
 310 001c 82000F40 		.word	1074724994
 311              		.cfi_endproc
 312              	.LFE8:
 313              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 314              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 315              		.align	2
 316              		.global	UART_1_WriteTxData
 317              		.code	16
 318              		.thumb_func
 319              		.type	UART_1_WriteTxData, %function
 320              	UART_1_WriteTxData:
 321              	.LFB9:
 912:.\Generated_Source\PSoC4/UART_1.c **** 
 913:.\Generated_Source\PSoC4/UART_1.c **** 
 914:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC4/UART_1.c ****     *
 918:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 919:.\Generated_Source\PSoC4/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC4/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC4/UART_1.c ****     *  separately.
 922:.\Generated_Source\PSoC4/UART_1.c ****     *
 923:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 924:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC4/UART_1.c ****     *
 926:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 927:.\Generated_Source\PSoC4/UART_1.c ****     * None.
 928:.\Generated_Source\PSoC4/UART_1.c ****     *
 929:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 930:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC4/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 23


 934:.\Generated_Source\PSoC4/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC4/UART_1.c ****     *    initialized.
 937:.\Generated_Source\PSoC4/UART_1.c ****     *
 938:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 939:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 940:.\Generated_Source\PSoC4/UART_1.c ****     *
 941:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC4/UART_1.c ****     {
 322              		.loc 1 943 0
 323              		.cfi_startproc
 324 0000 80B5     		push	{r7, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 7, -8
 327              		.cfi_offset 14, -4
 328 0002 82B0     		sub	sp, sp, #8
 329              		.cfi_def_cfa_offset 16
 330 0004 00AF     		add	r7, sp, #0
 331              		.cfi_def_cfa_register 7
 332 0006 021C     		mov	r2, r0
 333 0008 FB1D     		add	r3, r7, #7
 334 000a 1A70     		strb	r2, [r3]
 944:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 335              		.loc 1 945 0
 336 000c 054B     		ldr	r3, .L22
 337 000e 1B78     		ldrb	r3, [r3]
 338 0010 002B     		cmp	r3, #0
 339 0012 03D0     		beq	.L20
 946:.\Generated_Source\PSoC4/UART_1.c ****         {
 947:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC4/UART_1.c **** 
 949:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 951:.\Generated_Source\PSoC4/UART_1.c **** 
 952:.\Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:.\Generated_Source\PSoC4/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC4/UART_1.c ****             {
 955:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC4/UART_1.c ****             }
 958:.\Generated_Source\PSoC4/UART_1.c ****             else
 959:.\Generated_Source\PSoC4/UART_1.c ****             {
 960:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC4/UART_1.c ****                 {
 962:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC4/UART_1.c ****                 }
 964:.\Generated_Source\PSoC4/UART_1.c **** 
 965:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC4/UART_1.c **** 
 967:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBufferWrite++;
 969:.\Generated_Source\PSoC4/UART_1.c ****             }
 970:.\Generated_Source\PSoC4/UART_1.c **** 
 971:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 972:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 24


 973:.\Generated_Source\PSoC4/UART_1.c ****         #else
 974:.\Generated_Source\PSoC4/UART_1.c **** 
 975:.\Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 340              		.loc 1 976 0
 341 0014 044A     		ldr	r2, .L22+4
 342 0016 FB1D     		add	r3, r7, #7
 343 0018 1B78     		ldrb	r3, [r3]
 344 001a 1370     		strb	r3, [r2]
 345              	.L20:
 977:.\Generated_Source\PSoC4/UART_1.c **** 
 978:.\Generated_Source\PSoC4/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC4/UART_1.c ****         }
 980:.\Generated_Source\PSoC4/UART_1.c ****     }
 346              		.loc 1 980 0
 347 001c BD46     		mov	sp, r7
 348 001e 02B0     		add	sp, sp, #8
 349              		@ sp needed
 350 0020 80BD     		pop	{r7, pc}
 351              	.L23:
 352 0022 C046     		.align	2
 353              	.L22:
 354 0024 00000000 		.word	UART_1_initVar
 355 0028 42000F40 		.word	1074724930
 356              		.cfi_endproc
 357              	.LFE9:
 358              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 359              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 360              		.align	2
 361              		.global	UART_1_ReadTxStatus
 362              		.code	16
 363              		.thumb_func
 364              		.type	UART_1_ReadTxStatus, %function
 365              	UART_1_ReadTxStatus:
 366              	.LFB10:
 981:.\Generated_Source\PSoC4/UART_1.c **** 
 982:.\Generated_Source\PSoC4/UART_1.c **** 
 983:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC4/UART_1.c ****     *
 987:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 988:.\Generated_Source\PSoC4/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC4/UART_1.c ****     *
 990:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 991:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 992:.\Generated_Source\PSoC4/UART_1.c ****     *
 993:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 994:.\Generated_Source\PSoC4/UART_1.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC4/UART_1.c ****     *
 996:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 997:.\Generated_Source\PSoC4/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC4/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC4/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC4/UART_1.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC4/UART_1.c ****     *
1002:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 25


1003:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC4/UART_1.c ****     {
 367              		.loc 1 1004 0
 368              		.cfi_startproc
 369 0000 80B5     		push	{r7, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 7, -8
 372              		.cfi_offset 14, -4
 373 0002 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 375              		.loc 1 1005 0
 376 0004 024B     		ldr	r3, .L26
 377 0006 1B78     		ldrb	r3, [r3]
 378 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC4/UART_1.c ****     }
 379              		.loc 1 1006 0
 380 000a 181C     		mov	r0, r3
 381 000c BD46     		mov	sp, r7
 382              		@ sp needed
 383 000e 80BD     		pop	{r7, pc}
 384              	.L27:
 385              		.align	2
 386              	.L26:
 387 0010 62000F40 		.word	1074724962
 388              		.cfi_endproc
 389              	.LFE10:
 390              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 391              		.section	.text.UART_1_PutChar,"ax",%progbits
 392              		.align	2
 393              		.global	UART_1_PutChar
 394              		.code	16
 395              		.thumb_func
 396              		.type	UART_1_PutChar, %function
 397              	UART_1_PutChar:
 398              	.LFB11:
1007:.\Generated_Source\PSoC4/UART_1.c **** 
1008:.\Generated_Source\PSoC4/UART_1.c **** 
1009:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutChar
1011:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/UART_1.c ****     *
1013:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1014:.\Generated_Source\PSoC4/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC4/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC4/UART_1.c ****     *  hold the data.
1017:.\Generated_Source\PSoC4/UART_1.c ****     *
1018:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1019:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC4/UART_1.c ****     *
1021:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1022:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1023:.\Generated_Source\PSoC4/UART_1.c ****     *
1024:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1025:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 26


1028:.\Generated_Source\PSoC4/UART_1.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1033:.\Generated_Source\PSoC4/UART_1.c ****     *
1034:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1035:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1036:.\Generated_Source\PSoC4/UART_1.c ****     *
1037:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1038:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC4/UART_1.c ****     *
1040:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC4/UART_1.c ****     {
 399              		.loc 1 1042 0
 400              		.cfi_startproc
 401 0000 80B5     		push	{r7, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
 405 0002 82B0     		sub	sp, sp, #8
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 409 0006 021C     		mov	r2, r0
 410 0008 FB1D     		add	r3, r7, #7
 411 000a 1A70     		strb	r2, [r3]
1043:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC4/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC4/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC4/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC4/UART_1.c ****         */
1048:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC4/UART_1.c **** 
1051:.\Generated_Source\PSoC4/UART_1.c ****         do
1052:.\Generated_Source\PSoC4/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC4/UART_1.c **** 
1054:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1057:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC4/UART_1.c **** 
1059:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:.\Generated_Source\PSoC4/UART_1.c **** 
1062:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1065:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC4/UART_1.c ****         }
1067:.\Generated_Source\PSoC4/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC4/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC4/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC4/UART_1.c **** 
1071:.\Generated_Source\PSoC4/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 27


1072:.\Generated_Source\PSoC4/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC4/UART_1.c ****         {
1074:.\Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC4/UART_1.c ****         }
1077:.\Generated_Source\PSoC4/UART_1.c ****         else
1078:.\Generated_Source\PSoC4/UART_1.c ****         {
1079:.\Generated_Source\PSoC4/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC4/UART_1.c ****             {
1081:.\Generated_Source\PSoC4/UART_1.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC4/UART_1.c ****             }
1083:.\Generated_Source\PSoC4/UART_1.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC4/UART_1.c **** 
1087:.\Generated_Source\PSoC4/UART_1.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1090:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC4/UART_1.c **** 
1092:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC4/UART_1.c **** 
1094:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1096:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC4/UART_1.c **** 
1098:.\Generated_Source\PSoC4/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC4/UART_1.c ****             {
1100:.\Generated_Source\PSoC4/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:.\Generated_Source\PSoC4/UART_1.c ****             }
1103:.\Generated_Source\PSoC4/UART_1.c ****         }
1104:.\Generated_Source\PSoC4/UART_1.c **** 
1105:.\Generated_Source\PSoC4/UART_1.c ****     #else
1106:.\Generated_Source\PSoC4/UART_1.c **** 
1107:.\Generated_Source\PSoC4/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 412              		.loc 1 1107 0
 413 000c C046     		mov	r8, r8
 414              	.L29:
 415              		.loc 1 1107 0 is_stmt 0 discriminator 1
 416 000e 074B     		ldr	r3, .L30
 417 0010 1B78     		ldrb	r3, [r3]
 418 0012 DBB2     		uxtb	r3, r3
 419 0014 1A1C     		mov	r2, r3
 420 0016 0423     		mov	r3, #4
 421 0018 1340     		and	r3, r2
 422 001a F8D1     		bne	.L29
1108:.\Generated_Source\PSoC4/UART_1.c ****         {
1109:.\Generated_Source\PSoC4/UART_1.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC4/UART_1.c ****         }
1111:.\Generated_Source\PSoC4/UART_1.c **** 
1112:.\Generated_Source\PSoC4/UART_1.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 423              		.loc 1 1113 0 is_stmt 1
 424 001c 044A     		ldr	r2, .L30+4
 425 001e FB1D     		add	r3, r7, #7
 426 0020 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 28


 427 0022 1370     		strb	r3, [r2]
1114:.\Generated_Source\PSoC4/UART_1.c **** 
1115:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC4/UART_1.c ****     }
 428              		.loc 1 1116 0
 429 0024 BD46     		mov	sp, r7
 430 0026 02B0     		add	sp, sp, #8
 431              		@ sp needed
 432 0028 80BD     		pop	{r7, pc}
 433              	.L31:
 434 002a C046     		.align	2
 435              	.L30:
 436 002c 62000F40 		.word	1074724962
 437 0030 42000F40 		.word	1074724930
 438              		.cfi_endproc
 439              	.LFE11:
 440              		.size	UART_1_PutChar, .-UART_1_PutChar
 441              		.section	.text.UART_1_PutString,"ax",%progbits
 442              		.align	2
 443              		.global	UART_1_PutString
 444              		.code	16
 445              		.thumb_func
 446              		.type	UART_1_PutString, %function
 447              	UART_1_PutString:
 448              	.LFB12:
1117:.\Generated_Source\PSoC4/UART_1.c **** 
1118:.\Generated_Source\PSoC4/UART_1.c **** 
1119:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutString
1121:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC4/UART_1.c ****     *
1123:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1124:.\Generated_Source\PSoC4/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC4/UART_1.c ****     *
1126:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1127:.\Generated_Source\PSoC4/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC4/UART_1.c ****     *
1129:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1130:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1131:.\Generated_Source\PSoC4/UART_1.c ****     *
1132:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1133:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1135:.\Generated_Source\PSoC4/UART_1.c ****     *
1136:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1137:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1138:.\Generated_Source\PSoC4/UART_1.c ****     *
1139:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1140:.\Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC4/UART_1.c ****     *
1144:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC4/UART_1.c ****     {
 449              		.loc 1 1146 0
 450              		.cfi_startproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 29


 451 0000 80B5     		push	{r7, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 84B0     		sub	sp, sp, #16
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
 459 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC4/UART_1.c ****         uint16 bufIndex = 0u;
 460              		.loc 1 1147 0
 461 0008 0E23     		mov	r3, #14
 462 000a FB18     		add	r3, r7, r3
 463 000c 0022     		mov	r2, #0
 464 000e 1A80     		strh	r2, [r3]
1148:.\Generated_Source\PSoC4/UART_1.c **** 
1149:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 465              		.loc 1 1150 0
 466 0010 0F4B     		ldr	r3, .L36
 467 0012 1B78     		ldrb	r3, [r3]
 468 0014 002B     		cmp	r3, #0
 469 0016 18D0     		beq	.L32
1151:.\Generated_Source\PSoC4/UART_1.c ****         {
1152:.\Generated_Source\PSoC4/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC4/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 470              		.loc 1 1153 0
 471 0018 0FE0     		b	.L34
 472              	.L35:
1154:.\Generated_Source\PSoC4/UART_1.c ****             {
1155:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 473              		.loc 1 1155 0
 474 001a 0E23     		mov	r3, #14
 475 001c FB18     		add	r3, r7, r3
 476 001e 1B88     		ldrh	r3, [r3]
 477 0020 7A68     		ldr	r2, [r7, #4]
 478 0022 D318     		add	r3, r2, r3
 479 0024 1B78     		ldrb	r3, [r3]
 480 0026 181C     		mov	r0, r3
 481 0028 FFF7FEFF 		bl	UART_1_PutChar
1156:.\Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 482              		.loc 1 1156 0
 483 002c 0E23     		mov	r3, #14
 484 002e FB18     		add	r3, r7, r3
 485 0030 1A88     		ldrh	r2, [r3]
 486 0032 0E23     		mov	r3, #14
 487 0034 FB18     		add	r3, r7, r3
 488 0036 0132     		add	r2, r2, #1
 489 0038 1A80     		strh	r2, [r3]
 490              	.L34:
1153:.\Generated_Source\PSoC4/UART_1.c ****             {
 491              		.loc 1 1153 0
 492 003a 0E23     		mov	r3, #14
 493 003c FB18     		add	r3, r7, r3
 494 003e 1B88     		ldrh	r3, [r3]
 495 0040 7A68     		ldr	r2, [r7, #4]
 496 0042 D318     		add	r3, r2, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 30


 497 0044 1B78     		ldrb	r3, [r3]
 498 0046 002B     		cmp	r3, #0
 499 0048 E7D1     		bne	.L35
 500              	.L32:
1157:.\Generated_Source\PSoC4/UART_1.c ****             }
1158:.\Generated_Source\PSoC4/UART_1.c ****         }
1159:.\Generated_Source\PSoC4/UART_1.c ****     }
 501              		.loc 1 1159 0
 502 004a BD46     		mov	sp, r7
 503 004c 04B0     		add	sp, sp, #16
 504              		@ sp needed
 505 004e 80BD     		pop	{r7, pc}
 506              	.L37:
 507              		.align	2
 508              	.L36:
 509 0050 00000000 		.word	UART_1_initVar
 510              		.cfi_endproc
 511              	.LFE12:
 512              		.size	UART_1_PutString, .-UART_1_PutString
 513              		.section	.text.UART_1_PutArray,"ax",%progbits
 514              		.align	2
 515              		.global	UART_1_PutArray
 516              		.code	16
 517              		.thumb_func
 518              		.type	UART_1_PutArray, %function
 519              	UART_1_PutArray:
 520              	.LFB13:
1160:.\Generated_Source\PSoC4/UART_1.c **** 
1161:.\Generated_Source\PSoC4/UART_1.c **** 
1162:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutArray
1164:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC4/UART_1.c ****     *
1166:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1167:.\Generated_Source\PSoC4/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC4/UART_1.c ****     *  transmission.
1169:.\Generated_Source\PSoC4/UART_1.c ****     *
1170:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1171:.\Generated_Source\PSoC4/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC4/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC4/UART_1.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC4/UART_1.c ****     *
1175:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1176:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1177:.\Generated_Source\PSoC4/UART_1.c ****     *
1178:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1179:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1181:.\Generated_Source\PSoC4/UART_1.c ****     *
1182:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1183:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1184:.\Generated_Source\PSoC4/UART_1.c ****     *
1185:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1186:.\Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 31


1190:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC4/UART_1.c ****                                                                     
1193:.\Generated_Source\PSoC4/UART_1.c ****     {
 521              		.loc 1 1193 0
 522              		.cfi_startproc
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 84B0     		sub	sp, sp, #16
 528              		.cfi_def_cfa_offset 24
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 532 0008 0A1C     		mov	r2, r1
 533 000a FB1C     		add	r3, r7, #3
 534 000c 1A70     		strb	r2, [r3]
1194:.\Generated_Source\PSoC4/UART_1.c ****         uint8 bufIndex = 0u;
 535              		.loc 1 1194 0
 536 000e 0F23     		mov	r3, #15
 537 0010 FB18     		add	r3, r7, r3
 538 0012 0022     		mov	r2, #0
 539 0014 1A70     		strb	r2, [r3]
1195:.\Generated_Source\PSoC4/UART_1.c **** 
1196:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 540              		.loc 1 1197 0
 541 0016 0F4B     		ldr	r3, .L42
 542 0018 1B78     		ldrb	r3, [r3]
 543 001a 002B     		cmp	r3, #0
 544 001c 17D0     		beq	.L38
1198:.\Generated_Source\PSoC4/UART_1.c ****         {
1199:.\Generated_Source\PSoC4/UART_1.c ****             while(bufIndex < byteCount)
 545              		.loc 1 1199 0
 546 001e 0FE0     		b	.L40
 547              	.L41:
1200:.\Generated_Source\PSoC4/UART_1.c ****             {
1201:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 548              		.loc 1 1201 0
 549 0020 0F23     		mov	r3, #15
 550 0022 FB18     		add	r3, r7, r3
 551 0024 1B78     		ldrb	r3, [r3]
 552 0026 7A68     		ldr	r2, [r7, #4]
 553 0028 D318     		add	r3, r2, r3
 554 002a 1B78     		ldrb	r3, [r3]
 555 002c 181C     		mov	r0, r3
 556 002e FFF7FEFF 		bl	UART_1_PutChar
1202:.\Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 557              		.loc 1 1202 0
 558 0032 0F23     		mov	r3, #15
 559 0034 FB18     		add	r3, r7, r3
 560 0036 1A78     		ldrb	r2, [r3]
 561 0038 0F23     		mov	r3, #15
 562 003a FB18     		add	r3, r7, r3
 563 003c 0132     		add	r2, r2, #1
 564 003e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 32


 565              	.L40:
1199:.\Generated_Source\PSoC4/UART_1.c ****             {
 566              		.loc 1 1199 0
 567 0040 0F23     		mov	r3, #15
 568 0042 FA18     		add	r2, r7, r3
 569 0044 FB1C     		add	r3, r7, #3
 570 0046 1278     		ldrb	r2, [r2]
 571 0048 1B78     		ldrb	r3, [r3]
 572 004a 9A42     		cmp	r2, r3
 573 004c E8D3     		bcc	.L41
 574              	.L38:
1203:.\Generated_Source\PSoC4/UART_1.c ****             }
1204:.\Generated_Source\PSoC4/UART_1.c ****         }
1205:.\Generated_Source\PSoC4/UART_1.c ****     }
 575              		.loc 1 1205 0
 576 004e BD46     		mov	sp, r7
 577 0050 04B0     		add	sp, sp, #16
 578              		@ sp needed
 579 0052 80BD     		pop	{r7, pc}
 580              	.L43:
 581              		.align	2
 582              	.L42:
 583 0054 00000000 		.word	UART_1_initVar
 584              		.cfi_endproc
 585              	.LFE13:
 586              		.size	UART_1_PutArray, .-UART_1_PutArray
 587              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 588              		.align	2
 589              		.global	UART_1_PutCRLF
 590              		.code	16
 591              		.thumb_func
 592              		.type	UART_1_PutCRLF, %function
 593              	UART_1_PutCRLF:
 594              	.LFB14:
1206:.\Generated_Source\PSoC4/UART_1.c **** 
1207:.\Generated_Source\PSoC4/UART_1.c **** 
1208:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC4/UART_1.c ****     *
1212:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1213:.\Generated_Source\PSoC4/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC4/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC4/UART_1.c ****     *
1216:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1217:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC4/UART_1.c ****     *
1219:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1220:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1221:.\Generated_Source\PSoC4/UART_1.c ****     *
1222:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1223:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1225:.\Generated_Source\PSoC4/UART_1.c ****     *
1226:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1227:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1228:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 33


1229:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC4/UART_1.c ****     {
 595              		.loc 1 1231 0
 596              		.cfi_startproc
 597 0000 80B5     		push	{r7, lr}
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 7, -8
 600              		.cfi_offset 14, -4
 601 0002 82B0     		sub	sp, sp, #8
 602              		.cfi_def_cfa_offset 16
 603 0004 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 605 0006 021C     		mov	r2, r0
 606 0008 FB1D     		add	r3, r7, #7
 607 000a 1A70     		strb	r2, [r3]
1232:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 608              		.loc 1 1233 0
 609 000c 084B     		ldr	r3, .L46
 610 000e 1B78     		ldrb	r3, [r3]
 611 0010 002B     		cmp	r3, #0
 612 0012 0AD0     		beq	.L44
1234:.\Generated_Source\PSoC4/UART_1.c ****         {
1235:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(txDataByte);
 613              		.loc 1 1235 0
 614 0014 FB1D     		add	r3, r7, #7
 615 0016 1B78     		ldrb	r3, [r3]
 616 0018 181C     		mov	r0, r3
 617 001a FFF7FEFF 		bl	UART_1_PutChar
1236:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Du);
 618              		.loc 1 1236 0
 619 001e 0D20     		mov	r0, #13
 620 0020 FFF7FEFF 		bl	UART_1_PutChar
1237:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Au);
 621              		.loc 1 1237 0
 622 0024 0A20     		mov	r0, #10
 623 0026 FFF7FEFF 		bl	UART_1_PutChar
 624              	.L44:
1238:.\Generated_Source\PSoC4/UART_1.c ****         }
1239:.\Generated_Source\PSoC4/UART_1.c ****     }
 625              		.loc 1 1239 0
 626 002a BD46     		mov	sp, r7
 627 002c 02B0     		add	sp, sp, #8
 628              		@ sp needed
 629 002e 80BD     		pop	{r7, pc}
 630              	.L47:
 631              		.align	2
 632              	.L46:
 633 0030 00000000 		.word	UART_1_initVar
 634              		.cfi_endproc
 635              	.LFE14:
 636              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 637              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 638              		.align	2
 639              		.global	UART_1_GetTxBufferSize
 640              		.code	16
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 34


 641              		.thumb_func
 642              		.type	UART_1_GetTxBufferSize, %function
 643              	UART_1_GetTxBufferSize:
 644              	.LFB15:
1240:.\Generated_Source\PSoC4/UART_1.c **** 
1241:.\Generated_Source\PSoC4/UART_1.c **** 
1242:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC4/UART_1.c ****     *
1246:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1247:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC4/UART_1.c ****     *  transmitted.
1249:.\Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC4/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC4/UART_1.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC4/UART_1.c ****     *
1255:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1256:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1257:.\Generated_Source\PSoC4/UART_1.c ****     *
1258:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1259:.\Generated_Source\PSoC4/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC4/UART_1.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC4/UART_1.c ****     *
1262:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1263:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC4/UART_1.c ****     *
1266:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1267:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1268:.\Generated_Source\PSoC4/UART_1.c ****     *
1269:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1270:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC4/UART_1.c ****     *
1272:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC4/UART_1.c ****                                                             
1275:.\Generated_Source\PSoC4/UART_1.c ****     {
 645              		.loc 1 1275 0
 646              		.cfi_startproc
 647 0000 80B5     		push	{r7, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 82B0     		sub	sp, sp, #8
 652              		.cfi_def_cfa_offset 16
 653 0004 00AF     		add	r7, sp, #0
 654              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
1277:.\Generated_Source\PSoC4/UART_1.c **** 
1278:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC4/UART_1.c **** 
1280:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1282:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 35


1283:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:.\Generated_Source\PSoC4/UART_1.c ****         {
1285:.\Generated_Source\PSoC4/UART_1.c ****             size = 0u;
1286:.\Generated_Source\PSoC4/UART_1.c ****         }
1287:.\Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:.\Generated_Source\PSoC4/UART_1.c ****         {
1289:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:.\Generated_Source\PSoC4/UART_1.c ****         }
1291:.\Generated_Source\PSoC4/UART_1.c ****         else
1292:.\Generated_Source\PSoC4/UART_1.c ****         {
1293:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite;
1295:.\Generated_Source\PSoC4/UART_1.c ****         }
1296:.\Generated_Source\PSoC4/UART_1.c **** 
1297:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1298:.\Generated_Source\PSoC4/UART_1.c **** 
1299:.\Generated_Source\PSoC4/UART_1.c ****     #else
1300:.\Generated_Source\PSoC4/UART_1.c **** 
1301:.\Generated_Source\PSoC4/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 655              		.loc 1 1301 0
 656 0006 0F4A     		ldr	r2, .L53
 657 0008 FB1D     		add	r3, r7, #7
 658 000a 1278     		ldrb	r2, [r2]
 659 000c 1A70     		strb	r2, [r3]
1302:.\Generated_Source\PSoC4/UART_1.c **** 
1303:.\Generated_Source\PSoC4/UART_1.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC4/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 660              		.loc 1 1304 0
 661 000e FB1D     		add	r3, r7, #7
 662 0010 1B78     		ldrb	r3, [r3]
 663 0012 0422     		mov	r2, #4
 664 0014 1340     		and	r3, r2
 665 0016 03D0     		beq	.L49
1305:.\Generated_Source\PSoC4/UART_1.c ****         {
1306:.\Generated_Source\PSoC4/UART_1.c ****             size = UART_1_FIFO_LENGTH;
 666              		.loc 1 1306 0
 667 0018 FB1D     		add	r3, r7, #7
 668 001a 0422     		mov	r2, #4
 669 001c 1A70     		strb	r2, [r3]
 670 001e 0BE0     		b	.L50
 671              	.L49:
1307:.\Generated_Source\PSoC4/UART_1.c ****         }
1308:.\Generated_Source\PSoC4/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 672              		.loc 1 1308 0
 673 0020 FB1D     		add	r3, r7, #7
 674 0022 1B78     		ldrb	r3, [r3]
 675 0024 0222     		mov	r2, #2
 676 0026 1340     		and	r3, r2
 677 0028 03D0     		beq	.L51
1309:.\Generated_Source\PSoC4/UART_1.c ****         {
1310:.\Generated_Source\PSoC4/UART_1.c ****             size = 0u;
 678              		.loc 1 1310 0
 679 002a FB1D     		add	r3, r7, #7
 680 002c 0022     		mov	r2, #0
 681 002e 1A70     		strb	r2, [r3]
 682 0030 02E0     		b	.L50
 683              	.L51:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 36


1311:.\Generated_Source\PSoC4/UART_1.c ****         }
1312:.\Generated_Source\PSoC4/UART_1.c ****         else
1313:.\Generated_Source\PSoC4/UART_1.c ****         {
1314:.\Generated_Source\PSoC4/UART_1.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC4/UART_1.c ****             size = 1u;
 684              		.loc 1 1315 0
 685 0032 FB1D     		add	r3, r7, #7
 686 0034 0122     		mov	r2, #1
 687 0036 1A70     		strb	r2, [r3]
 688              	.L50:
1316:.\Generated_Source\PSoC4/UART_1.c ****         }
1317:.\Generated_Source\PSoC4/UART_1.c **** 
1318:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC4/UART_1.c **** 
1320:.\Generated_Source\PSoC4/UART_1.c ****     return(size);
 689              		.loc 1 1320 0
 690 0038 FB1D     		add	r3, r7, #7
 691 003a 1B78     		ldrb	r3, [r3]
1321:.\Generated_Source\PSoC4/UART_1.c ****     }
 692              		.loc 1 1321 0
 693 003c 181C     		mov	r0, r3
 694 003e BD46     		mov	sp, r7
 695 0040 02B0     		add	sp, sp, #8
 696              		@ sp needed
 697 0042 80BD     		pop	{r7, pc}
 698              	.L54:
 699              		.align	2
 700              	.L53:
 701 0044 62000F40 		.word	1074724962
 702              		.cfi_endproc
 703              	.LFE15:
 704              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 705              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 706              		.align	2
 707              		.global	UART_1_ClearTxBuffer
 708              		.code	16
 709              		.thumb_func
 710              		.type	UART_1_ClearTxBuffer, %function
 711              	UART_1_ClearTxBuffer:
 712              	.LFB16:
1322:.\Generated_Source\PSoC4/UART_1.c **** 
1323:.\Generated_Source\PSoC4/UART_1.c **** 
1324:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC4/UART_1.c ****     *
1328:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1329:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC4/UART_1.c ****     *
1331:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1332:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1333:.\Generated_Source\PSoC4/UART_1.c ****     *
1334:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1335:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1336:.\Generated_Source\PSoC4/UART_1.c ****     *
1337:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1338:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 37


1339:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC4/UART_1.c ****     *
1341:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1342:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1343:.\Generated_Source\PSoC4/UART_1.c ****     *
1344:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1345:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC4/UART_1.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC4/UART_1.c ****     *
1349:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1350:.\Generated_Source\PSoC4/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC4/UART_1.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC4/UART_1.c ****     *
1353:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC4/UART_1.c ****     {
 713              		.loc 1 1355 0
 714              		.cfi_startproc
 715 0000 90B5     		push	{r4, r7, lr}
 716              		.cfi_def_cfa_offset 12
 717              		.cfi_offset 4, -12
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720 0002 83B0     		sub	sp, sp, #12
 721              		.cfi_def_cfa_offset 24
 722 0004 00AF     		add	r7, sp, #0
 723              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC4/UART_1.c **** 
1358:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 724              		.loc 1 1358 0
 725 0006 FC1D     		add	r4, r7, #7
 726 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 727 000c 031C     		mov	r3, r0
 728 000e 2370     		strb	r3, [r4]
1359:.\Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 729              		.loc 1 1360 0
 730 0010 0B4A     		ldr	r2, .L56
 731 0012 0B4B     		ldr	r3, .L56
 732 0014 1B78     		ldrb	r3, [r3]
 733 0016 DBB2     		uxtb	r3, r3
 734 0018 0121     		mov	r1, #1
 735 001a 0B43     		orr	r3, r1
 736 001c DBB2     		uxtb	r3, r3
 737 001e 1370     		strb	r3, [r2]
1361:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 738              		.loc 1 1361 0
 739 0020 074A     		ldr	r2, .L56
 740 0022 074B     		ldr	r3, .L56
 741 0024 1B78     		ldrb	r3, [r3]
 742 0026 DBB2     		uxtb	r3, r3
 743 0028 0121     		mov	r1, #1
 744 002a 8B43     		bic	r3, r1
 745 002c DBB2     		uxtb	r3, r3
 746 002e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 38


1362:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 747              		.loc 1 1362 0
 748 0030 FB1D     		add	r3, r7, #7
 749 0032 1B78     		ldrb	r3, [r3]
 750 0034 181C     		mov	r0, r3
 751 0036 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC4/UART_1.c **** 
1364:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC4/UART_1.c **** 
1366:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1368:.\Generated_Source\PSoC4/UART_1.c **** 
1369:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC4/UART_1.c **** 
1372:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1374:.\Generated_Source\PSoC4/UART_1.c **** 
1375:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC4/UART_1.c ****     }
 752              		.loc 1 1376 0
 753 003a BD46     		mov	sp, r7
 754 003c 03B0     		add	sp, sp, #12
 755              		@ sp needed
 756 003e 90BD     		pop	{r4, r7, pc}
 757              	.L57:
 758              		.align	2
 759              	.L56:
 760 0040 92000F40 		.word	1074725010
 761              		.cfi_endproc
 762              	.LFE16:
 763              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 764              		.section	.text.UART_1_SendBreak,"ax",%progbits
 765              		.align	2
 766              		.global	UART_1_SendBreak
 767              		.code	16
 768              		.thumb_func
 769              		.type	UART_1_SendBreak, %function
 770              	UART_1_SendBreak:
 771              	.LFB17:
1377:.\Generated_Source\PSoC4/UART_1.c **** 
1378:.\Generated_Source\PSoC4/UART_1.c **** 
1379:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC4/UART_1.c ****     *
1383:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1384:.\Generated_Source\PSoC4/UART_1.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC4/UART_1.c ****     *
1386:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1387:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC4/UART_1.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC4/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC4/UART_1.c ****     *       then return.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 39


1394:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC4/UART_1.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC4/UART_1.c ****     *
1398:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1399:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1400:.\Generated_Source\PSoC4/UART_1.c ****     *
1401:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1402:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1404:.\Generated_Source\PSoC4/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC4/UART_1.c ****     *
1406:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1407:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1408:.\Generated_Source\PSoC4/UART_1.c ****     *
1409:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1410:.\Generated_Source\PSoC4/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC4/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC4/UART_1.c ****     *  operation.
1413:.\Generated_Source\PSoC4/UART_1.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC4/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC4/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC4/UART_1.c ****     *     complete.
1417:.\Generated_Source\PSoC4/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC4/UART_1.c ****     *     operation
1419:.\Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC4/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC4/UART_1.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC4/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC4/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC4/UART_1.c ****     *
1432:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1433:.\Generated_Source\PSoC4/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC4/UART_1.c ****     *  break signal.
1435:.\Generated_Source\PSoC4/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC4/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC4/UART_1.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC4/UART_1.c ****     *
1439:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC4/UART_1.c ****     {
 772              		.loc 1 1441 0
 773              		.cfi_startproc
 774 0000 80B5     		push	{r7, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 84B0     		sub	sp, sp, #16
 779              		.cfi_def_cfa_offset 24
 780 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 40


 781              		.cfi_def_cfa_register 7
 782 0006 021C     		mov	r2, r0
 783 0008 FB1D     		add	r3, r7, #7
 784 000a 1A70     		strb	r2, [r3]
1442:.\Generated_Source\PSoC4/UART_1.c **** 
1443:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 785              		.loc 1 1444 0
 786 000c 254B     		ldr	r3, .L66
 787 000e 1B78     		ldrb	r3, [r3]
 788 0010 002B     		cmp	r3, #0
 789 0012 43D0     		beq	.L58
 790              	.LBB2:
1445:.\Generated_Source\PSoC4/UART_1.c ****         {
1446:.\Generated_Source\PSoC4/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC4/UART_1.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC4/UART_1.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC4/UART_1.c **** 
1450:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC4/UART_1.c **** 
1452:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC4/UART_1.c ****             {
1455:.\Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:.\Generated_Source\PSoC4/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC4/UART_1.c **** 
1461:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC4/UART_1.c ****                 {
1463:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:.\Generated_Source\PSoC4/UART_1.c ****                 }
1465:.\Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC4/UART_1.c ****             }
1467:.\Generated_Source\PSoC4/UART_1.c **** 
1468:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC4/UART_1.c ****             {
1471:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC4/UART_1.c ****                 {
1473:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:.\Generated_Source\PSoC4/UART_1.c ****                 }
1475:.\Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC4/UART_1.c ****             }
1477:.\Generated_Source\PSoC4/UART_1.c **** 
1478:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC4/UART_1.c ****             {
1482:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:.\Generated_Source\PSoC4/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC4/UART_1.c ****             }
1485:.\Generated_Source\PSoC4/UART_1.c **** 
1486:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC4/UART_1.c **** 
1488:.\Generated_Source\PSoC4/UART_1.c ****             static uint8 txPeriod;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 41


1489:.\Generated_Source\PSoC4/UART_1.c **** 
1490:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 791              		.loc 1 1490 0
 792 0014 FB1D     		add	r3, r7, #7
 793 0016 1B78     		ldrb	r3, [r3]
 794 0018 002B     		cmp	r3, #0
 795 001a 03D0     		beq	.L60
 796              		.loc 1 1490 0 is_stmt 0 discriminator 1
 797 001c FB1D     		add	r3, r7, #7
 798 001e 1B78     		ldrb	r3, [r3]
 799 0020 032B     		cmp	r3, #3
 800 0022 15D1     		bne	.L61
 801              	.L60:
1491:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC4/UART_1.c ****             {
1493:.\Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC4/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:.\Generated_Source\PSoC4/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC4/UART_1.c **** 
1500:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
1502:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
1503:.\Generated_Source\PSoC4/UART_1.c ****                 #else
1504:.\Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
 802              		.loc 1 1504 0 is_stmt 1
 803 0024 204B     		ldr	r3, .L66+4
 804 0026 1B78     		ldrb	r3, [r3]
 805 0028 DAB2     		uxtb	r2, r3
 806 002a 204B     		ldr	r3, .L66+8
 807 002c 1A70     		strb	r2, [r3]
1505:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
 808              		.loc 1 1505 0
 809 002e 1E4B     		ldr	r3, .L66+4
 810 0030 6722     		mov	r2, #103
 811 0032 1A70     		strb	r2, [r3]
1506:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC4/UART_1.c **** 
1508:.\Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 812              		.loc 1 1509 0
 813 0034 1E4B     		ldr	r3, .L66+12
 814 0036 0022     		mov	r2, #0
 815 0038 1A70     		strb	r2, [r3]
 816              	.L62:
1510:.\Generated_Source\PSoC4/UART_1.c **** 
1511:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC4/UART_1.c ****                 {
1513:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 817              		.loc 1 1513 0 discriminator 1
 818 003a 1E4A     		ldr	r2, .L66+16
 819 003c 0F23     		mov	r3, #15
 820 003e FB18     		add	r3, r7, r3
 821 0040 1278     		ldrb	r2, [r2]
 822 0042 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 42


1514:.\Generated_Source\PSoC4/UART_1.c ****                 }
1515:.\Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 823              		.loc 1 1515 0 discriminator 1
 824 0044 0F23     		mov	r3, #15
 825 0046 FB18     		add	r3, r7, r3
 826 0048 1B78     		ldrb	r3, [r3]
 827 004a 0222     		mov	r2, #2
 828 004c 1340     		and	r3, r2
 829 004e F4D1     		bne	.L62
 830              	.L61:
1516:.\Generated_Source\PSoC4/UART_1.c ****             }
1517:.\Generated_Source\PSoC4/UART_1.c **** 
1518:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 831              		.loc 1 1518 0
 832 0050 FB1D     		add	r3, r7, #7
 833 0052 1B78     		ldrb	r3, [r3]
 834 0054 012B     		cmp	r3, #1
 835 0056 03D0     		beq	.L63
 836              		.loc 1 1518 0 is_stmt 0 discriminator 1
 837 0058 FB1D     		add	r3, r7, #7
 838 005a 1B78     		ldrb	r3, [r3]
 839 005c 032B     		cmp	r3, #3
 840 005e 0DD1     		bne	.L64
 841              	.L63:
1519:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC4/UART_1.c ****             {
1521:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC4/UART_1.c ****                 {
1523:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 842              		.loc 1 1523 0 is_stmt 1 discriminator 1
 843 0060 144A     		ldr	r2, .L66+16
 844 0062 0F23     		mov	r3, #15
 845 0064 FB18     		add	r3, r7, r3
 846 0066 1278     		ldrb	r2, [r2]
 847 0068 1A70     		strb	r2, [r3]
1524:.\Generated_Source\PSoC4/UART_1.c ****                 }
1525:.\Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 848              		.loc 1 1525 0 discriminator 1
 849 006a 0F23     		mov	r3, #15
 850 006c FB18     		add	r3, r7, r3
 851 006e 1B78     		ldrb	r3, [r3]
 852 0070 DB43     		mvn	r3, r3
 853 0072 DBB2     		uxtb	r3, r3
 854 0074 1A1C     		mov	r2, r3
 855 0076 0123     		mov	r3, #1
 856 0078 1340     		and	r3, r2
 857 007a F1D1     		bne	.L63
 858              	.L64:
1526:.\Generated_Source\PSoC4/UART_1.c ****             }
1527:.\Generated_Source\PSoC4/UART_1.c **** 
1528:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 859              		.loc 1 1528 0
 860 007c FB1D     		add	r3, r7, #7
 861 007e 1B78     		ldrb	r3, [r3]
 862 0080 012B     		cmp	r3, #1
 863 0082 07D0     		beq	.L65
 864              		.loc 1 1528 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 43


 865 0084 FB1D     		add	r3, r7, #7
 866 0086 1B78     		ldrb	r3, [r3]
 867 0088 022B     		cmp	r3, #2
 868 008a 03D0     		beq	.L65
1529:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 869              		.loc 1 1529 0 is_stmt 1
 870 008c FB1D     		add	r3, r7, #7
 871 008e 1B78     		ldrb	r3, [r3]
 872 0090 032B     		cmp	r3, #3
 873 0092 03D1     		bne	.L58
 874              	.L65:
1530:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC4/UART_1.c ****             {
1532:.\Generated_Source\PSoC4/UART_1.c **** 
1533:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
1535:.\Generated_Source\PSoC4/UART_1.c ****             #else
1536:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
 875              		.loc 1 1536 0
 876 0094 044A     		ldr	r2, .L66+4
 877 0096 054B     		ldr	r3, .L66+8
 878 0098 1B78     		ldrb	r3, [r3]
 879 009a 1370     		strb	r3, [r2]
 880              	.L58:
 881              	.LBE2:
1537:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC4/UART_1.c **** 
1539:.\Generated_Source\PSoC4/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC4/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:.\Generated_Source\PSoC4/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC4/UART_1.c ****             }
1545:.\Generated_Source\PSoC4/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:.\Generated_Source\PSoC4/UART_1.c ****         }
1547:.\Generated_Source\PSoC4/UART_1.c ****     }
 882              		.loc 1 1547 0
 883 009c BD46     		mov	sp, r7
 884 009e 04B0     		add	sp, sp, #16
 885              		@ sp needed
 886 00a0 80BD     		pop	{r7, pc}
 887              	.L67:
 888 00a2 C046     		.align	2
 889              	.L66:
 890 00a4 00000000 		.word	UART_1_initVar
 891 00a8 83000F40 		.word	1074724995
 892 00ac 01000000 		.word	txPeriod.4811
 893 00b0 42000F40 		.word	1074724930
 894 00b4 62000F40 		.word	1074724962
 895              		.cfi_endproc
 896              	.LFE17:
 897              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 898              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 899              		.align	2
 900              		.global	UART_1_SetTxAddressMode
 901              		.code	16
 902              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 44


 903              		.type	UART_1_SetTxAddressMode, %function
 904              	UART_1_SetTxAddressMode:
 905              	.LFB18:
1548:.\Generated_Source\PSoC4/UART_1.c **** 
1549:.\Generated_Source\PSoC4/UART_1.c **** 
1550:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC4/UART_1.c ****     *
1554:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1555:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC4/UART_1.c ****     *
1557:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1558:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC4/UART_1.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC4/UART_1.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC4/UART_1.c ****     *
1564:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1565:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1566:.\Generated_Source\PSoC4/UART_1.c ****     *
1567:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1568:.\Generated_Source\PSoC4/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC4/UART_1.c ****     *  register.
1570:.\Generated_Source\PSoC4/UART_1.c ****     *
1571:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC4/UART_1.c ****     {
 906              		.loc 1 1573 0
 907              		.cfi_startproc
 908 0000 80B5     		push	{r7, lr}
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 7, -8
 911              		.cfi_offset 14, -4
 912 0002 82B0     		sub	sp, sp, #8
 913              		.cfi_def_cfa_offset 16
 914 0004 00AF     		add	r7, sp, #0
 915              		.cfi_def_cfa_register 7
 916 0006 021C     		mov	r2, r0
 917 0008 FB1D     		add	r3, r7, #7
 918 000a 1A70     		strb	r2, [r3]
1574:.\Generated_Source\PSoC4/UART_1.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC4/UART_1.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC4/UART_1.c ****         {
1577:.\Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1579:.\Generated_Source\PSoC4/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC4/UART_1.c ****         }
1582:.\Generated_Source\PSoC4/UART_1.c ****         else
1583:.\Generated_Source\PSoC4/UART_1.c ****         {
1584:.\Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1586:.\Generated_Source\PSoC4/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC4/UART_1.c ****         }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 45


1589:.\Generated_Source\PSoC4/UART_1.c ****     }
 919              		.loc 1 1589 0
 920 000c BD46     		mov	sp, r7
 921 000e 02B0     		add	sp, sp, #8
 922              		@ sp needed
 923 0010 80BD     		pop	{r7, pc}
 924              		.cfi_endproc
 925              	.LFE18:
 926              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 927 0012 C046     		.bss
 928              	txPeriod.4811:
 929 0001 00       		.space	1
 930              		.text
 931              	.Letext0:
 932              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 933              		.section	.debug_info,"",%progbits
 934              	.Ldebug_info0:
 935 0000 74030000 		.4byte	0x374
 936 0004 0400     		.2byte	0x4
 937 0006 00000000 		.4byte	.Ldebug_abbrev0
 938 000a 04       		.byte	0x4
 939 000b 01       		.uleb128 0x1
 940 000c 39010000 		.4byte	.LASF45
 941 0010 01       		.byte	0x1
 942 0011 2B030000 		.4byte	.LASF46
 943 0015 51020000 		.4byte	.LASF47
 944 0019 00000000 		.4byte	.Ldebug_ranges0+0
 945 001d 00000000 		.4byte	0
 946 0021 00000000 		.4byte	.Ldebug_line0
 947 0025 02       		.uleb128 0x2
 948 0026 01       		.byte	0x1
 949 0027 06       		.byte	0x6
 950 0028 4D030000 		.4byte	.LASF0
 951 002c 02       		.uleb128 0x2
 952 002d 01       		.byte	0x1
 953 002e 08       		.byte	0x8
 954 002f 13010000 		.4byte	.LASF1
 955 0033 02       		.uleb128 0x2
 956 0034 02       		.byte	0x2
 957 0035 05       		.byte	0x5
 958 0036 2F010000 		.4byte	.LASF2
 959 003a 02       		.uleb128 0x2
 960 003b 02       		.byte	0x2
 961 003c 07       		.byte	0x7
 962 003d 54000000 		.4byte	.LASF3
 963 0041 02       		.uleb128 0x2
 964 0042 04       		.byte	0x4
 965 0043 05       		.byte	0x5
 966 0044 FA020000 		.4byte	.LASF4
 967 0048 02       		.uleb128 0x2
 968 0049 04       		.byte	0x4
 969 004a 07       		.byte	0x7
 970 004b D8000000 		.4byte	.LASF5
 971 004f 02       		.uleb128 0x2
 972 0050 08       		.byte	0x8
 973 0051 05       		.byte	0x5
 974 0052 00000000 		.4byte	.LASF6
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 46


 975 0056 02       		.uleb128 0x2
 976 0057 08       		.byte	0x8
 977 0058 07       		.byte	0x7
 978 0059 01020000 		.4byte	.LASF7
 979 005d 03       		.uleb128 0x3
 980 005e 04       		.byte	0x4
 981 005f 05       		.byte	0x5
 982 0060 696E7400 		.ascii	"int\000"
 983 0064 02       		.uleb128 0x2
 984 0065 04       		.byte	0x4
 985 0066 07       		.byte	0x7
 986 0067 DD010000 		.4byte	.LASF8
 987 006b 04       		.uleb128 0x4
 988 006c EA000000 		.4byte	.LASF9
 989 0070 02       		.byte	0x2
 990 0071 3801     		.2byte	0x138
 991 0073 2C000000 		.4byte	0x2c
 992 0077 04       		.uleb128 0x4
 993 0078 C7010000 		.4byte	.LASF10
 994 007c 02       		.byte	0x2
 995 007d 3901     		.2byte	0x139
 996 007f 3A000000 		.4byte	0x3a
 997 0083 02       		.uleb128 0x2
 998 0084 04       		.byte	0x4
 999 0085 04       		.byte	0x4
 1000 0086 9A000000 		.4byte	.LASF11
 1001 008a 02       		.uleb128 0x2
 1002 008b 08       		.byte	0x8
 1003 008c 04       		.byte	0x4
 1004 008d 21010000 		.4byte	.LASF12
 1005 0091 04       		.uleb128 0x4
 1006 0092 A5020000 		.4byte	.LASF13
 1007 0096 02       		.byte	0x2
 1008 0097 4901     		.2byte	0x149
 1009 0099 9D000000 		.4byte	0x9d
 1010 009d 02       		.uleb128 0x2
 1011 009e 01       		.byte	0x1
 1012 009f 08       		.byte	0x8
 1013 00a0 B6020000 		.4byte	.LASF14
 1014 00a4 04       		.uleb128 0x4
 1015 00a5 AC000000 		.4byte	.LASF15
 1016 00a9 02       		.byte	0x2
 1017 00aa E201     		.2byte	0x1e2
 1018 00ac B0000000 		.4byte	0xb0
 1019 00b0 05       		.uleb128 0x5
 1020 00b1 6B000000 		.4byte	0x6b
 1021 00b5 02       		.uleb128 0x2
 1022 00b6 04       		.byte	0x4
 1023 00b7 07       		.byte	0x7
 1024 00b8 9C020000 		.4byte	.LASF16
 1025 00bc 06       		.uleb128 0x6
 1026 00bd 1A000000 		.4byte	.LASF17
 1027 00c1 01       		.byte	0x1
 1028 00c2 4C       		.byte	0x4c
 1029 00c3 00000000 		.4byte	.LFB2
 1030 00c7 24000000 		.4byte	.LFE2-.LFB2
 1031 00cb 01       		.uleb128 0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 47


 1032 00cc 9C       		.byte	0x9c
 1033 00cd 07       		.uleb128 0x7
 1034 00ce 0E000000 		.4byte	.LASF18
 1035 00d2 01       		.byte	0x1
 1036 00d3 6A       		.byte	0x6a
 1037 00d4 00000000 		.4byte	.LFB3
 1038 00d8 1C000000 		.4byte	.LFE3-.LFB3
 1039 00dc 01       		.uleb128 0x1
 1040 00dd 9C       		.byte	0x9c
 1041 00de 08       		.uleb128 0x8
 1042 00df 1D030000 		.4byte	.LASF19
 1043 00e3 01       		.byte	0x1
 1044 00e4 B7       		.byte	0xb7
 1045 00e5 00000000 		.4byte	.LFB4
 1046 00e9 48000000 		.4byte	.LFE4-.LFB4
 1047 00ed 01       		.uleb128 0x1
 1048 00ee 9C       		.byte	0x9c
 1049 00ef 02010000 		.4byte	0x102
 1050 00f3 09       		.uleb128 0x9
 1051 00f4 02010000 		.4byte	.LASF21
 1052 00f8 01       		.byte	0x1
 1053 00f9 B9       		.byte	0xb9
 1054 00fa 6B000000 		.4byte	0x6b
 1055 00fe 02       		.uleb128 0x2
 1056 00ff 91       		.byte	0x91
 1057 0100 6F       		.sleb128 -17
 1058 0101 00       		.byte	0
 1059 0102 08       		.uleb128 0x8
 1060 0103 CC000000 		.4byte	.LASF20
 1061 0107 01       		.byte	0x1
 1062 0108 F0       		.byte	0xf0
 1063 0109 00000000 		.4byte	.LFB5
 1064 010d 48000000 		.4byte	.LFE5-.LFB5
 1065 0111 01       		.uleb128 0x1
 1066 0112 9C       		.byte	0x9c
 1067 0113 26010000 		.4byte	0x126
 1068 0117 09       		.uleb128 0x9
 1069 0118 02010000 		.4byte	.LASF21
 1070 011c 01       		.byte	0x1
 1071 011d F2       		.byte	0xf2
 1072 011e 6B000000 		.4byte	0x6b
 1073 0122 02       		.uleb128 0x2
 1074 0123 91       		.byte	0x91
 1075 0124 6F       		.sleb128 -17
 1076 0125 00       		.byte	0
 1077 0126 0A       		.uleb128 0xa
 1078 0127 B1000000 		.4byte	.LASF28
 1079 012b 01       		.byte	0x1
 1080 012c 2701     		.2byte	0x127
 1081 012e 6B000000 		.4byte	0x6b
 1082 0132 00000000 		.4byte	.LFB6
 1083 0136 0C000000 		.4byte	.LFE6-.LFB6
 1084 013a 01       		.uleb128 0x1
 1085 013b 9C       		.byte	0x9c
 1086 013c 0B       		.uleb128 0xb
 1087 013d 27000000 		.4byte	.LASF22
 1088 0141 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 48


 1089 0142 3F01     		.2byte	0x13f
 1090 0144 00000000 		.4byte	.LFB7
 1091 0148 12000000 		.4byte	.LFE7-.LFB7
 1092 014c 01       		.uleb128 0x1
 1093 014d 9C       		.byte	0x9c
 1094 014e 62010000 		.4byte	0x162
 1095 0152 0C       		.uleb128 0xc
 1096 0153 F0000000 		.4byte	.LASF24
 1097 0157 01       		.byte	0x1
 1098 0158 3F01     		.2byte	0x13f
 1099 015a 6B000000 		.4byte	0x6b
 1100 015e 02       		.uleb128 0x2
 1101 015f 91       		.byte	0x91
 1102 0160 77       		.sleb128 -9
 1103 0161 00       		.byte	0
 1104 0162 0B       		.uleb128 0xb
 1105 0163 03030000 		.4byte	.LASF23
 1106 0167 01       		.byte	0x1
 1107 0168 8C03     		.2byte	0x38c
 1108 016a 00000000 		.4byte	.LFB8
 1109 016e 20000000 		.4byte	.LFE8-.LFB8
 1110 0172 01       		.uleb128 0x1
 1111 0173 9C       		.byte	0x9c
 1112 0174 88010000 		.4byte	0x188
 1113 0178 0C       		.uleb128 0xc
 1114 0179 28010000 		.4byte	.LASF25
 1115 017d 01       		.byte	0x1
 1116 017e 8C03     		.2byte	0x38c
 1117 0180 6B000000 		.4byte	0x6b
 1118 0184 02       		.uleb128 0x2
 1119 0185 91       		.byte	0x91
 1120 0186 77       		.sleb128 -9
 1121 0187 00       		.byte	0
 1122 0188 0B       		.uleb128 0xb
 1123 0189 C3020000 		.4byte	.LASF26
 1124 018d 01       		.byte	0x1
 1125 018e AE03     		.2byte	0x3ae
 1126 0190 00000000 		.4byte	.LFB9
 1127 0194 2C000000 		.4byte	.LFE9-.LFB9
 1128 0198 01       		.uleb128 0x1
 1129 0199 9C       		.byte	0x9c
 1130 019a AE010000 		.4byte	0x1ae
 1131 019e 0C       		.uleb128 0xc
 1132 019f AB020000 		.4byte	.LASF27
 1133 01a3 01       		.byte	0x1
 1134 01a4 AE03     		.2byte	0x3ae
 1135 01a6 6B000000 		.4byte	0x6b
 1136 01aa 02       		.uleb128 0x2
 1137 01ab 91       		.byte	0x91
 1138 01ac 77       		.sleb128 -9
 1139 01ad 00       		.byte	0
 1140 01ae 0A       		.uleb128 0xa
 1141 01af 7F000000 		.4byte	.LASF29
 1142 01b3 01       		.byte	0x1
 1143 01b4 EB03     		.2byte	0x3eb
 1144 01b6 6B000000 		.4byte	0x6b
 1145 01ba 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 49


 1146 01be 14000000 		.4byte	.LFE10-.LFB10
 1147 01c2 01       		.uleb128 0x1
 1148 01c3 9C       		.byte	0x9c
 1149 01c4 0B       		.uleb128 0xb
 1150 01c5 CE010000 		.4byte	.LASF30
 1151 01c9 01       		.byte	0x1
 1152 01ca 1104     		.2byte	0x411
 1153 01cc 00000000 		.4byte	.LFB11
 1154 01d0 34000000 		.4byte	.LFE11-.LFB11
 1155 01d4 01       		.uleb128 0x1
 1156 01d5 9C       		.byte	0x9c
 1157 01d6 EA010000 		.4byte	0x1ea
 1158 01da 0C       		.uleb128 0xc
 1159 01db AB020000 		.4byte	.LASF27
 1160 01df 01       		.byte	0x1
 1161 01e0 1104     		.2byte	0x411
 1162 01e2 6B000000 		.4byte	0x6b
 1163 01e6 02       		.uleb128 0x2
 1164 01e7 91       		.byte	0x91
 1165 01e8 77       		.sleb128 -9
 1166 01e9 00       		.byte	0
 1167 01ea 0D       		.uleb128 0xd
 1168 01eb 59030000 		.4byte	.LASF31
 1169 01ef 01       		.byte	0x1
 1170 01f0 7904     		.2byte	0x479
 1171 01f2 00000000 		.4byte	.LFB12
 1172 01f6 54000000 		.4byte	.LFE12-.LFB12
 1173 01fa 01       		.uleb128 0x1
 1174 01fb 9C       		.byte	0x9c
 1175 01fc 1F020000 		.4byte	0x21f
 1176 0200 0C       		.uleb128 0xc
 1177 0201 93000000 		.4byte	.LASF32
 1178 0205 01       		.byte	0x1
 1179 0206 7904     		.2byte	0x479
 1180 0208 1F020000 		.4byte	0x21f
 1181 020c 02       		.uleb128 0x2
 1182 020d 91       		.byte	0x91
 1183 020e 6C       		.sleb128 -20
 1184 020f 0E       		.uleb128 0xe
 1185 0210 27020000 		.4byte	.LASF33
 1186 0214 01       		.byte	0x1
 1187 0215 7B04     		.2byte	0x47b
 1188 0217 77000000 		.4byte	0x77
 1189 021b 02       		.uleb128 0x2
 1190 021c 91       		.byte	0x91
 1191 021d 76       		.sleb128 -10
 1192 021e 00       		.byte	0
 1193 021f 0F       		.uleb128 0xf
 1194 0220 04       		.byte	0x4
 1195 0221 25020000 		.4byte	0x225
 1196 0225 10       		.uleb128 0x10
 1197 0226 91000000 		.4byte	0x91
 1198 022a 0D       		.uleb128 0xd
 1199 022b 41020000 		.4byte	.LASF34
 1200 022f 01       		.byte	0x1
 1201 0230 A704     		.2byte	0x4a7
 1202 0232 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 50


 1203 0236 58000000 		.4byte	.LFE13-.LFB13
 1204 023a 01       		.uleb128 0x1
 1205 023b 9C       		.byte	0x9c
 1206 023c 6E020000 		.4byte	0x26e
 1207 0240 0C       		.uleb128 0xc
 1208 0241 93000000 		.4byte	.LASF32
 1209 0245 01       		.byte	0x1
 1210 0246 A704     		.2byte	0x4a7
 1211 0248 6E020000 		.4byte	0x26e
 1212 024c 02       		.uleb128 0x2
 1213 024d 91       		.byte	0x91
 1214 024e 6C       		.sleb128 -20
 1215 024f 0C       		.uleb128 0xc
 1216 0250 F8000000 		.4byte	.LASF35
 1217 0254 01       		.byte	0x1
 1218 0255 A704     		.2byte	0x4a7
 1219 0257 6B000000 		.4byte	0x6b
 1220 025b 02       		.uleb128 0x2
 1221 025c 91       		.byte	0x91
 1222 025d 6B       		.sleb128 -21
 1223 025e 0E       		.uleb128 0xe
 1224 025f 27020000 		.4byte	.LASF33
 1225 0263 01       		.byte	0x1
 1226 0264 AA04     		.2byte	0x4aa
 1227 0266 6B000000 		.4byte	0x6b
 1228 026a 02       		.uleb128 0x2
 1229 026b 91       		.byte	0x91
 1230 026c 77       		.sleb128 -9
 1231 026d 00       		.byte	0
 1232 026e 0F       		.uleb128 0xf
 1233 026f 04       		.byte	0x4
 1234 0270 74020000 		.4byte	0x274
 1235 0274 10       		.uleb128 0x10
 1236 0275 6B000000 		.4byte	0x6b
 1237 0279 0D       		.uleb128 0xd
 1238 027a 18020000 		.4byte	.LASF36
 1239 027e 01       		.byte	0x1
 1240 027f CE04     		.2byte	0x4ce
 1241 0281 00000000 		.4byte	.LFB14
 1242 0285 34000000 		.4byte	.LFE14-.LFB14
 1243 0289 01       		.uleb128 0x1
 1244 028a 9C       		.byte	0x9c
 1245 028b 9F020000 		.4byte	0x29f
 1246 028f 0C       		.uleb128 0xc
 1247 0290 AB020000 		.4byte	.LASF27
 1248 0294 01       		.byte	0x1
 1249 0295 CE04     		.2byte	0x4ce
 1250 0297 6B000000 		.4byte	0x6b
 1251 029b 02       		.uleb128 0x2
 1252 029c 91       		.byte	0x91
 1253 029d 77       		.sleb128 -9
 1254 029e 00       		.byte	0
 1255 029f 11       		.uleb128 0x11
 1256 02a0 EA010000 		.4byte	.LASF48
 1257 02a4 01       		.byte	0x1
 1258 02a5 F904     		.2byte	0x4f9
 1259 02a7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 51


 1260 02ab 00000000 		.4byte	.LFB15
 1261 02af 48000000 		.4byte	.LFE15-.LFB15
 1262 02b3 01       		.uleb128 0x1
 1263 02b4 9C       		.byte	0x9c
 1264 02b5 C9020000 		.4byte	0x2c9
 1265 02b9 0E       		.uleb128 0xe
 1266 02ba 6A030000 		.4byte	.LASF37
 1267 02be 01       		.byte	0x1
 1268 02bf FC04     		.2byte	0x4fc
 1269 02c1 6B000000 		.4byte	0x6b
 1270 02c5 02       		.uleb128 0x2
 1271 02c6 91       		.byte	0x91
 1272 02c7 77       		.sleb128 -9
 1273 02c8 00       		.byte	0
 1274 02c9 0D       		.uleb128 0xd
 1275 02ca D6020000 		.4byte	.LASF38
 1276 02ce 01       		.byte	0x1
 1277 02cf 4A05     		.2byte	0x54a
 1278 02d1 00000000 		.4byte	.LFB16
 1279 02d5 44000000 		.4byte	.LFE16-.LFB16
 1280 02d9 01       		.uleb128 0x1
 1281 02da 9C       		.byte	0x9c
 1282 02db EF020000 		.4byte	0x2ef
 1283 02df 0E       		.uleb128 0xe
 1284 02e0 02010000 		.4byte	.LASF21
 1285 02e4 01       		.byte	0x1
 1286 02e5 4C05     		.2byte	0x54c
 1287 02e7 6B000000 		.4byte	0x6b
 1288 02eb 02       		.uleb128 0x2
 1289 02ec 91       		.byte	0x91
 1290 02ed 6F       		.sleb128 -17
 1291 02ee 00       		.byte	0
 1292 02ef 0B       		.uleb128 0xb
 1293 02f0 30020000 		.4byte	.LASF39
 1294 02f4 01       		.byte	0x1
 1295 02f5 A005     		.2byte	0x5a0
 1296 02f7 00000000 		.4byte	.LFB17
 1297 02fb B8000000 		.4byte	.LFE17-.LFB17
 1298 02ff 01       		.uleb128 0x1
 1299 0300 9C       		.byte	0x9c
 1300 0301 40030000 		.4byte	0x340
 1301 0305 0C       		.uleb128 0xc
 1302 0306 BB020000 		.4byte	.LASF40
 1303 030a 01       		.byte	0x1
 1304 030b A005     		.2byte	0x5a0
 1305 030d 6B000000 		.4byte	0x6b
 1306 0311 02       		.uleb128 0x2
 1307 0312 91       		.byte	0x91
 1308 0313 6F       		.sleb128 -17
 1309 0314 12       		.uleb128 0x12
 1310 0315 14000000 		.4byte	.LBB2
 1311 0319 88000000 		.4byte	.LBE2-.LBB2
 1312 031d 0E       		.uleb128 0xe
 1313 031e 4C000000 		.4byte	.LASF41
 1314 0322 01       		.byte	0x1
 1315 0323 A805     		.2byte	0x5a8
 1316 0325 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 52


 1317 0329 02       		.uleb128 0x2
 1318 032a 91       		.byte	0x91
 1319 032b 77       		.sleb128 -9
 1320 032c 0E       		.uleb128 0xe
 1321 032d 43000000 		.4byte	.LASF42
 1322 0331 01       		.byte	0x1
 1323 0332 D005     		.2byte	0x5d0
 1324 0334 6B000000 		.4byte	0x6b
 1325 0338 05       		.uleb128 0x5
 1326 0339 03       		.byte	0x3
 1327 033a 01000000 		.4byte	txPeriod.4811
 1328 033e 00       		.byte	0
 1329 033f 00       		.byte	0
 1330 0340 0B       		.uleb128 0xb
 1331 0341 67000000 		.4byte	.LASF43
 1332 0345 01       		.byte	0x1
 1333 0346 2406     		.2byte	0x624
 1334 0348 00000000 		.4byte	.LFB18
 1335 034c 12000000 		.4byte	.LFE18-.LFB18
 1336 0350 01       		.uleb128 0x1
 1337 0351 9C       		.byte	0x9c
 1338 0352 66030000 		.4byte	0x366
 1339 0356 0C       		.uleb128 0xc
 1340 0357 A0000000 		.4byte	.LASF44
 1341 035b 01       		.byte	0x1
 1342 035c 2406     		.2byte	0x624
 1343 035e 6B000000 		.4byte	0x6b
 1344 0362 02       		.uleb128 0x2
 1345 0363 91       		.byte	0x91
 1346 0364 77       		.sleb128 -9
 1347 0365 00       		.byte	0
 1348 0366 13       		.uleb128 0x13
 1349 0367 EB020000 		.4byte	.LASF49
 1350 036b 01       		.byte	0x1
 1351 036c 1B       		.byte	0x1b
 1352 036d 6B000000 		.4byte	0x6b
 1353 0371 05       		.uleb128 0x5
 1354 0372 03       		.byte	0x3
 1355 0373 00000000 		.4byte	UART_1_initVar
 1356 0377 00       		.byte	0
 1357              		.section	.debug_abbrev,"",%progbits
 1358              	.Ldebug_abbrev0:
 1359 0000 01       		.uleb128 0x1
 1360 0001 11       		.uleb128 0x11
 1361 0002 01       		.byte	0x1
 1362 0003 25       		.uleb128 0x25
 1363 0004 0E       		.uleb128 0xe
 1364 0005 13       		.uleb128 0x13
 1365 0006 0B       		.uleb128 0xb
 1366 0007 03       		.uleb128 0x3
 1367 0008 0E       		.uleb128 0xe
 1368 0009 1B       		.uleb128 0x1b
 1369 000a 0E       		.uleb128 0xe
 1370 000b 55       		.uleb128 0x55
 1371 000c 17       		.uleb128 0x17
 1372 000d 11       		.uleb128 0x11
 1373 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 53


 1374 000f 10       		.uleb128 0x10
 1375 0010 17       		.uleb128 0x17
 1376 0011 00       		.byte	0
 1377 0012 00       		.byte	0
 1378 0013 02       		.uleb128 0x2
 1379 0014 24       		.uleb128 0x24
 1380 0015 00       		.byte	0
 1381 0016 0B       		.uleb128 0xb
 1382 0017 0B       		.uleb128 0xb
 1383 0018 3E       		.uleb128 0x3e
 1384 0019 0B       		.uleb128 0xb
 1385 001a 03       		.uleb128 0x3
 1386 001b 0E       		.uleb128 0xe
 1387 001c 00       		.byte	0
 1388 001d 00       		.byte	0
 1389 001e 03       		.uleb128 0x3
 1390 001f 24       		.uleb128 0x24
 1391 0020 00       		.byte	0
 1392 0021 0B       		.uleb128 0xb
 1393 0022 0B       		.uleb128 0xb
 1394 0023 3E       		.uleb128 0x3e
 1395 0024 0B       		.uleb128 0xb
 1396 0025 03       		.uleb128 0x3
 1397 0026 08       		.uleb128 0x8
 1398 0027 00       		.byte	0
 1399 0028 00       		.byte	0
 1400 0029 04       		.uleb128 0x4
 1401 002a 16       		.uleb128 0x16
 1402 002b 00       		.byte	0
 1403 002c 03       		.uleb128 0x3
 1404 002d 0E       		.uleb128 0xe
 1405 002e 3A       		.uleb128 0x3a
 1406 002f 0B       		.uleb128 0xb
 1407 0030 3B       		.uleb128 0x3b
 1408 0031 05       		.uleb128 0x5
 1409 0032 49       		.uleb128 0x49
 1410 0033 13       		.uleb128 0x13
 1411 0034 00       		.byte	0
 1412 0035 00       		.byte	0
 1413 0036 05       		.uleb128 0x5
 1414 0037 35       		.uleb128 0x35
 1415 0038 00       		.byte	0
 1416 0039 49       		.uleb128 0x49
 1417 003a 13       		.uleb128 0x13
 1418 003b 00       		.byte	0
 1419 003c 00       		.byte	0
 1420 003d 06       		.uleb128 0x6
 1421 003e 2E       		.uleb128 0x2e
 1422 003f 00       		.byte	0
 1423 0040 3F       		.uleb128 0x3f
 1424 0041 19       		.uleb128 0x19
 1425 0042 03       		.uleb128 0x3
 1426 0043 0E       		.uleb128 0xe
 1427 0044 3A       		.uleb128 0x3a
 1428 0045 0B       		.uleb128 0xb
 1429 0046 3B       		.uleb128 0x3b
 1430 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 54


 1431 0048 27       		.uleb128 0x27
 1432 0049 19       		.uleb128 0x19
 1433 004a 11       		.uleb128 0x11
 1434 004b 01       		.uleb128 0x1
 1435 004c 12       		.uleb128 0x12
 1436 004d 06       		.uleb128 0x6
 1437 004e 40       		.uleb128 0x40
 1438 004f 18       		.uleb128 0x18
 1439 0050 9642     		.uleb128 0x2116
 1440 0052 19       		.uleb128 0x19
 1441 0053 00       		.byte	0
 1442 0054 00       		.byte	0
 1443 0055 07       		.uleb128 0x7
 1444 0056 2E       		.uleb128 0x2e
 1445 0057 00       		.byte	0
 1446 0058 3F       		.uleb128 0x3f
 1447 0059 19       		.uleb128 0x19
 1448 005a 03       		.uleb128 0x3
 1449 005b 0E       		.uleb128 0xe
 1450 005c 3A       		.uleb128 0x3a
 1451 005d 0B       		.uleb128 0xb
 1452 005e 3B       		.uleb128 0x3b
 1453 005f 0B       		.uleb128 0xb
 1454 0060 27       		.uleb128 0x27
 1455 0061 19       		.uleb128 0x19
 1456 0062 11       		.uleb128 0x11
 1457 0063 01       		.uleb128 0x1
 1458 0064 12       		.uleb128 0x12
 1459 0065 06       		.uleb128 0x6
 1460 0066 40       		.uleb128 0x40
 1461 0067 18       		.uleb128 0x18
 1462 0068 9742     		.uleb128 0x2117
 1463 006a 19       		.uleb128 0x19
 1464 006b 00       		.byte	0
 1465 006c 00       		.byte	0
 1466 006d 08       		.uleb128 0x8
 1467 006e 2E       		.uleb128 0x2e
 1468 006f 01       		.byte	0x1
 1469 0070 3F       		.uleb128 0x3f
 1470 0071 19       		.uleb128 0x19
 1471 0072 03       		.uleb128 0x3
 1472 0073 0E       		.uleb128 0xe
 1473 0074 3A       		.uleb128 0x3a
 1474 0075 0B       		.uleb128 0xb
 1475 0076 3B       		.uleb128 0x3b
 1476 0077 0B       		.uleb128 0xb
 1477 0078 27       		.uleb128 0x27
 1478 0079 19       		.uleb128 0x19
 1479 007a 11       		.uleb128 0x11
 1480 007b 01       		.uleb128 0x1
 1481 007c 12       		.uleb128 0x12
 1482 007d 06       		.uleb128 0x6
 1483 007e 40       		.uleb128 0x40
 1484 007f 18       		.uleb128 0x18
 1485 0080 9642     		.uleb128 0x2116
 1486 0082 19       		.uleb128 0x19
 1487 0083 01       		.uleb128 0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 55


 1488 0084 13       		.uleb128 0x13
 1489 0085 00       		.byte	0
 1490 0086 00       		.byte	0
 1491 0087 09       		.uleb128 0x9
 1492 0088 34       		.uleb128 0x34
 1493 0089 00       		.byte	0
 1494 008a 03       		.uleb128 0x3
 1495 008b 0E       		.uleb128 0xe
 1496 008c 3A       		.uleb128 0x3a
 1497 008d 0B       		.uleb128 0xb
 1498 008e 3B       		.uleb128 0x3b
 1499 008f 0B       		.uleb128 0xb
 1500 0090 49       		.uleb128 0x49
 1501 0091 13       		.uleb128 0x13
 1502 0092 02       		.uleb128 0x2
 1503 0093 18       		.uleb128 0x18
 1504 0094 00       		.byte	0
 1505 0095 00       		.byte	0
 1506 0096 0A       		.uleb128 0xa
 1507 0097 2E       		.uleb128 0x2e
 1508 0098 00       		.byte	0
 1509 0099 3F       		.uleb128 0x3f
 1510 009a 19       		.uleb128 0x19
 1511 009b 03       		.uleb128 0x3
 1512 009c 0E       		.uleb128 0xe
 1513 009d 3A       		.uleb128 0x3a
 1514 009e 0B       		.uleb128 0xb
 1515 009f 3B       		.uleb128 0x3b
 1516 00a0 05       		.uleb128 0x5
 1517 00a1 27       		.uleb128 0x27
 1518 00a2 19       		.uleb128 0x19
 1519 00a3 49       		.uleb128 0x49
 1520 00a4 13       		.uleb128 0x13
 1521 00a5 11       		.uleb128 0x11
 1522 00a6 01       		.uleb128 0x1
 1523 00a7 12       		.uleb128 0x12
 1524 00a8 06       		.uleb128 0x6
 1525 00a9 40       		.uleb128 0x40
 1526 00aa 18       		.uleb128 0x18
 1527 00ab 9742     		.uleb128 0x2117
 1528 00ad 19       		.uleb128 0x19
 1529 00ae 00       		.byte	0
 1530 00af 00       		.byte	0
 1531 00b0 0B       		.uleb128 0xb
 1532 00b1 2E       		.uleb128 0x2e
 1533 00b2 01       		.byte	0x1
 1534 00b3 3F       		.uleb128 0x3f
 1535 00b4 19       		.uleb128 0x19
 1536 00b5 03       		.uleb128 0x3
 1537 00b6 0E       		.uleb128 0xe
 1538 00b7 3A       		.uleb128 0x3a
 1539 00b8 0B       		.uleb128 0xb
 1540 00b9 3B       		.uleb128 0x3b
 1541 00ba 05       		.uleb128 0x5
 1542 00bb 27       		.uleb128 0x27
 1543 00bc 19       		.uleb128 0x19
 1544 00bd 11       		.uleb128 0x11
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 56


 1545 00be 01       		.uleb128 0x1
 1546 00bf 12       		.uleb128 0x12
 1547 00c0 06       		.uleb128 0x6
 1548 00c1 40       		.uleb128 0x40
 1549 00c2 18       		.uleb128 0x18
 1550 00c3 9742     		.uleb128 0x2117
 1551 00c5 19       		.uleb128 0x19
 1552 00c6 01       		.uleb128 0x1
 1553 00c7 13       		.uleb128 0x13
 1554 00c8 00       		.byte	0
 1555 00c9 00       		.byte	0
 1556 00ca 0C       		.uleb128 0xc
 1557 00cb 05       		.uleb128 0x5
 1558 00cc 00       		.byte	0
 1559 00cd 03       		.uleb128 0x3
 1560 00ce 0E       		.uleb128 0xe
 1561 00cf 3A       		.uleb128 0x3a
 1562 00d0 0B       		.uleb128 0xb
 1563 00d1 3B       		.uleb128 0x3b
 1564 00d2 05       		.uleb128 0x5
 1565 00d3 49       		.uleb128 0x49
 1566 00d4 13       		.uleb128 0x13
 1567 00d5 02       		.uleb128 0x2
 1568 00d6 18       		.uleb128 0x18
 1569 00d7 00       		.byte	0
 1570 00d8 00       		.byte	0
 1571 00d9 0D       		.uleb128 0xd
 1572 00da 2E       		.uleb128 0x2e
 1573 00db 01       		.byte	0x1
 1574 00dc 3F       		.uleb128 0x3f
 1575 00dd 19       		.uleb128 0x19
 1576 00de 03       		.uleb128 0x3
 1577 00df 0E       		.uleb128 0xe
 1578 00e0 3A       		.uleb128 0x3a
 1579 00e1 0B       		.uleb128 0xb
 1580 00e2 3B       		.uleb128 0x3b
 1581 00e3 05       		.uleb128 0x5
 1582 00e4 27       		.uleb128 0x27
 1583 00e5 19       		.uleb128 0x19
 1584 00e6 11       		.uleb128 0x11
 1585 00e7 01       		.uleb128 0x1
 1586 00e8 12       		.uleb128 0x12
 1587 00e9 06       		.uleb128 0x6
 1588 00ea 40       		.uleb128 0x40
 1589 00eb 18       		.uleb128 0x18
 1590 00ec 9642     		.uleb128 0x2116
 1591 00ee 19       		.uleb128 0x19
 1592 00ef 01       		.uleb128 0x1
 1593 00f0 13       		.uleb128 0x13
 1594 00f1 00       		.byte	0
 1595 00f2 00       		.byte	0
 1596 00f3 0E       		.uleb128 0xe
 1597 00f4 34       		.uleb128 0x34
 1598 00f5 00       		.byte	0
 1599 00f6 03       		.uleb128 0x3
 1600 00f7 0E       		.uleb128 0xe
 1601 00f8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 57


 1602 00f9 0B       		.uleb128 0xb
 1603 00fa 3B       		.uleb128 0x3b
 1604 00fb 05       		.uleb128 0x5
 1605 00fc 49       		.uleb128 0x49
 1606 00fd 13       		.uleb128 0x13
 1607 00fe 02       		.uleb128 0x2
 1608 00ff 18       		.uleb128 0x18
 1609 0100 00       		.byte	0
 1610 0101 00       		.byte	0
 1611 0102 0F       		.uleb128 0xf
 1612 0103 0F       		.uleb128 0xf
 1613 0104 00       		.byte	0
 1614 0105 0B       		.uleb128 0xb
 1615 0106 0B       		.uleb128 0xb
 1616 0107 49       		.uleb128 0x49
 1617 0108 13       		.uleb128 0x13
 1618 0109 00       		.byte	0
 1619 010a 00       		.byte	0
 1620 010b 10       		.uleb128 0x10
 1621 010c 26       		.uleb128 0x26
 1622 010d 00       		.byte	0
 1623 010e 49       		.uleb128 0x49
 1624 010f 13       		.uleb128 0x13
 1625 0110 00       		.byte	0
 1626 0111 00       		.byte	0
 1627 0112 11       		.uleb128 0x11
 1628 0113 2E       		.uleb128 0x2e
 1629 0114 01       		.byte	0x1
 1630 0115 3F       		.uleb128 0x3f
 1631 0116 19       		.uleb128 0x19
 1632 0117 03       		.uleb128 0x3
 1633 0118 0E       		.uleb128 0xe
 1634 0119 3A       		.uleb128 0x3a
 1635 011a 0B       		.uleb128 0xb
 1636 011b 3B       		.uleb128 0x3b
 1637 011c 05       		.uleb128 0x5
 1638 011d 27       		.uleb128 0x27
 1639 011e 19       		.uleb128 0x19
 1640 011f 49       		.uleb128 0x49
 1641 0120 13       		.uleb128 0x13
 1642 0121 11       		.uleb128 0x11
 1643 0122 01       		.uleb128 0x1
 1644 0123 12       		.uleb128 0x12
 1645 0124 06       		.uleb128 0x6
 1646 0125 40       		.uleb128 0x40
 1647 0126 18       		.uleb128 0x18
 1648 0127 9742     		.uleb128 0x2117
 1649 0129 19       		.uleb128 0x19
 1650 012a 01       		.uleb128 0x1
 1651 012b 13       		.uleb128 0x13
 1652 012c 00       		.byte	0
 1653 012d 00       		.byte	0
 1654 012e 12       		.uleb128 0x12
 1655 012f 0B       		.uleb128 0xb
 1656 0130 01       		.byte	0x1
 1657 0131 11       		.uleb128 0x11
 1658 0132 01       		.uleb128 0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 58


 1659 0133 12       		.uleb128 0x12
 1660 0134 06       		.uleb128 0x6
 1661 0135 00       		.byte	0
 1662 0136 00       		.byte	0
 1663 0137 13       		.uleb128 0x13
 1664 0138 34       		.uleb128 0x34
 1665 0139 00       		.byte	0
 1666 013a 03       		.uleb128 0x3
 1667 013b 0E       		.uleb128 0xe
 1668 013c 3A       		.uleb128 0x3a
 1669 013d 0B       		.uleb128 0xb
 1670 013e 3B       		.uleb128 0x3b
 1671 013f 0B       		.uleb128 0xb
 1672 0140 49       		.uleb128 0x49
 1673 0141 13       		.uleb128 0x13
 1674 0142 3F       		.uleb128 0x3f
 1675 0143 19       		.uleb128 0x19
 1676 0144 02       		.uleb128 0x2
 1677 0145 18       		.uleb128 0x18
 1678 0146 00       		.byte	0
 1679 0147 00       		.byte	0
 1680 0148 00       		.byte	0
 1681              		.section	.debug_aranges,"",%progbits
 1682 0000 9C000000 		.4byte	0x9c
 1683 0004 0200     		.2byte	0x2
 1684 0006 00000000 		.4byte	.Ldebug_info0
 1685 000a 04       		.byte	0x4
 1686 000b 00       		.byte	0
 1687 000c 0000     		.2byte	0
 1688 000e 0000     		.2byte	0
 1689 0010 00000000 		.4byte	.LFB2
 1690 0014 24000000 		.4byte	.LFE2-.LFB2
 1691 0018 00000000 		.4byte	.LFB3
 1692 001c 1C000000 		.4byte	.LFE3-.LFB3
 1693 0020 00000000 		.4byte	.LFB4
 1694 0024 48000000 		.4byte	.LFE4-.LFB4
 1695 0028 00000000 		.4byte	.LFB5
 1696 002c 48000000 		.4byte	.LFE5-.LFB5
 1697 0030 00000000 		.4byte	.LFB6
 1698 0034 0C000000 		.4byte	.LFE6-.LFB6
 1699 0038 00000000 		.4byte	.LFB7
 1700 003c 12000000 		.4byte	.LFE7-.LFB7
 1701 0040 00000000 		.4byte	.LFB8
 1702 0044 20000000 		.4byte	.LFE8-.LFB8
 1703 0048 00000000 		.4byte	.LFB9
 1704 004c 2C000000 		.4byte	.LFE9-.LFB9
 1705 0050 00000000 		.4byte	.LFB10
 1706 0054 14000000 		.4byte	.LFE10-.LFB10
 1707 0058 00000000 		.4byte	.LFB11
 1708 005c 34000000 		.4byte	.LFE11-.LFB11
 1709 0060 00000000 		.4byte	.LFB12
 1710 0064 54000000 		.4byte	.LFE12-.LFB12
 1711 0068 00000000 		.4byte	.LFB13
 1712 006c 58000000 		.4byte	.LFE13-.LFB13
 1713 0070 00000000 		.4byte	.LFB14
 1714 0074 34000000 		.4byte	.LFE14-.LFB14
 1715 0078 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 59


 1716 007c 48000000 		.4byte	.LFE15-.LFB15
 1717 0080 00000000 		.4byte	.LFB16
 1718 0084 44000000 		.4byte	.LFE16-.LFB16
 1719 0088 00000000 		.4byte	.LFB17
 1720 008c B8000000 		.4byte	.LFE17-.LFB17
 1721 0090 00000000 		.4byte	.LFB18
 1722 0094 12000000 		.4byte	.LFE18-.LFB18
 1723 0098 00000000 		.4byte	0
 1724 009c 00000000 		.4byte	0
 1725              		.section	.debug_ranges,"",%progbits
 1726              	.Ldebug_ranges0:
 1727 0000 00000000 		.4byte	.LFB2
 1728 0004 24000000 		.4byte	.LFE2
 1729 0008 00000000 		.4byte	.LFB3
 1730 000c 1C000000 		.4byte	.LFE3
 1731 0010 00000000 		.4byte	.LFB4
 1732 0014 48000000 		.4byte	.LFE4
 1733 0018 00000000 		.4byte	.LFB5
 1734 001c 48000000 		.4byte	.LFE5
 1735 0020 00000000 		.4byte	.LFB6
 1736 0024 0C000000 		.4byte	.LFE6
 1737 0028 00000000 		.4byte	.LFB7
 1738 002c 12000000 		.4byte	.LFE7
 1739 0030 00000000 		.4byte	.LFB8
 1740 0034 20000000 		.4byte	.LFE8
 1741 0038 00000000 		.4byte	.LFB9
 1742 003c 2C000000 		.4byte	.LFE9
 1743 0040 00000000 		.4byte	.LFB10
 1744 0044 14000000 		.4byte	.LFE10
 1745 0048 00000000 		.4byte	.LFB11
 1746 004c 34000000 		.4byte	.LFE11
 1747 0050 00000000 		.4byte	.LFB12
 1748 0054 54000000 		.4byte	.LFE12
 1749 0058 00000000 		.4byte	.LFB13
 1750 005c 58000000 		.4byte	.LFE13
 1751 0060 00000000 		.4byte	.LFB14
 1752 0064 34000000 		.4byte	.LFE14
 1753 0068 00000000 		.4byte	.LFB15
 1754 006c 48000000 		.4byte	.LFE15
 1755 0070 00000000 		.4byte	.LFB16
 1756 0074 44000000 		.4byte	.LFE16
 1757 0078 00000000 		.4byte	.LFB17
 1758 007c B8000000 		.4byte	.LFE17
 1759 0080 00000000 		.4byte	.LFB18
 1760 0084 12000000 		.4byte	.LFE18
 1761 0088 00000000 		.4byte	0
 1762 008c 00000000 		.4byte	0
 1763              		.section	.debug_line,"",%progbits
 1764              	.Ldebug_line0:
 1765 0000 F4010000 		.section	.debug_str,"MS",%progbits,1
 1765      02004500 
 1765      00000201 
 1765      FB0E0D00 
 1765      01010101 
 1766              	.LASF6:
 1767 0000 6C6F6E67 		.ascii	"long long int\000"
 1767      206C6F6E 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 60


 1767      6720696E 
 1767      7400
 1768              	.LASF18:
 1769 000e 55415254 		.ascii	"UART_1_Init\000"
 1769      5F315F49 
 1769      6E697400 
 1770              	.LASF17:
 1771 001a 55415254 		.ascii	"UART_1_Start\000"
 1771      5F315F53 
 1771      74617274 
 1771      00
 1772              	.LASF22:
 1773 0027 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 1773      5F315F57 
 1773      72697465 
 1773      436F6E74 
 1773      726F6C52 
 1774              	.LASF42:
 1775 0043 74785065 		.ascii	"txPeriod\000"
 1775      72696F64 
 1775      00
 1776              	.LASF41:
 1777 004c 746D7053 		.ascii	"tmpStat\000"
 1777      74617400 
 1778              	.LASF3:
 1779 0054 73686F72 		.ascii	"short unsigned int\000"
 1779      7420756E 
 1779      7369676E 
 1779      65642069 
 1779      6E7400
 1780              	.LASF43:
 1781 0067 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 1781      5F315F53 
 1781      65745478 
 1781      41646472 
 1781      6573734D 
 1782              	.LASF29:
 1783 007f 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 1783      5F315F52 
 1783      65616454 
 1783      78537461 
 1783      74757300 
 1784              	.LASF32:
 1785 0093 73747269 		.ascii	"string\000"
 1785      6E6700
 1786              	.LASF11:
 1787 009a 666C6F61 		.ascii	"float\000"
 1787      7400
 1788              	.LASF44:
 1789 00a0 61646472 		.ascii	"addressMode\000"
 1789      6573734D 
 1789      6F646500 
 1790              	.LASF15:
 1791 00ac 72656738 		.ascii	"reg8\000"
 1791      00
 1792              	.LASF28:
 1793 00b1 55415254 		.ascii	"UART_1_ReadControlRegister\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 61


 1793      5F315F52 
 1793      65616443 
 1793      6F6E7472 
 1793      6F6C5265 
 1794              	.LASF20:
 1795 00cc 55415254 		.ascii	"UART_1_Stop\000"
 1795      5F315F53 
 1795      746F7000 
 1796              	.LASF5:
 1797 00d8 6C6F6E67 		.ascii	"long unsigned int\000"
 1797      20756E73 
 1797      69676E65 
 1797      6420696E 
 1797      7400
 1798              	.LASF9:
 1799 00ea 75696E74 		.ascii	"uint8\000"
 1799      3800
 1800              	.LASF24:
 1801 00f0 636F6E74 		.ascii	"control\000"
 1801      726F6C00 
 1802              	.LASF35:
 1803 00f8 62797465 		.ascii	"byteCount\000"
 1803      436F756E 
 1803      7400
 1804              	.LASF21:
 1805 0102 656E6162 		.ascii	"enableInterrupts\000"
 1805      6C65496E 
 1805      74657272 
 1805      75707473 
 1805      00
 1806              	.LASF1:
 1807 0113 756E7369 		.ascii	"unsigned char\000"
 1807      676E6564 
 1807      20636861 
 1807      7200
 1808              	.LASF12:
 1809 0121 646F7562 		.ascii	"double\000"
 1809      6C6500
 1810              	.LASF25:
 1811 0128 696E7453 		.ascii	"intSrc\000"
 1811      726300
 1812              	.LASF2:
 1813 012f 73686F72 		.ascii	"short int\000"
 1813      7420696E 
 1813      7400
 1814              	.LASF45:
 1815 0139 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1815      4320342E 
 1815      392E3320 
 1815      32303135 
 1815      30333033 
 1816 016c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1816      20726576 
 1816      6973696F 
 1816      6E203232 
 1816      31323230 
 1817 019f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 62


 1817      66756E63 
 1817      74696F6E 
 1817      2D736563 
 1817      74696F6E 
 1818              	.LASF10:
 1819 01c7 75696E74 		.ascii	"uint16\000"
 1819      313600
 1820              	.LASF30:
 1821 01ce 55415254 		.ascii	"UART_1_PutChar\000"
 1821      5F315F50 
 1821      75744368 
 1821      617200
 1822              	.LASF8:
 1823 01dd 756E7369 		.ascii	"unsigned int\000"
 1823      676E6564 
 1823      20696E74 
 1823      00
 1824              	.LASF48:
 1825 01ea 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 1825      5F315F47 
 1825      65745478 
 1825      42756666 
 1825      65725369 
 1826              	.LASF7:
 1827 0201 6C6F6E67 		.ascii	"long long unsigned int\000"
 1827      206C6F6E 
 1827      6720756E 
 1827      7369676E 
 1827      65642069 
 1828              	.LASF36:
 1829 0218 55415254 		.ascii	"UART_1_PutCRLF\000"
 1829      5F315F50 
 1829      75744352 
 1829      4C4600
 1830              	.LASF33:
 1831 0227 62756649 		.ascii	"bufIndex\000"
 1831      6E646578 
 1831      00
 1832              	.LASF39:
 1833 0230 55415254 		.ascii	"UART_1_SendBreak\000"
 1833      5F315F53 
 1833      656E6442 
 1833      7265616B 
 1833      00
 1834              	.LASF34:
 1835 0241 55415254 		.ascii	"UART_1_PutArray\000"
 1835      5F315F50 
 1835      75744172 
 1835      72617900 
 1836              	.LASF47:
 1837 0251 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\fw\\finish\\sandb"
 1837      79707265 
 1837      73735C73 
 1837      79737465 
 1837      6D2D7374 
 1838 027f 6F785C55 		.ascii	"ox\\UART_Tx01\\UART_Tx01.cydsn\000"
 1838      4152545F 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 63


 1838      54783031 
 1838      5C554152 
 1838      545F5478 
 1839              	.LASF16:
 1840 029c 73697A65 		.ascii	"sizetype\000"
 1840      74797065 
 1840      00
 1841              	.LASF13:
 1842 02a5 63686172 		.ascii	"char8\000"
 1842      3800
 1843              	.LASF27:
 1844 02ab 74784461 		.ascii	"txDataByte\000"
 1844      74614279 
 1844      746500
 1845              	.LASF14:
 1846 02b6 63686172 		.ascii	"char\000"
 1846      00
 1847              	.LASF40:
 1848 02bb 7265744D 		.ascii	"retMode\000"
 1848      6F646500 
 1849              	.LASF26:
 1850 02c3 55415254 		.ascii	"UART_1_WriteTxData\000"
 1850      5F315F57 
 1850      72697465 
 1850      54784461 
 1850      746100
 1851              	.LASF38:
 1852 02d6 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 1852      5F315F43 
 1852      6C656172 
 1852      54784275 
 1852      66666572 
 1853              	.LASF49:
 1854 02eb 55415254 		.ascii	"UART_1_initVar\000"
 1854      5F315F69 
 1854      6E697456 
 1854      617200
 1855              	.LASF4:
 1856 02fa 6C6F6E67 		.ascii	"long int\000"
 1856      20696E74 
 1856      00
 1857              	.LASF23:
 1858 0303 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 1858      5F315F53 
 1858      65745478 
 1858      496E7465 
 1858      72727570 
 1859              	.LASF19:
 1860 031d 55415254 		.ascii	"UART_1_Enable\000"
 1860      5F315F45 
 1860      6E61626C 
 1860      6500
 1861              	.LASF46:
 1862 032b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1.c\000"
 1862      6E657261 
 1862      7465645F 
 1862      536F7572 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cciiAvHs.s 			page 64


 1862      63655C50 
 1863              	.LASF0:
 1864 034d 7369676E 		.ascii	"signed char\000"
 1864      65642063 
 1864      68617200 
 1865              	.LASF31:
 1866 0359 55415254 		.ascii	"UART_1_PutString\000"
 1866      5F315F50 
 1866      75745374 
 1866      72696E67 
 1866      00
 1867              	.LASF37:
 1868 036a 73697A65 		.ascii	"size\000"
 1868      00
 1869              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
