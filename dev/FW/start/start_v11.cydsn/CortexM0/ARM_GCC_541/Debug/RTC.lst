ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_IsBitSet,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	RTC_IsBitSet, %function
  24              	RTC_IsBitSet:
  25              	.LFB2:
  26              		.file 1 "Generated_Source\\PSoC4\\RTC.h"
   1:Generated_Source\PSoC4/RTC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC.h **** * \file Name: RTC.h
   3:Generated_Source\PSoC4/RTC.h **** * \version 1.10
   4:Generated_Source\PSoC4/RTC.h **** *
   5:Generated_Source\PSoC4/RTC.h **** * \brief
   6:Generated_Source\PSoC4/RTC.h **** *  This file provides constants and parameter values for the RTC_P4 Component.
   7:Generated_Source\PSoC4/RTC.h **** *
   8:Generated_Source\PSoC4/RTC.h **** ********************************************************************************
   9:Generated_Source\PSoC4/RTC.h **** * Copyright 2015-2016, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/RTC.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/RTC.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/RTC.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/RTC.h **** 
  15:Generated_Source\PSoC4/RTC.h **** #if !defined(CY_RTC_P4_RTC_H)
  16:Generated_Source\PSoC4/RTC.h **** #define CY_RTC_P4_RTC_H
  17:Generated_Source\PSoC4/RTC.h **** 
  18:Generated_Source\PSoC4/RTC.h **** #include <cytypes.h>
  19:Generated_Source\PSoC4/RTC.h **** #include <CyLib.h>
  20:Generated_Source\PSoC4/RTC.h **** 
  21:Generated_Source\PSoC4/RTC.h **** 
  22:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  23:Generated_Source\PSoC4/RTC.h **** *    Data types definition
  24:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  25:Generated_Source\PSoC4/RTC.h **** 
  26:Generated_Source\PSoC4/RTC.h **** typedef enum
  27:Generated_Source\PSoC4/RTC.h **** {
  28:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_RELATIVE = 0u,
  29:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_FIXED = 1u
  30:Generated_Source\PSoC4/RTC.h **** }RTC_DST_DATETYPE_ENUM;
  31:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 2


  32:Generated_Source\PSoC4/RTC.h **** /**
  33:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_structures
  34:Generated_Source\PSoC4/RTC.h **** * @{
  35:Generated_Source\PSoC4/RTC.h **** */
  36:Generated_Source\PSoC4/RTC.h **** 
  37:Generated_Source\PSoC4/RTC.h **** /**
  38:Generated_Source\PSoC4/RTC.h **** * This is the data structure that is used to save the current time and date 
  39:Generated_Source\PSoC4/RTC.h **** * (RTC_currentTimeDate), and Alarm time and date (RTC_alarmCfgTimeDate).
  40:Generated_Source\PSoC4/RTC.h **** */
  41:Generated_Source\PSoC4/RTC.h **** typedef struct
  42:Generated_Source\PSoC4/RTC.h **** {
  43:Generated_Source\PSoC4/RTC.h ****     uint32 time;
  44:Generated_Source\PSoC4/RTC.h ****     uint32 date;
  45:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;
  46:Generated_Source\PSoC4/RTC.h ****     uint32 status;
  47:Generated_Source\PSoC4/RTC.h **** }RTC_DATE_TIME;
  48:Generated_Source\PSoC4/RTC.h **** 
  49:Generated_Source\PSoC4/RTC.h **** /**
  50:Generated_Source\PSoC4/RTC.h **** * This is the data structure that is used to save time and date values for 
  51:Generated_Source\PSoC4/RTC.h **** * Daylight Savings Time Start and Stop (RTC_dstTimeDateStart and 
  52:Generated_Source\PSoC4/RTC.h **** * RTC_dstTimeDateStop).
  53:Generated_Source\PSoC4/RTC.h **** */
  54:Generated_Source\PSoC4/RTC.h **** typedef struct
  55:Generated_Source\PSoC4/RTC.h **** {
  56:Generated_Source\PSoC4/RTC.h ****     uint32 hour;
  57:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;
  58:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfMonth;
  59:Generated_Source\PSoC4/RTC.h ****     uint32 weekOfMonth;
  60:Generated_Source\PSoC4/RTC.h ****     uint32 month;
  61:Generated_Source\PSoC4/RTC.h ****     uint8  timeFormat;
  62:Generated_Source\PSoC4/RTC.h **** }RTC_DST_TIME;
  63:Generated_Source\PSoC4/RTC.h **** 
  64:Generated_Source\PSoC4/RTC.h **** /** @} structures */
  65:Generated_Source\PSoC4/RTC.h **** 
  66:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  67:Generated_Source\PSoC4/RTC.h **** *    Enumerated Types and Parameters
  68:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  69:Generated_Source\PSoC4/RTC.h **** /* Time Format setting constants */
  70:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_12 1
  71:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_24 0
  72:Generated_Source\PSoC4/RTC.h **** 
  73:Generated_Source\PSoC4/RTC.h **** /*  Date Format setting constants */
  74:Generated_Source\PSoC4/RTC.h **** #define RTC__MM_DD_YYYY 0
  75:Generated_Source\PSoC4/RTC.h **** #define RTC__DD_MM_YYYY 1
  76:Generated_Source\PSoC4/RTC.h **** #define RTC__YYYY_MM_DD 2
  77:Generated_Source\PSoC4/RTC.h **** 
  78:Generated_Source\PSoC4/RTC.h **** /* Date Type setting constants */
  79:Generated_Source\PSoC4/RTC.h **** #define RTC__RELATIVE 0
  80:Generated_Source\PSoC4/RTC.h **** #define RTC__FIXED 1
  81:Generated_Source\PSoC4/RTC.h **** 
  82:Generated_Source\PSoC4/RTC.h **** /* DST Hour setting constants */
  83:Generated_Source\PSoC4/RTC.h **** #define RTC__H0000 0
  84:Generated_Source\PSoC4/RTC.h **** #define RTC__H0100 1
  85:Generated_Source\PSoC4/RTC.h **** #define RTC__H0200 2
  86:Generated_Source\PSoC4/RTC.h **** #define RTC__H0300 3
  87:Generated_Source\PSoC4/RTC.h **** #define RTC__H0400 4
  88:Generated_Source\PSoC4/RTC.h **** #define RTC__H0500 5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 3


  89:Generated_Source\PSoC4/RTC.h **** #define RTC__H0600 6
  90:Generated_Source\PSoC4/RTC.h **** #define RTC__H0700 7
  91:Generated_Source\PSoC4/RTC.h **** #define RTC__H0800 8
  92:Generated_Source\PSoC4/RTC.h **** #define RTC__H0900 9
  93:Generated_Source\PSoC4/RTC.h **** #define RTC__H1000 10
  94:Generated_Source\PSoC4/RTC.h **** #define RTC__H1100 11
  95:Generated_Source\PSoC4/RTC.h **** #define RTC__H1200 12
  96:Generated_Source\PSoC4/RTC.h **** #define RTC__H1300 13
  97:Generated_Source\PSoC4/RTC.h **** #define RTC__H1400 14
  98:Generated_Source\PSoC4/RTC.h **** #define RTC__H1500 15
  99:Generated_Source\PSoC4/RTC.h **** #define RTC__H1600 16
 100:Generated_Source\PSoC4/RTC.h **** #define RTC__H1700 17
 101:Generated_Source\PSoC4/RTC.h **** #define RTC__H1800 18
 102:Generated_Source\PSoC4/RTC.h **** #define RTC__H1900 19
 103:Generated_Source\PSoC4/RTC.h **** #define RTC__H2000 20
 104:Generated_Source\PSoC4/RTC.h **** #define RTC__H2100 21
 105:Generated_Source\PSoC4/RTC.h **** #define RTC__H2200 22
 106:Generated_Source\PSoC4/RTC.h **** #define RTC__H2300 23
 107:Generated_Source\PSoC4/RTC.h **** 
 108:Generated_Source\PSoC4/RTC.h **** /* DST DayOfWeek setting constants */
 109:Generated_Source\PSoC4/RTC.h **** #define RTC__SUNDAY 1
 110:Generated_Source\PSoC4/RTC.h **** #define RTC__MONDAY 2
 111:Generated_Source\PSoC4/RTC.h **** #define RTC__TUESDAY 3
 112:Generated_Source\PSoC4/RTC.h **** #define RTC__WEDNESDAY 4
 113:Generated_Source\PSoC4/RTC.h **** #define RTC__THURSDAY 5
 114:Generated_Source\PSoC4/RTC.h **** #define RTC__FRIDAY 6
 115:Generated_Source\PSoC4/RTC.h **** #define RTC__SATURDAY 7
 116:Generated_Source\PSoC4/RTC.h **** 
 117:Generated_Source\PSoC4/RTC.h **** /* DST Month setting constants */
 118:Generated_Source\PSoC4/RTC.h **** #define RTC__JAN 1
 119:Generated_Source\PSoC4/RTC.h **** #define RTC__FEB 2
 120:Generated_Source\PSoC4/RTC.h **** #define RTC__MAR 3
 121:Generated_Source\PSoC4/RTC.h **** #define RTC__APR 4
 122:Generated_Source\PSoC4/RTC.h **** #define RTC__MAY 5
 123:Generated_Source\PSoC4/RTC.h **** #define RTC__JUN 6
 124:Generated_Source\PSoC4/RTC.h **** #define RTC__JUL 7
 125:Generated_Source\PSoC4/RTC.h **** #define RTC__AUG 8
 126:Generated_Source\PSoC4/RTC.h **** #define RTC__SEP 9
 127:Generated_Source\PSoC4/RTC.h **** #define RTC__OCT 10
 128:Generated_Source\PSoC4/RTC.h **** #define RTC__NOV 11
 129:Generated_Source\PSoC4/RTC.h **** #define RTC__DEC 12
 130:Generated_Source\PSoC4/RTC.h **** 
 131:Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants */
 132:Generated_Source\PSoC4/RTC.h **** #define RTC__FIRST 1
 133:Generated_Source\PSoC4/RTC.h **** #define RTC__SECOND 2
 134:Generated_Source\PSoC4/RTC.h **** #define RTC__THIRD 3
 135:Generated_Source\PSoC4/RTC.h **** #define RTC__FOURTH 4
 136:Generated_Source\PSoC4/RTC.h **** #define RTC__FIFTH 5
 137:Generated_Source\PSoC4/RTC.h **** #define RTC__LAST 6
 138:Generated_Source\PSoC4/RTC.h **** 
 139:Generated_Source\PSoC4/RTC.h **** 
 140:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DATA_FORMAT     (0u)
 141:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_TIME_FORMAT     (0u)
 142:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_UPDATE_MODE     (0u)
 143:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_SECOND          (27u)
 144:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MINUTE          (23u)
 145:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_HOUR            (23u)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 4


 146:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DAY             (1u)
 147:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MONTH           (9u)
 148:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_YEAR            (2016u)
 149:Generated_Source\PSoC4/RTC.h **** 
 150:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_ALARM_STATUS    (0u)
 151:Generated_Source\PSoC4/RTC.h **** 
 152:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STATUS      (0u)
 153:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_DATE_TYPE   (0u)
 154:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_MONTH (3uL)
 155:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_WOM   (6uL)
 156:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOM   (22uL)
 157:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOW   (1uL)
 158:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_HRS   (0uL)
 159:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_MONTH  (10uL)
 160:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOM    (22uL)
 161:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOW    (1uL)
 162:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_WOM    (6uL)
 163:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_HRS    (0uL)
 164:Generated_Source\PSoC4/RTC.h **** 
 165:Generated_Source\PSoC4/RTC.h **** /* Day of week definitions */
 166:Generated_Source\PSoC4/RTC.h **** #define RTC_SUNDAY     (RTC__SUNDAY)
 167:Generated_Source\PSoC4/RTC.h **** #define RTC_MONDAY     (RTC__MONDAY)
 168:Generated_Source\PSoC4/RTC.h **** #define RTC_TUESDAY    (RTC__TUESDAY)
 169:Generated_Source\PSoC4/RTC.h **** #define RTC_WEDNESDAY  (RTC__WEDNESDAY)
 170:Generated_Source\PSoC4/RTC.h **** #define RTC_THURSDAY   (RTC__THURSDAY)
 171:Generated_Source\PSoC4/RTC.h **** #define RTC_FRIDAY     (RTC__FRIDAY)
 172:Generated_Source\PSoC4/RTC.h **** #define RTC_SATURDAY   (RTC__SATURDAY)
 173:Generated_Source\PSoC4/RTC.h **** 
 174:Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants definitions */
 175:Generated_Source\PSoC4/RTC.h **** #define RTC_FIRST      (RTC__FIRST)
 176:Generated_Source\PSoC4/RTC.h **** #define RTC_SECOND     (RTC__SECOND)
 177:Generated_Source\PSoC4/RTC.h **** #define RTC_THIRD      (RTC__THIRD)
 178:Generated_Source\PSoC4/RTC.h **** #define RTC_FOURTH     (RTC__FOURTH)
 179:Generated_Source\PSoC4/RTC.h **** #define RTC_FIFTH      (RTC__FIFTH)
 180:Generated_Source\PSoC4/RTC.h **** #define RTC_LAST       (RTC__LAST)
 181:Generated_Source\PSoC4/RTC.h **** 
 182:Generated_Source\PSoC4/RTC.h **** /* Month definitions */
 183:Generated_Source\PSoC4/RTC.h **** #define RTC_JANUARY    (RTC__JAN)
 184:Generated_Source\PSoC4/RTC.h **** #define RTC_FEBRUARY   (RTC__FEB)
 185:Generated_Source\PSoC4/RTC.h **** #define RTC_MARCH      (RTC__MAR)
 186:Generated_Source\PSoC4/RTC.h **** #define RTC_APRIL      (RTC__APR)
 187:Generated_Source\PSoC4/RTC.h **** #define RTC_MAY        (RTC__MAY)
 188:Generated_Source\PSoC4/RTC.h **** #define RTC_JUNE       (RTC__JUN)
 189:Generated_Source\PSoC4/RTC.h **** #define RTC_JULY       (RTC__JUL)
 190:Generated_Source\PSoC4/RTC.h **** #define RTC_AUGUST     (RTC__AUG)
 191:Generated_Source\PSoC4/RTC.h **** #define RTC_SEPTEMBER  (RTC__SEP)
 192:Generated_Source\PSoC4/RTC.h **** #define RTC_OCTOBER    (RTC__OCT)
 193:Generated_Source\PSoC4/RTC.h **** #define RTC_NOVEMBER   (RTC__NOV)
 194:Generated_Source\PSoC4/RTC.h **** #define RTC_DECEMBER   (RTC__DEC)
 195:Generated_Source\PSoC4/RTC.h **** 
 196:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_PER_WEEK       (7u)
 197:Generated_Source\PSoC4/RTC.h **** 
 198:Generated_Source\PSoC4/RTC.h **** /* Number of days in month definitions */
 199:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JANUARY     (31u)
 200:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_FEBRUARY    (28u)
 201:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MARCH       (31u)
 202:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_APRIL       (30u)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 5


 203:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MAY         (31u)
 204:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JUNE        (30u)
 205:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JULY        (31u)
 206:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_AUGUST      (31u)
 207:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_SEPTEMBER   (30u)
 208:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_OCTOBER     (31u)
 209:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_NOVEMBER    (30u)
 210:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_DECEMBER    (31u)
 211:Generated_Source\PSoC4/RTC.h **** 
 212:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTHS_PER_YEAR     (12uL)
 213:Generated_Source\PSoC4/RTC.h **** 
 214:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_DAY       (24uL)
 215:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_HALF_DAY  (12uL)
 216:Generated_Source\PSoC4/RTC.h **** 
 217:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_MINUTE  (60uL)
 218:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_HOUR    (3600uL)
 219:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_DAY     (24uL * 3600uL)
 220:Generated_Source\PSoC4/RTC.h **** 
 221:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_LEAP_YEAR    (366uL * 24uL * 3600uL)
 222:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_NONLEAP_YEAR (365uL * 24uL * 3600uL)
 223:Generated_Source\PSoC4/RTC.h **** 
 224:Generated_Source\PSoC4/RTC.h **** #define RTC_UNIX_TIME_PM   ((12uL * 3600uL) + 1uL)
 225:Generated_Source\PSoC4/RTC.h **** 
 226:Generated_Source\PSoC4/RTC.h **** /* AM/PM status definitions */
 227:Generated_Source\PSoC4/RTC.h **** #define RTC_AM                 (0u)
 228:Generated_Source\PSoC4/RTC.h **** #define RTC_PM                 (1u)
 229:Generated_Source\PSoC4/RTC.h **** 
 230:Generated_Source\PSoC4/RTC.h **** /* Time format definitions */
 231:Generated_Source\PSoC4/RTC.h **** #define RTC_12_HOURS_FORMAT    (RTC__HOUR_12)
 232:Generated_Source\PSoC4/RTC.h **** #define RTC_24_HOURS_FORMAT    (RTC__HOUR_24)
 233:Generated_Source\PSoC4/RTC.h **** 
 234:Generated_Source\PSoC4/RTC.h **** /* UNIX time begins in 1970 year.  */
 235:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_0             (1970u)
 236:Generated_Source\PSoC4/RTC.h **** 
 237:Generated_Source\PSoC4/RTC.h **** /* Definition of date register fields */
 238:Generated_Source\PSoC4/RTC.h **** #if(RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY)
 239:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (28u)
 240:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (24u)
 241:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (20u)
 242:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (16u)
 243:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 244:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 245:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 246:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 247:Generated_Source\PSoC4/RTC.h **** #elif(RTC_INITIAL_DATA_FORMAT == RTC__DD_MM_YYYY)
 248:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (20u)
 249:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (16u)
 250:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (28u)
 251:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (24u)
 252:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 253:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 254:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 255:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 256:Generated_Source\PSoC4/RTC.h **** #else
 257:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (12u)
 258:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (8u)
 259:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (4u)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 6


 260:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (0u)
 261:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (28u)
 262:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (24u)
 263:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (20u)
 264:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (16u)
 265:Generated_Source\PSoC4/RTC.h **** #endif /* (RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY) */
 266:Generated_Source\PSoC4/RTC.h **** 
 267:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MONTH_MASK          (0x00000001uL << RTC_10_MONTH_OFFSET)
 268:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTH_MASK             (0x0000000FuL << RTC_MONTH_OFFSET)
 269:Generated_Source\PSoC4/RTC.h **** #define RTC_10_DAY_MASK            (0x00000003uL << RTC_10_DAY_OFFSET)
 270:Generated_Source\PSoC4/RTC.h **** #define RTC_DAY_MASK               (0x0000000FuL << RTC_DAY_OFFSET)
 271:Generated_Source\PSoC4/RTC.h **** #define RTC_1000_YEAR_MASK         (0x00000003uL << RTC_1000_YEAR_OFFSET)
 272:Generated_Source\PSoC4/RTC.h **** #define RTC_100_YEAR_MASK          (0x0000000FuL << RTC_100_YEAR_OFFSET)
 273:Generated_Source\PSoC4/RTC.h **** #define RTC_10_YEAR_MASK           (0x0000000FuL << RTC_10_YEAR_OFFSET)
 274:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_MASK              (0x0000000FuL << RTC_YEAR_OFFSET)
 275:Generated_Source\PSoC4/RTC.h **** 
 276:Generated_Source\PSoC4/RTC.h **** #define  RTC_MONTH_FULL_MASK       (RTC_10_MONTH_MASK  | RTC_MONTH_MASK)
 277:Generated_Source\PSoC4/RTC.h **** #define  RTC_DAY_FULL_MASK         (RTC_10_DAY_MASK    | RTC_DAY_MASK)
 278:Generated_Source\PSoC4/RTC.h **** #define  RTC_YEAR_FULL_MASK        (RTC_1000_YEAR_MASK | RTC_100_YEAR_MASK |\
 279:Generated_Source\PSoC4/RTC.h ****                                                  RTC_10_YEAR_MASK   | RTC_YEAR_MASK)
 280:Generated_Source\PSoC4/RTC.h **** 
 281:Generated_Source\PSoC4/RTC.h **** 
 282:Generated_Source\PSoC4/RTC.h **** /* Definition of time register fields */
 283:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_OFFSET     (23u)
 284:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_OFFSET   (22u)
 285:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_OFFSET        (20u)
 286:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_OFFSET           (16u)
 287:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_OFFSET      (12u)
 288:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_OFFSET         (8u)
 289:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_OFFSET      (4u)
 290:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_OFFSET         (0u)
 291:Generated_Source\PSoC4/RTC.h **** 
 292:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_MASK       (0x00000001uL << RTC_TIME_FORMAT_OFFSET)
 293:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_MASK     (0x00000001uL << RTC_PERIOD_OF_DAY_OFFSET)
 294:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_MASK          (0x00000003uL << RTC_10_HOURS_OFFSET)
 295:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_MASK             (0x0000000FuL << RTC_HOURS_OFFSET)
 296:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_MASK        (0x00000007uL << RTC_10_MINUTES_OFFSET)
 297:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_MASK           (0x0000000FuL << RTC_MINUTES_OFFSET)
 298:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_MASK        (0x00000007uL << RTC_10_SECONDS_OFFSET)
 299:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_MASK           (0x0000000FuL << RTC_SECONDS_OFFSET)
 300:Generated_Source\PSoC4/RTC.h **** 
 301:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_FULL_MASK        (RTC_10_HOURS_MASK   | RTC_HOURS_MASK)
 302:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_FULL_MASK      (RTC_10_MINUTES_MASK | RTC_MINUTES_MASK)
 303:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_FULL_MASK      (RTC_10_SECONDS_MASK | RTC_SECONDS_MASK)
 304:Generated_Source\PSoC4/RTC.h **** 
 305:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_SEC_MASK         (0x00000001uL)
 306:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MIN_MASK         (0x00000002uL)
 307:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_HOUR_MASK        (0x00000004uL)
 308:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFWEEK_MASK   (0x00000008uL)
 309:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFMONTH_MASK  (0x00000010uL)
 310:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MONTH_MASK       (0x00000020uL)
 311:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_YEAR_MASK        (0x00000040uL)
 312:Generated_Source\PSoC4/RTC.h **** 
 313:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST_OFFSET      (1u)
 314:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_ALARM_OFFSET    (2u)
 315:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY_OFFSET       (3u)
 316:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM_OFFSET    (4u)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 7


 317:Generated_Source\PSoC4/RTC.h **** 
 318:Generated_Source\PSoC4/RTC.h **** /* Definition of the RTC status values. */
 319:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST             (1uL << RTC_STATUS_DST_OFFSET)
 320:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY              (1uL << RTC_STATUS_LY_OFFSET)
 321:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM           (1uL << RTC_STATUS_AM_PM_OFFSET)
 322:Generated_Source\PSoC4/RTC.h **** 
 323:Generated_Source\PSoC4/RTC.h **** /* Number of bits per one BCD digit. */
 324:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_NUMBER_SIZE        (4u)
 325:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_ONE_DIGIT_MASK     (0x0000000FuL)
 326:Generated_Source\PSoC4/RTC.h **** 
 327:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 328:Generated_Source\PSoC4/RTC.h **** *    Function Prototypes
 329:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 330:Generated_Source\PSoC4/RTC.h **** /**
 331:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 332:Generated_Source\PSoC4/RTC.h **** * @{
 333:Generated_Source\PSoC4/RTC.h **** */
 334:Generated_Source\PSoC4/RTC.h **** void   RTC_Start(void);
 335:Generated_Source\PSoC4/RTC.h **** void   RTC_Stop(void);
 336:Generated_Source\PSoC4/RTC.h **** void   RTC_Init(void);
 337:Generated_Source\PSoC4/RTC.h **** void   RTC_SetUnixTime(uint64 unixTime);
 338:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetUnixTime(void);
 339:Generated_Source\PSoC4/RTC.h **** void   RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks);
 340:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetPeriod(void);
 341:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetRefOneSec(void);
 342:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate);
 343:Generated_Source\PSoC4/RTC.h **** void   RTC_GetDateAndTime(RTC_DATE_TIME* dateTime);
 344:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetTime(void);
 345:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetDate(void);
 346:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime);
 347:Generated_Source\PSoC4/RTC.h **** void   RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate);
 348:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmMask(uint32 mask);
 349:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmMask(void);
 350:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ReadStatus(void);
 351:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmStatus(void);
 352:Generated_Source\PSoC4/RTC.h **** void   RTC_ClearAlarmStatus(void);
 353:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 354:Generated_Source\PSoC4/RTC.h ****                                               RTC_DST_DATETYPE_ENUM type);
 355:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
 356:Generated_Source\PSoC4/RTC.h ****                                              RTC_DST_DATETYPE_ENUM type);
 357:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum);
 358:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertDecToBCD(uint32 decNum);
 359:Generated_Source\PSoC4/RTC.h **** void   RTC_Update(void);
 360:Generated_Source\PSoC4/RTC.h **** void*  RTC_SetAlarmHandler(void (*CallbackFunction)(void));
 361:Generated_Source\PSoC4/RTC.h **** 
 362:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year);
 363:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 min, uint3
 364:Generated_Source\PSoC4/RTC.h **** /** @} api */
 365:Generated_Source\PSoC4/RTC.h **** 
 366:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetTimeFormat(uint32 inputTime);
 367:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat);
 368:Generated_Source\PSoC4/RTC.h **** 
 369:Generated_Source\PSoC4/RTC.h **** /**
 370:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 371:Generated_Source\PSoC4/RTC.h **** * @{
 372:Generated_Source\PSoC4/RTC.h **** */
 373:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_LeapYear(uint32 year);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 8


 374:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_IsBitSet(uint32 var, uint32 mask);
 375:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetSecond(uint32 inputTime);
 376:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMinutes(uint32 inputTime);
 377:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetHours(uint32 inputTime);
 378:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetAmPm(uint32 inputTime);
 379:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDay(uint32 date);
 380:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMonth(uint32 date);
 381:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetYear(uint32 date);
 382:Generated_Source\PSoC4/RTC.h **** /** @} api */
 383:Generated_Source\PSoC4/RTC.h **** 
 384:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond);
 385:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute);
 386:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours);
 387:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay);
 388:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay);
 389:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth);
 390:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear);
 391:Generated_Source\PSoC4/RTC.h **** 
 392:Generated_Source\PSoC4/RTC.h **** uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask);
 393:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime);
 394:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask);
 395:Generated_Source\PSoC4/RTC.h **** 
 396:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMinSec(uint32 curVal);
 397:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextHour(uint32 curVal);
 398:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarmCfgMask);
 399:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMonth(uint32 curMonth);
 400:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextYear(uint32 curYear);
 401:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year);
 402:Generated_Source\PSoC4/RTC.h **** 
 403:Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysInMonth(uint32 month, uint32 year);
 404:Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year);
 405:Generated_Source\PSoC4/RTC.h **** 
 406:Generated_Source\PSoC4/RTC.h **** /**
 407:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 408:Generated_Source\PSoC4/RTC.h **** * @{
 409:Generated_Source\PSoC4/RTC.h **** */
 410:Generated_Source\PSoC4/RTC.h **** void   RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat);
 411:Generated_Source\PSoC4/RTC.h **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime);
 412:Generated_Source\PSoC4/RTC.h **** /** @} api */
 413:Generated_Source\PSoC4/RTC.h **** 
 414:Generated_Source\PSoC4/RTC.h **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year);
 415:Generated_Source\PSoC4/RTC.h **** 
 416:Generated_Source\PSoC4/RTC.h **** 
 417:Generated_Source\PSoC4/RTC.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
 418:Generated_Source\PSoC4/RTC.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 419:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcSetCallback(uint32 wdtNumber);
 420:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcResetCallback(uint32 wdtNumber);
 421:Generated_Source\PSoC4/RTC.h ****     #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 422:Generated_Source\PSoC4/RTC.h **** #endif /* (CYDEV_RTC_SOURCE_WDT) */
 423:Generated_Source\PSoC4/RTC.h **** 
 424:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 425:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_IsBitSet
 426:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 427:Generated_Source\PSoC4/RTC.h **** *
 428:Generated_Source\PSoC4/RTC.h **** * \brief
 429:Generated_Source\PSoC4/RTC.h **** *  Checks the state of a bit passed through parameter.
 430:Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 9


 431:Generated_Source\PSoC4/RTC.h **** * \param
 432:Generated_Source\PSoC4/RTC.h **** *  var The variable to be checked.
 433:Generated_Source\PSoC4/RTC.h **** * \param
 434:Generated_Source\PSoC4/RTC.h **** *  mask The mask for a bit to be checked.
 435:Generated_Source\PSoC4/RTC.h **** *
 436:Generated_Source\PSoC4/RTC.h **** * \return
 437:Generated_Source\PSoC4/RTC.h **** *  0u - Bit is not set.
 438:Generated_Source\PSoC4/RTC.h **** * \return
 439:Generated_Source\PSoC4/RTC.h **** *  1u - Bit is set.
 440:Generated_Source\PSoC4/RTC.h **** *
 441:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 442:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_IsBitSet(uint32 var, uint32 mask)
 443:Generated_Source\PSoC4/RTC.h **** {
  27              		.loc 1 443 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 3960     		str	r1, [r7]
 444:Generated_Source\PSoC4/RTC.h ****     return ((mask == (var & mask)) ? 1Lu : 0Lu);
  41              		.loc 1 444 0
  42 000a 7B68     		ldr	r3, [r7, #4]
  43 000c 3A68     		ldr	r2, [r7]
  44 000e 1A40     		ands	r2, r3
  45 0010 3B68     		ldr	r3, [r7]
  46 0012 9A42     		cmp	r2, r3
  47 0014 01D1     		bne	.L2
  48              		.loc 1 444 0 is_stmt 0 discriminator 1
  49 0016 0123     		movs	r3, #1
  50 0018 00E0     		b	.L4
  51              	.L2:
  52              		.loc 1 444 0 discriminator 2
  53 001a 0023     		movs	r3, #0
  54              	.L4:
 445:Generated_Source\PSoC4/RTC.h **** }
  55              		.loc 1 445 0 is_stmt 1 discriminator 5
  56 001c 1800     		movs	r0, r3
  57 001e BD46     		mov	sp, r7
  58 0020 02B0     		add	sp, sp, #8
  59              		@ sp needed
  60 0022 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE2:
  63              		.size	RTC_IsBitSet, .-RTC_IsBitSet
  64              		.global	__aeabi_uidivmod
  65              		.section	.text.RTC_LeapYear,"ax",%progbits
  66              		.align	2
  67              		.code	16
  68              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 10


  69              		.type	RTC_LeapYear, %function
  70              	RTC_LeapYear:
  71              	.LFB3:
 446:Generated_Source\PSoC4/RTC.h **** 
 447:Generated_Source\PSoC4/RTC.h **** 
 448:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 449:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_LeapYear
 450:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 451:Generated_Source\PSoC4/RTC.h **** *
 452:Generated_Source\PSoC4/RTC.h **** * \brief
 453:Generated_Source\PSoC4/RTC.h **** * Checks whether the year passed through the parameter is
 454:Generated_Source\PSoC4/RTC.h **** * leap or no.
 455:Generated_Source\PSoC4/RTC.h **** *
 456:Generated_Source\PSoC4/RTC.h **** * \param
 457:Generated_Source\PSoC4/RTC.h **** *  year The year to be checked.
 458:Generated_Source\PSoC4/RTC.h **** *
 459:Generated_Source\PSoC4/RTC.h **** *
 460:Generated_Source\PSoC4/RTC.h **** * \return
 461:Generated_Source\PSoC4/RTC.h **** *  0u - The year is not leap.
 462:Generated_Source\PSoC4/RTC.h **** * \return
 463:Generated_Source\PSoC4/RTC.h **** *  1u - The year is leap.
 464:Generated_Source\PSoC4/RTC.h **** *
 465:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 466:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_LeapYear(uint32 year)
 467:Generated_Source\PSoC4/RTC.h **** {
  72              		.loc 1 467 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 84B0     		sub	sp, sp, #16
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
 468:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 469:Generated_Source\PSoC4/RTC.h **** 
 470:Generated_Source\PSoC4/RTC.h ****     if(((0u == (year % 4Lu)) && (0u != (year % 100Lu))) || (0u == (year % 400Lu)))
  85              		.loc 1 470 0
  86 0008 7B68     		ldr	r3, [r7, #4]
  87 000a 0322     		movs	r2, #3
  88 000c 1340     		ands	r3, r2
  89 000e 06D1     		bne	.L6
  90              		.loc 1 470 0 is_stmt 0 discriminator 1
  91 0010 7B68     		ldr	r3, [r7, #4]
  92 0012 6421     		movs	r1, #100
  93 0014 1800     		movs	r0, r3
  94 0016 FFF7FEFF 		bl	__aeabi_uidivmod
  95 001a 0B1E     		subs	r3, r1, #0
  96 001c 07D1     		bne	.L7
  97              	.L6:
  98              		.loc 1 470 0 discriminator 3
  99 001e 7A68     		ldr	r2, [r7, #4]
 100 0020 C823     		movs	r3, #200
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 11


 101 0022 5900     		lsls	r1, r3, #1
 102 0024 1000     		movs	r0, r2
 103 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 104 002a 0B1E     		subs	r3, r1, #0
 105 002c 02D1     		bne	.L8
 106              	.L7:
 471:Generated_Source\PSoC4/RTC.h ****     {
 472:Generated_Source\PSoC4/RTC.h ****         retVal = 1uL;
 107              		.loc 1 472 0 is_stmt 1
 108 002e 0123     		movs	r3, #1
 109 0030 FB60     		str	r3, [r7, #12]
 110 0032 01E0     		b	.L9
 111              	.L8:
 473:Generated_Source\PSoC4/RTC.h ****     }
 474:Generated_Source\PSoC4/RTC.h ****     else
 475:Generated_Source\PSoC4/RTC.h ****     {
 476:Generated_Source\PSoC4/RTC.h ****         retVal = 0uL;
 112              		.loc 1 476 0
 113 0034 0023     		movs	r3, #0
 114 0036 FB60     		str	r3, [r7, #12]
 115              	.L9:
 477:Generated_Source\PSoC4/RTC.h ****     }
 478:Generated_Source\PSoC4/RTC.h **** 
 479:Generated_Source\PSoC4/RTC.h ****     return(retVal);
 116              		.loc 1 479 0
 117 0038 FB68     		ldr	r3, [r7, #12]
 480:Generated_Source\PSoC4/RTC.h **** }
 118              		.loc 1 480 0
 119 003a 1800     		movs	r0, r3
 120 003c BD46     		mov	sp, r7
 121 003e 04B0     		add	sp, sp, #16
 122              		@ sp needed
 123 0040 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE3:
 126              		.size	RTC_LeapYear, .-RTC_LeapYear
 127 0042 C046     		.section	.text.RTC_GetSecond,"ax",%progbits
 128              		.align	2
 129              		.code	16
 130              		.thumb_func
 131              		.type	RTC_GetSecond, %function
 132              	RTC_GetSecond:
 133              	.LFB4:
 481:Generated_Source\PSoC4/RTC.h **** 
 482:Generated_Source\PSoC4/RTC.h **** 
 483:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 484:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetSecond
 485:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 486:Generated_Source\PSoC4/RTC.h **** *
 487:Generated_Source\PSoC4/RTC.h **** * \brief
 488:Generated_Source\PSoC4/RTC.h **** *  Returns the seconds value from the time value that is passed as a/the parameter.
 489:Generated_Source\PSoC4/RTC.h **** *
 490:Generated_Source\PSoC4/RTC.h **** * \param
 491:Generated_Source\PSoC4/RTC.h **** *  time The time value.
 492:Generated_Source\PSoC4/RTC.h **** *
 493:Generated_Source\PSoC4/RTC.h **** * \return
 494:Generated_Source\PSoC4/RTC.h **** *  The seconds value.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 12


 495:Generated_Source\PSoC4/RTC.h **** *
 496:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 497:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetSecond(uint32 inputTime)
 498:Generated_Source\PSoC4/RTC.h **** {
 134              		.loc 1 498 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 84B0     		sub	sp, sp, #16
 143              		.cfi_def_cfa_offset 24
 144 0004 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
 146 0006 7860     		str	r0, [r7, #4]
 499:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 500:Generated_Source\PSoC4/RTC.h **** 
 501:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_SECONDS_MASK) >> RTC_10_SECONDS_OFFSET) * 10u;
 147              		.loc 1 501 0
 148 0008 7B68     		ldr	r3, [r7, #4]
 149 000a 1B09     		lsrs	r3, r3, #4
 150 000c 0722     		movs	r2, #7
 151 000e 1A40     		ands	r2, r3
 152 0010 1300     		movs	r3, r2
 153 0012 9B00     		lsls	r3, r3, #2
 154 0014 9B18     		adds	r3, r3, r2
 155 0016 5B00     		lsls	r3, r3, #1
 156 0018 FB60     		str	r3, [r7, #12]
 502:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_SECONDS_MASK) >> RTC_SECONDS_OFFSET;
 157              		.loc 1 502 0
 158 001a 7B68     		ldr	r3, [r7, #4]
 159 001c 0F22     		movs	r2, #15
 160 001e 1340     		ands	r3, r2
 161 0020 FA68     		ldr	r2, [r7, #12]
 162 0022 D318     		adds	r3, r2, r3
 163 0024 FB60     		str	r3, [r7, #12]
 503:Generated_Source\PSoC4/RTC.h **** 
 504:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 164              		.loc 1 504 0
 165 0026 FB68     		ldr	r3, [r7, #12]
 505:Generated_Source\PSoC4/RTC.h **** }
 166              		.loc 1 505 0
 167 0028 1800     		movs	r0, r3
 168 002a BD46     		mov	sp, r7
 169 002c 04B0     		add	sp, sp, #16
 170              		@ sp needed
 171 002e 80BD     		pop	{r7, pc}
 172              		.cfi_endproc
 173              	.LFE4:
 174              		.size	RTC_GetSecond, .-RTC_GetSecond
 175              		.section	.text.RTC_GetMinutes,"ax",%progbits
 176              		.align	2
 177              		.code	16
 178              		.thumb_func
 179              		.type	RTC_GetMinutes, %function
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 13


 180              	RTC_GetMinutes:
 181              	.LFB5:
 506:Generated_Source\PSoC4/RTC.h **** 
 507:Generated_Source\PSoC4/RTC.h **** 
 508:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 509:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMinutes
 510:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 511:Generated_Source\PSoC4/RTC.h **** *
 512:Generated_Source\PSoC4/RTC.h **** * \brief
 513:Generated_Source\PSoC4/RTC.h **** *  Returns the minutes value from the time value that is passed as a/the 
 514:Generated_Source\PSoC4/RTC.h **** * parameter.
 515:Generated_Source\PSoC4/RTC.h **** *
 516:Generated_Source\PSoC4/RTC.h **** * \param
 517:Generated_Source\PSoC4/RTC.h **** *  time The time value.
 518:Generated_Source\PSoC4/RTC.h **** *
 519:Generated_Source\PSoC4/RTC.h **** * \return
 520:Generated_Source\PSoC4/RTC.h **** *  The minutes value.
 521:Generated_Source\PSoC4/RTC.h **** *
 522:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 523:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMinutes(uint32 inputTime)
 524:Generated_Source\PSoC4/RTC.h **** {
 182              		.loc 1 524 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 16
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 84B0     		sub	sp, sp, #16
 191              		.cfi_def_cfa_offset 24
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 525:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 526:Generated_Source\PSoC4/RTC.h **** 
 527:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_MINUTES_MASK) >> RTC_10_MINUTES_OFFSET) * 10u;
 195              		.loc 1 527 0
 196 0008 7B68     		ldr	r3, [r7, #4]
 197 000a 1B0B     		lsrs	r3, r3, #12
 198 000c 0722     		movs	r2, #7
 199 000e 1A40     		ands	r2, r3
 200 0010 1300     		movs	r3, r2
 201 0012 9B00     		lsls	r3, r3, #2
 202 0014 9B18     		adds	r3, r3, r2
 203 0016 5B00     		lsls	r3, r3, #1
 204 0018 FB60     		str	r3, [r7, #12]
 528:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_MINUTES_MASK) >> RTC_MINUTES_OFFSET;
 205              		.loc 1 528 0
 206 001a 7B68     		ldr	r3, [r7, #4]
 207 001c 1B0A     		lsrs	r3, r3, #8
 208 001e 0F22     		movs	r2, #15
 209 0020 1340     		ands	r3, r2
 210 0022 FA68     		ldr	r2, [r7, #12]
 211 0024 D318     		adds	r3, r2, r3
 212 0026 FB60     		str	r3, [r7, #12]
 529:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 14


 530:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 213              		.loc 1 530 0
 214 0028 FB68     		ldr	r3, [r7, #12]
 531:Generated_Source\PSoC4/RTC.h **** }
 215              		.loc 1 531 0
 216 002a 1800     		movs	r0, r3
 217 002c BD46     		mov	sp, r7
 218 002e 04B0     		add	sp, sp, #16
 219              		@ sp needed
 220 0030 80BD     		pop	{r7, pc}
 221              		.cfi_endproc
 222              	.LFE5:
 223              		.size	RTC_GetMinutes, .-RTC_GetMinutes
 224 0032 C046     		.section	.text.RTC_GetHours,"ax",%progbits
 225              		.align	2
 226              		.code	16
 227              		.thumb_func
 228              		.type	RTC_GetHours, %function
 229              	RTC_GetHours:
 230              	.LFB6:
 532:Generated_Source\PSoC4/RTC.h **** 
 533:Generated_Source\PSoC4/RTC.h **** 
 534:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 535:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetHours
 536:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 537:Generated_Source\PSoC4/RTC.h **** *
 538:Generated_Source\PSoC4/RTC.h **** * \brief
 539:Generated_Source\PSoC4/RTC.h **** *  Returns the hours value from the time value that is passed as a/the parameter.
 540:Generated_Source\PSoC4/RTC.h **** *
 541:Generated_Source\PSoC4/RTC.h **** * \param
 542:Generated_Source\PSoC4/RTC.h **** *  time The time value.
 543:Generated_Source\PSoC4/RTC.h **** *
 544:Generated_Source\PSoC4/RTC.h **** * \return
 545:Generated_Source\PSoC4/RTC.h **** *  The hours value.
 546:Generated_Source\PSoC4/RTC.h **** *
 547:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 548:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetHours(uint32 inputTime)
 549:Generated_Source\PSoC4/RTC.h **** {
 231              		.loc 1 549 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 16
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 84B0     		sub	sp, sp, #16
 240              		.cfi_def_cfa_offset 24
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
 550:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 551:Generated_Source\PSoC4/RTC.h **** 
 552:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_HOURS_MASK) >> RTC_10_HOURS_OFFSET) * 10u;
 244              		.loc 1 552 0
 245 0008 7B68     		ldr	r3, [r7, #4]
 246 000a 1B0D     		lsrs	r3, r3, #20
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 15


 247 000c 0322     		movs	r2, #3
 248 000e 1A40     		ands	r2, r3
 249 0010 1300     		movs	r3, r2
 250 0012 9B00     		lsls	r3, r3, #2
 251 0014 9B18     		adds	r3, r3, r2
 252 0016 5B00     		lsls	r3, r3, #1
 253 0018 FB60     		str	r3, [r7, #12]
 553:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_HOURS_MASK) >> RTC_HOURS_OFFSET;
 254              		.loc 1 553 0
 255 001a 7B68     		ldr	r3, [r7, #4]
 256 001c 1B0C     		lsrs	r3, r3, #16
 257 001e 0F22     		movs	r2, #15
 258 0020 1340     		ands	r3, r2
 259 0022 FA68     		ldr	r2, [r7, #12]
 260 0024 D318     		adds	r3, r2, r3
 261 0026 FB60     		str	r3, [r7, #12]
 554:Generated_Source\PSoC4/RTC.h **** 
 555:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 262              		.loc 1 555 0
 263 0028 FB68     		ldr	r3, [r7, #12]
 556:Generated_Source\PSoC4/RTC.h **** }
 264              		.loc 1 556 0
 265 002a 1800     		movs	r0, r3
 266 002c BD46     		mov	sp, r7
 267 002e 04B0     		add	sp, sp, #16
 268              		@ sp needed
 269 0030 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE6:
 272              		.size	RTC_GetHours, .-RTC_GetHours
 273 0032 C046     		.section	.text.RTC_GetAmPm,"ax",%progbits
 274              		.align	2
 275              		.code	16
 276              		.thumb_func
 277              		.type	RTC_GetAmPm, %function
 278              	RTC_GetAmPm:
 279              	.LFB7:
 557:Generated_Source\PSoC4/RTC.h **** 
 558:Generated_Source\PSoC4/RTC.h **** 
 559:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 560:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetAmPm
 561:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 562:Generated_Source\PSoC4/RTC.h **** *
 563:Generated_Source\PSoC4/RTC.h **** * \brief
 564:Generated_Source\PSoC4/RTC.h **** *  Returns the AM/PM status from the time value that is passed as parameter.
 565:Generated_Source\PSoC4/RTC.h **** *
 566:Generated_Source\PSoC4/RTC.h **** * \param
 567:Generated_Source\PSoC4/RTC.h **** *  time The time value.
 568:Generated_Source\PSoC4/RTC.h **** *
 569:Generated_Source\PSoC4/RTC.h **** * \return
 570:Generated_Source\PSoC4/RTC.h **** *  RTC_AM - AM.
 571:Generated_Source\PSoC4/RTC.h **** * \return
 572:Generated_Source\PSoC4/RTC.h **** *  RTC_PM - PM.
 573:Generated_Source\PSoC4/RTC.h **** *
 574:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 575:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetAmPm(uint32 inputTime)
 576:Generated_Source\PSoC4/RTC.h **** {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 16


 280              		.loc 1 576 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 80B5     		push	{r7, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]
 577:Generated_Source\PSoC4/RTC.h ****     return (RTC_IsBitSet(inputTime, RTC_PERIOD_OF_DAY_MASK));
 293              		.loc 1 577 0
 294 0008 8023     		movs	r3, #128
 295 000a DA03     		lsls	r2, r3, #15
 296 000c 7B68     		ldr	r3, [r7, #4]
 297 000e 1100     		movs	r1, r2
 298 0010 1800     		movs	r0, r3
 299 0012 FFF7FEFF 		bl	RTC_IsBitSet
 300 0016 0300     		movs	r3, r0
 578:Generated_Source\PSoC4/RTC.h **** }
 301              		.loc 1 578 0
 302 0018 1800     		movs	r0, r3
 303 001a BD46     		mov	sp, r7
 304 001c 02B0     		add	sp, sp, #8
 305              		@ sp needed
 306 001e 80BD     		pop	{r7, pc}
 307              		.cfi_endproc
 308              	.LFE7:
 309              		.size	RTC_GetAmPm, .-RTC_GetAmPm
 310              		.section	.text.RTC_GetDay,"ax",%progbits
 311              		.align	2
 312              		.code	16
 313              		.thumb_func
 314              		.type	RTC_GetDay, %function
 315              	RTC_GetDay:
 316              	.LFB8:
 579:Generated_Source\PSoC4/RTC.h **** 
 580:Generated_Source\PSoC4/RTC.h **** 
 581:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 582:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetDay
 583:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 584:Generated_Source\PSoC4/RTC.h **** *
 585:Generated_Source\PSoC4/RTC.h **** * \brief
 586:Generated_Source\PSoC4/RTC.h **** *  Returns the day value from the date value that is passed as parameter.
 587:Generated_Source\PSoC4/RTC.h **** *
 588:Generated_Source\PSoC4/RTC.h **** * \param
 589:Generated_Source\PSoC4/RTC.h **** *  date The date value.
 590:Generated_Source\PSoC4/RTC.h **** *
 591:Generated_Source\PSoC4/RTC.h **** * \return
 592:Generated_Source\PSoC4/RTC.h **** *  The day value.
 593:Generated_Source\PSoC4/RTC.h **** *
 594:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 595:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetDay(uint32 date)
 596:Generated_Source\PSoC4/RTC.h **** {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 17


 317              		.loc 1 596 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 16
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321 0000 80B5     		push	{r7, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 84B0     		sub	sp, sp, #16
 326              		.cfi_def_cfa_offset 24
 327 0004 00AF     		add	r7, sp, #0
 328              		.cfi_def_cfa_register 7
 329 0006 7860     		str	r0, [r7, #4]
 597:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 598:Generated_Source\PSoC4/RTC.h **** 
 599:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_DAY_MASK) >> RTC_10_DAY_OFFSET) * 10u;
 330              		.loc 1 599 0
 331 0008 7B68     		ldr	r3, [r7, #4]
 332 000a 1B0D     		lsrs	r3, r3, #20
 333 000c 0322     		movs	r2, #3
 334 000e 1A40     		ands	r2, r3
 335 0010 1300     		movs	r3, r2
 336 0012 9B00     		lsls	r3, r3, #2
 337 0014 9B18     		adds	r3, r3, r2
 338 0016 5B00     		lsls	r3, r3, #1
 339 0018 FB60     		str	r3, [r7, #12]
 600:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_DAY_MASK) >> RTC_DAY_OFFSET;
 340              		.loc 1 600 0
 341 001a 7B68     		ldr	r3, [r7, #4]
 342 001c 1B0C     		lsrs	r3, r3, #16
 343 001e 0F22     		movs	r2, #15
 344 0020 1340     		ands	r3, r2
 345 0022 FA68     		ldr	r2, [r7, #12]
 346 0024 D318     		adds	r3, r2, r3
 347 0026 FB60     		str	r3, [r7, #12]
 601:Generated_Source\PSoC4/RTC.h **** 
 602:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 348              		.loc 1 602 0
 349 0028 FB68     		ldr	r3, [r7, #12]
 603:Generated_Source\PSoC4/RTC.h **** }
 350              		.loc 1 603 0
 351 002a 1800     		movs	r0, r3
 352 002c BD46     		mov	sp, r7
 353 002e 04B0     		add	sp, sp, #16
 354              		@ sp needed
 355 0030 80BD     		pop	{r7, pc}
 356              		.cfi_endproc
 357              	.LFE8:
 358              		.size	RTC_GetDay, .-RTC_GetDay
 359 0032 C046     		.section	.text.RTC_GetMonth,"ax",%progbits
 360              		.align	2
 361              		.code	16
 362              		.thumb_func
 363              		.type	RTC_GetMonth, %function
 364              	RTC_GetMonth:
 365              	.LFB9:
 604:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 18


 605:Generated_Source\PSoC4/RTC.h **** 
 606:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 607:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMonth
 608:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 609:Generated_Source\PSoC4/RTC.h **** *
 610:Generated_Source\PSoC4/RTC.h **** * \brief
 611:Generated_Source\PSoC4/RTC.h **** *  Returns the month value from the date value that is passed as parameter.
 612:Generated_Source\PSoC4/RTC.h **** *
 613:Generated_Source\PSoC4/RTC.h **** * \param
 614:Generated_Source\PSoC4/RTC.h **** *  date The date value.
 615:Generated_Source\PSoC4/RTC.h **** *
 616:Generated_Source\PSoC4/RTC.h **** * \return
 617:Generated_Source\PSoC4/RTC.h **** *  The month value.
 618:Generated_Source\PSoC4/RTC.h **** *
 619:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 620:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMonth(uint32 date)
 621:Generated_Source\PSoC4/RTC.h **** {
 366              		.loc 1 621 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 84B0     		sub	sp, sp, #16
 375              		.cfi_def_cfa_offset 24
 376 0004 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 378 0006 7860     		str	r0, [r7, #4]
 622:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 623:Generated_Source\PSoC4/RTC.h **** 
 624:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_MONTH_MASK) >> RTC_10_MONTH_OFFSET) * 10u;
 379              		.loc 1 624 0
 380 0008 7B68     		ldr	r3, [r7, #4]
 381 000a 1B0F     		lsrs	r3, r3, #28
 382 000c 0122     		movs	r2, #1
 383 000e 1A40     		ands	r2, r3
 384 0010 1300     		movs	r3, r2
 385 0012 9B00     		lsls	r3, r3, #2
 386 0014 9B18     		adds	r3, r3, r2
 387 0016 5B00     		lsls	r3, r3, #1
 388 0018 FB60     		str	r3, [r7, #12]
 625:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_MONTH_MASK) >> RTC_MONTH_OFFSET;
 389              		.loc 1 625 0
 390 001a 7B68     		ldr	r3, [r7, #4]
 391 001c 1B0E     		lsrs	r3, r3, #24
 392 001e 0F22     		movs	r2, #15
 393 0020 1340     		ands	r3, r2
 394 0022 FA68     		ldr	r2, [r7, #12]
 395 0024 D318     		adds	r3, r2, r3
 396 0026 FB60     		str	r3, [r7, #12]
 626:Generated_Source\PSoC4/RTC.h **** 
 627:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 397              		.loc 1 627 0
 398 0028 FB68     		ldr	r3, [r7, #12]
 628:Generated_Source\PSoC4/RTC.h **** }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 19


 399              		.loc 1 628 0
 400 002a 1800     		movs	r0, r3
 401 002c BD46     		mov	sp, r7
 402 002e 04B0     		add	sp, sp, #16
 403              		@ sp needed
 404 0030 80BD     		pop	{r7, pc}
 405              		.cfi_endproc
 406              	.LFE9:
 407              		.size	RTC_GetMonth, .-RTC_GetMonth
 408 0032 C046     		.section	.text.RTC_GetYear,"ax",%progbits
 409              		.align	2
 410              		.code	16
 411              		.thumb_func
 412              		.type	RTC_GetYear, %function
 413              	RTC_GetYear:
 414              	.LFB10:
 629:Generated_Source\PSoC4/RTC.h **** 
 630:Generated_Source\PSoC4/RTC.h **** 
 631:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 632:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetYear
 633:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 634:Generated_Source\PSoC4/RTC.h **** *
 635:Generated_Source\PSoC4/RTC.h **** * \brief
 636:Generated_Source\PSoC4/RTC.h **** *  Returns the year value from the date value that is passed as parameter.
 637:Generated_Source\PSoC4/RTC.h **** *
 638:Generated_Source\PSoC4/RTC.h **** * \param
 639:Generated_Source\PSoC4/RTC.h **** *  date The date value.
 640:Generated_Source\PSoC4/RTC.h **** *
 641:Generated_Source\PSoC4/RTC.h **** * \return
 642:Generated_Source\PSoC4/RTC.h **** *  The year value.
 643:Generated_Source\PSoC4/RTC.h **** *
 644:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 645:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetYear(uint32 date)
 646:Generated_Source\PSoC4/RTC.h **** {
 415              		.loc 1 646 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 16
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419 0000 80B5     		push	{r7, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 84B0     		sub	sp, sp, #16
 424              		.cfi_def_cfa_offset 24
 425 0004 00AF     		add	r7, sp, #0
 426              		.cfi_def_cfa_register 7
 427 0006 7860     		str	r0, [r7, #4]
 647:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 648:Generated_Source\PSoC4/RTC.h **** 
 649:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_1000_YEAR_MASK) >> RTC_1000_YEAR_OFFSET) * 1000u;
 428              		.loc 1 649 0
 429 0008 7B68     		ldr	r3, [r7, #4]
 430 000a 1B0B     		lsrs	r3, r3, #12
 431 000c 0322     		movs	r2, #3
 432 000e 1340     		ands	r3, r2
 433 0010 FA22     		movs	r2, #250
 434 0012 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 20


 435 0014 5343     		muls	r3, r2
 436 0016 FB60     		str	r3, [r7, #12]
 650:Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_100_YEAR_MASK) >> RTC_100_YEAR_OFFSET) * 100u;
 437              		.loc 1 650 0
 438 0018 7B68     		ldr	r3, [r7, #4]
 439 001a 1B0A     		lsrs	r3, r3, #8
 440 001c 0F22     		movs	r2, #15
 441 001e 1340     		ands	r3, r2
 442 0020 6422     		movs	r2, #100
 443 0022 5343     		muls	r3, r2
 444 0024 FA68     		ldr	r2, [r7, #12]
 445 0026 D318     		adds	r3, r2, r3
 446 0028 FB60     		str	r3, [r7, #12]
 651:Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_10_YEAR_MASK) >> RTC_10_YEAR_OFFSET) * 10u;
 447              		.loc 1 651 0
 448 002a 7B68     		ldr	r3, [r7, #4]
 449 002c 1B09     		lsrs	r3, r3, #4
 450 002e 0F22     		movs	r2, #15
 451 0030 1A40     		ands	r2, r3
 452 0032 1300     		movs	r3, r2
 453 0034 9B00     		lsls	r3, r3, #2
 454 0036 9B18     		adds	r3, r3, r2
 455 0038 5B00     		lsls	r3, r3, #1
 456 003a 1A00     		movs	r2, r3
 457 003c FB68     		ldr	r3, [r7, #12]
 458 003e 9B18     		adds	r3, r3, r2
 459 0040 FB60     		str	r3, [r7, #12]
 652:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_YEAR_MASK) >> RTC_YEAR_OFFSET;
 460              		.loc 1 652 0
 461 0042 7B68     		ldr	r3, [r7, #4]
 462 0044 0F22     		movs	r2, #15
 463 0046 1340     		ands	r3, r2
 464 0048 FA68     		ldr	r2, [r7, #12]
 465 004a D318     		adds	r3, r2, r3
 466 004c FB60     		str	r3, [r7, #12]
 653:Generated_Source\PSoC4/RTC.h **** 
 654:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 467              		.loc 1 654 0
 468 004e FB68     		ldr	r3, [r7, #12]
 655:Generated_Source\PSoC4/RTC.h **** }
 469              		.loc 1 655 0
 470 0050 1800     		movs	r0, r3
 471 0052 BD46     		mov	sp, r7
 472 0054 04B0     		add	sp, sp, #16
 473              		@ sp needed
 474 0056 80BD     		pop	{r7, pc}
 475              		.cfi_endproc
 476              	.LFE10:
 477              		.size	RTC_GetYear, .-RTC_GetYear
 478              		.section	.text.RTC_GetTimeFormat,"ax",%progbits
 479              		.align	2
 480              		.code	16
 481              		.thumb_func
 482              		.type	RTC_GetTimeFormat, %function
 483              	RTC_GetTimeFormat:
 484              	.LFB24:
 656:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 21


 657:Generated_Source\PSoC4/RTC.h **** 
 658:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 659:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetSecond
 660:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 661:Generated_Source\PSoC4/RTC.h **** *\internal
 662:Generated_Source\PSoC4/RTC.h **** * \brief
 663:Generated_Source\PSoC4/RTC.h **** *  Updates the time with the new second value.
 664:Generated_Source\PSoC4/RTC.h **** *
 665:Generated_Source\PSoC4/RTC.h **** * \param
 666:Generated_Source\PSoC4/RTC.h **** * time The current date.
 667:Generated_Source\PSoC4/RTC.h **** * \param
 668:Generated_Source\PSoC4/RTC.h **** * second The seconds value to be set to the time variable.
 669:Generated_Source\PSoC4/RTC.h **** *
 670:Generated_Source\PSoC4/RTC.h **** * \return
 671:Generated_Source\PSoC4/RTC.h **** *  The updated time variable.
 672:Generated_Source\PSoC4/RTC.h **** *\endinternal
 673:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 674:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond)
 675:Generated_Source\PSoC4/RTC.h **** {
 676:Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_SECONDS_FULL_MASK);
 677:Generated_Source\PSoC4/RTC.h **** 
 678:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputSecond / 10u) << RTC_10_SECONDS_OFFSET;
 679:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputSecond % 10u) << RTC_SECONDS_OFFSET;
 680:Generated_Source\PSoC4/RTC.h **** 
 681:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 682:Generated_Source\PSoC4/RTC.h **** }
 683:Generated_Source\PSoC4/RTC.h **** 
 684:Generated_Source\PSoC4/RTC.h **** 
 685:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 686:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetMinutes
 687:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 688:Generated_Source\PSoC4/RTC.h **** *\internal
 689:Generated_Source\PSoC4/RTC.h **** * \brief
 690:Generated_Source\PSoC4/RTC.h **** *  Updates the time with the new minute value.
 691:Generated_Source\PSoC4/RTC.h **** *
 692:Generated_Source\PSoC4/RTC.h **** * \param
 693:Generated_Source\PSoC4/RTC.h **** *  time The current date.
 694:Generated_Source\PSoC4/RTC.h **** * \param
 695:Generated_Source\PSoC4/RTC.h **** *  minutes The minutes value to be set to the time variable.
 696:Generated_Source\PSoC4/RTC.h **** *
 697:Generated_Source\PSoC4/RTC.h **** * \return
 698:Generated_Source\PSoC4/RTC.h **** *  The updated time variable.
 699:Generated_Source\PSoC4/RTC.h **** * \endinternal
 700:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 701:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute)
 702:Generated_Source\PSoC4/RTC.h **** {
 703:Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_MINUTES_FULL_MASK);
 704:Generated_Source\PSoC4/RTC.h **** 
 705:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputMinute / 10u) << RTC_10_MINUTES_OFFSET;
 706:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputMinute % 10u) << RTC_MINUTES_OFFSET;
 707:Generated_Source\PSoC4/RTC.h **** 
 708:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 709:Generated_Source\PSoC4/RTC.h **** }
 710:Generated_Source\PSoC4/RTC.h **** 
 711:Generated_Source\PSoC4/RTC.h **** 
 712:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 713:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetHours
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 22


 714:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 715:Generated_Source\PSoC4/RTC.h **** *\internal
 716:Generated_Source\PSoC4/RTC.h **** * \brief
 717:Generated_Source\PSoC4/RTC.h **** *  Updates the time with the new hour value.
 718:Generated_Source\PSoC4/RTC.h **** *
 719:Generated_Source\PSoC4/RTC.h **** * \param
 720:Generated_Source\PSoC4/RTC.h **** * time The current date.
 721:Generated_Source\PSoC4/RTC.h **** * \param
 722:Generated_Source\PSoC4/RTC.h **** * hours The hours value to be set to the time variable.
 723:Generated_Source\PSoC4/RTC.h **** *
 724:Generated_Source\PSoC4/RTC.h **** * \return
 725:Generated_Source\PSoC4/RTC.h **** *  The updated time variable.
 726:Generated_Source\PSoC4/RTC.h **** *\endinternal
 727:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 728:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours)
 729:Generated_Source\PSoC4/RTC.h **** {
 730:Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_HOURS_FULL_MASK);
 731:Generated_Source\PSoC4/RTC.h **** 
 732:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputHours / 10u) << RTC_10_HOURS_OFFSET;
 733:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputHours % 10u) << RTC_HOURS_OFFSET;
 734:Generated_Source\PSoC4/RTC.h **** 
 735:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 736:Generated_Source\PSoC4/RTC.h **** }
 737:Generated_Source\PSoC4/RTC.h **** 
 738:Generated_Source\PSoC4/RTC.h **** 
 739:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 740:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetAmPm
 741:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 742:Generated_Source\PSoC4/RTC.h **** *\internal
 743:Generated_Source\PSoC4/RTC.h **** * \brief
 744:Generated_Source\PSoC4/RTC.h **** *  Updates the time variable with the AmPm status.
 745:Generated_Source\PSoC4/RTC.h **** *
 746:Generated_Source\PSoC4/RTC.h **** * \param
 747:Generated_Source\PSoC4/RTC.h **** * time The current date.
 748:Generated_Source\PSoC4/RTC.h **** * \param
 749:Generated_Source\PSoC4/RTC.h **** * periodOfDay The AmPm status to be set to the time variable.
 750:Generated_Source\PSoC4/RTC.h **** *
 751:Generated_Source\PSoC4/RTC.h **** * \return
 752:Generated_Source\PSoC4/RTC.h **** *  The updated time variable.
 753:Generated_Source\PSoC4/RTC.h **** * \endinternal
 754:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 755:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay)
 756:Generated_Source\PSoC4/RTC.h **** {
 757:Generated_Source\PSoC4/RTC.h ****     if(0u != periodOfDay)
 758:Generated_Source\PSoC4/RTC.h ****     {
 759:Generated_Source\PSoC4/RTC.h ****         inputTime &= ~(RTC_PERIOD_OF_DAY_MASK);
 760:Generated_Source\PSoC4/RTC.h ****     }
 761:Generated_Source\PSoC4/RTC.h ****     else
 762:Generated_Source\PSoC4/RTC.h ****     {
 763:Generated_Source\PSoC4/RTC.h ****         inputTime |= RTC_PERIOD_OF_DAY_MASK;
 764:Generated_Source\PSoC4/RTC.h ****     }
 765:Generated_Source\PSoC4/RTC.h **** 
 766:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 767:Generated_Source\PSoC4/RTC.h **** }
 768:Generated_Source\PSoC4/RTC.h **** 
 769:Generated_Source\PSoC4/RTC.h **** 
 770:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 23


 771:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetDay
 772:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 773:Generated_Source\PSoC4/RTC.h **** *\internal
 774:Generated_Source\PSoC4/RTC.h **** * \brief
 775:Generated_Source\PSoC4/RTC.h **** *  Updates the date variable with the new day value.
 776:Generated_Source\PSoC4/RTC.h **** *
 777:Generated_Source\PSoC4/RTC.h **** * \param
 778:Generated_Source\PSoC4/RTC.h **** * date The current date.
 779:Generated_Source\PSoC4/RTC.h **** * \param
 780:Generated_Source\PSoC4/RTC.h **** * day The month to be set to the date variable.
 781:Generated_Source\PSoC4/RTC.h **** *
 782:Generated_Source\PSoC4/RTC.h **** * \return
 783:Generated_Source\PSoC4/RTC.h **** *  The updated date variable.
 784:Generated_Source\PSoC4/RTC.h **** *\endinternal
 785:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 786:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay)
 787:Generated_Source\PSoC4/RTC.h **** {
 788:Generated_Source\PSoC4/RTC.h ****     inputDate &= ~(RTC_DAY_FULL_MASK);
 789:Generated_Source\PSoC4/RTC.h **** 
 790:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputDay / 10u) << RTC_10_DAY_OFFSET;
 791:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputDay % 10u) << RTC_DAY_OFFSET;
 792:Generated_Source\PSoC4/RTC.h **** 
 793:Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 794:Generated_Source\PSoC4/RTC.h **** }
 795:Generated_Source\PSoC4/RTC.h **** 
 796:Generated_Source\PSoC4/RTC.h **** 
 797:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 798:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetMonth
 799:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 800:Generated_Source\PSoC4/RTC.h **** *\internal
 801:Generated_Source\PSoC4/RTC.h **** * \brief
 802:Generated_Source\PSoC4/RTC.h **** *  Updates the date variable with the new month value.
 803:Generated_Source\PSoC4/RTC.h **** *
 804:Generated_Source\PSoC4/RTC.h **** * \param
 805:Generated_Source\PSoC4/RTC.h **** * date The current date.
 806:Generated_Source\PSoC4/RTC.h **** * \param
 807:Generated_Source\PSoC4/RTC.h **** * month The month that to be set to the date variable.
 808:Generated_Source\PSoC4/RTC.h **** *
 809:Generated_Source\PSoC4/RTC.h **** * \return
 810:Generated_Source\PSoC4/RTC.h **** *  The updated date variable.
 811:Generated_Source\PSoC4/RTC.h **** *\endinternal
 812:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 813:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth)
 814:Generated_Source\PSoC4/RTC.h **** {
 815:Generated_Source\PSoC4/RTC.h ****     inputDate &= ~(RTC_MONTH_FULL_MASK);
 816:Generated_Source\PSoC4/RTC.h **** 
 817:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputMonth / 10u) << RTC_10_MONTH_OFFSET;
 818:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputMonth % 10u) << RTC_MONTH_OFFSET;
 819:Generated_Source\PSoC4/RTC.h **** 
 820:Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 821:Generated_Source\PSoC4/RTC.h **** }
 822:Generated_Source\PSoC4/RTC.h **** 
 823:Generated_Source\PSoC4/RTC.h **** 
 824:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 825:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetYear
 826:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 827:Generated_Source\PSoC4/RTC.h **** *\internal
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 24


 828:Generated_Source\PSoC4/RTC.h **** * \brief
 829:Generated_Source\PSoC4/RTC.h **** *  Updates the date variable with the new year value.
 830:Generated_Source\PSoC4/RTC.h **** *
 831:Generated_Source\PSoC4/RTC.h **** * \param
 832:Generated_Source\PSoC4/RTC.h **** * date The current date.
 833:Generated_Source\PSoC4/RTC.h **** * \param
 834:Generated_Source\PSoC4/RTC.h **** * year The year to be set to the date variable.
 835:Generated_Source\PSoC4/RTC.h **** *
 836:Generated_Source\PSoC4/RTC.h **** * \return
 837:Generated_Source\PSoC4/RTC.h **** * The updated date variable.
 838:Generated_Source\PSoC4/RTC.h **** *\endinternal
 839:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 840:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear)
 841:Generated_Source\PSoC4/RTC.h **** {
 842:Generated_Source\PSoC4/RTC.h ****     inputDate  &= ~(RTC_YEAR_FULL_MASK);
 843:Generated_Source\PSoC4/RTC.h **** 
 844:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 1000u) << RTC_1000_YEAR_OFFSET;
 845:Generated_Source\PSoC4/RTC.h ****     inputYear %= 1000u;
 846:Generated_Source\PSoC4/RTC.h **** 
 847:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 100u) << RTC_100_YEAR_OFFSET;
 848:Generated_Source\PSoC4/RTC.h ****     inputYear %= 100u;
 849:Generated_Source\PSoC4/RTC.h **** 
 850:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 10u) << RTC_10_YEAR_OFFSET;
 851:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear % 10u) << RTC_YEAR_OFFSET;
 852:Generated_Source\PSoC4/RTC.h **** 
 853:Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 854:Generated_Source\PSoC4/RTC.h **** }
 855:Generated_Source\PSoC4/RTC.h **** 
 856:Generated_Source\PSoC4/RTC.h **** 
 857:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 858:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextMinSec
 859:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 860:Generated_Source\PSoC4/RTC.h **** *\internal
 861:Generated_Source\PSoC4/RTC.h **** * \brief
 862:Generated_Source\PSoC4/RTC.h **** * This is an internal function that calculates the value of the next Second/Minute
 863:Generated_Source\PSoC4/RTC.h **** * that follows after the current Minute/Second.
 864:Generated_Source\PSoC4/RTC.h **** *
 865:Generated_Source\PSoC4/RTC.h **** * \param
 866:Generated_Source\PSoC4/RTC.h **** * curVal The current Second/Minute value.
 867:Generated_Source\PSoC4/RTC.h **** *
 868:Generated_Source\PSoC4/RTC.h **** * \return
 869:Generated_Source\PSoC4/RTC.h **** * Returns the Second/Minute which follows after the current Second/Minute.
 870:Generated_Source\PSoC4/RTC.h **** *\endinternal
 871:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 872:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextMinSec(uint32 curVal)
 873:Generated_Source\PSoC4/RTC.h **** {
 874:Generated_Source\PSoC4/RTC.h ****     return((curVal < 59u) ? (curVal + 1u) : 0u);
 875:Generated_Source\PSoC4/RTC.h **** }
 876:Generated_Source\PSoC4/RTC.h **** 
 877:Generated_Source\PSoC4/RTC.h **** 
 878:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 879:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextHour
 880:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 881:Generated_Source\PSoC4/RTC.h **** *\internal
 882:Generated_Source\PSoC4/RTC.h **** * \brief
 883:Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next Hour
 884:Generated_Source\PSoC4/RTC.h **** *  that follows after the current Hour.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 25


 885:Generated_Source\PSoC4/RTC.h **** *
 886:Generated_Source\PSoC4/RTC.h **** * \param
 887:Generated_Source\PSoC4/RTC.h **** * curVal The current Hour value.
 888:Generated_Source\PSoC4/RTC.h **** *
 889:Generated_Source\PSoC4/RTC.h **** * \return
 890:Generated_Source\PSoC4/RTC.h **** *  Returns the Hour which follows after the current Hour.
 891:Generated_Source\PSoC4/RTC.h **** * \endinternal
 892:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 893:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextHour(uint32 curVal)
 894:Generated_Source\PSoC4/RTC.h **** {
 895:Generated_Source\PSoC4/RTC.h ****     return((curVal < 23u) ? (curVal + 1u) : 0u);
 896:Generated_Source\PSoC4/RTC.h **** }
 897:Generated_Source\PSoC4/RTC.h **** 
 898:Generated_Source\PSoC4/RTC.h **** 
 899:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 900:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextDay
 901:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 902:Generated_Source\PSoC4/RTC.h **** * \internal
 903:Generated_Source\PSoC4/RTC.h **** * \brief
 904:Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next Day
 905:Generated_Source\PSoC4/RTC.h **** *  that follows after the current Day.
 906:Generated_Source\PSoC4/RTC.h **** *
 907:Generated_Source\PSoC4/RTC.h **** * \param
 908:Generated_Source\PSoC4/RTC.h **** *  curYear The current year.
 909:Generated_Source\PSoC4/RTC.h **** * \param
 910:Generated_Source\PSoC4/RTC.h **** *  curMonth The current month.
 911:Generated_Source\PSoC4/RTC.h **** * \param
 912:Generated_Source\PSoC4/RTC.h **** *  curDay The current day.
 913:Generated_Source\PSoC4/RTC.h **** * \param
 914:Generated_Source\PSoC4/RTC.h **** *  alarmCfgMask Alarm Config Mask.
 915:Generated_Source\PSoC4/RTC.h **** *
 916:Generated_Source\PSoC4/RTC.h **** * \return
 917:Generated_Source\PSoC4/RTC.h **** *  Returns the day which follows after the current Day.
 918:Generated_Source\PSoC4/RTC.h **** * \endinternal
 919:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 920:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarm
 921:Generated_Source\PSoC4/RTC.h **** {
 922:Generated_Source\PSoC4/RTC.h ****     uint32 daysInMonth;
 923:Generated_Source\PSoC4/RTC.h ****     uint32 tmpVal;
 924:Generated_Source\PSoC4/RTC.h **** 
 925:Generated_Source\PSoC4/RTC.h ****     daysInMonth = RTC_DaysInMonth(curMonth, curYear);
 926:Generated_Source\PSoC4/RTC.h **** 
 927:Generated_Source\PSoC4/RTC.h ****     if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
 928:Generated_Source\PSoC4/RTC.h ****     {
 929:Generated_Source\PSoC4/RTC.h ****         tmpVal = curDay + RTC_DAYS_PER_WEEK;
 930:Generated_Source\PSoC4/RTC.h ****         tmpVal = (tmpVal > daysInMonth) ? (tmpVal - daysInMonth) : tmpVal;
 931:Generated_Source\PSoC4/RTC.h ****     }
 932:Generated_Source\PSoC4/RTC.h ****     else
 933:Generated_Source\PSoC4/RTC.h ****     {
 934:Generated_Source\PSoC4/RTC.h ****         tmpVal = (curDay < daysInMonth) ? (curDay + 1u) : 1u;
 935:Generated_Source\PSoC4/RTC.h ****     }
 936:Generated_Source\PSoC4/RTC.h **** 
 937:Generated_Source\PSoC4/RTC.h ****     return(tmpVal);
 938:Generated_Source\PSoC4/RTC.h **** }
 939:Generated_Source\PSoC4/RTC.h **** 
 940:Generated_Source\PSoC4/RTC.h **** 
 941:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 26


 942:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextMonth
 943:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 944:Generated_Source\PSoC4/RTC.h **** * \internal
 945:Generated_Source\PSoC4/RTC.h **** * \brief
 946:Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next month
 947:Generated_Source\PSoC4/RTC.h **** *  that follows after the current month.
 948:Generated_Source\PSoC4/RTC.h **** *
 949:Generated_Source\PSoC4/RTC.h **** * \param
 950:Generated_Source\PSoC4/RTC.h **** *  curMonth The current month.
 951:Generated_Source\PSoC4/RTC.h **** *
 952:Generated_Source\PSoC4/RTC.h **** * \return
 953:Generated_Source\PSoC4/RTC.h **** *  Returns the month which follows after the current month.
 954:Generated_Source\PSoC4/RTC.h **** * \endinternal
 955:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 956:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextMonth(uint32 curMonth)
 957:Generated_Source\PSoC4/RTC.h **** {
 958:Generated_Source\PSoC4/RTC.h ****     return((curMonth < 12u) ? (curMonth + 1u) : 1u);
 959:Generated_Source\PSoC4/RTC.h **** }
 960:Generated_Source\PSoC4/RTC.h **** 
 961:Generated_Source\PSoC4/RTC.h **** 
 962:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 963:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextYear
 964:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 965:Generated_Source\PSoC4/RTC.h **** * \internal
 966:Generated_Source\PSoC4/RTC.h **** * \brief
 967:Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next year
 968:Generated_Source\PSoC4/RTC.h **** *  that follows after the current year.
 969:Generated_Source\PSoC4/RTC.h **** *
 970:Generated_Source\PSoC4/RTC.h **** * \param
 971:Generated_Source\PSoC4/RTC.h **** *  curYear The current year.
 972:Generated_Source\PSoC4/RTC.h **** *
 973:Generated_Source\PSoC4/RTC.h **** * \return
 974:Generated_Source\PSoC4/RTC.h **** *  Returns the year which follows after the current year.
 975:Generated_Source\PSoC4/RTC.h **** * \endinternal
 976:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 977:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextYear(uint32 curYear)
 978:Generated_Source\PSoC4/RTC.h **** {
 979:Generated_Source\PSoC4/RTC.h ****     return(curYear + 1u);
 980:Generated_Source\PSoC4/RTC.h **** }
 981:Generated_Source\PSoC4/RTC.h **** 
 982:Generated_Source\PSoC4/RTC.h **** 
 983:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 984:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetTimeFormat
 985:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 986:Generated_Source\PSoC4/RTC.h **** * \internal
 987:Generated_Source\PSoC4/RTC.h **** * \brief
 988:Generated_Source\PSoC4/RTC.h **** *  Updates the "Time Format" value in the variable that contains time in the
 989:Generated_Source\PSoC4/RTC.h **** *  "HH:MM:SS" format.
 990:Generated_Source\PSoC4/RTC.h **** *
 991:Generated_Source\PSoC4/RTC.h **** * \param
 992:Generated_Source\PSoC4/RTC.h **** *  inputTime The current value of the time in the "HH:MM:SS" format.
 993:Generated_Source\PSoC4/RTC.h **** *
 994:Generated_Source\PSoC4/RTC.h **** * \return
 995:Generated_Source\PSoC4/RTC.h **** *  Returns the updated value of the time in the "HH:MM:SS" format.
 996:Generated_Source\PSoC4/RTC.h **** * \endinternal
 997:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 998:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 27


 999:Generated_Source\PSoC4/RTC.h **** {
1000:Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_TIME_FORMAT_MASK);
1001:Generated_Source\PSoC4/RTC.h **** 
1002:Generated_Source\PSoC4/RTC.h ****     if((uint32)RTC_12_HOURS_FORMAT != timeFormat)
1003:Generated_Source\PSoC4/RTC.h ****     {
1004:Generated_Source\PSoC4/RTC.h ****         inputTime |= RTC_TIME_FORMAT_MASK;
1005:Generated_Source\PSoC4/RTC.h ****     }
1006:Generated_Source\PSoC4/RTC.h **** 
1007:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
1008:Generated_Source\PSoC4/RTC.h **** }
1009:Generated_Source\PSoC4/RTC.h **** 
1010:Generated_Source\PSoC4/RTC.h **** 
1011:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1012:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetTimeFormat
1013:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1014:Generated_Source\PSoC4/RTC.h **** * \internal
1015:Generated_Source\PSoC4/RTC.h **** * \brief
1016:Generated_Source\PSoC4/RTC.h **** *  Reads the time format from the variable that contains time in the
1017:Generated_Source\PSoC4/RTC.h **** *  "HH:MM:SS" format.
1018:Generated_Source\PSoC4/RTC.h **** *
1019:Generated_Source\PSoC4/RTC.h **** * \param
1020:Generated_Source\PSoC4/RTC.h **** *  inputTime The current value of the time in the "HH:MM:SS" format.
1021:Generated_Source\PSoC4/RTC.h **** *
1022:Generated_Source\PSoC4/RTC.h **** * \return
1023:Generated_Source\PSoC4/RTC.h **** *  Returns the time format that is stored in the variable that contains time
1024:Generated_Source\PSoC4/RTC.h **** *  in the "HH:MM:SS" format.
1025:Generated_Source\PSoC4/RTC.h **** * \endinternal
1026:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1027:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetTimeFormat(uint32 inputTime)
1028:Generated_Source\PSoC4/RTC.h **** {
 485              		.loc 1 1028 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 82B0     		sub	sp, sp, #8
 494              		.cfi_def_cfa_offset 16
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
1029:Generated_Source\PSoC4/RTC.h ****     return ((0uL != (inputTime & (1uL << RTC_TIME_FORMAT_OFFSET))) ? (uint32)RTC_12_HOURS_FORMAT :
 498              		.loc 1 1029 0
 499 0008 7A68     		ldr	r2, [r7, #4]
 500 000a 8023     		movs	r3, #128
 501 000c 1B04     		lsls	r3, r3, #16
 502 000e 1340     		ands	r3, r2
 503 0010 01D0     		beq	.L26
 504              		.loc 1 1029 0 is_stmt 0 discriminator 1
 505 0012 0123     		movs	r3, #1
 506 0014 00E0     		b	.L28
 507              	.L26:
 508              		.loc 1 1029 0 discriminator 2
 509 0016 0023     		movs	r3, #0
 510              	.L28:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 28


1030:Generated_Source\PSoC4/RTC.h ****                                                                                   (uint32)RTC_24_HO
1031:Generated_Source\PSoC4/RTC.h **** }
 511              		.loc 1 1031 0 is_stmt 1 discriminator 5
 512 0018 1800     		movs	r0, r3
 513 001a BD46     		mov	sp, r7
 514 001c 02B0     		add	sp, sp, #8
 515              		@ sp needed
 516 001e 80BD     		pop	{r7, pc}
 517              		.cfi_endproc
 518              	.LFE24:
 519              		.size	RTC_GetTimeFormat, .-RTC_GetTimeFormat
 520              		.global	__aeabi_uidiv
 521              		.section	.text.RTC_ConstructTime,"ax",%progbits
 522              		.align	2
 523              		.code	16
 524              		.thumb_func
 525              		.type	RTC_ConstructTime, %function
 526              	RTC_ConstructTime:
 527              	.LFB25:
1032:Generated_Source\PSoC4/RTC.h **** 
1033:Generated_Source\PSoC4/RTC.h **** 
1034:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1035:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_ConstructTime
1036:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1037:Generated_Source\PSoC4/RTC.h **** *
1038:Generated_Source\PSoC4/RTC.h **** * \brief
1039:Generated_Source\PSoC4/RTC.h **** *  Returns the time in the format used in APIs from individual elements
1040:Generated_Source\PSoC4/RTC.h **** *  passed (hour, min, sec etc)
1041:Generated_Source\PSoC4/RTC.h **** *
1042:Generated_Source\PSoC4/RTC.h **** * \param
1043:Generated_Source\PSoC4/RTC.h **** * timeFormat The 12/24 hours time format <br>
1044:Generated_Source\PSoC4/RTC.h **** * RTC_24_HOURS_FORMAT - The 24 hours format. <br>
1045:Generated_Source\PSoC4/RTC.h **** * RTC_12_HOURS_FORMAT - The 12 hours format.
1046:Generated_Source\PSoC4/RTC.h **** *
1047:Generated_Source\PSoC4/RTC.h **** * \param
1048:Generated_Source\PSoC4/RTC.h **** * stateAmPm  The AM/PM status <br>
1049:Generated_Source\PSoC4/RTC.h **** * RTC_AM - AM. <br>
1050:Generated_Source\PSoC4/RTC.h **** * RTC_PM - PM.
1051:Generated_Source\PSoC4/RTC.h **** *
1052:Generated_Source\PSoC4/RTC.h **** * \param
1053:Generated_Source\PSoC4/RTC.h **** *  hour The hour.
1054:Generated_Source\PSoC4/RTC.h **** *
1055:Generated_Source\PSoC4/RTC.h **** * \param
1056:Generated_Source\PSoC4/RTC.h **** *  min The minute.
1057:Generated_Source\PSoC4/RTC.h **** *
1058:Generated_Source\PSoC4/RTC.h **** * \param
1059:Generated_Source\PSoC4/RTC.h **** *  sec The second.
1060:Generated_Source\PSoC4/RTC.h **** *
1061:Generated_Source\PSoC4/RTC.h **** * \return
1062:Generated_Source\PSoC4/RTC.h **** *  Time in the format used in API.
1063:Generated_Source\PSoC4/RTC.h **** *
1064:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1065:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 
1066:Generated_Source\PSoC4/RTC.h **** {
 528              		.loc 1 1066 0
 529              		.cfi_startproc
 530              		@ args = 4, pretend = 0, frame = 24
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 29


 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 80B5     		push	{r7, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 86B0     		sub	sp, sp, #24
 537              		.cfi_def_cfa_offset 32
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 540 0006 F860     		str	r0, [r7, #12]
 541 0008 B960     		str	r1, [r7, #8]
 542 000a 7A60     		str	r2, [r7, #4]
 543 000c 3B60     		str	r3, [r7]
1067:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1068:Generated_Source\PSoC4/RTC.h **** 
1069:Generated_Source\PSoC4/RTC.h ****     retVal  = timeFormat << RTC_TIME_FORMAT_OFFSET;
 544              		.loc 1 1069 0
 545 000e FB68     		ldr	r3, [r7, #12]
 546 0010 DB05     		lsls	r3, r3, #23
 547 0012 7B61     		str	r3, [r7, #20]
1070:Generated_Source\PSoC4/RTC.h ****     retVal |= stateAmPm << RTC_PERIOD_OF_DAY_OFFSET;
 548              		.loc 1 1070 0
 549 0014 BB68     		ldr	r3, [r7, #8]
 550 0016 9B05     		lsls	r3, r3, #22
 551 0018 7A69     		ldr	r2, [r7, #20]
 552 001a 1343     		orrs	r3, r2
 553 001c 7B61     		str	r3, [r7, #20]
1071:Generated_Source\PSoC4/RTC.h **** 
1072:Generated_Source\PSoC4/RTC.h ****     retVal |= (hour / 10u) << RTC_10_HOURS_OFFSET;
 554              		.loc 1 1072 0
 555 001e 7B68     		ldr	r3, [r7, #4]
 556 0020 0A21     		movs	r1, #10
 557 0022 1800     		movs	r0, r3
 558 0024 FFF7FEFF 		bl	__aeabi_uidiv
 559 0028 0300     		movs	r3, r0
 560 002a 1B05     		lsls	r3, r3, #20
 561 002c 7A69     		ldr	r2, [r7, #20]
 562 002e 1343     		orrs	r3, r2
 563 0030 7B61     		str	r3, [r7, #20]
1073:Generated_Source\PSoC4/RTC.h ****     retVal |= (hour % 10u) << RTC_HOURS_OFFSET;
 564              		.loc 1 1073 0
 565 0032 7B68     		ldr	r3, [r7, #4]
 566 0034 0A21     		movs	r1, #10
 567 0036 1800     		movs	r0, r3
 568 0038 FFF7FEFF 		bl	__aeabi_uidivmod
 569 003c 0B00     		movs	r3, r1
 570 003e 1B04     		lsls	r3, r3, #16
 571 0040 7A69     		ldr	r2, [r7, #20]
 572 0042 1343     		orrs	r3, r2
 573 0044 7B61     		str	r3, [r7, #20]
1074:Generated_Source\PSoC4/RTC.h **** 
1075:Generated_Source\PSoC4/RTC.h ****     retVal |= (min / 10u) << RTC_10_MINUTES_OFFSET;
 574              		.loc 1 1075 0
 575 0046 3B68     		ldr	r3, [r7]
 576 0048 0A21     		movs	r1, #10
 577 004a 1800     		movs	r0, r3
 578 004c FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 30


 579 0050 0300     		movs	r3, r0
 580 0052 1B03     		lsls	r3, r3, #12
 581 0054 7A69     		ldr	r2, [r7, #20]
 582 0056 1343     		orrs	r3, r2
 583 0058 7B61     		str	r3, [r7, #20]
1076:Generated_Source\PSoC4/RTC.h ****     retVal |= (min % 10u) << RTC_MINUTES_OFFSET;
 584              		.loc 1 1076 0
 585 005a 3B68     		ldr	r3, [r7]
 586 005c 0A21     		movs	r1, #10
 587 005e 1800     		movs	r0, r3
 588 0060 FFF7FEFF 		bl	__aeabi_uidivmod
 589 0064 0B00     		movs	r3, r1
 590 0066 1B02     		lsls	r3, r3, #8
 591 0068 7A69     		ldr	r2, [r7, #20]
 592 006a 1343     		orrs	r3, r2
 593 006c 7B61     		str	r3, [r7, #20]
1077:Generated_Source\PSoC4/RTC.h **** 
1078:Generated_Source\PSoC4/RTC.h ****     retVal |= (sec / 10u) << RTC_10_SECONDS_OFFSET;
 594              		.loc 1 1078 0
 595 006e 3B6A     		ldr	r3, [r7, #32]
 596 0070 0A21     		movs	r1, #10
 597 0072 1800     		movs	r0, r3
 598 0074 FFF7FEFF 		bl	__aeabi_uidiv
 599 0078 0300     		movs	r3, r0
 600 007a 1B01     		lsls	r3, r3, #4
 601 007c 7A69     		ldr	r2, [r7, #20]
 602 007e 1343     		orrs	r3, r2
 603 0080 7B61     		str	r3, [r7, #20]
1079:Generated_Source\PSoC4/RTC.h ****     retVal |= (sec % 10u) << RTC_SECONDS_OFFSET;
 604              		.loc 1 1079 0
 605 0082 3B6A     		ldr	r3, [r7, #32]
 606 0084 0A21     		movs	r1, #10
 607 0086 1800     		movs	r0, r3
 608 0088 FFF7FEFF 		bl	__aeabi_uidivmod
 609 008c 0B00     		movs	r3, r1
 610 008e 1A00     		movs	r2, r3
 611 0090 7B69     		ldr	r3, [r7, #20]
 612 0092 1343     		orrs	r3, r2
 613 0094 7B61     		str	r3, [r7, #20]
1080:Generated_Source\PSoC4/RTC.h **** 
1081:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 614              		.loc 1 1081 0
 615 0096 7B69     		ldr	r3, [r7, #20]
1082:Generated_Source\PSoC4/RTC.h **** }
 616              		.loc 1 1082 0
 617 0098 1800     		movs	r0, r3
 618 009a BD46     		mov	sp, r7
 619 009c 06B0     		add	sp, sp, #24
 620              		@ sp needed
 621 009e 80BD     		pop	{r7, pc}
 622              		.cfi_endproc
 623              	.LFE25:
 624              		.size	RTC_ConstructTime, .-RTC_ConstructTime
 625              		.section	.text.RTC_ConstructDate,"ax",%progbits
 626              		.align	2
 627              		.code	16
 628              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 31


 629              		.type	RTC_ConstructDate, %function
 630              	RTC_ConstructDate:
 631              	.LFB26:
1083:Generated_Source\PSoC4/RTC.h **** 
1084:Generated_Source\PSoC4/RTC.h **** 
1085:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1086:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_ConstructDate
1087:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1088:Generated_Source\PSoC4/RTC.h **** *
1089:Generated_Source\PSoC4/RTC.h **** * \brief
1090:Generated_Source\PSoC4/RTC.h **** *  Returns the date in the format used in APIs from individual elements
1091:Generated_Source\PSoC4/RTC.h **** *  passed (day. Month and year)
1092:Generated_Source\PSoC4/RTC.h **** *
1093:Generated_Source\PSoC4/RTC.h **** * \param
1094:Generated_Source\PSoC4/RTC.h **** *  month The month.
1095:Generated_Source\PSoC4/RTC.h **** *
1096:Generated_Source\PSoC4/RTC.h **** * \param
1097:Generated_Source\PSoC4/RTC.h **** *  day The day.
1098:Generated_Source\PSoC4/RTC.h **** *
1099:Generated_Source\PSoC4/RTC.h **** * \param
1100:Generated_Source\PSoC4/RTC.h **** *  year The year.
1101:Generated_Source\PSoC4/RTC.h **** *
1102:Generated_Source\PSoC4/RTC.h **** * \return
1103:Generated_Source\PSoC4/RTC.h **** *  The date in the format used in API.
1104:Generated_Source\PSoC4/RTC.h **** *
1105:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1106:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year)
1107:Generated_Source\PSoC4/RTC.h **** {
 632              		.loc 1 1107 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 24
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636 0000 80B5     		push	{r7, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 86B0     		sub	sp, sp, #24
 641              		.cfi_def_cfa_offset 32
 642 0004 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 644 0006 F860     		str	r0, [r7, #12]
 645 0008 B960     		str	r1, [r7, #8]
 646 000a 7A60     		str	r2, [r7, #4]
1108:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1109:Generated_Source\PSoC4/RTC.h ****     uint32 tmpVal = year;
 647              		.loc 1 1109 0
 648 000c 7B68     		ldr	r3, [r7, #4]
 649 000e 7B61     		str	r3, [r7, #20]
1110:Generated_Source\PSoC4/RTC.h **** 
1111:Generated_Source\PSoC4/RTC.h ****     retVal  = (month / 10u) << RTC_10_MONTH_OFFSET;
 650              		.loc 1 1111 0
 651 0010 FB68     		ldr	r3, [r7, #12]
 652 0012 0A21     		movs	r1, #10
 653 0014 1800     		movs	r0, r3
 654 0016 FFF7FEFF 		bl	__aeabi_uidiv
 655 001a 0300     		movs	r3, r0
 656 001c 1B07     		lsls	r3, r3, #28
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 32


 657 001e 3B61     		str	r3, [r7, #16]
1112:Generated_Source\PSoC4/RTC.h ****     retVal |= (month % 10u) << RTC_MONTH_OFFSET;
 658              		.loc 1 1112 0
 659 0020 FB68     		ldr	r3, [r7, #12]
 660 0022 0A21     		movs	r1, #10
 661 0024 1800     		movs	r0, r3
 662 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 663 002a 0B00     		movs	r3, r1
 664 002c 1B06     		lsls	r3, r3, #24
 665 002e 3A69     		ldr	r2, [r7, #16]
 666 0030 1343     		orrs	r3, r2
 667 0032 3B61     		str	r3, [r7, #16]
1113:Generated_Source\PSoC4/RTC.h **** 
1114:Generated_Source\PSoC4/RTC.h ****     retVal |= (day / 10u) << RTC_10_DAY_OFFSET;
 668              		.loc 1 1114 0
 669 0034 BB68     		ldr	r3, [r7, #8]
 670 0036 0A21     		movs	r1, #10
 671 0038 1800     		movs	r0, r3
 672 003a FFF7FEFF 		bl	__aeabi_uidiv
 673 003e 0300     		movs	r3, r0
 674 0040 1B05     		lsls	r3, r3, #20
 675 0042 3A69     		ldr	r2, [r7, #16]
 676 0044 1343     		orrs	r3, r2
 677 0046 3B61     		str	r3, [r7, #16]
1115:Generated_Source\PSoC4/RTC.h ****     retVal |= (day % 10u) << RTC_DAY_OFFSET;
 678              		.loc 1 1115 0
 679 0048 BB68     		ldr	r3, [r7, #8]
 680 004a 0A21     		movs	r1, #10
 681 004c 1800     		movs	r0, r3
 682 004e FFF7FEFF 		bl	__aeabi_uidivmod
 683 0052 0B00     		movs	r3, r1
 684 0054 1B04     		lsls	r3, r3, #16
 685 0056 3A69     		ldr	r2, [r7, #16]
 686 0058 1343     		orrs	r3, r2
 687 005a 3B61     		str	r3, [r7, #16]
1116:Generated_Source\PSoC4/RTC.h **** 
1117:Generated_Source\PSoC4/RTC.h ****     retVal |= (year / 1000u) << RTC_1000_YEAR_OFFSET;
 688              		.loc 1 1117 0
 689 005c 7A68     		ldr	r2, [r7, #4]
 690 005e FA23     		movs	r3, #250
 691 0060 9900     		lsls	r1, r3, #2
 692 0062 1000     		movs	r0, r2
 693 0064 FFF7FEFF 		bl	__aeabi_uidiv
 694 0068 0300     		movs	r3, r0
 695 006a 1B03     		lsls	r3, r3, #12
 696 006c 3A69     		ldr	r2, [r7, #16]
 697 006e 1343     		orrs	r3, r2
 698 0070 3B61     		str	r3, [r7, #16]
1118:Generated_Source\PSoC4/RTC.h ****     tmpVal %= 1000u;
 699              		.loc 1 1118 0
 700 0072 7A69     		ldr	r2, [r7, #20]
 701 0074 FA23     		movs	r3, #250
 702 0076 9900     		lsls	r1, r3, #2
 703 0078 1000     		movs	r0, r2
 704 007a FFF7FEFF 		bl	__aeabi_uidivmod
 705 007e 0B00     		movs	r3, r1
 706 0080 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 33


1119:Generated_Source\PSoC4/RTC.h **** 
1120:Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal / 100u) << RTC_100_YEAR_OFFSET;
 707              		.loc 1 1120 0
 708 0082 7B69     		ldr	r3, [r7, #20]
 709 0084 6421     		movs	r1, #100
 710 0086 1800     		movs	r0, r3
 711 0088 FFF7FEFF 		bl	__aeabi_uidiv
 712 008c 0300     		movs	r3, r0
 713 008e 1B02     		lsls	r3, r3, #8
 714 0090 3A69     		ldr	r2, [r7, #16]
 715 0092 1343     		orrs	r3, r2
 716 0094 3B61     		str	r3, [r7, #16]
1121:Generated_Source\PSoC4/RTC.h ****     tmpVal %= 100u;
 717              		.loc 1 1121 0
 718 0096 7B69     		ldr	r3, [r7, #20]
 719 0098 6421     		movs	r1, #100
 720 009a 1800     		movs	r0, r3
 721 009c FFF7FEFF 		bl	__aeabi_uidivmod
 722 00a0 0B00     		movs	r3, r1
 723 00a2 7B61     		str	r3, [r7, #20]
1122:Generated_Source\PSoC4/RTC.h **** 
1123:Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal / 10u) << RTC_10_YEAR_OFFSET;
 724              		.loc 1 1123 0
 725 00a4 7B69     		ldr	r3, [r7, #20]
 726 00a6 0A21     		movs	r1, #10
 727 00a8 1800     		movs	r0, r3
 728 00aa FFF7FEFF 		bl	__aeabi_uidiv
 729 00ae 0300     		movs	r3, r0
 730 00b0 1B01     		lsls	r3, r3, #4
 731 00b2 3A69     		ldr	r2, [r7, #16]
 732 00b4 1343     		orrs	r3, r2
 733 00b6 3B61     		str	r3, [r7, #16]
1124:Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal % 10u) << RTC_YEAR_OFFSET;
 734              		.loc 1 1124 0
 735 00b8 7B69     		ldr	r3, [r7, #20]
 736 00ba 0A21     		movs	r1, #10
 737 00bc 1800     		movs	r0, r3
 738 00be FFF7FEFF 		bl	__aeabi_uidivmod
 739 00c2 0B00     		movs	r3, r1
 740 00c4 1A00     		movs	r2, r3
 741 00c6 3B69     		ldr	r3, [r7, #16]
 742 00c8 1343     		orrs	r3, r2
 743 00ca 3B61     		str	r3, [r7, #16]
1125:Generated_Source\PSoC4/RTC.h **** 
1126:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 744              		.loc 1 1126 0
 745 00cc 3B69     		ldr	r3, [r7, #16]
1127:Generated_Source\PSoC4/RTC.h **** }
 746              		.loc 1 1127 0
 747 00ce 1800     		movs	r0, r3
 748 00d0 BD46     		mov	sp, r7
 749 00d2 06B0     		add	sp, sp, #24
 750              		@ sp needed
 751 00d4 80BD     		pop	{r7, pc}
 752              		.cfi_endproc
 753              	.LFE26:
 754              		.size	RTC_ConstructDate, .-RTC_ConstructDate
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 34


 755              		.section	.text.RTC_GetDayOfWeek,"ax",%progbits
 756              		.align	2
 757              		.code	16
 758              		.thumb_func
 759              		.type	RTC_GetDayOfWeek, %function
 760              	RTC_GetDayOfWeek:
 761              	.LFB27:
1128:Generated_Source\PSoC4/RTC.h **** 
1129:Generated_Source\PSoC4/RTC.h **** 
1130:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1131:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetDayOfWeek
1132:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1133:Generated_Source\PSoC4/RTC.h **** * \internal
1134:Generated_Source\PSoC4/RTC.h **** *
1135:Generated_Source\PSoC4/RTC.h **** * \brief
1136:Generated_Source\PSoC4/RTC.h **** *  Returns a day of the week for a year, month, and day of month that are passed
1137:Generated_Source\PSoC4/RTC.h **** *  through parameters. Zeller's congruence is used to calculate the day of
1138:Generated_Source\PSoC4/RTC.h **** *  the week.
1139:Generated_Source\PSoC4/RTC.h **** *
1140:Generated_Source\PSoC4/RTC.h **** *  For the Georgian calendar, Zeller's congruence is:
1141:Generated_Source\PSoC4/RTC.h **** *  h = (q + [13 * (m + 1)] + K + [K/4] + [J/4] - 2J) mod 7
1142:Generated_Source\PSoC4/RTC.h **** *
1143:Generated_Source\PSoC4/RTC.h **** *  h - The day of the week (0 = Saturday, 1 = Sunday, 2 = Monday, ..., 6 = Friday).
1144:Generated_Source\PSoC4/RTC.h **** *  q - The day of the month.
1145:Generated_Source\PSoC4/RTC.h **** *  m - The month (3 = March, 4 = April, 5 = May, ..., 14 = February)
1146:Generated_Source\PSoC4/RTC.h **** *  K - The year of the century (year \mod 100).
1147:Generated_Source\PSoC4/RTC.h **** *  J - The zero-based century (actually [year/100]) For example, the zero-based
1148:Generated_Source\PSoC4/RTC.h **** *  centuries for 1995 and 2000 are 19 and 20 respectively (not to be
1149:Generated_Source\PSoC4/RTC.h **** *  confused with the common ordinal century enumeration which indicates
1150:Generated_Source\PSoC4/RTC.h **** *  20th for both cases).
1151:Generated_Source\PSoC4/RTC.h **** *
1152:Generated_Source\PSoC4/RTC.h **** * \note In this algorithm January and February are counted as months 13 and 14
1153:Generated_Source\PSoC4/RTC.h **** * of the previous year.
1154:Generated_Source\PSoC4/RTC.h **** *
1155:Generated_Source\PSoC4/RTC.h **** * \param
1156:Generated_Source\PSoC4/RTC.h **** *  day The day of the month(1..31)
1157:Generated_Source\PSoC4/RTC.h **** *
1158:Generated_Source\PSoC4/RTC.h **** * \param
1159:Generated_Source\PSoC4/RTC.h **** *  month The month of the year
1160:Generated_Source\PSoC4/RTC.h **** * RTC_JANUARY <br>
1161:Generated_Source\PSoC4/RTC.h **** * RTC_FEBRUARY <br>
1162:Generated_Source\PSoC4/RTC.h **** * RTC_MARCH <br>
1163:Generated_Source\PSoC4/RTC.h **** * RTC_APRIL <br>
1164:Generated_Source\PSoC4/RTC.h **** * RTC_MAY <br>
1165:Generated_Source\PSoC4/RTC.h **** * RTC_JUNE <br>
1166:Generated_Source\PSoC4/RTC.h **** * RTC_JULY <br>
1167:Generated_Source\PSoC4/RTC.h **** * RTC_AUGUST <br>
1168:Generated_Source\PSoC4/RTC.h **** * RTC_SEPTEMBER <br>
1169:Generated_Source\PSoC4/RTC.h **** * RTC_OCTOBER <br>
1170:Generated_Source\PSoC4/RTC.h **** * RTC_NOVEMBER <br>
1171:Generated_Source\PSoC4/RTC.h **** * RTC_DECEMBER <br>
1172:Generated_Source\PSoC4/RTC.h **** *
1173:Generated_Source\PSoC4/RTC.h **** * \param
1174:Generated_Source\PSoC4/RTC.h **** *  year The year value.
1175:Generated_Source\PSoC4/RTC.h **** *
1176:Generated_Source\PSoC4/RTC.h **** * \return
1177:Generated_Source\PSoC4/RTC.h **** * Returns a day of the week
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 35


1178:Generated_Source\PSoC4/RTC.h **** * RTC_SUNDAY <br>
1179:Generated_Source\PSoC4/RTC.h **** * RTC_MONDAY <br>
1180:Generated_Source\PSoC4/RTC.h **** * RTC_TUESDAY <br>
1181:Generated_Source\PSoC4/RTC.h **** * RTC_WEDNESDAY <br>
1182:Generated_Source\PSoC4/RTC.h **** * RTC_THURSDAY <br>
1183:Generated_Source\PSoC4/RTC.h **** * RTC_FRIDAY <br>
1184:Generated_Source\PSoC4/RTC.h **** * RTC_SATURDAY <br>
1185:Generated_Source\PSoC4/RTC.h **** *
1186:Generated_Source\PSoC4/RTC.h **** * \endinternal
1187:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1188:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year)
1189:Generated_Source\PSoC4/RTC.h **** {
 762              		.loc 1 1189 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 24
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 90B5     		push	{r4, r7, lr}
 767              		.cfi_def_cfa_offset 12
 768              		.cfi_offset 4, -12
 769              		.cfi_offset 7, -8
 770              		.cfi_offset 14, -4
 771 0002 87B0     		sub	sp, sp, #28
 772              		.cfi_def_cfa_offset 40
 773 0004 00AF     		add	r7, sp, #0
 774              		.cfi_def_cfa_register 7
 775 0006 F860     		str	r0, [r7, #12]
 776 0008 B960     		str	r1, [r7, #8]
 777 000a 7A60     		str	r2, [r7, #4]
1190:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1191:Generated_Source\PSoC4/RTC.h **** 
1192:Generated_Source\PSoC4/RTC.h ****     /* Converts month number from regular convention
1193:Generated_Source\PSoC4/RTC.h ****      * (1=January,..., 12=December) to convention required for this
1194:Generated_Source\PSoC4/RTC.h ****      * algorithm(January and February are counted as months 13 and 14 of
1195:Generated_Source\PSoC4/RTC.h ****      * previous year).
1196:Generated_Source\PSoC4/RTC.h ****     */
1197:Generated_Source\PSoC4/RTC.h ****     if(month < (uint32)RTC_MARCH)
 778              		.loc 1 1197 0
 779 000c BB68     		ldr	r3, [r7, #8]
 780 000e 022B     		cmp	r3, #2
 781 0010 05D8     		bhi	.L34
1198:Generated_Source\PSoC4/RTC.h ****     {
1199:Generated_Source\PSoC4/RTC.h ****         month = 12u + month;
 782              		.loc 1 1199 0
 783 0012 BB68     		ldr	r3, [r7, #8]
 784 0014 0C33     		adds	r3, r3, #12
 785 0016 BB60     		str	r3, [r7, #8]
1200:Generated_Source\PSoC4/RTC.h ****         year--;
 786              		.loc 1 1200 0
 787 0018 7B68     		ldr	r3, [r7, #4]
 788 001a 013B     		subs	r3, r3, #1
 789 001c 7B60     		str	r3, [r7, #4]
 790              	.L34:
1201:Generated_Source\PSoC4/RTC.h ****     }
1202:Generated_Source\PSoC4/RTC.h **** 
1203:Generated_Source\PSoC4/RTC.h ****     /* Calculates Day of Week using Zeller's congruence algorithms.
1204:Generated_Source\PSoC4/RTC.h ****     */
1205:Generated_Source\PSoC4/RTC.h ****     retVal = (day + (((month + 1u) * 26u) / 10u) + year + (year / 4u) + (6u * (year / 100u)) + (yea
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 36


 791              		.loc 1 1205 0
 792 001e BB68     		ldr	r3, [r7, #8]
 793 0020 0133     		adds	r3, r3, #1
 794 0022 1A22     		movs	r2, #26
 795 0024 5343     		muls	r3, r2
 796 0026 0A21     		movs	r1, #10
 797 0028 1800     		movs	r0, r3
 798 002a FFF7FEFF 		bl	__aeabi_uidiv
 799 002e 0300     		movs	r3, r0
 800 0030 1A00     		movs	r2, r3
 801 0032 FB68     		ldr	r3, [r7, #12]
 802 0034 D218     		adds	r2, r2, r3
 803 0036 7B68     		ldr	r3, [r7, #4]
 804 0038 D218     		adds	r2, r2, r3
 805 003a 7B68     		ldr	r3, [r7, #4]
 806 003c 9B08     		lsrs	r3, r3, #2
 807 003e D418     		adds	r4, r2, r3
 808 0040 7B68     		ldr	r3, [r7, #4]
 809 0042 6421     		movs	r1, #100
 810 0044 1800     		movs	r0, r3
 811 0046 FFF7FEFF 		bl	__aeabi_uidiv
 812 004a 0300     		movs	r3, r0
 813 004c 1A00     		movs	r2, r3
 814 004e 1300     		movs	r3, r2
 815 0050 5B00     		lsls	r3, r3, #1
 816 0052 9B18     		adds	r3, r3, r2
 817 0054 5B00     		lsls	r3, r3, #1
 818 0056 E418     		adds	r4, r4, r3
 819 0058 7A68     		ldr	r2, [r7, #4]
 820 005a C823     		movs	r3, #200
 821 005c 5900     		lsls	r1, r3, #1
 822 005e 1000     		movs	r0, r2
 823 0060 FFF7FEFF 		bl	__aeabi_uidiv
 824 0064 0300     		movs	r3, r0
 825 0066 E318     		adds	r3, r4, r3
 826 0068 0721     		movs	r1, #7
 827 006a 1800     		movs	r0, r3
 828 006c FFF7FEFF 		bl	__aeabi_uidivmod
 829 0070 0B00     		movs	r3, r1
 830 0072 7B61     		str	r3, [r7, #20]
1206:Generated_Source\PSoC4/RTC.h **** 
1207:Generated_Source\PSoC4/RTC.h ****     /* Makes correction for Saturday. Saturday number should be 7 instead of 0. */
1208:Generated_Source\PSoC4/RTC.h ****     if(0u == retVal)
 831              		.loc 1 1208 0
 832 0074 7B69     		ldr	r3, [r7, #20]
 833 0076 002B     		cmp	r3, #0
 834 0078 01D1     		bne	.L35
1209:Generated_Source\PSoC4/RTC.h ****     {
1210:Generated_Source\PSoC4/RTC.h ****         retVal = (uint32)RTC_SATURDAY;
 835              		.loc 1 1210 0
 836 007a 0723     		movs	r3, #7
 837 007c 7B61     		str	r3, [r7, #20]
 838              	.L35:
1211:Generated_Source\PSoC4/RTC.h ****     }
1212:Generated_Source\PSoC4/RTC.h **** 
1213:Generated_Source\PSoC4/RTC.h ****     return(retVal);
 839              		.loc 1 1213 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 37


 840 007e 7B69     		ldr	r3, [r7, #20]
1214:Generated_Source\PSoC4/RTC.h **** }
 841              		.loc 1 1214 0
 842 0080 1800     		movs	r0, r3
 843 0082 BD46     		mov	sp, r7
 844 0084 07B0     		add	sp, sp, #28
 845              		@ sp needed
 846 0086 90BD     		pop	{r4, r7, pc}
 847              		.cfi_endproc
 848              	.LFE27:
 849              		.size	RTC_GetDayOfWeek, .-RTC_GetDayOfWeek
 850              		.comm	RTC_initVar,1,1
 851              		.comm	RTC_unixTime,8,8
 852              		.comm	RTC_currentTimeDate,16,4
 853              		.bss
 854              		.align	2
 855              	RTC_updateTimePeriod:
 856 0000 00000000 		.space	4
 857              		.align	2
 858              	RTC_tickRefOneSec:
 859 0004 00000000 		.space	4
 860              		.comm	RTC_dstStatus,1,1
 861              		.align	2
 862              	RTC_dstTimeOffset:
 863 0008 00000000 		.space	4
 864              		.comm	RTC_alarmCurStatus,4,4
 865              		.global	RTC_daysBeforeMonthTbl
 866              		.section	.rodata
 867              		.align	2
 868              		.type	RTC_daysBeforeMonthTbl, %object
 869              		.size	RTC_daysBeforeMonthTbl, 24
 870              	RTC_daysBeforeMonthTbl:
 871 0000 0000     		.short	0
 872 0002 1F00     		.short	31
 873 0004 3B00     		.short	59
 874 0006 5A00     		.short	90
 875 0008 7800     		.short	120
 876 000a 9700     		.short	151
 877 000c B500     		.short	181
 878 000e D400     		.short	212
 879 0010 F300     		.short	243
 880 0012 1101     		.short	273
 881 0014 3001     		.short	304
 882 0016 4E01     		.short	334
 883              		.global	RTC_daysInMonthTbl
 884              		.align	2
 885              		.type	RTC_daysInMonthTbl, %object
 886              		.size	RTC_daysInMonthTbl, 12
 887              	RTC_daysInMonthTbl:
 888 0018 1F       		.byte	31
 889 0019 1C       		.byte	28
 890 001a 1F       		.byte	31
 891 001b 1E       		.byte	30
 892 001c 1F       		.byte	31
 893 001d 1E       		.byte	30
 894 001e 1F       		.byte	31
 895 001f 1F       		.byte	31
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 38


 896 0020 1E       		.byte	30
 897 0021 1F       		.byte	31
 898 0022 1E       		.byte	30
 899 0023 1F       		.byte	31
 900              		.section	.text.RTC_Start,"ax",%progbits
 901              		.align	2
 902              		.global	RTC_Start
 903              		.code	16
 904              		.thumb_func
 905              		.type	RTC_Start, %function
 906              	RTC_Start:
 907              	.LFB28:
 908              		.file 2 "Generated_Source\\PSoC4\\RTC.c"
   1:Generated_Source\PSoC4/RTC.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC.c **** * \file Name: RTC.c
   3:Generated_Source\PSoC4/RTC.c **** * \version 1.10
   4:Generated_Source\PSoC4/RTC.c **** *
   5:Generated_Source\PSoC4/RTC.c **** * \brief
   6:Generated_Source\PSoC4/RTC.c **** *  This file provides the source code to the API for the RTC_P4 Component.
   7:Generated_Source\PSoC4/RTC.c **** *
   8:Generated_Source\PSoC4/RTC.c **** ********************************************************************************
   9:Generated_Source\PSoC4/RTC.c **** * \copyright
  10:Generated_Source\PSoC4/RTC.c **** * Copyright 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/RTC.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/RTC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/RTC.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
  15:Generated_Source\PSoC4/RTC.c **** 
  16:Generated_Source\PSoC4/RTC.c **** #include "RTC.h"
  17:Generated_Source\PSoC4/RTC.c **** 
  18:Generated_Source\PSoC4/RTC.c **** uint8  RTC_initVar;
  19:Generated_Source\PSoC4/RTC.c **** 
  20:Generated_Source\PSoC4/RTC.c **** volatile uint64 RTC_unixTime;
  21:Generated_Source\PSoC4/RTC.c **** RTC_DATE_TIME RTC_currentTimeDate;
  22:Generated_Source\PSoC4/RTC.c **** 
  23:Generated_Source\PSoC4/RTC.c **** static uint32 RTC_updateTimePeriod;
  24:Generated_Source\PSoC4/RTC.c **** static uint32 RTC_tickRefOneSec;
  25:Generated_Source\PSoC4/RTC.c **** 
  26:Generated_Source\PSoC4/RTC.c **** uint8  RTC_dstStatus;
  27:Generated_Source\PSoC4/RTC.c **** static uint32 RTC_dstTimeOffset;
  28:Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_DST_STATUS)
  29:Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeDstStart;
  30:Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeDstStop;
  31:Generated_Source\PSoC4/RTC.c ****     RTC_DST_TIME RTC_dstStartTime;
  32:Generated_Source\PSoC4/RTC.c ****     RTC_DST_TIME RTC_dstStopTime;
  33:Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_DST_STATUS) */
  34:Generated_Source\PSoC4/RTC.c **** 
  35:Generated_Source\PSoC4/RTC.c **** uint32 RTC_alarmCurStatus;
  36:Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_ALARM_STATUS)
  37:Generated_Source\PSoC4/RTC.c ****     uint32  RTC_alarmCfgMask = 0xFFu;
  38:Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeAlarm;
  39:Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME RTC_alarmCfgTimeDate;
  40:Generated_Source\PSoC4/RTC.c ****     void (*RTC_alarmCallbackPtr)(void) = (void *)0;
  41:Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_ALARM_STATUS) */
  42:Generated_Source\PSoC4/RTC.c **** 
  43:Generated_Source\PSoC4/RTC.c **** const uint16 RTC_daysBeforeMonthTbl[RTC_MONTHS_PER_YEAR] = {
  44:Generated_Source\PSoC4/RTC.c ****                                                  (0u), /* JANUARY */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 39


  45:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u), /* FEBRUARY */
  46:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u), /* MARCH */
  47:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u), /* APRIL */
  48:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u), /* MAY */
  49:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u), /* JUNE */
  50:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u), /* JULY 
  51:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u), /*
  52:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  53:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  54:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  55:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  56:Generated_Source\PSoC4/RTC.c **** 
  57:Generated_Source\PSoC4/RTC.c **** const uint8 RTC_daysInMonthTbl[RTC_MONTHS_PER_YEAR] = {RTC_DAYS_IN_JANUARY,
  58:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_FEBRUA
  59:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_MARCH,
  60:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_APRIL,
  61:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_MAY,
  62:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_JUNE,
  63:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_JULY,
  64:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_AUGUST
  65:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_SEPTEM
  66:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_OCTOBE
  67:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_NOVEMB
  68:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_DECEMB
  69:Generated_Source\PSoC4/RTC.c **** 
  70:Generated_Source\PSoC4/RTC.c **** 
  71:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
  72:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Start
  73:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
  74:Generated_Source\PSoC4/RTC.c **** *
  75:Generated_Source\PSoC4/RTC.c **** * \brief
  76:Generated_Source\PSoC4/RTC.c **** *  Performs all the required calculations for the time and date registers and
  77:Generated_Source\PSoC4/RTC.c **** *  initializes the component along with the date and time selected in the
  78:Generated_Source\PSoC4/RTC.c **** *  customizer. 
  79:Generated_Source\PSoC4/RTC.c **** *
  80:Generated_Source\PSoC4/RTC.c **** *  If "Implement RTC update manually" is disabled in the customizer
  81:Generated_Source\PSoC4/RTC.c **** *  and if WDT or WCO timer is selected as a source in the clocks configuration 
  82:Generated_Source\PSoC4/RTC.c **** *  window (low frequency clocks tab), attaches RTC_Update API to a corresponding
  83:Generated_Source\PSoC4/RTC.c **** *  WDT's or WCO's ISR callback.
  84:Generated_Source\PSoC4/RTC.c **** *
  85:Generated_Source\PSoC4/RTC.c **** * \note "Implement RTC update manually" checkbox is available for PSoC 4200L / 
  86:Generated_Source\PSoC4/RTC.c **** * PSoC 4100M / PSoC 4200M / PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4000S / PSoC 
  87:Generated_Source\PSoC4/RTC.c **** * 4100S and Analog Coprocessor.
  88:Generated_Source\PSoC4/RTC.c **** *
  89:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
  90:Generated_Source\PSoC4/RTC.c **** void RTC_Start(void)
  91:Generated_Source\PSoC4/RTC.c **** {
 909              		.loc 2 91 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913 0000 80B5     		push	{r7, lr}
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 40


  92:Generated_Source\PSoC4/RTC.c ****     if(0u == RTC_initVar)
 919              		.loc 2 92 0
 920 0004 044B     		ldr	r3, .L40
 921 0006 1B78     		ldrb	r3, [r3]
 922 0008 002B     		cmp	r3, #0
 923 000a 01D1     		bne	.L39
  93:Generated_Source\PSoC4/RTC.c ****     {
  94:Generated_Source\PSoC4/RTC.c ****         RTC_Init();
 924              		.loc 2 94 0
 925 000c FFF7FEFF 		bl	RTC_Init
 926              	.L39:
  95:Generated_Source\PSoC4/RTC.c ****     }
  96:Generated_Source\PSoC4/RTC.c **** 
  97:Generated_Source\PSoC4/RTC.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
  98:Generated_Source\PSoC4/RTC.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
  99:Generated_Source\PSoC4/RTC.c ****             RTC_CySysRtcSetCallback(CYDEV_RTC_SOURCE_WDT);
 100:Generated_Source\PSoC4/RTC.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 101:Generated_Source\PSoC4/RTC.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 102:Generated_Source\PSoC4/RTC.c **** }
 927              		.loc 2 102 0
 928 0010 C046     		nop
 929 0012 BD46     		mov	sp, r7
 930              		@ sp needed
 931 0014 80BD     		pop	{r7, pc}
 932              	.L41:
 933 0016 C046     		.align	2
 934              	.L40:
 935 0018 00000000 		.word	RTC_initVar
 936              		.cfi_endproc
 937              	.LFE28:
 938              		.size	RTC_Start, .-RTC_Start
 939              		.section	.text.RTC_Stop,"ax",%progbits
 940              		.align	2
 941              		.global	RTC_Stop
 942              		.code	16
 943              		.thumb_func
 944              		.type	RTC_Stop, %function
 945              	RTC_Stop:
 946              	.LFB29:
 103:Generated_Source\PSoC4/RTC.c **** 
 104:Generated_Source\PSoC4/RTC.c **** 
 105:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 106:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Stop
 107:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 108:Generated_Source\PSoC4/RTC.c **** *
 109:Generated_Source\PSoC4/RTC.c **** * \brief
 110:Generated_Source\PSoC4/RTC.c **** *  Stops the time and date updates.
 111:Generated_Source\PSoC4/RTC.c **** *
 112:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 113:Generated_Source\PSoC4/RTC.c **** void RTC_Stop(void)
 114:Generated_Source\PSoC4/RTC.c **** {
 947              		.loc 2 114 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 1, uses_anonymous_args = 0
 951 0000 80B5     		push	{r7, lr}
 952              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 41


 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 0002 00AF     		add	r7, sp, #0
 956              		.cfi_def_cfa_register 7
 115:Generated_Source\PSoC4/RTC.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
 116:Generated_Source\PSoC4/RTC.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 117:Generated_Source\PSoC4/RTC.c ****             RTC_CySysRtcResetCallback(CYDEV_RTC_SOURCE_WDT);
 118:Generated_Source\PSoC4/RTC.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 119:Generated_Source\PSoC4/RTC.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 120:Generated_Source\PSoC4/RTC.c **** }
 957              		.loc 2 120 0
 958 0004 C046     		nop
 959 0006 BD46     		mov	sp, r7
 960              		@ sp needed
 961 0008 80BD     		pop	{r7, pc}
 962              		.cfi_endproc
 963              	.LFE29:
 964              		.size	RTC_Stop, .-RTC_Stop
 965              		.section	.text.RTC_Init,"ax",%progbits
 966              		.align	2
 967              		.global	RTC_Init
 968              		.code	16
 969              		.thumb_func
 970              		.type	RTC_Init, %function
 971              	RTC_Init:
 972              	.LFB30:
 121:Generated_Source\PSoC4/RTC.c **** 
 122:Generated_Source\PSoC4/RTC.c **** 
 123:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 124:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Init
 125:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 126:Generated_Source\PSoC4/RTC.c **** *
 127:Generated_Source\PSoC4/RTC.c **** * \brief
 128:Generated_Source\PSoC4/RTC.c **** *  Initializes or restores the component according to the customizer Configure
 129:Generated_Source\PSoC4/RTC.c **** *  dialog settings. 
 130:Generated_Source\PSoC4/RTC.c **** *
 131:Generated_Source\PSoC4/RTC.c **** * It is not necessary to call RTC_Init() because
 132:Generated_Source\PSoC4/RTC.c **** *  RTC_Start() API calls this function and is the preferred method to begin
 133:Generated_Source\PSoC4/RTC.c **** *  component operation.
 134:Generated_Source\PSoC4/RTC.c **** *
 135:Generated_Source\PSoC4/RTC.c **** *  All registers are set to values according to the customizer Configure
 136:Generated_Source\PSoC4/RTC.c **** *  dialog. The default date value, if not set by the user before this function 
 137:Generated_Source\PSoC4/RTC.c **** *  call, is 12:00:00 AM January 1, 2000.
 138:Generated_Source\PSoC4/RTC.c **** *
 139:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/RTC.c **** void RTC_Init(void)
 141:Generated_Source\PSoC4/RTC.c **** {
 973              		.loc 2 141 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 8
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977 0000 80B5     		push	{r7, lr}
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 7, -8
 980              		.cfi_offset 14, -4
 981 0002 84B0     		sub	sp, sp, #16
 982              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 42


 983 0004 02AF     		add	r7, sp, #8
 984              		.cfi_def_cfa 7, 16
 142:Generated_Source\PSoC4/RTC.c ****     uint32 tmpDate;
 143:Generated_Source\PSoC4/RTC.c ****     uint32 tmpTime;
 144:Generated_Source\PSoC4/RTC.c **** 
 145:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 146:Generated_Source\PSoC4/RTC.c ****         RTC_DST_TIME dstTimeTmp;
 147:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 148:Generated_Source\PSoC4/RTC.c **** 
 149:Generated_Source\PSoC4/RTC.c ****     RTC_initVar = 1u;
 985              		.loc 2 149 0
 986 0006 164B     		ldr	r3, .L44
 987 0008 0122     		movs	r2, #1
 988 000a 1A70     		strb	r2, [r3]
 150:Generated_Source\PSoC4/RTC.c ****     RTC_dstTimeOffset = 0uL;
 989              		.loc 2 150 0
 990 000c 154B     		ldr	r3, .L44+4
 991 000e 0022     		movs	r2, #0
 992 0010 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.status = 0uL;
 993              		.loc 2 151 0
 994 0012 154B     		ldr	r3, .L44+8
 995 0014 0022     		movs	r2, #0
 996 0016 DA60     		str	r2, [r3, #12]
 152:Generated_Source\PSoC4/RTC.c **** 
 153:Generated_Source\PSoC4/RTC.c ****     RTC_dstStatus      = RTC_INITIAL_DST_STATUS;
 997              		.loc 2 153 0
 998 0018 144B     		ldr	r3, .L44+12
 999 001a 0022     		movs	r2, #0
 1000 001c 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC4/RTC.c ****     RTC_alarmCurStatus = RTC_INITIAL_ALARM_STATUS;
 1001              		.loc 2 154 0
 1002 001e 144B     		ldr	r3, .L44+16
 1003 0020 0022     		movs	r2, #0
 1004 0022 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/RTC.c **** 
 156:Generated_Source\PSoC4/RTC.c ****     tmpDate = RTC_ConstructDate(RTC_INITIAL_MONTH,
 1005              		.loc 2 156 0
 1006 0024 FC23     		movs	r3, #252
 1007 0026 DB00     		lsls	r3, r3, #3
 1008 0028 1A00     		movs	r2, r3
 1009 002a 0121     		movs	r1, #1
 1010 002c 0920     		movs	r0, #9
 1011 002e FFF7FEFF 		bl	RTC_ConstructDate
 1012 0032 0300     		movs	r3, r0
 1013 0034 7B60     		str	r3, [r7, #4]
 157:Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_DAY,
 158:Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_YEAR);
 159:Generated_Source\PSoC4/RTC.c **** 
 160:Generated_Source\PSoC4/RTC.c ****     tmpTime = RTC_ConstructTime(RTC_INITIAL_TIME_FORMAT,
 1014              		.loc 2 160 0
 1015 0036 1B23     		movs	r3, #27
 1016 0038 0093     		str	r3, [sp]
 1017 003a 1723     		movs	r3, #23
 1018 003c 1722     		movs	r2, #23
 1019 003e 0021     		movs	r1, #0
 1020 0040 0020     		movs	r0, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 43


 1021 0042 FFF7FEFF 		bl	RTC_ConstructTime
 1022 0046 0300     		movs	r3, r0
 1023 0048 3B60     		str	r3, [r7]
 161:Generated_Source\PSoC4/RTC.c ****                                           0u,
 162:Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_HOUR,
 163:Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_MINUTE,
 164:Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_SECOND);
 165:Generated_Source\PSoC4/RTC.c **** 
 166:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 167:Generated_Source\PSoC4/RTC.c ****         RTC_dstStatus = 0u;
 168:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status = (1uL << RTC_STATUS_DST_OFFSET);
 169:Generated_Source\PSoC4/RTC.c **** 
 170:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.timeFormat    = RTC_INITIAL_DST_DATE_TYPE;
 171:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.hour          = RTC_INITIAL_DST_START_HRS;
 172:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfWeek     = RTC_INITIAL_DST_START_DOW;
 173:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.weekOfMonth   = RTC_INITIAL_DST_START_WOM;
 174:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfMonth    = RTC_INITIAL_DST_START_DOM;
 175:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.month         = RTC_INITIAL_DST_START_MONTH;
 176:Generated_Source\PSoC4/RTC.c ****         RTC_SetDSTStartTime(&dstTimeTmp, (RTC_DST_DATETYPE_ENUM)RTC_INITIAL_DST_DATE_TYPE);
 177:Generated_Source\PSoC4/RTC.c **** 
 178:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.timeFormat    = RTC_INITIAL_DST_DATE_TYPE;
 179:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.hour          = RTC_INITIAL_DST_STOP_HRS;
 180:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfWeek     = RTC_INITIAL_DST_STOP_DOW;
 181:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.weekOfMonth   = RTC_INITIAL_DST_STOP_WOM;
 182:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfMonth    = RTC_INITIAL_DST_STOP_DOM;
 183:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.month         = RTC_INITIAL_DST_STOP_MONTH;
 184:Generated_Source\PSoC4/RTC.c ****         RTC_SetDSTStopTime(&dstTimeTmp, (RTC_DST_DATETYPE_ENUM)RTC_INITIAL_DST_DATE_TYPE);
 185:Generated_Source\PSoC4/RTC.c **** 
 186:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 187:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 188:Generated_Source\PSoC4/RTC.c **** 
 189:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 190:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 191:Generated_Source\PSoC4/RTC.c ****         {
 192:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 193:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 194:Generated_Source\PSoC4/RTC.c ****         }
 195:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 196:Generated_Source\PSoC4/RTC.c **** 
 197:Generated_Source\PSoC4/RTC.c ****     RTC_SetDateAndTime(tmpTime, tmpDate);
 1024              		.loc 2 197 0
 1025 004a 7A68     		ldr	r2, [r7, #4]
 1026 004c 3B68     		ldr	r3, [r7]
 1027 004e 1100     		movs	r1, r2
 1028 0050 1800     		movs	r0, r3
 1029 0052 FFF7FEFF 		bl	RTC_SetDateAndTime
 198:Generated_Source\PSoC4/RTC.c **** }
 1030              		.loc 2 198 0
 1031 0056 C046     		nop
 1032 0058 BD46     		mov	sp, r7
 1033 005a 02B0     		add	sp, sp, #8
 1034              		@ sp needed
 1035 005c 80BD     		pop	{r7, pc}
 1036              	.L45:
 1037 005e C046     		.align	2
 1038              	.L44:
 1039 0060 00000000 		.word	RTC_initVar
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 44


 1040 0064 08000000 		.word	RTC_dstTimeOffset
 1041 0068 00000000 		.word	RTC_currentTimeDate
 1042 006c 00000000 		.word	RTC_dstStatus
 1043 0070 00000000 		.word	RTC_alarmCurStatus
 1044              		.cfi_endproc
 1045              	.LFE30:
 1046              		.size	RTC_Init, .-RTC_Init
 1047              		.section	.text.RTC_SetDateAndTime,"ax",%progbits
 1048              		.align	2
 1049              		.global	RTC_SetDateAndTime
 1050              		.code	16
 1051              		.thumb_func
 1052              		.type	RTC_SetDateAndTime, %function
 1053              	RTC_SetDateAndTime:
 1054              	.LFB31:
 199:Generated_Source\PSoC4/RTC.c **** 
 200:Generated_Source\PSoC4/RTC.c **** 
 201:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 202:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetDateAndTime
 203:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 204:Generated_Source\PSoC4/RTC.c **** *
 205:Generated_Source\PSoC4/RTC.c **** * \brief
 206:Generated_Source\PSoC4/RTC.c **** * Sets the time and date values as the current time and date.
 207:Generated_Source\PSoC4/RTC.c **** *
 208:Generated_Source\PSoC4/RTC.c **** * \param
 209:Generated_Source\PSoC4/RTC.c **** * inputTime The time value in the HH:MM:SS format. <br>
 210:Generated_Source\PSoC4/RTC.c **** * "HH"- The 2nd 8-bit MSB that denotes the hour value.
 211:Generated_Source\PSoC4/RTC.c **** * (0-23 for the 24-hour format and 1-12 for the 12-hour format. The MSB bit of the
 212:Generated_Source\PSoC4/RTC.c **** * value denotes AM/PM for the 12-hour format (0-AM and 1-PM). <br>
 213:Generated_Source\PSoC4/RTC.c **** * "MM" - The 3nd 8-bit MSB denotes the minutes value, the valid entries -> 0-59.<br>
 214:Generated_Source\PSoC4/RTC.c **** * "SS" - The 8-bit LSB denotes the seconds value, the valid entries -> 0-59.
 215:Generated_Source\PSoC4/RTC.c **** * Each byte is in the BCD format. Invalid time entries retain the
 216:Generated_Source\PSoC4/RTC.c **** * previously set values.
 217:Generated_Source\PSoC4/RTC.c **** *
 218:Generated_Source\PSoC4/RTC.c **** * \param
 219:Generated_Source\PSoC4/RTC.c **** *  inputDate The date value in the format selected in the customizer.
 220:Generated_Source\PSoC4/RTC.c **** * For the MM/DD/YYYY format: <br>
 221:Generated_Source\PSoC4/RTC.c **** * "MM" - The 8-bit MSB denotes the month value in BCD, the valid entries -> 1-12<br>
 222:Generated_Source\PSoC4/RTC.c **** * "DD" - The 2nd 8-bit MSB denotes a day of the month value in BCD, the valid
 223:Generated_Source\PSoC4/RTC.c **** * entries -> 1-31.<br>
 224:Generated_Source\PSoC4/RTC.c **** * "YYYY" - The 16-bit LSB denotes a year in BCD, the valid entries -> 1900-2200.
 225:Generated_Source\PSoC4/RTC.c **** * Each byte is in the BCD format. Invalid date entries retain the
 226:Generated_Source\PSoC4/RTC.c **** * previously set values.
 227:Generated_Source\PSoC4/RTC.c **** *
 228:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 229:Generated_Source\PSoC4/RTC.c **** void RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate)
 230:Generated_Source\PSoC4/RTC.c **** {
 1055              		.loc 2 230 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 24
 1058              		@ frame_needed = 1, uses_anonymous_args = 0
 1059 0000 90B5     		push	{r4, r7, lr}
 1060              		.cfi_def_cfa_offset 12
 1061              		.cfi_offset 4, -12
 1062              		.cfi_offset 7, -8
 1063              		.cfi_offset 14, -4
 1064 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 45


 1065              		.cfi_def_cfa_offset 40
 1066 0004 00AF     		add	r7, sp, #0
 1067              		.cfi_def_cfa_register 7
 1068 0006 7860     		str	r0, [r7, #4]
 1069 0008 3960     		str	r1, [r7]
 231:Generated_Source\PSoC4/RTC.c ****     uint32 tmpDay;
 232:Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
 233:Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
 234:Generated_Source\PSoC4/RTC.c **** 
 235:Generated_Source\PSoC4/RTC.c ****     tmpDay   = RTC_GetDay(inputDate);
 1070              		.loc 2 235 0
 1071 000a 3B68     		ldr	r3, [r7]
 1072 000c 1800     		movs	r0, r3
 1073 000e FFF7FEFF 		bl	RTC_GetDay
 1074 0012 0300     		movs	r3, r0
 1075 0014 7B61     		str	r3, [r7, #20]
 236:Generated_Source\PSoC4/RTC.c ****     tmpMonth = RTC_GetMonth(inputDate);
 1076              		.loc 2 236 0
 1077 0016 3B68     		ldr	r3, [r7]
 1078 0018 1800     		movs	r0, r3
 1079 001a FFF7FEFF 		bl	RTC_GetMonth
 1080 001e 0300     		movs	r3, r0
 1081 0020 3B61     		str	r3, [r7, #16]
 237:Generated_Source\PSoC4/RTC.c ****     tmpYear  = RTC_GetYear(inputDate);
 1082              		.loc 2 237 0
 1083 0022 3B68     		ldr	r3, [r7]
 1084 0024 1800     		movs	r0, r3
 1085 0026 FFF7FEFF 		bl	RTC_GetYear
 1086 002a 0300     		movs	r3, r0
 1087 002c FB60     		str	r3, [r7, #12]
 238:Generated_Source\PSoC4/RTC.c **** 
 239:Generated_Source\PSoC4/RTC.c ****     RTC_unixTime = RTC_DateTimeToUnix(inputDate, inputTime);
 1088              		.loc 2 239 0
 1089 002e 7A68     		ldr	r2, [r7, #4]
 1090 0030 3B68     		ldr	r3, [r7]
 1091 0032 1100     		movs	r1, r2
 1092 0034 1800     		movs	r0, r3
 1093 0036 FFF7FEFF 		bl	RTC_DateTimeToUnix
 1094 003a 0300     		movs	r3, r0
 1095 003c 0C00     		movs	r4, r1
 1096 003e 0B4A     		ldr	r2, .L47
 1097 0040 1360     		str	r3, [r2]
 1098 0042 5460     		str	r4, [r2, #4]
 240:Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.date = inputDate;
 1099              		.loc 2 240 0
 1100 0044 0A4B     		ldr	r3, .L47+4
 1101 0046 3A68     		ldr	r2, [r7]
 1102 0048 5A60     		str	r2, [r3, #4]
 241:Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.time = inputTime;
 1103              		.loc 2 241 0
 1104 004a 094B     		ldr	r3, .L47+4
 1105 004c 7A68     		ldr	r2, [r7, #4]
 1106 004e 1A60     		str	r2, [r3]
 242:Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.dayOfWeek = RTC_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 1107              		.loc 2 242 0
 1108 0050 FA68     		ldr	r2, [r7, #12]
 1109 0052 3969     		ldr	r1, [r7, #16]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 46


 1110 0054 7B69     		ldr	r3, [r7, #20]
 1111 0056 1800     		movs	r0, r3
 1112 0058 FFF7FEFF 		bl	RTC_GetDayOfWeek
 1113 005c 0200     		movs	r2, r0
 1114 005e 044B     		ldr	r3, .L47+4
 1115 0060 9A60     		str	r2, [r3, #8]
 243:Generated_Source\PSoC4/RTC.c **** 
 244:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 245:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 246:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 247:Generated_Source\PSoC4/RTC.c **** 
 248:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 249:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 250:Generated_Source\PSoC4/RTC.c ****         {
 251:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 252:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 253:Generated_Source\PSoC4/RTC.c ****             RTC_unixTime -= RTC_dstTimeOffset;
 254:Generated_Source\PSoC4/RTC.c ****         }
 255:Generated_Source\PSoC4/RTC.c ****         else
 256:Generated_Source\PSoC4/RTC.c ****         {
 257:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
 258:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
 259:Generated_Source\PSoC4/RTC.c ****         }
 260:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 261:Generated_Source\PSoC4/RTC.c **** 
 262:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_ALARM_STATUS)
 263:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = RTC_ConstructUnixAlarmTime(&RTC_alarmCfgTimeDate,
 264:Generated_Source\PSoC4/RTC.c ****                                                                                  (uint8)RTC_alarmCf
 265:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_ALARM_STATUS) */
 266:Generated_Source\PSoC4/RTC.c **** }
 1116              		.loc 2 266 0
 1117 0062 C046     		nop
 1118 0064 BD46     		mov	sp, r7
 1119 0066 07B0     		add	sp, sp, #28
 1120              		@ sp needed
 1121 0068 90BD     		pop	{r4, r7, pc}
 1122              	.L48:
 1123 006a C046     		.align	2
 1124              	.L47:
 1125 006c 00000000 		.word	RTC_unixTime
 1126 0070 00000000 		.word	RTC_currentTimeDate
 1127              		.cfi_endproc
 1128              	.LFE31:
 1129              		.size	RTC_SetDateAndTime, .-RTC_SetDateAndTime
 1130              		.section	.text.RTC_SetUnixTime,"ax",%progbits
 1131              		.align	2
 1132              		.global	RTC_SetUnixTime
 1133              		.code	16
 1134              		.thumb_func
 1135              		.type	RTC_SetUnixTime, %function
 1136              	RTC_SetUnixTime:
 1137              	.LFB32:
 267:Generated_Source\PSoC4/RTC.c **** 
 268:Generated_Source\PSoC4/RTC.c **** 
 269:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 270:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetUnixTime
 271:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 47


 272:Generated_Source\PSoC4/RTC.c **** *
 273:Generated_Source\PSoC4/RTC.c **** * \brief
 274:Generated_Source\PSoC4/RTC.c **** * Sets the time in the Unix/Epoch time format - the number of seconds elapsed 
 275:Generated_Source\PSoC4/RTC.c **** *  from January 1, 1970 UTC 00:00 hrs.
 276:Generated_Source\PSoC4/RTC.c **** *
 277:Generated_Source\PSoC4/RTC.c **** * \param
 278:Generated_Source\PSoC4/RTC.c **** *  time The time value in the Unix time/Epoch time format.
 279:Generated_Source\PSoC4/RTC.c **** *
 280:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 281:Generated_Source\PSoC4/RTC.c **** void RTC_SetUnixTime(uint64 unixTime)
 282:Generated_Source\PSoC4/RTC.c **** {
 1138              		.loc 2 282 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 24
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142 0000 90B5     		push	{r4, r7, lr}
 1143              		.cfi_def_cfa_offset 12
 1144              		.cfi_offset 4, -12
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 89B0     		sub	sp, sp, #36
 1148              		.cfi_def_cfa_offset 48
 1149 0004 02AF     		add	r7, sp, #8
 1150              		.cfi_def_cfa 7, 40
 1151 0006 3860     		str	r0, [r7]
 1152 0008 7960     		str	r1, [r7, #4]
 283:Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME tmpDateTime;
 284:Generated_Source\PSoC4/RTC.c **** 
 285:Generated_Source\PSoC4/RTC.c ****     RTC_unixTime = unixTime;
 1153              		.loc 2 285 0
 1154 000a 0A4A     		ldr	r2, .L50
 1155 000c 3B68     		ldr	r3, [r7]
 1156 000e 7C68     		ldr	r4, [r7, #4]
 1157 0010 1360     		str	r3, [r2]
 1158 0012 5460     		str	r4, [r2, #4]
 286:Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&tmpDateTime, unixTime, (uint32)RTC_24_HOURS_FORMAT);
 1159              		.loc 2 286 0
 1160 0014 3B68     		ldr	r3, [r7]
 1161 0016 7C68     		ldr	r4, [r7, #4]
 1162 0018 0822     		movs	r2, #8
 1163 001a B918     		adds	r1, r7, r2
 1164 001c 0022     		movs	r2, #0
 1165 001e 0092     		str	r2, [sp]
 1166 0020 1A00     		movs	r2, r3
 1167 0022 2300     		movs	r3, r4
 1168 0024 0800     		movs	r0, r1
 1169 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 287:Generated_Source\PSoC4/RTC.c **** 
 288:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 289:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 290:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 291:Generated_Source\PSoC4/RTC.c **** 
 292:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 293:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 294:Generated_Source\PSoC4/RTC.c ****         {
 295:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 296:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 48


 297:Generated_Source\PSoC4/RTC.c ****         }
 298:Generated_Source\PSoC4/RTC.c ****         else
 299:Generated_Source\PSoC4/RTC.c ****         {
 300:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
 301:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
 302:Generated_Source\PSoC4/RTC.c ****         }
 303:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 304:Generated_Source\PSoC4/RTC.c **** }
 1170              		.loc 2 304 0
 1171 002a C046     		nop
 1172 002c BD46     		mov	sp, r7
 1173 002e 07B0     		add	sp, sp, #28
 1174              		@ sp needed
 1175 0030 90BD     		pop	{r4, r7, pc}
 1176              	.L51:
 1177 0032 C046     		.align	2
 1178              	.L50:
 1179 0034 00000000 		.word	RTC_unixTime
 1180              		.cfi_endproc
 1181              	.LFE32:
 1182              		.size	RTC_SetUnixTime, .-RTC_SetUnixTime
 1183              		.section	.text.RTC_GetUnixTime,"ax",%progbits
 1184              		.align	2
 1185              		.global	RTC_GetUnixTime
 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	RTC_GetUnixTime, %function
 1189              	RTC_GetUnixTime:
 1190              	.LFB33:
 305:Generated_Source\PSoC4/RTC.c **** 
 306:Generated_Source\PSoC4/RTC.c **** 
 307:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetUnixTime
 309:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 310:Generated_Source\PSoC4/RTC.c **** *
 311:Generated_Source\PSoC4/RTC.c **** * \brief
 312:Generated_Source\PSoC4/RTC.c **** *  Returns the time in the Unix/Epoch time format - the number of seconds 
 313:Generated_Source\PSoC4/RTC.c **** * elapsed from January 1, 1970 UTC 00:00 hrs.
 314:Generated_Source\PSoC4/RTC.c **** *
 315:Generated_Source\PSoC4/RTC.c **** * \return time The time value in the Unix time/Epoch time format.
 316:Generated_Source\PSoC4/RTC.c **** *
 317:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 318:Generated_Source\PSoC4/RTC.c **** uint64 RTC_GetUnixTime(void)
 319:Generated_Source\PSoC4/RTC.c **** {
 1191              		.loc 2 319 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 1, uses_anonymous_args = 0
 1195 0000 90B5     		push	{r4, r7, lr}
 1196              		.cfi_def_cfa_offset 12
 1197              		.cfi_offset 4, -12
 1198              		.cfi_offset 7, -8
 1199              		.cfi_offset 14, -4
 1200 0002 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 320:Generated_Source\PSoC4/RTC.c ****     return (RTC_unixTime);
 1202              		.loc 2 320 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 49


 1203 0004 034B     		ldr	r3, .L54
 1204 0006 5C68     		ldr	r4, [r3, #4]
 1205 0008 1B68     		ldr	r3, [r3]
 321:Generated_Source\PSoC4/RTC.c **** }
 1206              		.loc 2 321 0
 1207 000a 1800     		movs	r0, r3
 1208 000c 2100     		movs	r1, r4
 1209 000e BD46     		mov	sp, r7
 1210              		@ sp needed
 1211 0010 90BD     		pop	{r4, r7, pc}
 1212              	.L55:
 1213 0012 C046     		.align	2
 1214              	.L54:
 1215 0014 00000000 		.word	RTC_unixTime
 1216              		.cfi_endproc
 1217              	.LFE33:
 1218              		.size	RTC_GetUnixTime, .-RTC_GetUnixTime
 1219              		.section	.text.RTC_SetPeriod,"ax",%progbits
 1220              		.align	2
 1221              		.global	RTC_SetPeriod
 1222              		.code	16
 1223              		.thumb_func
 1224              		.type	RTC_SetPeriod, %function
 1225              	RTC_SetPeriod:
 1226              	.LFB34:
 322:Generated_Source\PSoC4/RTC.c **** 
 323:Generated_Source\PSoC4/RTC.c **** 
 324:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 325:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetPeriod
 326:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 327:Generated_Source\PSoC4/RTC.c **** *
 328:Generated_Source\PSoC4/RTC.c **** * \brief
 329:Generated_Source\PSoC4/RTC.c **** *  Sets the RTC time update API period.
 330:Generated_Source\PSoC4/RTC.c **** *
 331:Generated_Source\PSoC4/RTC.c **** *  The user needs to pass the period as
 332:Generated_Source\PSoC4/RTC.c **** *  a number of ticks and also a reference number of ticks taken by the same clock
 333:Generated_Source\PSoC4/RTC.c **** *  source for one second. For instance, for a 32 kHz clock source and RTC
 334:Generated_Source\PSoC4/RTC.c **** *  period of 100 ms, the "ticks" value is 3200 and the "refOneSecTicks" value
 335:Generated_Source\PSoC4/RTC.c **** *  is 32000. This value is used to increment the time every time
 336:Generated_Source\PSoC4/RTC.c **** *  RTC_Update() API is called.
 337:Generated_Source\PSoC4/RTC.c **** *
 338:Generated_Source\PSoC4/RTC.c **** * \param
 339:Generated_Source\PSoC4/RTC.c **** *  ticks The clock period taken as a number of ticks.
 340:Generated_Source\PSoC4/RTC.c **** *
 341:Generated_Source\PSoC4/RTC.c **** * \param
 342:Generated_Source\PSoC4/RTC.c **** * refOneSecTicks The reference number of ticks taken by the same clock source
 343:Generated_Source\PSoC4/RTC.c **** *  for one second (the input clock frequency in Hz).
 344:Generated_Source\PSoC4/RTC.c **** *
 345:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 346:Generated_Source\PSoC4/RTC.c **** void RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks)
 347:Generated_Source\PSoC4/RTC.c **** {
 1227              		.loc 2 347 0
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 8
 1230              		@ frame_needed = 1, uses_anonymous_args = 0
 1231 0000 80B5     		push	{r7, lr}
 1232              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 50


 1233              		.cfi_offset 7, -8
 1234              		.cfi_offset 14, -4
 1235 0002 82B0     		sub	sp, sp, #8
 1236              		.cfi_def_cfa_offset 16
 1237 0004 00AF     		add	r7, sp, #0
 1238              		.cfi_def_cfa_register 7
 1239 0006 7860     		str	r0, [r7, #4]
 1240 0008 3960     		str	r1, [r7]
 348:Generated_Source\PSoC4/RTC.c ****     RTC_updateTimePeriod = ticks;
 1241              		.loc 2 348 0
 1242 000a 054B     		ldr	r3, .L57
 1243 000c 7A68     		ldr	r2, [r7, #4]
 1244 000e 1A60     		str	r2, [r3]
 349:Generated_Source\PSoC4/RTC.c ****     RTC_tickRefOneSec    = refOneSecTicks;
 1245              		.loc 2 349 0
 1246 0010 044B     		ldr	r3, .L57+4
 1247 0012 3A68     		ldr	r2, [r7]
 1248 0014 1A60     		str	r2, [r3]
 350:Generated_Source\PSoC4/RTC.c **** }
 1249              		.loc 2 350 0
 1250 0016 C046     		nop
 1251 0018 BD46     		mov	sp, r7
 1252 001a 02B0     		add	sp, sp, #8
 1253              		@ sp needed
 1254 001c 80BD     		pop	{r7, pc}
 1255              	.L58:
 1256 001e C046     		.align	2
 1257              	.L57:
 1258 0020 00000000 		.word	RTC_updateTimePeriod
 1259 0024 04000000 		.word	RTC_tickRefOneSec
 1260              		.cfi_endproc
 1261              	.LFE34:
 1262              		.size	RTC_SetPeriod, .-RTC_SetPeriod
 1263              		.section	.text.RTC_GetPeriod,"ax",%progbits
 1264              		.align	2
 1265              		.global	RTC_GetPeriod
 1266              		.code	16
 1267              		.thumb_func
 1268              		.type	RTC_GetPeriod, %function
 1269              	RTC_GetPeriod:
 1270              	.LFB35:
 351:Generated_Source\PSoC4/RTC.c **** 
 352:Generated_Source\PSoC4/RTC.c **** 
 353:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 354:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetPeriod
 355:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 356:Generated_Source\PSoC4/RTC.c **** *
 357:Generated_Source\PSoC4/RTC.c **** * \brief
 358:Generated_Source\PSoC4/RTC.c **** *  Gets the RTC time update API period.
 359:Generated_Source\PSoC4/RTC.c **** *
 360:Generated_Source\PSoC4/RTC.c **** * \return period The clock period taken as a number of ticks.
 361:Generated_Source\PSoC4/RTC.c **** *
 362:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetPeriod(void)
 364:Generated_Source\PSoC4/RTC.c **** {
 1271              		.loc 2 364 0
 1272              		.cfi_startproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 51


 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 00AF     		add	r7, sp, #0
 1280              		.cfi_def_cfa_register 7
 365:Generated_Source\PSoC4/RTC.c ****     return(RTC_updateTimePeriod);
 1281              		.loc 2 365 0
 1282 0004 024B     		ldr	r3, .L61
 1283 0006 1B68     		ldr	r3, [r3]
 366:Generated_Source\PSoC4/RTC.c **** }
 1284              		.loc 2 366 0
 1285 0008 1800     		movs	r0, r3
 1286 000a BD46     		mov	sp, r7
 1287              		@ sp needed
 1288 000c 80BD     		pop	{r7, pc}
 1289              	.L62:
 1290 000e C046     		.align	2
 1291              	.L61:
 1292 0010 00000000 		.word	RTC_updateTimePeriod
 1293              		.cfi_endproc
 1294              	.LFE35:
 1295              		.size	RTC_GetPeriod, .-RTC_GetPeriod
 1296              		.section	.text.RTC_GetRefOneSec,"ax",%progbits
 1297              		.align	2
 1298              		.global	RTC_GetRefOneSec
 1299              		.code	16
 1300              		.thumb_func
 1301              		.type	RTC_GetRefOneSec, %function
 1302              	RTC_GetRefOneSec:
 1303              	.LFB36:
 367:Generated_Source\PSoC4/RTC.c **** 
 368:Generated_Source\PSoC4/RTC.c **** 
 369:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 370:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetRefOneSec
 371:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 372:Generated_Source\PSoC4/RTC.c **** * \brief
 373:Generated_Source\PSoC4/RTC.c **** * Gets the RTC time update API period.
 374:Generated_Source\PSoC4/RTC.c **** *
 375:Generated_Source\PSoC4/RTC.c **** * \return
 376:Generated_Source\PSoC4/RTC.c **** * period The reference number of ticks taken by the RTC clock source for one
 377:Generated_Source\PSoC4/RTC.c **** * second.
 378:Generated_Source\PSoC4/RTC.c **** *
 379:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 380:Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetRefOneSec(void)
 381:Generated_Source\PSoC4/RTC.c **** {
 1304              		.loc 2 381 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 0
 1307              		@ frame_needed = 1, uses_anonymous_args = 0
 1308 0000 80B5     		push	{r7, lr}
 1309              		.cfi_def_cfa_offset 8
 1310              		.cfi_offset 7, -8
 1311              		.cfi_offset 14, -4
 1312 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 52


 1313              		.cfi_def_cfa_register 7
 382:Generated_Source\PSoC4/RTC.c ****     return(RTC_tickRefOneSec);
 1314              		.loc 2 382 0
 1315 0004 024B     		ldr	r3, .L65
 1316 0006 1B68     		ldr	r3, [r3]
 383:Generated_Source\PSoC4/RTC.c **** }
 1317              		.loc 2 383 0
 1318 0008 1800     		movs	r0, r3
 1319 000a BD46     		mov	sp, r7
 1320              		@ sp needed
 1321 000c 80BD     		pop	{r7, pc}
 1322              	.L66:
 1323 000e C046     		.align	2
 1324              	.L65:
 1325 0010 04000000 		.word	RTC_tickRefOneSec
 1326              		.cfi_endproc
 1327              	.LFE36:
 1328              		.size	RTC_GetRefOneSec, .-RTC_GetRefOneSec
 1329              		.section	.text.RTC_GetDateAndTime,"ax",%progbits
 1330              		.align	2
 1331              		.global	RTC_GetDateAndTime
 1332              		.code	16
 1333              		.thumb_func
 1334              		.type	RTC_GetDateAndTime, %function
 1335              	RTC_GetDateAndTime:
 1336              	.LFB37:
 384:Generated_Source\PSoC4/RTC.c **** 
 385:Generated_Source\PSoC4/RTC.c **** 
 386:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 387:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetDateAndTime
 388:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 389:Generated_Source\PSoC4/RTC.c **** *
 390:Generated_Source\PSoC4/RTC.c **** * Reads the current time and date.
 391:Generated_Source\PSoC4/RTC.c **** *
 392:Generated_Source\PSoC4/RTC.c **** * \param dateTime The pointer to the RTC_date_time structure to which time and 
 393:Generated_Source\PSoC4/RTC.c **** * date is returned.
 394:Generated_Source\PSoC4/RTC.c **** *
 395:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 396:Generated_Source\PSoC4/RTC.c **** void RTC_GetDateAndTime(RTC_DATE_TIME* dateTime)
 397:Generated_Source\PSoC4/RTC.c **** {
 1337              		.loc 2 397 0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 8
 1340              		@ frame_needed = 1, uses_anonymous_args = 0
 1341 0000 90B5     		push	{r4, r7, lr}
 1342              		.cfi_def_cfa_offset 12
 1343              		.cfi_offset 4, -12
 1344              		.cfi_offset 7, -8
 1345              		.cfi_offset 14, -4
 1346 0002 85B0     		sub	sp, sp, #20
 1347              		.cfi_def_cfa_offset 32
 1348 0004 02AF     		add	r7, sp, #8
 1349              		.cfi_def_cfa 7, 24
 1350 0006 7860     		str	r0, [r7, #4]
 398:Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(dateTime, (RTC_unixTime  + RTC_dstTimeOffset),
 1351              		.loc 2 398 0
 1352 0008 0A4B     		ldr	r3, .L68
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 53


 1353 000a 1B68     		ldr	r3, [r3]
 1354 000c 1900     		movs	r1, r3
 1355 000e 0023     		movs	r3, #0
 1356 0010 1A00     		movs	r2, r3
 1357 0012 094B     		ldr	r3, .L68+4
 1358 0014 5C68     		ldr	r4, [r3, #4]
 1359 0016 1B68     		ldr	r3, [r3]
 1360 0018 5B18     		adds	r3, r3, r1
 1361 001a 5441     		adcs	r4, r4, r2
 1362 001c 7968     		ldr	r1, [r7, #4]
 1363 001e 0022     		movs	r2, #0
 1364 0020 0092     		str	r2, [sp]
 1365 0022 1A00     		movs	r2, r3
 1366 0024 2300     		movs	r3, r4
 1367 0026 0800     		movs	r0, r1
 1368 0028 FFF7FEFF 		bl	RTC_UnixToDateTime
 399:Generated_Source\PSoC4/RTC.c ****                                                                             RTC_INITIAL_TIME_FORMAT
 400:Generated_Source\PSoC4/RTC.c **** }
 1369              		.loc 2 400 0
 1370 002c C046     		nop
 1371 002e BD46     		mov	sp, r7
 1372 0030 03B0     		add	sp, sp, #12
 1373              		@ sp needed
 1374 0032 90BD     		pop	{r4, r7, pc}
 1375              	.L69:
 1376              		.align	2
 1377              	.L68:
 1378 0034 08000000 		.word	RTC_dstTimeOffset
 1379 0038 00000000 		.word	RTC_unixTime
 1380              		.cfi_endproc
 1381              	.LFE37:
 1382              		.size	RTC_GetDateAndTime, .-RTC_GetDateAndTime
 1383              		.section	.text.RTC_GetTime,"ax",%progbits
 1384              		.align	2
 1385              		.global	RTC_GetTime
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	RTC_GetTime, %function
 1389              	RTC_GetTime:
 1390              	.LFB38:
 401:Generated_Source\PSoC4/RTC.c **** 
 402:Generated_Source\PSoC4/RTC.c **** 
 403:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 404:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetTime
 405:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 406:Generated_Source\PSoC4/RTC.c **** * \brief
 407:Generated_Source\PSoC4/RTC.c **** * Reads the current time.
 408:Generated_Source\PSoC4/RTC.c **** *
 409:Generated_Source\PSoC4/RTC.c **** * \return
 410:Generated_Source\PSoC4/RTC.c **** * date The value of date in the user selected format. The date value is 
 411:Generated_Source\PSoC4/RTC.c **** * available in the BCD format.
 412:Generated_Source\PSoC4/RTC.c **** *
 413:Generated_Source\PSoC4/RTC.c **** * \warning
 414:Generated_Source\PSoC4/RTC.c **** *  Using RTC_GetTime and RTC_GetDate API separately might result
 415:Generated_Source\PSoC4/RTC.c **** *  in errors when the time wraps around the end of the day. To avoid this,
 416:Generated_Source\PSoC4/RTC.c **** *  use RTC_GetDateAndTime API.
 417:Generated_Source\PSoC4/RTC.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 54


 418:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 419:Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetTime(void)
 420:Generated_Source\PSoC4/RTC.c **** {
 1391              		.loc 2 420 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 1, uses_anonymous_args = 0
 1395 0000 90B5     		push	{r4, r7, lr}
 1396              		.cfi_def_cfa_offset 12
 1397              		.cfi_offset 4, -12
 1398              		.cfi_offset 7, -8
 1399              		.cfi_offset 14, -4
 1400 0002 83B0     		sub	sp, sp, #12
 1401              		.cfi_def_cfa_offset 24
 1402 0004 02AF     		add	r7, sp, #8
 1403              		.cfi_def_cfa 7, 16
 421:Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&RTC_currentTimeDate,
 1404              		.loc 2 421 0
 1405 0006 0C4B     		ldr	r3, .L72
 1406 0008 1B68     		ldr	r3, [r3]
 1407 000a 1900     		movs	r1, r3
 1408 000c 0023     		movs	r3, #0
 1409 000e 1A00     		movs	r2, r3
 1410 0010 0A4B     		ldr	r3, .L72+4
 1411 0012 5C68     		ldr	r4, [r3, #4]
 1412 0014 1B68     		ldr	r3, [r3]
 1413 0016 5B18     		adds	r3, r3, r1
 1414 0018 5441     		adcs	r4, r4, r2
 1415 001a 0949     		ldr	r1, .L72+8
 1416 001c 0022     		movs	r2, #0
 1417 001e 0092     		str	r2, [sp]
 1418 0020 1A00     		movs	r2, r3
 1419 0022 2300     		movs	r3, r4
 1420 0024 0800     		movs	r0, r1
 1421 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 422:Generated_Source\PSoC4/RTC.c ****                                     (RTC_unixTime  + RTC_dstTimeOffset),
 423:Generated_Source\PSoC4/RTC.c ****                                      RTC_INITIAL_TIME_FORMAT);
 424:Generated_Source\PSoC4/RTC.c **** 
 425:Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.time);
 1422              		.loc 2 425 0
 1423 002a 054B     		ldr	r3, .L72+8
 1424 002c 1B68     		ldr	r3, [r3]
 426:Generated_Source\PSoC4/RTC.c **** }
 1425              		.loc 2 426 0
 1426 002e 1800     		movs	r0, r3
 1427 0030 BD46     		mov	sp, r7
 1428 0032 01B0     		add	sp, sp, #4
 1429              		@ sp needed
 1430 0034 90BD     		pop	{r4, r7, pc}
 1431              	.L73:
 1432 0036 C046     		.align	2
 1433              	.L72:
 1434 0038 08000000 		.word	RTC_dstTimeOffset
 1435 003c 00000000 		.word	RTC_unixTime
 1436 0040 00000000 		.word	RTC_currentTimeDate
 1437              		.cfi_endproc
 1438              	.LFE38:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 55


 1439              		.size	RTC_GetTime, .-RTC_GetTime
 1440              		.section	.text.RTC_GetDate,"ax",%progbits
 1441              		.align	2
 1442              		.global	RTC_GetDate
 1443              		.code	16
 1444              		.thumb_func
 1445              		.type	RTC_GetDate, %function
 1446              	RTC_GetDate:
 1447              	.LFB39:
 427:Generated_Source\PSoC4/RTC.c **** 
 428:Generated_Source\PSoC4/RTC.c **** 
 429:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 430:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetDate
 431:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 432:Generated_Source\PSoC4/RTC.c **** *
 433:Generated_Source\PSoC4/RTC.c **** * \brief Reads the current time.
 434:Generated_Source\PSoC4/RTC.c **** *
 435:Generated_Source\PSoC4/RTC.c **** * \return
 436:Generated_Source\PSoC4/RTC.c **** * time The time value in the format selected by the user (12/24 hr);
 437:Generated_Source\PSoC4/RTC.c **** * The time value is available in the BCD format.
 438:Generated_Source\PSoC4/RTC.c **** *
 439:Generated_Source\PSoC4/RTC.c **** * \note
 440:Generated_Source\PSoC4/RTC.c **** *  Using RTC_GetTime and RTC_GetDate API separately
 441:Generated_Source\PSoC4/RTC.c **** *  might result in errors when the time wraps around the end of the day. To
 442:Generated_Source\PSoC4/RTC.c **** *  avoid this, use RTC_GetDateAndTime API.
 443:Generated_Source\PSoC4/RTC.c **** *
 444:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 445:Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetDate(void)
 446:Generated_Source\PSoC4/RTC.c **** {
 1448              		.loc 2 446 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 1, uses_anonymous_args = 0
 1452 0000 90B5     		push	{r4, r7, lr}
 1453              		.cfi_def_cfa_offset 12
 1454              		.cfi_offset 4, -12
 1455              		.cfi_offset 7, -8
 1456              		.cfi_offset 14, -4
 1457 0002 83B0     		sub	sp, sp, #12
 1458              		.cfi_def_cfa_offset 24
 1459 0004 02AF     		add	r7, sp, #8
 1460              		.cfi_def_cfa 7, 16
 447:Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&RTC_currentTimeDate,
 1461              		.loc 2 447 0
 1462 0006 0C4B     		ldr	r3, .L76
 1463 0008 1B68     		ldr	r3, [r3]
 1464 000a 1900     		movs	r1, r3
 1465 000c 0023     		movs	r3, #0
 1466 000e 1A00     		movs	r2, r3
 1467 0010 0A4B     		ldr	r3, .L76+4
 1468 0012 5C68     		ldr	r4, [r3, #4]
 1469 0014 1B68     		ldr	r3, [r3]
 1470 0016 5B18     		adds	r3, r3, r1
 1471 0018 5441     		adcs	r4, r4, r2
 1472 001a 0949     		ldr	r1, .L76+8
 1473 001c 0022     		movs	r2, #0
 1474 001e 0092     		str	r2, [sp]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 56


 1475 0020 1A00     		movs	r2, r3
 1476 0022 2300     		movs	r3, r4
 1477 0024 0800     		movs	r0, r1
 1478 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 448:Generated_Source\PSoC4/RTC.c ****                                     (RTC_unixTime  + RTC_dstTimeOffset),
 449:Generated_Source\PSoC4/RTC.c ****                                      RTC_INITIAL_TIME_FORMAT);
 450:Generated_Source\PSoC4/RTC.c **** 
 451:Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.date);
 1479              		.loc 2 451 0
 1480 002a 054B     		ldr	r3, .L76+8
 1481 002c 5B68     		ldr	r3, [r3, #4]
 452:Generated_Source\PSoC4/RTC.c **** }
 1482              		.loc 2 452 0
 1483 002e 1800     		movs	r0, r3
 1484 0030 BD46     		mov	sp, r7
 1485 0032 01B0     		add	sp, sp, #4
 1486              		@ sp needed
 1487 0034 90BD     		pop	{r4, r7, pc}
 1488              	.L77:
 1489 0036 C046     		.align	2
 1490              	.L76:
 1491 0038 08000000 		.word	RTC_dstTimeOffset
 1492 003c 00000000 		.word	RTC_unixTime
 1493 0040 00000000 		.word	RTC_currentTimeDate
 1494              		.cfi_endproc
 1495              	.LFE39:
 1496              		.size	RTC_GetDate, .-RTC_GetDate
 1497              		.section	.text.RTC_ReadStatus,"ax",%progbits
 1498              		.align	2
 1499              		.global	RTC_ReadStatus
 1500              		.code	16
 1501              		.thumb_func
 1502              		.type	RTC_ReadStatus, %function
 1503              	RTC_ReadStatus:
 1504              	.LFB40:
 453:Generated_Source\PSoC4/RTC.c **** 
 454:Generated_Source\PSoC4/RTC.c **** 
 455:Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_ALARM_STATUS)
 456:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmDateAndTime
 458:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/RTC.c ****     *
 460:Generated_Source\PSoC4/RTC.c ****     * \brief
 461:Generated_Source\PSoC4/RTC.c ****     *  Writes the time and date values as the current alarm time and date.
 462:Generated_Source\PSoC4/RTC.c ****     *
 463:Generated_Source\PSoC4/RTC.c ****     * \param
 464:Generated_Source\PSoC4/RTC.c ****     *  alarmTime The pointer to the RTC_date_time global structure where
 465:Generated_Source\PSoC4/RTC.c ****     *  new values of the alarm time and date are stored.
 466:Generated_Source\PSoC4/RTC.c ****     *
 467:Generated_Source\PSoC4/RTC.c ****     * \note
 468:Generated_Source\PSoC4/RTC.c ****     *  Invalid time entries are written with "00:00:00:00" for the 24-hour format and
 469:Generated_Source\PSoC4/RTC.c ****     *  "AM 12:00:00:00" for the 12-hour format. Invalid date entries are written with
 470:Generated_Source\PSoC4/RTC.c ****     *  a date equivalent to 01-JAN-2000.
 471:Generated_Source\PSoC4/RTC.c ****     *
 472:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 473:Generated_Source\PSoC4/RTC.c ****     void RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime)
 474:Generated_Source\PSoC4/RTC.c ****     {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 57


 475:Generated_Source\PSoC4/RTC.c ****         RTC_alarmCfgTimeDate = *alarmTime;
 476:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = RTC_ConstructUnixAlarmTime(alarmTime, (uint8)RTC_alarmCfgMask);
 477:Generated_Source\PSoC4/RTC.c ****     }
 478:Generated_Source\PSoC4/RTC.c **** 
 479:Generated_Source\PSoC4/RTC.c **** 
 480:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 481:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmDateAndTime
 482:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 483:Generated_Source\PSoC4/RTC.c ****     *
 484:Generated_Source\PSoC4/RTC.c ****     * \brief
 485:Generated_Source\PSoC4/RTC.c ****     *  Reads the current alarm time and date.
 486:Generated_Source\PSoC4/RTC.c ****     *
 487:Generated_Source\PSoC4/RTC.c ****     * \param
 488:Generated_Source\PSoC4/RTC.c ****     *  alarmTimeDate The pointer to the RTC_date_time structure to which
 489:Generated_Source\PSoC4/RTC.c ****     *  the alarm date and time are returned.
 490:Generated_Source\PSoC4/RTC.c ****     *
 491:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 492:Generated_Source\PSoC4/RTC.c ****     void RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate)
 493:Generated_Source\PSoC4/RTC.c ****     {
 494:Generated_Source\PSoC4/RTC.c ****         *alarmTimeDate = RTC_alarmCfgTimeDate;
 495:Generated_Source\PSoC4/RTC.c ****     }
 496:Generated_Source\PSoC4/RTC.c **** 
 497:Generated_Source\PSoC4/RTC.c **** 
 498:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 499:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmMask
 500:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 501:Generated_Source\PSoC4/RTC.c ****     *
 502:Generated_Source\PSoC4/RTC.c ****     * \brief
 503:Generated_Source\PSoC4/RTC.c ****     *  Writes the Alarm Mask software register with one bit per time/date entry.
 504:Generated_Source\PSoC4/RTC.c ****     *  The alarm is true when all masked time/date values match the Alarm values.
 505:Generated_Source\PSoC4/RTC.c ****     *  Generated only if the alarm functionality is enabled.
 506:Generated_Source\PSoC4/RTC.c ****     *
 507:Generated_Source\PSoC4/RTC.c ****     * \param
 508:Generated_Source\PSoC4/RTC.c ****     *  mask The Alarm Mask software register value. The values shown below can be
 509:Generated_Source\PSoC4/RTC.c ****     *  OR'ed and passed as an argument as well.
 510:Generated_Source\PSoC4/RTC.c ****     * \param
 511:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_SEC_MASK The second alarm mask allows
 512:Generated_Source\PSoC4/RTC.c ****     *  matching the alarm second register with the current second register.
 513:Generated_Source\PSoC4/RTC.c ****     * \param
 514:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_MIN_MASK The minute alarm mask allows matching the
 515:Generated_Source\PSoC4/RTC.c ****     *  alarm minute register with the current minute register.
 516:Generated_Source\PSoC4/RTC.c ****     * \param
 517:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_HOUR_MASK The hour alarm mask allows
 518:Generated_Source\PSoC4/RTC.c ****     * matching the alarm hour register with the current hour register.
 519:Generated_Source\PSoC4/RTC.c ****     * \param
 520:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_DAYOFWEEK_MASK The day of the week alarm mask 
 521:Generated_Source\PSoC4/RTC.c ****     * allows matching the alarm day of the week register with the current day of
 522:Generated_Source\PSoC4/RTC.c ****     * the week register.
 523:Generated_Source\PSoC4/RTC.c ****     * \param
 524:Generated_Source\PSoC4/RTC.c ****     * RTC_ALARM_DAYOFMONTH_MASK The day of the month alarm mask
 525:Generated_Source\PSoC4/RTC.c ****     * allows matching the alarm day of the month register with the current day 
 526:Generated_Source\PSoC4/RTC.c ****     * of the month register.
 527:Generated_Source\PSoC4/RTC.c ****     * \param
 528:Generated_Source\PSoC4/RTC.c ****     * RTC_ALARM_MONTH_MASK The month alarm mask allows matching 
 529:Generated_Source\PSoC4/RTC.c ****     * the alarm month register with the current month register.
 530:Generated_Source\PSoC4/RTC.c ****     * \param
 531:Generated_Source\PSoC4/RTC.c ****     * RTC_ALARM_YEAR_MASK The year alarm mask allows matching the
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 58


 532:Generated_Source\PSoC4/RTC.c ****     *  alarm year register with the current year register.
 533:Generated_Source\PSoC4/RTC.c ****     *
 534:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 535:Generated_Source\PSoC4/RTC.c ****     void RTC_SetAlarmMask(uint32 mask)
 536:Generated_Source\PSoC4/RTC.c ****     {
 537:Generated_Source\PSoC4/RTC.c ****         RTC_alarmCfgMask = (uint8)mask;
 538:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = RTC_ConstructUnixAlarmTime(&RTC_alarmCfgTimeDate, (uint8)mask);
 539:Generated_Source\PSoC4/RTC.c ****     }
 540:Generated_Source\PSoC4/RTC.c **** 
 541:Generated_Source\PSoC4/RTC.c **** 
 542:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 543:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmMask
 544:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 545:Generated_Source\PSoC4/RTC.c ****     *
 546:Generated_Source\PSoC4/RTC.c ****     * \brief
 547:Generated_Source\PSoC4/RTC.c ****     *  Reads the Alarm Mask software register. Generated only if the alarm 
 548:Generated_Source\PSoC4/RTC.c ****     * functionality is enabled.
 549:Generated_Source\PSoC4/RTC.c ****     *
 550:Generated_Source\PSoC4/RTC.c ****     * \return
 551:Generated_Source\PSoC4/RTC.c ****     *  The Alarm Mask value with each bit representing the status of the alarm 
 552:Generated_Source\PSoC4/RTC.c ****     * time/date match enable.
 553:Generated_Source\PSoC4/RTC.c ****     *
 554:Generated_Source\PSoC4/RTC.c ****     * \return
 555:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_SEC_MASK - The second alarm mask allows matching the
 556:Generated_Source\PSoC4/RTC.c ****     * alarm second register with the current second register.
 557:Generated_Source\PSoC4/RTC.c ****     *
 558:Generated_Source\PSoC4/RTC.c ****     * \return
 559:Generated_Source\PSoC4/RTC.c ****     * RTC_ALARM_MIN_MASK - The minute alarm mask allows matching the 
 560:Generated_Source\PSoC4/RTC.c ****     * alarm minute register with the current minute register.
 561:Generated_Source\PSoC4/RTC.c ****     *
 562:Generated_Source\PSoC4/RTC.c ****     * \return
 563:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_HOUR_MASK - The hour alarm mask allows matching the 
 564:Generated_Source\PSoC4/RTC.c ****     * alarm hour register with the current hour register.
 565:Generated_Source\PSoC4/RTC.c ****     *
 566:Generated_Source\PSoC4/RTC.c ****     * \return
 567:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_DAYOFWEEK_MASK - The day of the week alarm mask allows
 568:Generated_Source\PSoC4/RTC.c ****     * matching the alarm day of the week register with the current day of the 
 569:Generated_Source\PSoC4/RTC.c ****     * week register.
 570:Generated_Source\PSoC4/RTC.c ****     *
 571:Generated_Source\PSoC4/RTC.c ****     * \return
 572:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_DAYOFMONTH_MASK - The day of the month alarm mask 
 573:Generated_Source\PSoC4/RTC.c ****     * allows matching the alarm day of the month register with the current day of 
 574:Generated_Source\PSoC4/RTC.c ****     * the month register.
 575:Generated_Source\PSoC4/RTC.c ****     *
 576:Generated_Source\PSoC4/RTC.c ****     * \return
 577:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_MONTH_MASK - The month alarm mask allows matching 
 578:Generated_Source\PSoC4/RTC.c ****     * the alarm month register with the current month register.
 579:Generated_Source\PSoC4/RTC.c ****     *
 580:Generated_Source\PSoC4/RTC.c ****     * \return
 581:Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_YEAR_MASK - The year alarm mask allows matching the
 582:Generated_Source\PSoC4/RTC.c ****     * alarm year register with the current year register.
 583:Generated_Source\PSoC4/RTC.c ****     *
 584:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 585:Generated_Source\PSoC4/RTC.c ****     uint32 RTC_GetAlarmMask(void)
 586:Generated_Source\PSoC4/RTC.c ****     {
 587:Generated_Source\PSoC4/RTC.c ****         return((uint32)RTC_alarmCfgMask);
 588:Generated_Source\PSoC4/RTC.c ****     }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 59


 589:Generated_Source\PSoC4/RTC.c **** 
 590:Generated_Source\PSoC4/RTC.c **** 
 591:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 592:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmStatus
 593:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 594:Generated_Source\PSoC4/RTC.c ****     *
 595:Generated_Source\PSoC4/RTC.c ****     * \brief
 596:Generated_Source\PSoC4/RTC.c ****     *  Returns the alarm status of RTC.
 597:Generated_Source\PSoC4/RTC.c ****     *
 598:Generated_Source\PSoC4/RTC.c ****     * \return
 599:Generated_Source\PSoC4/RTC.c ****     *  The Alarm active status. This bit is high when the current time and date match the alarm
 600:Generated_Source\PSoC4/RTC.c ****     *  time and date.
 601:Generated_Source\PSoC4/RTC.c ****     *
 602:Generated_Source\PSoC4/RTC.c ****     * \return
 603:Generated_Source\PSoC4/RTC.c ****     *  0 - The Alarm status is not active.
 604:Generated_Source\PSoC4/RTC.c ****     * \return
 605:Generated_Source\PSoC4/RTC.c ****     *  1 - The Alarm status is active.
 606:Generated_Source\PSoC4/RTC.c ****     *
 607:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 608:Generated_Source\PSoC4/RTC.c ****     uint32 RTC_GetAlarmStatus(void)
 609:Generated_Source\PSoC4/RTC.c ****     {
 610:Generated_Source\PSoC4/RTC.c ****         return((0uL != (RTC_currentTimeDate.status & (1uL << RTC_STATUS_ALARM_OFFSET))) ? 1uL : 0uL
 611:Generated_Source\PSoC4/RTC.c ****     }
 612:Generated_Source\PSoC4/RTC.c **** 
 613:Generated_Source\PSoC4/RTC.c **** 
 614:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 615:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_ClearAlarmStatus
 616:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 617:Generated_Source\PSoC4/RTC.c ****     *
 618:Generated_Source\PSoC4/RTC.c ****     * \brief
 619:Generated_Source\PSoC4/RTC.c ****     *  Clears the alarm status of RTC.
 620:Generated_Source\PSoC4/RTC.c ****     *
 621:Generated_Source\PSoC4/RTC.c ****     * \note
 622:Generated_Source\PSoC4/RTC.c ****     * The Alarm active (AA) flag clears after read. This bit will be set in the next
 623:Generated_Source\PSoC4/RTC.c ****     * alarm match event only. If Alarm is set on only minutes and the alarm
 624:Generated_Source\PSoC4/RTC.c ****     * minutes is 20 minutes - the alarm triggers once every 20th minute of
 625:Generated_Source\PSoC4/RTC.c ****     * every hour.
 626:Generated_Source\PSoC4/RTC.c ****     *
 627:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 628:Generated_Source\PSoC4/RTC.c ****     void RTC_ClearAlarmStatus(void)
 629:Generated_Source\PSoC4/RTC.c ****     {
 630:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= (~(1uL << RTC_STATUS_ALARM_OFFSET));
 631:Generated_Source\PSoC4/RTC.c ****         RTC_alarmCurStatus = 0u;
 632:Generated_Source\PSoC4/RTC.c ****     }
 633:Generated_Source\PSoC4/RTC.c **** 
 634:Generated_Source\PSoC4/RTC.c **** 
 635:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 636:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmHandler
 637:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 638:Generated_Source\PSoC4/RTC.c ****     *
 639:Generated_Source\PSoC4/RTC.c ****     * \brief
 640:Generated_Source\PSoC4/RTC.c ****     *  This API sets the function to be called when the alarm goes off / triggers.
 641:Generated_Source\PSoC4/RTC.c ****     *  This API is generated only if the alarm functionality is enabled in the
 642:Generated_Source\PSoC4/RTC.c ****     *  customizer.
 643:Generated_Source\PSoC4/RTC.c ****     *
 644:Generated_Source\PSoC4/RTC.c ****     * \param
 645:Generated_Source\PSoC4/RTC.c ****     *  CallbackFunction The callback function address.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 60


 646:Generated_Source\PSoC4/RTC.c ****     *
 647:Generated_Source\PSoC4/RTC.c ****     * \return
 648:Generated_Source\PSoC4/RTC.c ****     *  A previous callback function address.
 649:Generated_Source\PSoC4/RTC.c ****     *
 650:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 651:Generated_Source\PSoC4/RTC.c ****     void* RTC_SetAlarmHandler(void (*CallbackFunction)(void))
 652:Generated_Source\PSoC4/RTC.c ****     {
 653:Generated_Source\PSoC4/RTC.c ****         void (*tmpCallbackPtr)(void);
 654:Generated_Source\PSoC4/RTC.c **** 
 655:Generated_Source\PSoC4/RTC.c ****         tmpCallbackPtr = RTC_alarmCallbackPtr;
 656:Generated_Source\PSoC4/RTC.c ****         RTC_alarmCallbackPtr = CallbackFunction;
 657:Generated_Source\PSoC4/RTC.c **** 
 658:Generated_Source\PSoC4/RTC.c ****         return((void*)tmpCallbackPtr);
 659:Generated_Source\PSoC4/RTC.c ****     }
 660:Generated_Source\PSoC4/RTC.c **** 
 661:Generated_Source\PSoC4/RTC.c **** 
 662:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 663:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetNexAlarmTime
 664:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 665:Generated_Source\PSoC4/RTC.c ****     *
 666:Generated_Source\PSoC4/RTC.c ****     * \brief
 667:Generated_Source\PSoC4/RTC.c ****     *  This is an internal function that calculates the time of the next alarm
 668:Generated_Source\PSoC4/RTC.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 669:Generated_Source\PSoC4/RTC.c ****     *
 670:Generated_Source\PSoC4/RTC.c ****     * \param
 671:Generated_Source\PSoC4/RTC.c ****     *  curUnixTime The current time value in the UNIX format.
 672:Generated_Source\PSoC4/RTC.c ****     *
 673:Generated_Source\PSoC4/RTC.c ****     * \param
 674:Generated_Source\PSoC4/RTC.c ****     *  alarmCfgMask The current Alarm Config Mask.
 675:Generated_Source\PSoC4/RTC.c ****     *
 676:Generated_Source\PSoC4/RTC.c ****     * \return Returns time of the next alarm in the UNIX format.
 677:Generated_Source\PSoC4/RTC.c ****     *
 678:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 679:Generated_Source\PSoC4/RTC.c ****     uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask)
 680:Generated_Source\PSoC4/RTC.c ****     {
 681:Generated_Source\PSoC4/RTC.c ****         uint32 prevVal;
 682:Generated_Source\PSoC4/RTC.c ****         uint32 nextVal;
 683:Generated_Source\PSoC4/RTC.c ****         uint32 carryFlag;
 684:Generated_Source\PSoC4/RTC.c ****         uint32 daysInMonth;
 685:Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME curDateTime;
 686:Generated_Source\PSoC4/RTC.c **** 
 687:Generated_Source\PSoC4/RTC.c ****         carryFlag = 1u;
 688:Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&curDateTime, curUnixTime, (uint32)RTC_24_HOURS_FORMAT);
 689:Generated_Source\PSoC4/RTC.c **** 
 690:Generated_Source\PSoC4/RTC.c ****         /* Calculates Second value of next alarm time based on current time and Alarm Config Mask. 
 691:Generated_Source\PSoC4/RTC.c ****         if(0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_SEC_MASK))
 692:Generated_Source\PSoC4/RTC.c ****         {
 693:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetSecond(curDateTime.time);
 694:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMinSec(prevVal);
 695:Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetSecond(curDateTime.time, nextVal);
 696:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 697:Generated_Source\PSoC4/RTC.c ****         }
 698:Generated_Source\PSoC4/RTC.c **** 
 699:Generated_Source\PSoC4/RTC.c ****         /* Calculates Minute value of next alarm time based on current time and Alarm Config Mask. 
 700:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MIN_MASK)))
 701:Generated_Source\PSoC4/RTC.c ****         {
 702:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetMinutes(curDateTime.time);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 61


 703:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMinSec(prevVal);
 704:Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetMinutes(curDateTime.time, nextVal);
 705:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 706:Generated_Source\PSoC4/RTC.c ****         }
 707:Generated_Source\PSoC4/RTC.c **** 
 708:Generated_Source\PSoC4/RTC.c ****         /* Calculates Hour value of next alarm time based on current time and Alarm Config Mask. */
 709:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_HOUR_MASK)))
 710:Generated_Source\PSoC4/RTC.c ****         {
 711:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetHours(curDateTime.time);
 712:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextHour(prevVal);
 713:Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetHours(curDateTime.time, nextVal);
 714:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 715:Generated_Source\PSoC4/RTC.c ****         }
 716:Generated_Source\PSoC4/RTC.c **** 
 717:Generated_Source\PSoC4/RTC.c ****         /* Calculates Day value of next alarm time based on current time and Alarm Config Mask. */
 718:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_DAYOFMONTH_MASK)))
 719:Generated_Source\PSoC4/RTC.c ****         {
 720:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetDay(curDateTime.date);
 721:Generated_Source\PSoC4/RTC.c ****             if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
 722:Generated_Source\PSoC4/RTC.c ****             {
 723:Generated_Source\PSoC4/RTC.c ****                 daysInMonth = RTC_DaysInMonth(RTC_GetMonth(curDateTime.date),
 724:Generated_Source\PSoC4/RTC.c ****                                                            RTC_GetYear(curDateTime.date));
 725:Generated_Source\PSoC4/RTC.c ****                 nextVal = prevVal + RTC_DAYS_PER_WEEK;
 726:Generated_Source\PSoC4/RTC.c ****                 nextVal = (nextVal > daysInMonth) ? (nextVal - daysInMonth) : nextVal;
 727:Generated_Source\PSoC4/RTC.c ****             }
 728:Generated_Source\PSoC4/RTC.c ****             else
 729:Generated_Source\PSoC4/RTC.c ****             {
 730:Generated_Source\PSoC4/RTC.c ****                 nextVal = RTC_GetNextDay(RTC_GetYear(curDateTime.date),
 731:Generated_Source\PSoC4/RTC.c ****                                                       RTC_GetMonth(curDateTime.date),
 732:Generated_Source\PSoC4/RTC.c ****                                                       RTC_GetDay(curDateTime.date),
 733:Generated_Source\PSoC4/RTC.c ****                                                       (~((uint32)alarmCfgMask)));
 734:Generated_Source\PSoC4/RTC.c ****             }
 735:Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetDay(curDateTime.date, nextVal);
 736:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 737:Generated_Source\PSoC4/RTC.c ****         }
 738:Generated_Source\PSoC4/RTC.c **** 
 739:Generated_Source\PSoC4/RTC.c ****         /* Calculates Month value of next alarm time based on current time and Alarm Config Mask. *
 740:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK)))
 741:Generated_Source\PSoC4/RTC.c ****         {
 742:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetMonth(curDateTime.date);
 743:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMonth(prevVal);
 744:Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetMonth(curDateTime.date, nextVal);
 745:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 746:Generated_Source\PSoC4/RTC.c ****         }
 747:Generated_Source\PSoC4/RTC.c **** 
 748:Generated_Source\PSoC4/RTC.c ****         /* Calculates Year value of next alarm time based on current time and Alarm Config Mask. */
 749:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_YEAR_MASK)))
 750:Generated_Source\PSoC4/RTC.c ****         {
 751:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetYear(curDateTime.date);
 752:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextYear(prevVal);
 753:Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetYear(curDateTime.date, nextVal);
 754:Generated_Source\PSoC4/RTC.c ****         }
 755:Generated_Source\PSoC4/RTC.c **** 
 756:Generated_Source\PSoC4/RTC.c ****         return(RTC_DateTimeToUnix(curDateTime.date, curDateTime.time));
 757:Generated_Source\PSoC4/RTC.c ****     }
 758:Generated_Source\PSoC4/RTC.c **** 
 759:Generated_Source\PSoC4/RTC.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 62


 760:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 761:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_ConstructUnixAlarmTime
 762:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 763:Generated_Source\PSoC4/RTC.c ****     *
 764:Generated_Source\PSoC4/RTC.c ****     * \brief
 765:Generated_Source\PSoC4/RTC.c ****     *  This is an internal function that calculates the time of the first alarm
 766:Generated_Source\PSoC4/RTC.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 767:Generated_Source\PSoC4/RTC.c ****     *
 768:Generated_Source\PSoC4/RTC.c ****     * \param
 769:Generated_Source\PSoC4/RTC.c ****     *  alarmTime Desired alarm time in the regular time format.
 770:Generated_Source\PSoC4/RTC.c ****     *
 771:Generated_Source\PSoC4/RTC.c ****     * \param
 772:Generated_Source\PSoC4/RTC.c ****     *  alarmCfgMask The current Alarm Config Mask.
 773:Generated_Source\PSoC4/RTC.c ****     *
 774:Generated_Source\PSoC4/RTC.c ****     * \return
 775:Generated_Source\PSoC4/RTC.c ****     *  time of the first alarm in the UNIX format.
 776:Generated_Source\PSoC4/RTC.c ****     *
 777:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 778:Generated_Source\PSoC4/RTC.c ****     uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask)
 779:Generated_Source\PSoC4/RTC.c ****     {
 780:Generated_Source\PSoC4/RTC.c ****         uint32 tmpCurVal;
 781:Generated_Source\PSoC4/RTC.c ****         uint32 tmpNextVal;
 782:Generated_Source\PSoC4/RTC.c ****         uint32 carryFlag;
 783:Generated_Source\PSoC4/RTC.c ****         uint32 tmpAlarmDate;
 784:Generated_Source\PSoC4/RTC.c ****         uint32 tmpAlarmTime;
 785:Generated_Source\PSoC4/RTC.c ****         uint32 daysInMonth;
 786:Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME curDateTime;
 787:Generated_Source\PSoC4/RTC.c **** 
 788:Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate = 0u;
 789:Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime = 0u;
 790:Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&curDateTime, RTC_unixTime, (uint32)RTC_24_HOURS_FORMAT);
 791:Generated_Source\PSoC4/RTC.c **** 
 792:Generated_Source\PSoC4/RTC.c ****         /* Calculates Seconds value of first Alarm based on current time and Alarm Config Mask. */
 793:Generated_Source\PSoC4/RTC.c ****         tmpCurVal =  RTC_GetSecond(curDateTime.time);
 794:Generated_Source\PSoC4/RTC.c ****         tmpNextVal = RTC_GetSecond(alarmTime->time);
 795:Generated_Source\PSoC4/RTC.c ****         carryFlag = (tmpCurVal > tmpNextVal) ? 1u : 0u;
 796:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_SEC_MASK))
 797:Generated_Source\PSoC4/RTC.c ****         {
 798:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? 0u : tmpCurVal;
 799:Generated_Source\PSoC4/RTC.c ****         }
 800:Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime = RTC_SetSecond(tmpAlarmTime, tmpNextVal);
 801:Generated_Source\PSoC4/RTC.c **** 
 802:Generated_Source\PSoC4/RTC.c ****         /* Calculates Minutes value of first Alarm based on current time and Alarm Config Mask. */
 803:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetMinutes(curDateTime.time);
 804:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MIN_MASK))
 805:Generated_Source\PSoC4/RTC.c ****         {
 806:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextMinSec(tmpCurVal) : tmpCurVal;
 807:Generated_Source\PSoC4/RTC.c ****         }
 808:Generated_Source\PSoC4/RTC.c ****         else
 809:Generated_Source\PSoC4/RTC.c ****         {
 810:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetMinutes(alarmTime->time);
 811:Generated_Source\PSoC4/RTC.c ****         }
 812:Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 813:Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime =  RTC_SetMinutes(tmpAlarmTime, tmpNextVal);
 814:Generated_Source\PSoC4/RTC.c **** 
 815:Generated_Source\PSoC4/RTC.c ****         /* Calculates Hours value of first Alarm based on current time and Alarm Config Mask. */
 816:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetHours(curDateTime.time);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 63


 817:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_HOUR_MASK))
 818:Generated_Source\PSoC4/RTC.c ****         {
 819:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextHour(tmpCurVal) : tmpCurVal;
 820:Generated_Source\PSoC4/RTC.c ****         }
 821:Generated_Source\PSoC4/RTC.c ****         else
 822:Generated_Source\PSoC4/RTC.c ****         {
 823:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetHours(alarmTime->time);
 824:Generated_Source\PSoC4/RTC.c ****             if((uint32)RTC_24_HOURS_FORMAT != RTC_GetTimeFormat(alarmTime->time))
 825:Generated_Source\PSoC4/RTC.c ****             {
 826:Generated_Source\PSoC4/RTC.c ****                 if((uint32)RTC_AM != RTC_GetAmPm(alarmTime->time))
 827:Generated_Source\PSoC4/RTC.c ****                 {
 828:Generated_Source\PSoC4/RTC.c ****                     tmpNextVal += RTC_HOURS_PER_HALF_DAY;
 829:Generated_Source\PSoC4/RTC.c ****                 }
 830:Generated_Source\PSoC4/RTC.c ****             }
 831:Generated_Source\PSoC4/RTC.c ****         }
 832:Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 833:Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime =  RTC_SetHours(tmpAlarmTime, tmpNextVal);
 834:Generated_Source\PSoC4/RTC.c **** 
 835:Generated_Source\PSoC4/RTC.c ****         /* Calculates Day value of first Alarm based on current time and Alarm Config Mask. */
 836:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetDay(curDateTime.date);
 837:Generated_Source\PSoC4/RTC.c ****         tmpNextVal = RTC_GetDay(alarmTime->date);
 838:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_DAYOFMONTH_MASK))
 839:Generated_Source\PSoC4/RTC.c ****         {
 840:Generated_Source\PSoC4/RTC.c ****             if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
 841:Generated_Source\PSoC4/RTC.c ****             {
 842:Generated_Source\PSoC4/RTC.c ****                 daysInMonth = RTC_DaysInMonth(RTC_GetMonth(curDateTime.date),
 843:Generated_Source\PSoC4/RTC.c ****                                                            RTC_GetYear(curDateTime.date));
 844:Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = (curDateTime.dayOfWeek <= alarmTime->dayOfWeek) ? (alarmTime->dayOfWee
 845:Generated_Source\PSoC4/RTC.c ****                                 ((RTC_DAYS_PER_WEEK - curDateTime.dayOfWeek) + alarmTime->dayOfWeek
 846:Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = tmpCurVal + tmpNextVal;
 847:Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = (tmpNextVal > daysInMonth) ? (tmpNextVal - daysInMonth) : tmpNextVal;
 848:Generated_Source\PSoC4/RTC.c ****             }
 849:Generated_Source\PSoC4/RTC.c ****             else
 850:Generated_Source\PSoC4/RTC.c ****             {
 851:Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = (0u == carryFlag) ? tmpCurVal : RTC_GetNextDay(RTC_GetYear(curDateTime
 852:Generated_Source\PSoC4/RTC.c ****                                                               RTC_GetMonth(curDateTime.date),
 853:Generated_Source\PSoC4/RTC.c ****                                                                tmpCurVal,
 854:Generated_Source\PSoC4/RTC.c ****                                                               RTC_ALARM_DAYOFMONTH_MASK);
 855:Generated_Source\PSoC4/RTC.c ****             }
 856:Generated_Source\PSoC4/RTC.c ****         }
 857:Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 858:Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetDay(tmpAlarmDate, tmpNextVal);
 859:Generated_Source\PSoC4/RTC.c **** 
 860:Generated_Source\PSoC4/RTC.c ****         /* Calculates Month value of first Alarm based on current time and Alarm Config Mask. */
 861:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetMonth(curDateTime.date);
 862:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK))
 863:Generated_Source\PSoC4/RTC.c ****         {
 864:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextMonth(tmpCurVal) : tmpCurVal;
 865:Generated_Source\PSoC4/RTC.c ****         }
 866:Generated_Source\PSoC4/RTC.c ****         else
 867:Generated_Source\PSoC4/RTC.c ****         {
 868:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetMonth(alarmTime->date);
 869:Generated_Source\PSoC4/RTC.c ****         }
 870:Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 871:Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetMonth(tmpAlarmDate, tmpNextVal);
 872:Generated_Source\PSoC4/RTC.c **** 
 873:Generated_Source\PSoC4/RTC.c ****         /* Calculates Year value of first Alarm based on current time and Alarm Config Mask. */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 64


 874:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetYear(curDateTime.date);
 875:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK))
 876:Generated_Source\PSoC4/RTC.c ****         {
 877:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextYear(tmpCurVal) : tmpCurVal;
 878:Generated_Source\PSoC4/RTC.c ****         }
 879:Generated_Source\PSoC4/RTC.c ****         else
 880:Generated_Source\PSoC4/RTC.c ****         {
 881:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetYear(alarmTime->date);
 882:Generated_Source\PSoC4/RTC.c ****         }
 883:Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetYear(tmpAlarmDate, tmpNextVal);
 884:Generated_Source\PSoC4/RTC.c **** 
 885:Generated_Source\PSoC4/RTC.c ****         return(RTC_DateTimeToUnix(tmpAlarmDate, tmpAlarmTime));
 886:Generated_Source\PSoC4/RTC.c ****     }
 887:Generated_Source\PSoC4/RTC.c **** #endif/* (0u != RTC_INITIAL_ALARM_STATUS) */
 888:Generated_Source\PSoC4/RTC.c **** 
 889:Generated_Source\PSoC4/RTC.c **** 
 890:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 891:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ReadStatus
 892:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 893:Generated_Source\PSoC4/RTC.c **** *
 894:Generated_Source\PSoC4/RTC.c **** * \brief
 895:Generated_Source\PSoC4/RTC.c **** * Reads the Status software register, which has flags for DST (DST),
 896:Generated_Source\PSoC4/RTC.c **** * Leap Year (LY), AM/PM (AM_PM).
 897:Generated_Source\PSoC4/RTC.c **** *
 898:Generated_Source\PSoC4/RTC.c **** * \return
 899:Generated_Source\PSoC4/RTC.c **** * The values shown below are OR'ed and returned if more than one status
 900:Generated_Source\PSoC4/RTC.c **** * bits are set.
 901:Generated_Source\PSoC4/RTC.c **** *
 902:Generated_Source\PSoC4/RTC.c **** * \return
 903:Generated_Source\PSoC4/RTC.c **** * RTC_STATUS_DST - Status of Daylight Saving Time. This bit
 904:Generated_Source\PSoC4/RTC.c **** * goes high when the current time and date match the DST time and date and the 
 905:Generated_Source\PSoC4/RTC.c **** * time is incremented. This bit goes low after the DST interval and the time is 
 906:Generated_Source\PSoC4/RTC.c **** * decremented.
 907:Generated_Source\PSoC4/RTC.c **** *
 908:Generated_Source\PSoC4/RTC.c **** * \return
 909:Generated_Source\PSoC4/RTC.c **** * RTC_STATUS_LY - Status of Leap Year. This bit goes high when the 
 910:Generated_Source\PSoC4/RTC.c **** * current year is a leap year.
 911:Generated_Source\PSoC4/RTC.c **** *
 912:Generated_Source\PSoC4/RTC.c **** * \return
 913:Generated_Source\PSoC4/RTC.c **** * RTC_STATUS_AM_PM - Status of Current Time. This bit is low from 
 914:Generated_Source\PSoC4/RTC.c **** * midnight to noon and high from noon to midnight.
 915:Generated_Source\PSoC4/RTC.c **** *
 916:Generated_Source\PSoC4/RTC.c **** * \note
 917:Generated_Source\PSoC4/RTC.c **** * Reading the status without sync with the date and time read may cause an
 918:Generated_Source\PSoC4/RTC.c **** * error due to a roll-over at AM/PM, the end of a year, the end of a day;
 919:Generated_Source\PSoC4/RTC.c **** * RTC_GetDateAndTime() API is used to obtain the status and
 920:Generated_Source\PSoC4/RTC.c **** * the status member of the returned structure can be checked with the masks.
 921:Generated_Source\PSoC4/RTC.c **** *
 922:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 923:Generated_Source\PSoC4/RTC.c **** uint32 RTC_ReadStatus(void)
 924:Generated_Source\PSoC4/RTC.c **** {
 1505              		.loc 2 924 0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 24
 1508              		@ frame_needed = 1, uses_anonymous_args = 0
 1509 0000 80B5     		push	{r7, lr}
 1510              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 65


 1511              		.cfi_offset 7, -8
 1512              		.cfi_offset 14, -4
 1513 0002 86B0     		sub	sp, sp, #24
 1514              		.cfi_def_cfa_offset 32
 1515 0004 00AF     		add	r7, sp, #0
 1516              		.cfi_def_cfa_register 7
 925:Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
 926:Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME tmpTimeDate;
 927:Generated_Source\PSoC4/RTC.c **** 
 928:Generated_Source\PSoC4/RTC.c ****     RTC_GetDateAndTime(&tmpTimeDate);
 1517              		.loc 2 928 0
 1518 0006 3B1D     		adds	r3, r7, #4
 1519 0008 1800     		movs	r0, r3
 1520 000a FFF7FEFF 		bl	RTC_GetDateAndTime
 929:Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_GetYear(tmpTimeDate.date);
 1521              		.loc 2 929 0
 1522 000e 3B1D     		adds	r3, r7, #4
 1523 0010 5B68     		ldr	r3, [r3, #4]
 1524 0012 1800     		movs	r0, r3
 1525 0014 FFF7FEFF 		bl	RTC_GetYear
 1526 0018 0300     		movs	r3, r0
 1527 001a 7B61     		str	r3, [r7, #20]
 930:Generated_Source\PSoC4/RTC.c **** 
 931:Generated_Source\PSoC4/RTC.c ****     if(0uL != RTC_LeapYear(tmpYear))
 1528              		.loc 2 931 0
 1529 001c 7B69     		ldr	r3, [r7, #20]
 1530 001e 1800     		movs	r0, r3
 1531 0020 FFF7FEFF 		bl	RTC_LeapYear
 1532 0024 031E     		subs	r3, r0, #0
 1533 0026 06D0     		beq	.L79
 932:Generated_Source\PSoC4/RTC.c ****     {
 933:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status |= (1uL << RTC_STATUS_LY_OFFSET);
 1534              		.loc 2 933 0
 1535 0028 144B     		ldr	r3, .L84
 1536 002a DB68     		ldr	r3, [r3, #12]
 1537 002c 0822     		movs	r2, #8
 1538 002e 1A43     		orrs	r2, r3
 1539 0030 124B     		ldr	r3, .L84
 1540 0032 DA60     		str	r2, [r3, #12]
 1541 0034 06E0     		b	.L80
 1542              	.L79:
 934:Generated_Source\PSoC4/RTC.c ****     }
 935:Generated_Source\PSoC4/RTC.c ****     else
 936:Generated_Source\PSoC4/RTC.c ****     {
 937:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= ~(1uL << RTC_STATUS_LY_OFFSET);
 1543              		.loc 2 937 0
 1544 0036 114B     		ldr	r3, .L84
 1545 0038 DB68     		ldr	r3, [r3, #12]
 1546 003a 0822     		movs	r2, #8
 1547 003c 9343     		bics	r3, r2
 1548 003e 1A00     		movs	r2, r3
 1549 0040 0E4B     		ldr	r3, .L84
 1550 0042 DA60     		str	r2, [r3, #12]
 1551              	.L80:
 938:Generated_Source\PSoC4/RTC.c ****     }
 939:Generated_Source\PSoC4/RTC.c **** 
 940:Generated_Source\PSoC4/RTC.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 66


 941:Generated_Source\PSoC4/RTC.c ****     if(0uL != RTC_GetAmPm(tmpTimeDate.time))
 1552              		.loc 2 941 0
 1553 0044 3B1D     		adds	r3, r7, #4
 1554 0046 1B68     		ldr	r3, [r3]
 1555 0048 1800     		movs	r0, r3
 1556 004a FFF7FEFF 		bl	RTC_GetAmPm
 1557 004e 031E     		subs	r3, r0, #0
 1558 0050 06D0     		beq	.L81
 942:Generated_Source\PSoC4/RTC.c ****     {
 943:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status |= (1uL << RTC_STATUS_AM_PM_OFFSET);
 1559              		.loc 2 943 0
 1560 0052 0A4B     		ldr	r3, .L84
 1561 0054 DB68     		ldr	r3, [r3, #12]
 1562 0056 1022     		movs	r2, #16
 1563 0058 1A43     		orrs	r2, r3
 1564 005a 084B     		ldr	r3, .L84
 1565 005c DA60     		str	r2, [r3, #12]
 1566 005e 06E0     		b	.L82
 1567              	.L81:
 944:Generated_Source\PSoC4/RTC.c ****     }
 945:Generated_Source\PSoC4/RTC.c ****     else
 946:Generated_Source\PSoC4/RTC.c ****     {
 947:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= ~(1uL << RTC_STATUS_AM_PM_OFFSET);
 1568              		.loc 2 947 0
 1569 0060 064B     		ldr	r3, .L84
 1570 0062 DB68     		ldr	r3, [r3, #12]
 1571 0064 1022     		movs	r2, #16
 1572 0066 9343     		bics	r3, r2
 1573 0068 1A00     		movs	r2, r3
 1574 006a 044B     		ldr	r3, .L84
 1575 006c DA60     		str	r2, [r3, #12]
 1576              	.L82:
 948:Generated_Source\PSoC4/RTC.c ****     }
 949:Generated_Source\PSoC4/RTC.c **** 
 950:Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.status);
 1577              		.loc 2 950 0
 1578 006e 034B     		ldr	r3, .L84
 1579 0070 DB68     		ldr	r3, [r3, #12]
 951:Generated_Source\PSoC4/RTC.c **** }
 1580              		.loc 2 951 0
 1581 0072 1800     		movs	r0, r3
 1582 0074 BD46     		mov	sp, r7
 1583 0076 06B0     		add	sp, sp, #24
 1584              		@ sp needed
 1585 0078 80BD     		pop	{r7, pc}
 1586              	.L85:
 1587 007a C046     		.align	2
 1588              	.L84:
 1589 007c 00000000 		.word	RTC_currentTimeDate
 1590              		.cfi_endproc
 1591              	.LFE40:
 1592              		.size	RTC_ReadStatus, .-RTC_ReadStatus
 1593              		.section	.text.RTC_ConvertBCDToDec,"ax",%progbits
 1594              		.align	2
 1595              		.global	RTC_ConvertBCDToDec
 1596              		.code	16
 1597              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 67


 1598              		.type	RTC_ConvertBCDToDec, %function
 1599              	RTC_ConvertBCDToDec:
 1600              	.LFB41:
 952:Generated_Source\PSoC4/RTC.c **** 
 953:Generated_Source\PSoC4/RTC.c **** 
 954:Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_DST_STATUS)
 955:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetDSTStartTime
 957:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/RTC.c ****     *
 959:Generated_Source\PSoC4/RTC.c ****     * \brief
 960:Generated_Source\PSoC4/RTC.c ****     *  Stores the DST Start time.
 961:Generated_Source\PSoC4/RTC.c ****     *
 962:Generated_Source\PSoC4/RTC.c ****     *  Only generated if DST is enabled. The date passed can be relative or fixed. 
 963:Generated_Source\PSoC4/RTC.c ****     *  For a relative date, the user needs to provide a valid day of a week, a 
 964:Generated_Source\PSoC4/RTC.c ****     *  week of a month and a month in the dstStartTime structure.
 965:Generated_Source\PSoC4/RTC.c ****     *  For a fixed date, the user needs to enter a valid day of a month and a month in
 966:Generated_Source\PSoC4/RTC.c ****     *  the dstStartTime structure. The hour value is optional and if invalid
 967:Generated_Source\PSoC4/RTC.c ****     *  taken as 00 hrs. Invalid entries are not stored and the DST start date
 968:Generated_Source\PSoC4/RTC.c ****     *  retains a previous value or no value at all.
 969:Generated_Source\PSoC4/RTC.c ****     *
 970:Generated_Source\PSoC4/RTC.c ****     * \param
 971:Generated_Source\PSoC4/RTC.c ****     *  dstStartTime The DST Start time register value.
 972:Generated_Source\PSoC4/RTC.c ****     *
 973:Generated_Source\PSoC4/RTC.c ****     * \param
 974:Generated_Source\PSoC4/RTC.c ****     *  type Defines the DST operation mode <br>
 975:Generated_Source\PSoC4/RTC.c ****     *  DST_DATE_RELATIVE - The DST start time is relative. <br>
 976:Generated_Source\PSoC4/RTC.c ****     *  DST_DATE_FIXED - The DST start time is fixed.
 977:Generated_Source\PSoC4/RTC.c ****     *
 978:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 979:Generated_Source\PSoC4/RTC.c ****     void RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 980:Generated_Source\PSoC4/RTC.c ****                                                 RTC_DST_DATETYPE_ENUM type)
 981:Generated_Source\PSoC4/RTC.c ****     {
 982:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.timeFormat    = (uint8)type;
 983:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.hour          = dstStartTime->hour;
 984:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.dayOfWeek     = dstStartTime->dayOfWeek;
 985:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.weekOfMonth   = dstStartTime->weekOfMonth;
 986:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.dayOfMonth    = dstStartTime->dayOfMonth;
 987:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.month         = dstStartTime->month;
 988:Generated_Source\PSoC4/RTC.c **** 
 989:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 990:Generated_Source\PSoC4/RTC.c **** 
 991:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 992:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 993:Generated_Source\PSoC4/RTC.c ****         {
 994:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 995:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 996:Generated_Source\PSoC4/RTC.c ****         }
 997:Generated_Source\PSoC4/RTC.c ****         else
 998:Generated_Source\PSoC4/RTC.c ****         {
 999:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
1000:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
1001:Generated_Source\PSoC4/RTC.c ****         }
1002:Generated_Source\PSoC4/RTC.c ****     }
1003:Generated_Source\PSoC4/RTC.c **** 
1004:Generated_Source\PSoC4/RTC.c **** 
1005:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 68


1006:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetDSTStopTime
1007:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
1008:Generated_Source\PSoC4/RTC.c ****     *
1009:Generated_Source\PSoC4/RTC.c ****     * \brief
1010:Generated_Source\PSoC4/RTC.c ****     *  Stores the DST Stop time.
1011:Generated_Source\PSoC4/RTC.c ****     * 
1012:Generated_Source\PSoC4/RTC.c ****     *  Only generated if DST is enabled. The date passed can be relative or fixed. 
1013:Generated_Source\PSoC4/RTC.c ****     *  For a relative date, the user needs to provide a valid day of a week, a week 
1014:Generated_Source\PSoC4/RTC.c ****     *  of a month and a month in the dstStopTime structure.
1015:Generated_Source\PSoC4/RTC.c ****     *  For a fixed date, the user needs to enter a valid day of a month and a month in the
1016:Generated_Source\PSoC4/RTC.c ****     *  dstSoptTime structure. The hour value is optional and if invalid taken
1017:Generated_Source\PSoC4/RTC.c ****     *  as 00 hrs. Invalid entries are not stored and the DST start date retains
1018:Generated_Source\PSoC4/RTC.c ****     *  a previous value or no value at all.
1019:Generated_Source\PSoC4/RTC.c ****     *
1020:Generated_Source\PSoC4/RTC.c ****     * \param
1021:Generated_Source\PSoC4/RTC.c ****     *  dstStopTime DST Stop time register values.
1022:Generated_Source\PSoC4/RTC.c ****     *
1023:Generated_Source\PSoC4/RTC.c ****     * \param
1024:Generated_Source\PSoC4/RTC.c ****     *  type Defines the DST operation mode <br>
1025:Generated_Source\PSoC4/RTC.c ****     *  DST_DATE_RELATIVE - The DST start time is relative. <br>
1026:Generated_Source\PSoC4/RTC.c ****     *  DST_DATE_FIXED - The DST start time is fixed.
1027:Generated_Source\PSoC4/RTC.c ****     *
1028:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/RTC.c ****     void RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
1030:Generated_Source\PSoC4/RTC.c ****                                                RTC_DST_DATETYPE_ENUM type)
1031:Generated_Source\PSoC4/RTC.c ****     {
1032:Generated_Source\PSoC4/RTC.c **** 
1033:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.timeFormat  = (uint8)type;
1034:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.hour           = dstStopTime->hour;
1035:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.dayOfWeek      = dstStopTime->dayOfWeek;
1036:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.weekOfMonth = dstStopTime->weekOfMonth;
1037:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.dayOfMonth     = dstStopTime->dayOfMonth;
1038:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.month         = dstStopTime->month;
1039:Generated_Source\PSoC4/RTC.c **** 
1040:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
1041:Generated_Source\PSoC4/RTC.c **** 
1042:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
1043:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
1044:Generated_Source\PSoC4/RTC.c ****         {
1045:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
1046:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
1047:Generated_Source\PSoC4/RTC.c ****         }
1048:Generated_Source\PSoC4/RTC.c ****         else
1049:Generated_Source\PSoC4/RTC.c ****         {
1050:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
1051:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
1052:Generated_Source\PSoC4/RTC.c ****         }
1053:Generated_Source\PSoC4/RTC.c ****     }
1054:Generated_Source\PSoC4/RTC.c **** 
1055:Generated_Source\PSoC4/RTC.c **** 
1056:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
1057:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetDstUnixTime
1058:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
1059:Generated_Source\PSoC4/RTC.c ****     *
1060:Generated_Source\PSoC4/RTC.c ****     * \brief
1061:Generated_Source\PSoC4/RTC.c ****     *  Calculates the DST Start/Stop time in the UNIX format.
1062:Generated_Source\PSoC4/RTC.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 69


1063:Generated_Source\PSoC4/RTC.c ****     * \param
1064:Generated_Source\PSoC4/RTC.c ****     *  dstTime The DST Start/Stop time in the regular time format.
1065:Generated_Source\PSoC4/RTC.c ****     *
1066:Generated_Source\PSoC4/RTC.c ****     * \return
1067:Generated_Source\PSoC4/RTC.c ****     *  The DST Start/Stop time in the UNIX format.
1068:Generated_Source\PSoC4/RTC.c ****     *
1069:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
1070:Generated_Source\PSoC4/RTC.c ****     uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime)
1071:Generated_Source\PSoC4/RTC.c ****     {
1072:Generated_Source\PSoC4/RTC.c ****         uint32 tmpYear;
1073:Generated_Source\PSoC4/RTC.c ****         uint32 tmpDate;
1074:Generated_Source\PSoC4/RTC.c ****         uint64 dstUnixTime;
1075:Generated_Source\PSoC4/RTC.c **** 
1076:Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME tmpTimeDate;
1077:Generated_Source\PSoC4/RTC.c **** 
1078:Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&tmpTimeDate, RTC_unixTime, RTC_INITIAL_TIME_FORMAT);
1079:Generated_Source\PSoC4/RTC.c ****         tmpYear = RTC_GetYear(tmpTimeDate.date);
1080:Generated_Source\PSoC4/RTC.c **** 
1081:Generated_Source\PSoC4/RTC.c ****         if(dstTime->timeFormat == (uint8)RTC_DST_DATE_FIXED)
1082:Generated_Source\PSoC4/RTC.c ****         {
1083:Generated_Source\PSoC4/RTC.c ****             tmpDate =     RTC_ConstructDate(dstTime->month, dstTime->dayOfMonth, tmpYear);
1084:Generated_Source\PSoC4/RTC.c ****         }
1085:Generated_Source\PSoC4/RTC.c ****         else
1086:Generated_Source\PSoC4/RTC.c ****         {
1087:Generated_Source\PSoC4/RTC.c ****             tmpDate = RTC_RelativeToFixed(dstTime->dayOfWeek, dstTime->weekOfMonth, dstTime->month,
1088:Generated_Source\PSoC4/RTC.c ****         }
1089:Generated_Source\PSoC4/RTC.c **** 
1090:Generated_Source\PSoC4/RTC.c ****         tmpTimeDate.time = RTC_ConstructTime((uint32)RTC_24_HOURS_FORMAT, 0u, dstTime->hour, 0u, 0u
1091:Generated_Source\PSoC4/RTC.c ****         dstUnixTime = RTC_DateTimeToUnix(tmpDate, tmpTimeDate.time);
1092:Generated_Source\PSoC4/RTC.c **** 
1093:Generated_Source\PSoC4/RTC.c ****         return(dstUnixTime);
1094:Generated_Source\PSoC4/RTC.c ****     }
1095:Generated_Source\PSoC4/RTC.c **** 
1096:Generated_Source\PSoC4/RTC.c **** 
1097:Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_DST_STATUS) */
1098:Generated_Source\PSoC4/RTC.c **** 
1099:Generated_Source\PSoC4/RTC.c **** 
1100:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1101:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ConvertBCDToDec
1102:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1103:Generated_Source\PSoC4/RTC.c **** *
1104:Generated_Source\PSoC4/RTC.c **** * \brief
1105:Generated_Source\PSoC4/RTC.c **** *  Converts a 4-byte BCD number into a 4-byte hexadecimal number. Each byte is
1106:Generated_Source\PSoC4/RTC.c **** *  converted individually and returned as an individual byte in the 32-bit
1107:Generated_Source\PSoC4/RTC.c **** *  variable.
1108:Generated_Source\PSoC4/RTC.c **** *
1109:Generated_Source\PSoC4/RTC.c **** * \param
1110:Generated_Source\PSoC4/RTC.c **** *  bcdNum A 4-byte BCD number. Each byte represents BCD.
1111:Generated_Source\PSoC4/RTC.c **** *  0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 the in BCD format.
1112:Generated_Source\PSoC4/RTC.c **** *
1113:Generated_Source\PSoC4/RTC.c **** * \return
1114:Generated_Source\PSoC4/RTC.c **** *  decNum A 4-byte hexadecimal equivalent number of the BCD number.
1115:Generated_Source\PSoC4/RTC.c **** *  BCD number 0x11223344 -> returned hexadecimal number 0x0B16212C.
1116:Generated_Source\PSoC4/RTC.c **** *
1117:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1118:Generated_Source\PSoC4/RTC.c **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum)
1119:Generated_Source\PSoC4/RTC.c **** {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 70


 1601              		.loc 2 1119 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 24
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605 0000 80B5     		push	{r7, lr}
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 86B0     		sub	sp, sp, #24
 1610              		.cfi_def_cfa_offset 32
 1611 0004 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 1613 0006 7860     		str	r0, [r7, #4]
1120:Generated_Source\PSoC4/RTC.c ****     uint32 i;
1121:Generated_Source\PSoC4/RTC.c ****     uint32 mult;
1122:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1123:Generated_Source\PSoC4/RTC.c **** 
1124:Generated_Source\PSoC4/RTC.c ****     mult   = 1u;
 1614              		.loc 2 1124 0
 1615 0008 0123     		movs	r3, #1
 1616 000a 3B61     		str	r3, [r7, #16]
1125:Generated_Source\PSoC4/RTC.c ****     retVal = 0u;
 1617              		.loc 2 1125 0
 1618 000c 0023     		movs	r3, #0
 1619 000e FB60     		str	r3, [r7, #12]
1126:Generated_Source\PSoC4/RTC.c **** 
1127:Generated_Source\PSoC4/RTC.c ****     for(i = 0u; i < 16u; i++)
 1620              		.loc 2 1127 0
 1621 0010 0023     		movs	r3, #0
 1622 0012 7B61     		str	r3, [r7, #20]
 1623 0014 13E0     		b	.L87
 1624              	.L88:
1128:Generated_Source\PSoC4/RTC.c ****     {
1129:Generated_Source\PSoC4/RTC.c ****         retVal += (bcdNum & RTC_BCD_ONE_DIGIT_MASK) * mult;
 1625              		.loc 2 1129 0 discriminator 3
 1626 0016 7B68     		ldr	r3, [r7, #4]
 1627 0018 0F22     		movs	r2, #15
 1628 001a 1340     		ands	r3, r2
 1629 001c 3A69     		ldr	r2, [r7, #16]
 1630 001e 5343     		muls	r3, r2
 1631 0020 FA68     		ldr	r2, [r7, #12]
 1632 0022 D318     		adds	r3, r2, r3
 1633 0024 FB60     		str	r3, [r7, #12]
1130:Generated_Source\PSoC4/RTC.c ****         bcdNum >>= RTC_BCD_NUMBER_SIZE;
 1634              		.loc 2 1130 0 discriminator 3
 1635 0026 7B68     		ldr	r3, [r7, #4]
 1636 0028 1B09     		lsrs	r3, r3, #4
 1637 002a 7B60     		str	r3, [r7, #4]
1131:Generated_Source\PSoC4/RTC.c ****         mult *= 10u;
 1638              		.loc 2 1131 0 discriminator 3
 1639 002c 3A69     		ldr	r2, [r7, #16]
 1640 002e 1300     		movs	r3, r2
 1641 0030 9B00     		lsls	r3, r3, #2
 1642 0032 9B18     		adds	r3, r3, r2
 1643 0034 5B00     		lsls	r3, r3, #1
 1644 0036 3B61     		str	r3, [r7, #16]
1127:Generated_Source\PSoC4/RTC.c ****     {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 71


 1645              		.loc 2 1127 0 discriminator 3
 1646 0038 7B69     		ldr	r3, [r7, #20]
 1647 003a 0133     		adds	r3, r3, #1
 1648 003c 7B61     		str	r3, [r7, #20]
 1649              	.L87:
1127:Generated_Source\PSoC4/RTC.c ****     {
 1650              		.loc 2 1127 0 is_stmt 0 discriminator 1
 1651 003e 7B69     		ldr	r3, [r7, #20]
 1652 0040 0F2B     		cmp	r3, #15
 1653 0042 E8D9     		bls	.L88
1132:Generated_Source\PSoC4/RTC.c ****     }
1133:Generated_Source\PSoC4/RTC.c **** 
1134:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 1654              		.loc 2 1134 0 is_stmt 1
 1655 0044 FB68     		ldr	r3, [r7, #12]
1135:Generated_Source\PSoC4/RTC.c **** }
 1656              		.loc 2 1135 0
 1657 0046 1800     		movs	r0, r3
 1658 0048 BD46     		mov	sp, r7
 1659 004a 06B0     		add	sp, sp, #24
 1660              		@ sp needed
 1661 004c 80BD     		pop	{r7, pc}
 1662              		.cfi_endproc
 1663              	.LFE41:
 1664              		.size	RTC_ConvertBCDToDec, .-RTC_ConvertBCDToDec
 1665 004e C046     		.section	.text.RTC_ConvertDecToBCD,"ax",%progbits
 1666              		.align	2
 1667              		.global	RTC_ConvertDecToBCD
 1668              		.code	16
 1669              		.thumb_func
 1670              		.type	RTC_ConvertDecToBCD, %function
 1671              	RTC_ConvertDecToBCD:
 1672              	.LFB42:
1136:Generated_Source\PSoC4/RTC.c **** 
1137:Generated_Source\PSoC4/RTC.c **** 
1138:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1139:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ConvertDecToBCD
1140:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1141:Generated_Source\PSoC4/RTC.c **** *
1142:Generated_Source\PSoC4/RTC.c **** * \brief
1143:Generated_Source\PSoC4/RTC.c **** *  Converts a 4-byte hexadecimal number into a 4-byte BCD number. Each byte
1144:Generated_Source\PSoC4/RTC.c **** *  is converted individually and returned as an individual byte in the 32-bit
1145:Generated_Source\PSoC4/RTC.c **** *  variable.
1146:Generated_Source\PSoC4/RTC.c **** *
1147:Generated_Source\PSoC4/RTC.c **** * \param 
1148:Generated_Source\PSoC4/RTC.c **** *  decNum A 4-byte hexadecimal number. Each byte is represented in hex.
1149:Generated_Source\PSoC4/RTC.c **** *  0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 in the hex format.
1150:Generated_Source\PSoC4/RTC.c **** *
1151:Generated_Source\PSoC4/RTC.c **** * \return
1152:Generated_Source\PSoC4/RTC.c **** *  bcdNum - A 4-byte BCD equivalent of the passed hexadecimal number. Hexadecimal
1153:Generated_Source\PSoC4/RTC.c **** *  number 0x11223344 -> returned BCD number 0x17345168.
1154:Generated_Source\PSoC4/RTC.c **** *
1155:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1156:Generated_Source\PSoC4/RTC.c **** uint32 RTC_ConvertDecToBCD(uint32 decNum)
1157:Generated_Source\PSoC4/RTC.c **** {
 1673              		.loc 2 1157 0
 1674              		.cfi_startproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 72


 1675              		@ args = 0, pretend = 0, frame = 24
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677 0000 80B5     		push	{r7, lr}
 1678              		.cfi_def_cfa_offset 8
 1679              		.cfi_offset 7, -8
 1680              		.cfi_offset 14, -4
 1681 0002 86B0     		sub	sp, sp, #24
 1682              		.cfi_def_cfa_offset 32
 1683 0004 00AF     		add	r7, sp, #0
 1684              		.cfi_def_cfa_register 7
 1685 0006 7860     		str	r0, [r7, #4]
1158:Generated_Source\PSoC4/RTC.c ****     uint32 shift;
1159:Generated_Source\PSoC4/RTC.c ****     uint32 tmpVal;
1160:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1161:Generated_Source\PSoC4/RTC.c **** 
1162:Generated_Source\PSoC4/RTC.c ****     shift  = 0u;
 1686              		.loc 2 1162 0
 1687 0008 0023     		movs	r3, #0
 1688 000a 7B61     		str	r3, [r7, #20]
1163:Generated_Source\PSoC4/RTC.c ****     retVal = 0u;
 1689              		.loc 2 1163 0
 1690 000c 0023     		movs	r3, #0
 1691 000e FB60     		str	r3, [r7, #12]
1164:Generated_Source\PSoC4/RTC.c ****     tmpVal = decNum;
 1692              		.loc 2 1164 0
 1693 0010 7B68     		ldr	r3, [r7, #4]
 1694 0012 3B61     		str	r3, [r7, #16]
 1695              	.L91:
1165:Generated_Source\PSoC4/RTC.c **** 
1166:Generated_Source\PSoC4/RTC.c ****     do
1167:Generated_Source\PSoC4/RTC.c ****     {
1168:Generated_Source\PSoC4/RTC.c ****         retVal |= ((tmpVal % 10u) << shift);
 1696              		.loc 2 1168 0 discriminator 1
 1697 0014 3B69     		ldr	r3, [r7, #16]
 1698 0016 0A21     		movs	r1, #10
 1699 0018 1800     		movs	r0, r3
 1700 001a FFF7FEFF 		bl	__aeabi_uidivmod
 1701 001e 0B00     		movs	r3, r1
 1702 0020 1A00     		movs	r2, r3
 1703 0022 7B69     		ldr	r3, [r7, #20]
 1704 0024 9A40     		lsls	r2, r2, r3
 1705 0026 1300     		movs	r3, r2
 1706 0028 FA68     		ldr	r2, [r7, #12]
 1707 002a 1343     		orrs	r3, r2
 1708 002c FB60     		str	r3, [r7, #12]
1169:Generated_Source\PSoC4/RTC.c ****         tmpVal /= 10u;
 1709              		.loc 2 1169 0 discriminator 1
 1710 002e 3B69     		ldr	r3, [r7, #16]
 1711 0030 0A21     		movs	r1, #10
 1712 0032 1800     		movs	r0, r3
 1713 0034 FFF7FEFF 		bl	__aeabi_uidiv
 1714 0038 0300     		movs	r3, r0
 1715 003a 3B61     		str	r3, [r7, #16]
1170:Generated_Source\PSoC4/RTC.c ****         shift  += RTC_BCD_NUMBER_SIZE;
 1716              		.loc 2 1170 0 discriminator 1
 1717 003c 7B69     		ldr	r3, [r7, #20]
 1718 003e 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 73


 1719 0040 7B61     		str	r3, [r7, #20]
1171:Generated_Source\PSoC4/RTC.c ****     }
1172:Generated_Source\PSoC4/RTC.c ****     while(tmpVal >= 10u);
 1720              		.loc 2 1172 0 discriminator 1
 1721 0042 3B69     		ldr	r3, [r7, #16]
 1722 0044 092B     		cmp	r3, #9
 1723 0046 E5D8     		bhi	.L91
1173:Generated_Source\PSoC4/RTC.c **** 
1174:Generated_Source\PSoC4/RTC.c ****     retVal |= (tmpVal << shift);
 1724              		.loc 2 1174 0
 1725 0048 3A69     		ldr	r2, [r7, #16]
 1726 004a 7B69     		ldr	r3, [r7, #20]
 1727 004c 9A40     		lsls	r2, r2, r3
 1728 004e 1300     		movs	r3, r2
 1729 0050 FA68     		ldr	r2, [r7, #12]
 1730 0052 1343     		orrs	r3, r2
 1731 0054 FB60     		str	r3, [r7, #12]
1175:Generated_Source\PSoC4/RTC.c **** 
1176:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 1732              		.loc 2 1176 0
 1733 0056 FB68     		ldr	r3, [r7, #12]
1177:Generated_Source\PSoC4/RTC.c **** }
 1734              		.loc 2 1177 0
 1735 0058 1800     		movs	r0, r3
 1736 005a BD46     		mov	sp, r7
 1737 005c 06B0     		add	sp, sp, #24
 1738              		@ sp needed
 1739 005e 80BD     		pop	{r7, pc}
 1740              		.cfi_endproc
 1741              	.LFE42:
 1742              		.size	RTC_ConvertDecToBCD, .-RTC_ConvertDecToBCD
 1743              		.section	.text.RTC_Update,"ax",%progbits
 1744              		.align	2
 1745              		.global	RTC_Update
 1746              		.code	16
 1747              		.thumb_func
 1748              		.type	RTC_Update, %function
 1749              	RTC_Update:
 1750              	.LFB43:
1178:Generated_Source\PSoC4/RTC.c **** 
1179:Generated_Source\PSoC4/RTC.c **** 
1180:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1181:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Update
1182:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1183:Generated_Source\PSoC4/RTC.c **** *
1184:Generated_Source\PSoC4/RTC.c **** * \brief
1185:Generated_Source\PSoC4/RTC.c **** *  This API updates the time registers and performs alarm/DST check.
1186:Generated_Source\PSoC4/RTC.c **** *
1187:Generated_Source\PSoC4/RTC.c **** *  This function increments the time/date registers by an input clock period.
1188:Generated_Source\PSoC4/RTC.c **** *  The period is set by RTC_SetPeriod() API or WDT period selected for RTC
1189:Generated_Source\PSoC4/RTC.c **** *  in the clocks configuration window (low frequency clocks tab) interface
1190:Generated_Source\PSoC4/RTC.c **** *  every time it is called.
1191:Generated_Source\PSoC4/RTC.c **** *
1192:Generated_Source\PSoC4/RTC.c **** *  API is automatically mapped to the WDT's callback slot and period if the
1193:Generated_Source\PSoC4/RTC.c **** *  configuration is as follows: 1) Option "Implement RTC update manually" in
1194:Generated_Source\PSoC4/RTC.c **** *  the customizer is unchecked 2) One of WDTs is selected in the "Use for RTC"
1195:Generated_Source\PSoC4/RTC.c **** *  panel of the low frequency clocks tab 3) Option "Implementation by IDE" is
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 74


1196:Generated_Source\PSoC4/RTC.c **** *  selected in the "Timer (WDT) ISR" panel.
1197:Generated_Source\PSoC4/RTC.c **** *
1198:Generated_Source\PSoC4/RTC.c **** *  If option "Implement RTC update manually" is checked in the customizer or
1199:Generated_Source\PSoC4/RTC.c **** *  option "None" is selected in the "Use for RTC" panel,it is the user's
1200:Generated_Source\PSoC4/RTC.c **** *  responsibility: 1) to call this API from the clock ISR to be
1201:Generated_Source\PSoC4/RTC.c **** *  used as the RTC's input 2) set the period of the RTC through
1202:Generated_Source\PSoC4/RTC.c **** *  RTC_SetPeriod() API.
1203:Generated_Source\PSoC4/RTC.c **** *
1204:Generated_Source\PSoC4/RTC.c **** * \note Updates the Unix time register, updates the alarm and DST status.
1205:Generated_Source\PSoC4/RTC.c **** *
1206:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1207:Generated_Source\PSoC4/RTC.c **** void RTC_Update(void)
1208:Generated_Source\PSoC4/RTC.c **** {
 1751              		.loc 2 1208 0
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 0
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755 0000 90B5     		push	{r4, r7, lr}
 1756              		.cfi_def_cfa_offset 12
 1757              		.cfi_offset 4, -12
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 00AF     		add	r7, sp, #0
 1761              		.cfi_def_cfa_register 7
1209:Generated_Source\PSoC4/RTC.c ****     static volatile uint32 RTC_currentTickNumber;
1210:Generated_Source\PSoC4/RTC.c ****     RTC_currentTickNumber += RTC_updateTimePeriod;
 1762              		.loc 2 1210 0
 1763 0004 0E4B     		ldr	r3, .L96
 1764 0006 1A68     		ldr	r2, [r3]
 1765 0008 0E4B     		ldr	r3, .L96+4
 1766 000a 1B68     		ldr	r3, [r3]
 1767 000c D218     		adds	r2, r2, r3
 1768 000e 0C4B     		ldr	r3, .L96
 1769 0010 1A60     		str	r2, [r3]
1211:Generated_Source\PSoC4/RTC.c **** 
1212:Generated_Source\PSoC4/RTC.c ****     if(RTC_currentTickNumber >= RTC_tickRefOneSec)
 1770              		.loc 2 1212 0
 1771 0012 0B4B     		ldr	r3, .L96
 1772 0014 1A68     		ldr	r2, [r3]
 1773 0016 0C4B     		ldr	r3, .L96+8
 1774 0018 1B68     		ldr	r3, [r3]
 1775 001a 9A42     		cmp	r2, r3
 1776 001c 0CD3     		bcc	.L95
1213:Generated_Source\PSoC4/RTC.c ****     {
1214:Generated_Source\PSoC4/RTC.c ****         RTC_unixTime++;
 1777              		.loc 2 1214 0
 1778 001e 0B4B     		ldr	r3, .L96+12
 1779 0020 5C68     		ldr	r4, [r3, #4]
 1780 0022 1B68     		ldr	r3, [r3]
 1781 0024 0121     		movs	r1, #1
 1782 0026 0022     		movs	r2, #0
 1783 0028 5B18     		adds	r3, r3, r1
 1784 002a 5441     		adcs	r4, r4, r2
 1785 002c 074A     		ldr	r2, .L96+12
 1786 002e 1360     		str	r3, [r2]
 1787 0030 5460     		str	r4, [r2, #4]
1215:Generated_Source\PSoC4/RTC.c ****         RTC_currentTickNumber = 0u;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 75


 1788              		.loc 2 1215 0
 1789 0032 034B     		ldr	r3, .L96
 1790 0034 0022     		movs	r2, #0
 1791 0036 1A60     		str	r2, [r3]
 1792              	.L95:
1216:Generated_Source\PSoC4/RTC.c **** 
1217:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
1218:Generated_Source\PSoC4/RTC.c ****         if(RTC_unixTime == RTC_unixTimeDstStart)
1219:Generated_Source\PSoC4/RTC.c ****         {
1220:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
1221:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
1222:Generated_Source\PSoC4/RTC.c ****         }
1223:Generated_Source\PSoC4/RTC.c **** 
1224:Generated_Source\PSoC4/RTC.c ****         if(RTC_unixTime == (RTC_unixTimeDstStop  - RTC_dstTimeOffset))
1225:Generated_Source\PSoC4/RTC.c ****         {
1226:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
1227:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0u;
1228:Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
1229:Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
1230:Generated_Source\PSoC4/RTC.c ****         }
1231:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
1232:Generated_Source\PSoC4/RTC.c **** 
1233:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_ALARM_STATUS)
1234:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime + RTC_dstTimeOffset) == RTC_unixTimeAlarm)
1235:Generated_Source\PSoC4/RTC.c ****         {
1236:Generated_Source\PSoC4/RTC.c ****             RTC_currentTimeDate.status |= (1uL << RTC_STATUS_ALARM_OFFSET);
1237:Generated_Source\PSoC4/RTC.c ****             RTC_alarmCurStatus = RTC_alarmCfgMask;
1238:Generated_Source\PSoC4/RTC.c ****             if (RTC_alarmCallbackPtr != (void *) 0)
1239:Generated_Source\PSoC4/RTC.c ****             {
1240:Generated_Source\PSoC4/RTC.c ****                 RTC_alarmCallbackPtr();
1241:Generated_Source\PSoC4/RTC.c ****             }
1242:Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeAlarm = RTC_GetNexAlarmTime(RTC_unixTime + RTC_dstTimeOffset,
1243:Generated_Source\PSoC4/RTC.c ****                                                                                                   (
1244:Generated_Source\PSoC4/RTC.c ****         }
1245:Generated_Source\PSoC4/RTC.c ****     #endif/* (0u != RTC_INITIAL_ALARM_STATUS) */
1246:Generated_Source\PSoC4/RTC.c ****     }
1247:Generated_Source\PSoC4/RTC.c **** }
 1793              		.loc 2 1247 0
 1794 0038 C046     		nop
 1795 003a BD46     		mov	sp, r7
 1796              		@ sp needed
 1797 003c 90BD     		pop	{r4, r7, pc}
 1798              	.L97:
 1799 003e C046     		.align	2
 1800              	.L96:
 1801 0040 0C000000 		.word	RTC_currentTickNumber.5210
 1802 0044 00000000 		.word	RTC_updateTimePeriod
 1803 0048 04000000 		.word	RTC_tickRefOneSec
 1804 004c 00000000 		.word	RTC_unixTime
 1805              		.cfi_endproc
 1806              	.LFE43:
 1807              		.size	RTC_Update, .-RTC_Update
 1808              		.section	.text.RTC_DateTimeToUnix,"ax",%progbits
 1809              		.align	2
 1810              		.global	RTC_DateTimeToUnix
 1811              		.code	16
 1812              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 76


 1813              		.type	RTC_DateTimeToUnix, %function
 1814              	RTC_DateTimeToUnix:
 1815              	.LFB44:
1248:Generated_Source\PSoC4/RTC.c **** 
1249:Generated_Source\PSoC4/RTC.c **** 
1250:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1251:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_DateTimeToUnix
1252:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1253:Generated_Source\PSoC4/RTC.c **** *
1254:Generated_Source\PSoC4/RTC.c **** * \brief
1255:Generated_Source\PSoC4/RTC.c **** *  This is an internal function to convert the date and time from
1256:Generated_Source\PSoC4/RTC.c **** *  the regular time format into the UNIX time format.
1257:Generated_Source\PSoC4/RTC.c **** *
1258:Generated_Source\PSoC4/RTC.c **** * \param
1259:Generated_Source\PSoC4/RTC.c **** *  inputDate The date in the selected in the customizer "date format".
1260:Generated_Source\PSoC4/RTC.c **** * \param
1261:Generated_Source\PSoC4/RTC.c **** *  inputTime The time in the defined "time format".
1262:Generated_Source\PSoC4/RTC.c **** *
1263:Generated_Source\PSoC4/RTC.c **** * \return Returns the date and time in the UNIX format.
1264:Generated_Source\PSoC4/RTC.c **** *
1265:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1266:Generated_Source\PSoC4/RTC.c **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime)
1267:Generated_Source\PSoC4/RTC.c **** {
 1816              		.loc 2 1267 0
 1817              		.cfi_startproc
 1818              		@ args = 0, pretend = 0, frame = 64
 1819              		@ frame_needed = 1, uses_anonymous_args = 0
 1820 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1821              		.cfi_def_cfa_offset 20
 1822              		.cfi_offset 4, -20
 1823              		.cfi_offset 5, -16
 1824              		.cfi_offset 6, -12
 1825              		.cfi_offset 7, -8
 1826              		.cfi_offset 14, -4
 1827 0002 91B0     		sub	sp, sp, #68
 1828              		.cfi_def_cfa_offset 88
 1829 0004 00AF     		add	r7, sp, #0
 1830              		.cfi_def_cfa_register 7
 1831 0006 7862     		str	r0, [r7, #36]
 1832 0008 3962     		str	r1, [r7, #32]
1268:Generated_Source\PSoC4/RTC.c ****     uint32 i;
1269:Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
1270:Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
1271:Generated_Source\PSoC4/RTC.c ****     uint32 tmpVal;
1272:Generated_Source\PSoC4/RTC.c ****     uint64 unixTime;
1273:Generated_Source\PSoC4/RTC.c **** 
1274:Generated_Source\PSoC4/RTC.c ****     unixTime = 0u;
 1833              		.loc 2 1274 0
 1834 000a 0023     		movs	r3, #0
 1835 000c 0024     		movs	r4, #0
 1836 000e 3B63     		str	r3, [r7, #48]
 1837 0010 7C63     		str	r4, [r7, #52]
1275:Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_GetYear(inputDate);
 1838              		.loc 2 1275 0
 1839 0012 7B6A     		ldr	r3, [r7, #36]
 1840 0014 1800     		movs	r0, r3
 1841 0016 FFF7FEFF 		bl	RTC_GetYear
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 77


 1842 001a 0300     		movs	r3, r0
 1843 001c FB62     		str	r3, [r7, #44]
1276:Generated_Source\PSoC4/RTC.c **** 
1277:Generated_Source\PSoC4/RTC.c ****     /* Calculate seconds from epoch start up to (but not including) current year. */
1278:Generated_Source\PSoC4/RTC.c ****     for(i = RTC_YEAR_0; i < tmpYear; i++)
 1844              		.loc 2 1278 0
 1845 001e 564B     		ldr	r3, .L106
 1846 0020 FB63     		str	r3, [r7, #60]
 1847 0022 19E0     		b	.L99
 1848              	.L102:
1279:Generated_Source\PSoC4/RTC.c ****     {
1280:Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(i))
 1849              		.loc 2 1280 0
 1850 0024 FB6B     		ldr	r3, [r7, #60]
 1851 0026 1800     		movs	r0, r3
 1852 0028 FFF7FEFF 		bl	RTC_LeapYear
 1853 002c 031E     		subs	r3, r0, #0
 1854 002e 08D0     		beq	.L100
1281:Generated_Source\PSoC4/RTC.c ****         {
1282:Generated_Source\PSoC4/RTC.c ****             unixTime += RTC_SECONDS_PER_LEAP_YEAR;
 1855              		.loc 2 1282 0
 1856 0030 3B6B     		ldr	r3, [r7, #48]
 1857 0032 7C6B     		ldr	r4, [r7, #52]
 1858 0034 5149     		ldr	r1, .L106+4
 1859 0036 0022     		movs	r2, #0
 1860 0038 5B18     		adds	r3, r3, r1
 1861 003a 5441     		adcs	r4, r4, r2
 1862 003c 3B63     		str	r3, [r7, #48]
 1863 003e 7C63     		str	r4, [r7, #52]
 1864 0040 07E0     		b	.L101
 1865              	.L100:
1283:Generated_Source\PSoC4/RTC.c ****         }
1284:Generated_Source\PSoC4/RTC.c ****         else
1285:Generated_Source\PSoC4/RTC.c ****         {
1286:Generated_Source\PSoC4/RTC.c ****             unixTime += RTC_SECONDS_PER_NONLEAP_YEAR;
 1866              		.loc 2 1286 0
 1867 0042 3B6B     		ldr	r3, [r7, #48]
 1868 0044 7C6B     		ldr	r4, [r7, #52]
 1869 0046 4E49     		ldr	r1, .L106+8
 1870 0048 0022     		movs	r2, #0
 1871 004a 5B18     		adds	r3, r3, r1
 1872 004c 5441     		adcs	r4, r4, r2
 1873 004e 3B63     		str	r3, [r7, #48]
 1874 0050 7C63     		str	r4, [r7, #52]
 1875              	.L101:
1278:Generated_Source\PSoC4/RTC.c ****     {
 1876              		.loc 2 1278 0 discriminator 2
 1877 0052 FB6B     		ldr	r3, [r7, #60]
 1878 0054 0133     		adds	r3, r3, #1
 1879 0056 FB63     		str	r3, [r7, #60]
 1880              	.L99:
1278:Generated_Source\PSoC4/RTC.c ****     {
 1881              		.loc 2 1278 0 is_stmt 0 discriminator 1
 1882 0058 FA6B     		ldr	r2, [r7, #60]
 1883 005a FB6A     		ldr	r3, [r7, #44]
 1884 005c 9A42     		cmp	r2, r3
 1885 005e E1D3     		bcc	.L102
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 78


1287:Generated_Source\PSoC4/RTC.c ****         }
1288:Generated_Source\PSoC4/RTC.c ****     }
1289:Generated_Source\PSoC4/RTC.c **** 
1290:Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds had elapsed in this year prior to the current month. */
1291:Generated_Source\PSoC4/RTC.c ****     tmpMonth = RTC_GetMonth(inputDate);
 1886              		.loc 2 1291 0 is_stmt 1
 1887 0060 7B6A     		ldr	r3, [r7, #36]
 1888 0062 1800     		movs	r0, r3
 1889 0064 FFF7FEFF 		bl	RTC_GetMonth
 1890 0068 0300     		movs	r3, r0
 1891 006a BB62     		str	r3, [r7, #40]
1292:Generated_Source\PSoC4/RTC.c ****     tmpVal = RTC_daysBeforeMonthTbl[tmpMonth - 1u];
 1892              		.loc 2 1292 0
 1893 006c BB6A     		ldr	r3, [r7, #40]
 1894 006e 5A1E     		subs	r2, r3, #1
 1895 0070 444B     		ldr	r3, .L106+12
 1896 0072 5200     		lsls	r2, r2, #1
 1897 0074 D35A     		ldrh	r3, [r2, r3]
 1898 0076 BB63     		str	r3, [r7, #56]
1293:Generated_Source\PSoC4/RTC.c **** 
1294:Generated_Source\PSoC4/RTC.c ****     if((tmpMonth > 2u) && (0u != RTC_LeapYear(tmpYear)))
 1899              		.loc 2 1294 0
 1900 0078 BB6A     		ldr	r3, [r7, #40]
 1901 007a 022B     		cmp	r3, #2
 1902 007c 08D9     		bls	.L103
 1903              		.loc 2 1294 0 is_stmt 0 discriminator 1
 1904 007e FB6A     		ldr	r3, [r7, #44]
 1905 0080 1800     		movs	r0, r3
 1906 0082 FFF7FEFF 		bl	RTC_LeapYear
 1907 0086 031E     		subs	r3, r0, #0
 1908 0088 02D0     		beq	.L103
1295:Generated_Source\PSoC4/RTC.c ****     {
1296:Generated_Source\PSoC4/RTC.c ****         tmpVal++;
 1909              		.loc 2 1296 0 is_stmt 1
 1910 008a BB6B     		ldr	r3, [r7, #56]
 1911 008c 0133     		adds	r3, r3, #1
 1912 008e BB63     		str	r3, [r7, #56]
 1913              	.L103:
1297:Generated_Source\PSoC4/RTC.c ****     }
1298:Generated_Source\PSoC4/RTC.c **** 
1299:Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds are in current month days prior to today. */
1300:Generated_Source\PSoC4/RTC.c ****     unixTime += tmpVal * RTC_SECONDS_PER_DAY;
 1914              		.loc 2 1300 0
 1915 0090 BB6B     		ldr	r3, [r7, #56]
 1916 0092 3D4A     		ldr	r2, .L106+16
 1917 0094 5343     		muls	r3, r2
 1918 0096 BB61     		str	r3, [r7, #24]
 1919 0098 0023     		movs	r3, #0
 1920 009a FB61     		str	r3, [r7, #28]
 1921 009c 3B6B     		ldr	r3, [r7, #48]
 1922 009e 7C6B     		ldr	r4, [r7, #52]
 1923 00a0 B969     		ldr	r1, [r7, #24]
 1924 00a2 FA69     		ldr	r2, [r7, #28]
 1925 00a4 5B18     		adds	r3, r3, r1
 1926 00a6 5441     		adcs	r4, r4, r2
 1927 00a8 3B63     		str	r3, [r7, #48]
 1928 00aa 7C63     		str	r4, [r7, #52]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 79


1301:Generated_Source\PSoC4/RTC.c ****     unixTime += (RTC_GetDay(inputDate) - 1u) * RTC_SECONDS_PER_DAY;
 1929              		.loc 2 1301 0
 1930 00ac 7B6A     		ldr	r3, [r7, #36]
 1931 00ae 1800     		movs	r0, r3
 1932 00b0 FFF7FEFF 		bl	RTC_GetDay
 1933 00b4 0200     		movs	r2, r0
 1934 00b6 344B     		ldr	r3, .L106+16
 1935 00b8 5343     		muls	r3, r2
 1936 00ba 344A     		ldr	r2, .L106+20
 1937 00bc 9446     		mov	ip, r2
 1938 00be 6344     		add	r3, r3, ip
 1939 00c0 3B61     		str	r3, [r7, #16]
 1940 00c2 0023     		movs	r3, #0
 1941 00c4 7B61     		str	r3, [r7, #20]
 1942 00c6 3B6B     		ldr	r3, [r7, #48]
 1943 00c8 7C6B     		ldr	r4, [r7, #52]
 1944 00ca 3969     		ldr	r1, [r7, #16]
 1945 00cc 7A69     		ldr	r2, [r7, #20]
 1946 00ce 5B18     		adds	r3, r3, r1
 1947 00d0 5441     		adcs	r4, r4, r2
 1948 00d2 3B63     		str	r3, [r7, #48]
 1949 00d4 7C63     		str	r4, [r7, #52]
1302:Generated_Source\PSoC4/RTC.c **** 
1303:Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds have elapsed today up to the current hour. */
1304:Generated_Source\PSoC4/RTC.c ****     tmpVal = RTC_GetHours(inputTime);
 1950              		.loc 2 1304 0
 1951 00d6 3B6A     		ldr	r3, [r7, #32]
 1952 00d8 1800     		movs	r0, r3
 1953 00da FFF7FEFF 		bl	RTC_GetHours
 1954 00de 0300     		movs	r3, r0
 1955 00e0 BB63     		str	r3, [r7, #56]
1305:Generated_Source\PSoC4/RTC.c ****     if(((uint32)RTC_24_HOURS_FORMAT != RTC_GetTimeFormat(inputTime)) &&
 1956              		.loc 2 1305 0
 1957 00e2 3B6A     		ldr	r3, [r7, #32]
 1958 00e4 1800     		movs	r0, r3
 1959 00e6 FFF7FEFF 		bl	RTC_GetTimeFormat
 1960 00ea 031E     		subs	r3, r0, #0
 1961 00ec 0BD0     		beq	.L104
1306:Generated_Source\PSoC4/RTC.c ****        ((uint32)RTC_AM != RTC_GetAmPm(inputTime)) && (tmpVal < 12u))
 1962              		.loc 2 1306 0 discriminator 1
 1963 00ee 3B6A     		ldr	r3, [r7, #32]
 1964 00f0 1800     		movs	r0, r3
 1965 00f2 FFF7FEFF 		bl	RTC_GetAmPm
 1966 00f6 031E     		subs	r3, r0, #0
1305:Generated_Source\PSoC4/RTC.c ****     if(((uint32)RTC_24_HOURS_FORMAT != RTC_GetTimeFormat(inputTime)) &&
 1967              		.loc 2 1305 0 discriminator 1
 1968 00f8 05D0     		beq	.L104
 1969              		.loc 2 1306 0
 1970 00fa BB6B     		ldr	r3, [r7, #56]
 1971 00fc 0B2B     		cmp	r3, #11
 1972 00fe 02D8     		bhi	.L104
1307:Generated_Source\PSoC4/RTC.c ****     {
1308:Generated_Source\PSoC4/RTC.c ****         tmpVal += RTC_HOURS_PER_HALF_DAY;
 1973              		.loc 2 1308 0
 1974 0100 BB6B     		ldr	r3, [r7, #56]
 1975 0102 0C33     		adds	r3, r3, #12
 1976 0104 BB63     		str	r3, [r7, #56]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 80


 1977              	.L104:
1309:Generated_Source\PSoC4/RTC.c ****     }
1310:Generated_Source\PSoC4/RTC.c ****     unixTime += tmpVal * RTC_SECONDS_PER_HOUR;
 1978              		.loc 2 1310 0
 1979 0106 BB6B     		ldr	r3, [r7, #56]
 1980 0108 E122     		movs	r2, #225
 1981 010a 1201     		lsls	r2, r2, #4
 1982 010c 5343     		muls	r3, r2
 1983 010e BB60     		str	r3, [r7, #8]
 1984 0110 0023     		movs	r3, #0
 1985 0112 FB60     		str	r3, [r7, #12]
 1986 0114 3B6B     		ldr	r3, [r7, #48]
 1987 0116 7C6B     		ldr	r4, [r7, #52]
 1988 0118 B968     		ldr	r1, [r7, #8]
 1989 011a FA68     		ldr	r2, [r7, #12]
 1990 011c 5B18     		adds	r3, r3, r1
 1991 011e 5441     		adcs	r4, r4, r2
 1992 0120 3B63     		str	r3, [r7, #48]
 1993 0122 7C63     		str	r4, [r7, #52]
1311:Generated_Source\PSoC4/RTC.c **** 
1312:Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds have elapsed today up to the current minute. */
1313:Generated_Source\PSoC4/RTC.c ****     unixTime += RTC_GetMinutes(inputTime) * RTC_SECONDS_PER_MINUTE;
 1994              		.loc 2 1313 0
 1995 0124 3B6A     		ldr	r3, [r7, #32]
 1996 0126 1800     		movs	r0, r3
 1997 0128 FFF7FEFF 		bl	RTC_GetMinutes
 1998 012c 0200     		movs	r2, r0
 1999 012e 1300     		movs	r3, r2
 2000 0130 1B01     		lsls	r3, r3, #4
 2001 0132 9B1A     		subs	r3, r3, r2
 2002 0134 9B00     		lsls	r3, r3, #2
 2003 0136 3B60     		str	r3, [r7]
 2004 0138 0023     		movs	r3, #0
 2005 013a 7B60     		str	r3, [r7, #4]
 2006 013c 3B6B     		ldr	r3, [r7, #48]
 2007 013e 7C6B     		ldr	r4, [r7, #52]
 2008 0140 3968     		ldr	r1, [r7]
 2009 0142 7A68     		ldr	r2, [r7, #4]
 2010 0144 5B18     		adds	r3, r3, r1
 2011 0146 5441     		adcs	r4, r4, r2
 2012 0148 3B63     		str	r3, [r7, #48]
 2013 014a 7C63     		str	r4, [r7, #52]
1314:Generated_Source\PSoC4/RTC.c **** 
1315:Generated_Source\PSoC4/RTC.c ****     /* Add remaining seconds of current minute. */
1316:Generated_Source\PSoC4/RTC.c ****     unixTime += RTC_GetSecond(inputTime);
 2014              		.loc 2 1316 0
 2015 014c 3B6A     		ldr	r3, [r7, #32]
 2016 014e 1800     		movs	r0, r3
 2017 0150 FFF7FEFF 		bl	RTC_GetSecond
 2018 0154 0300     		movs	r3, r0
 2019 0156 1D00     		movs	r5, r3
 2020 0158 0023     		movs	r3, #0
 2021 015a 1E00     		movs	r6, r3
 2022 015c 3B6B     		ldr	r3, [r7, #48]
 2023 015e 7C6B     		ldr	r4, [r7, #52]
 2024 0160 5B19     		adds	r3, r3, r5
 2025 0162 7441     		adcs	r4, r4, r6
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 81


 2026 0164 3B63     		str	r3, [r7, #48]
 2027 0166 7C63     		str	r4, [r7, #52]
1317:Generated_Source\PSoC4/RTC.c **** 
1318:Generated_Source\PSoC4/RTC.c ****     return(unixTime);
 2028              		.loc 2 1318 0
 2029 0168 3B6B     		ldr	r3, [r7, #48]
 2030 016a 7C6B     		ldr	r4, [r7, #52]
1319:Generated_Source\PSoC4/RTC.c **** }
 2031              		.loc 2 1319 0
 2032 016c 1800     		movs	r0, r3
 2033 016e 2100     		movs	r1, r4
 2034 0170 BD46     		mov	sp, r7
 2035 0172 11B0     		add	sp, sp, #68
 2036              		@ sp needed
 2037 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 2038              	.L107:
 2039 0176 C046     		.align	2
 2040              	.L106:
 2041 0178 B2070000 		.word	1970
 2042 017c 0085E201 		.word	31622400
 2043 0180 8033E101 		.word	31536000
 2044 0184 00000000 		.word	RTC_daysBeforeMonthTbl
 2045 0188 80510100 		.word	86400
 2046 018c 80AEFEFF 		.word	-86400
 2047              		.cfi_endproc
 2048              	.LFE44:
 2049              		.size	RTC_DateTimeToUnix, .-RTC_DateTimeToUnix
 2050              		.global	__aeabi_uldivmod
 2051              		.section	.text.RTC_UnixToDateTime,"ax",%progbits
 2052              		.align	2
 2053              		.global	RTC_UnixToDateTime
 2054              		.code	16
 2055              		.thumb_func
 2056              		.type	RTC_UnixToDateTime, %function
 2057              	RTC_UnixToDateTime:
 2058              	.LFB45:
1320:Generated_Source\PSoC4/RTC.c **** 
1321:Generated_Source\PSoC4/RTC.c **** 
1322:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1323:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_UnixToDateTime
1324:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1325:Generated_Source\PSoC4/RTC.c **** *
1326:Generated_Source\PSoC4/RTC.c **** * \brief
1327:Generated_Source\PSoC4/RTC.c **** *  This is an internal function to convert the date and time from
1328:Generated_Source\PSoC4/RTC.c **** *  the UNIX time format into the regular time format.
1329:Generated_Source\PSoC4/RTC.c **** *
1330:Generated_Source\PSoC4/RTC.c **** * \param dayOfWeek A day of a week <br>
1331:Generated_Source\PSoC4/RTC.c **** *                 RTC_SUNDAY <br>
1332:Generated_Source\PSoC4/RTC.c **** *                 RTC_MONDAY <br>
1333:Generated_Source\PSoC4/RTC.c **** *                 RTC_TUESDAY <br>
1334:Generated_Source\PSoC4/RTC.c **** *                 RTC_WEDNESDAY <br>
1335:Generated_Source\PSoC4/RTC.c **** *                 RTC_THURSDAY <br>
1336:Generated_Source\PSoC4/RTC.c **** *                 RTC_FRIDAY <br>
1337:Generated_Source\PSoC4/RTC.c **** *                 RTC_SATURDAY <br>
1338:Generated_Source\PSoC4/RTC.c **** *
1339:Generated_Source\PSoC4/RTC.c **** * \param weekOfMonth A week of a month <br>
1340:Generated_Source\PSoC4/RTC.c **** *                 RTC_FIRST <br>
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 82


1341:Generated_Source\PSoC4/RTC.c **** *                 RTC_SECOND <br>
1342:Generated_Source\PSoC4/RTC.c **** *                 RTC_THIRD <br>
1343:Generated_Source\PSoC4/RTC.c **** *                 RTC_FOURTH <br>
1344:Generated_Source\PSoC4/RTC.c **** *                 RTC_LAST <br>
1345:Generated_Source\PSoC4/RTC.c **** *
1346:Generated_Source\PSoC4/RTC.c **** * \param month A month of a year <br>
1347:Generated_Source\PSoC4/RTC.c **** *                   RTC_JANUARY <br>
1348:Generated_Source\PSoC4/RTC.c **** *                  RTC_FEBRUARY <br>
1349:Generated_Source\PSoC4/RTC.c **** *                  RTC_MARCH <br>
1350:Generated_Source\PSoC4/RTC.c **** *                  RTC_APRIL <br>
1351:Generated_Source\PSoC4/RTC.c **** *                  RTC_MAY <br>
1352:Generated_Source\PSoC4/RTC.c **** *                  RTC_JUNE <br>
1353:Generated_Source\PSoC4/RTC.c **** *                  RTC_JULY <br>
1354:Generated_Source\PSoC4/RTC.c **** *                  RTC_AUGUST <br>
1355:Generated_Source\PSoC4/RTC.c **** *                  RTC_SEPTEMBER <br>
1356:Generated_Source\PSoC4/RTC.c **** *                  RTC_OCTOBER <br>
1357:Generated_Source\PSoC4/RTC.c **** *                  RTC_NOVEMBER <br>
1358:Generated_Source\PSoC4/RTC.c **** *                  RTC_DECEMBER <br>
1359:Generated_Source\PSoC4/RTC.c **** *
1360:Generated_Source\PSoC4/RTC.c **** * \param year A year value.
1361:Generated_Source\PSoC4/RTC.c **** *
1362:Generated_Source\PSoC4/RTC.c **** * \return A date in the "date format".
1363:Generated_Source\PSoC4/RTC.c **** *
1364:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/RTC.c **** void RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat)
1366:Generated_Source\PSoC4/RTC.c **** {
 2059              		.loc 2 1366 0
 2060              		.cfi_startproc
 2061              		@ args = 4, pretend = 0, frame = 120
 2062              		@ frame_needed = 1, uses_anonymous_args = 0
 2063 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2064              		.cfi_def_cfa_offset 20
 2065              		.cfi_offset 4, -20
 2066              		.cfi_offset 5, -16
 2067              		.cfi_offset 6, -12
 2068              		.cfi_offset 7, -8
 2069              		.cfi_offset 14, -4
 2070 0002 A1B0     		sub	sp, sp, #132
 2071              		.cfi_def_cfa_offset 152
 2072 0004 02AF     		add	r7, sp, #8
 2073              		.cfi_def_cfa 7, 144
 2074 0006 7865     		str	r0, [r7, #84]
 2075 0008 BA64     		str	r2, [r7, #72]
 2076 000a FB64     		str	r3, [r7, #76]
1367:Generated_Source\PSoC4/RTC.c ****     uint32 tmpMinute;
1368:Generated_Source\PSoC4/RTC.c ****     uint32 tmpHour;
1369:Generated_Source\PSoC4/RTC.c ****     uint32 tmpAmPmState;
1370:Generated_Source\PSoC4/RTC.c **** 
1371:Generated_Source\PSoC4/RTC.c ****     uint32 tmpDay;
1372:Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
1373:Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
1374:Generated_Source\PSoC4/RTC.c **** 
1375:Generated_Source\PSoC4/RTC.c ****     uint32 tmpVar;
1376:Generated_Source\PSoC4/RTC.c **** 
1377:Generated_Source\PSoC4/RTC.c ****     tmpAmPmState = 0u;
 2077              		.loc 2 1377 0
 2078 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 83


 2079 000e 3B67     		str	r3, [r7, #112]
1378:Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_YEAR_0;
 2080              		.loc 2 1378 0
 2081 0010 9C4B     		ldr	r3, .L138
 2082 0012 BB66     		str	r3, [r7, #104]
1379:Generated_Source\PSoC4/RTC.c ****     tmpVar = RTC_SECONDS_PER_NONLEAP_YEAR;
 2083              		.loc 2 1379 0
 2084 0014 9C4B     		ldr	r3, .L138+4
 2085 0016 7B66     		str	r3, [r7, #100]
1380:Generated_Source\PSoC4/RTC.c **** 
1381:Generated_Source\PSoC4/RTC.c ****     /* Calculates current year value. Variable tmpYear
1382:Generated_Source\PSoC4/RTC.c ****     *  increments while it contains value greater than number
1383:Generated_Source\PSoC4/RTC.c ****     *  of seconds in current year.
1384:Generated_Source\PSoC4/RTC.c ****     */
1385:Generated_Source\PSoC4/RTC.c ****     while(unixTime > tmpVar)
 2086              		.loc 2 1385 0
 2087 0018 19E0     		b	.L109
 2088              	.L111:
1386:Generated_Source\PSoC4/RTC.c ****     {
1387:Generated_Source\PSoC4/RTC.c ****         unixTime -= tmpVar;
 2089              		.loc 2 1387 0
 2090 001a 7B6E     		ldr	r3, [r7, #100]
 2091 001c BB60     		str	r3, [r7, #8]
 2092 001e 0023     		movs	r3, #0
 2093 0020 FB60     		str	r3, [r7, #12]
 2094 0022 BB6C     		ldr	r3, [r7, #72]
 2095 0024 FC6C     		ldr	r4, [r7, #76]
 2096 0026 B968     		ldr	r1, [r7, #8]
 2097 0028 FA68     		ldr	r2, [r7, #12]
 2098 002a 5B1A     		subs	r3, r3, r1
 2099 002c 9441     		sbcs	r4, r4, r2
 2100 002e BB64     		str	r3, [r7, #72]
 2101 0030 FC64     		str	r4, [r7, #76]
1388:Generated_Source\PSoC4/RTC.c ****         tmpYear++;
 2102              		.loc 2 1388 0
 2103 0032 BB6E     		ldr	r3, [r7, #104]
 2104 0034 0133     		adds	r3, r3, #1
 2105 0036 BB66     		str	r3, [r7, #104]
1389:Generated_Source\PSoC4/RTC.c **** 
1390:Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(tmpYear))
 2106              		.loc 2 1390 0
 2107 0038 BB6E     		ldr	r3, [r7, #104]
 2108 003a 1800     		movs	r0, r3
 2109 003c FFF7FEFF 		bl	RTC_LeapYear
 2110 0040 031E     		subs	r3, r0, #0
 2111 0042 02D0     		beq	.L110
1391:Generated_Source\PSoC4/RTC.c ****         {
1392:Generated_Source\PSoC4/RTC.c ****             tmpVar = RTC_SECONDS_PER_LEAP_YEAR;
 2112              		.loc 2 1392 0
 2113 0044 914B     		ldr	r3, .L138+8
 2114 0046 7B66     		str	r3, [r7, #100]
 2115 0048 01E0     		b	.L109
 2116              	.L110:
1393:Generated_Source\PSoC4/RTC.c ****         }
1394:Generated_Source\PSoC4/RTC.c ****         else
1395:Generated_Source\PSoC4/RTC.c ****         {
1396:Generated_Source\PSoC4/RTC.c ****             tmpVar = RTC_SECONDS_PER_NONLEAP_YEAR;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 84


 2117              		.loc 2 1396 0
 2118 004a 8F4B     		ldr	r3, .L138+4
 2119 004c 7B66     		str	r3, [r7, #100]
 2120              	.L109:
1385:Generated_Source\PSoC4/RTC.c ****     {
 2121              		.loc 2 1385 0
 2122 004e 7B6E     		ldr	r3, [r7, #100]
 2123 0050 1D00     		movs	r5, r3
 2124 0052 0023     		movs	r3, #0
 2125 0054 1E00     		movs	r6, r3
 2126 0056 FB6C     		ldr	r3, [r7, #76]
 2127 0058 B342     		cmp	r3, r6
 2128 005a DED8     		bhi	.L111
 2129 005c FB6C     		ldr	r3, [r7, #76]
 2130 005e B342     		cmp	r3, r6
 2131 0060 02D1     		bne	.L132
 2132 0062 BB6C     		ldr	r3, [r7, #72]
 2133 0064 AB42     		cmp	r3, r5
 2134 0066 D8D8     		bhi	.L111
 2135              	.L132:
1397:Generated_Source\PSoC4/RTC.c ****         }
1398:Generated_Source\PSoC4/RTC.c **** 
1399:Generated_Source\PSoC4/RTC.c ****     }
1400:Generated_Source\PSoC4/RTC.c **** 
1401:Generated_Source\PSoC4/RTC.c ****     /* Calculates current month value. tmpMonth variable increments
1402:Generated_Source\PSoC4/RTC.c ****      * while unixTime variable value is greater than time
1403:Generated_Source\PSoC4/RTC.c ****      * interval from beginning of current year to beginning of
1404:Generated_Source\PSoC4/RTC.c ****      * current month
1405:Generated_Source\PSoC4/RTC.c ****     */
1406:Generated_Source\PSoC4/RTC.c ****     tmpMonth = (uint32)RTC_JANUARY;
 2136              		.loc 2 1406 0
 2137 0068 0123     		movs	r3, #1
 2138 006a FB66     		str	r3, [r7, #108]
1407:Generated_Source\PSoC4/RTC.c ****     tmpVar = RTC_DaysInMonth(tmpMonth, tmpYear) * RTC_SECONDS_PER_DAY;
 2139              		.loc 2 1407 0
 2140 006c BA6E     		ldr	r2, [r7, #104]
 2141 006e FB6E     		ldr	r3, [r7, #108]
 2142 0070 1100     		movs	r1, r2
 2143 0072 1800     		movs	r0, r3
 2144 0074 FFF7FEFF 		bl	RTC_DaysInMonth
 2145 0078 0200     		movs	r2, r0
 2146 007a 854B     		ldr	r3, .L138+12
 2147 007c 5343     		muls	r3, r2
 2148 007e 7B66     		str	r3, [r7, #100]
1408:Generated_Source\PSoC4/RTC.c **** 
1409:Generated_Source\PSoC4/RTC.c ****     while(unixTime >= tmpVar)
 2149              		.loc 2 1409 0
 2150 0080 18E0     		b	.L113
 2151              	.L114:
1410:Generated_Source\PSoC4/RTC.c ****     {
1411:Generated_Source\PSoC4/RTC.c ****         unixTime -= tmpVar;
 2152              		.loc 2 1411 0
 2153 0082 7B6E     		ldr	r3, [r7, #100]
 2154 0084 3B60     		str	r3, [r7]
 2155 0086 0023     		movs	r3, #0
 2156 0088 7B60     		str	r3, [r7, #4]
 2157 008a BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 85


 2158 008c FC6C     		ldr	r4, [r7, #76]
 2159 008e 3968     		ldr	r1, [r7]
 2160 0090 7A68     		ldr	r2, [r7, #4]
 2161 0092 5B1A     		subs	r3, r3, r1
 2162 0094 9441     		sbcs	r4, r4, r2
 2163 0096 BB64     		str	r3, [r7, #72]
 2164 0098 FC64     		str	r4, [r7, #76]
1412:Generated_Source\PSoC4/RTC.c ****         tmpMonth++;
 2165              		.loc 2 1412 0
 2166 009a FB6E     		ldr	r3, [r7, #108]
 2167 009c 0133     		adds	r3, r3, #1
 2168 009e FB66     		str	r3, [r7, #108]
1413:Generated_Source\PSoC4/RTC.c ****         tmpVar = RTC_DaysInMonth(tmpMonth, tmpYear) * RTC_SECONDS_PER_DAY;
 2169              		.loc 2 1413 0
 2170 00a0 BA6E     		ldr	r2, [r7, #104]
 2171 00a2 FB6E     		ldr	r3, [r7, #108]
 2172 00a4 1100     		movs	r1, r2
 2173 00a6 1800     		movs	r0, r3
 2174 00a8 FFF7FEFF 		bl	RTC_DaysInMonth
 2175 00ac 0200     		movs	r2, r0
 2176 00ae 784B     		ldr	r3, .L138+12
 2177 00b0 5343     		muls	r3, r2
 2178 00b2 7B66     		str	r3, [r7, #100]
 2179              	.L113:
1409:Generated_Source\PSoC4/RTC.c ****     {
 2180              		.loc 2 1409 0
 2181 00b4 7B6E     		ldr	r3, [r7, #100]
 2182 00b6 3B64     		str	r3, [r7, #64]
 2183 00b8 0023     		movs	r3, #0
 2184 00ba 7B64     		str	r3, [r7, #68]
 2185 00bc FB6C     		ldr	r3, [r7, #76]
 2186 00be 7A6C     		ldr	r2, [r7, #68]
 2187 00c0 9342     		cmp	r3, r2
 2188 00c2 07D3     		bcc	.L133
 2189 00c4 FB6C     		ldr	r3, [r7, #76]
 2190 00c6 7A6C     		ldr	r2, [r7, #68]
 2191 00c8 9342     		cmp	r3, r2
 2192 00ca DAD1     		bne	.L114
 2193 00cc BB6C     		ldr	r3, [r7, #72]
 2194 00ce 3A6C     		ldr	r2, [r7, #64]
 2195 00d0 9342     		cmp	r3, r2
 2196 00d2 D6D2     		bcs	.L114
 2197              	.L133:
1414:Generated_Source\PSoC4/RTC.c ****     }
1415:Generated_Source\PSoC4/RTC.c **** 
1416:Generated_Source\PSoC4/RTC.c ****     /* Calculates current day value. */
1417:Generated_Source\PSoC4/RTC.c ****     tmpDay = (unixTime / RTC_SECONDS_PER_DAY);
 2198              		.loc 2 1417 0
 2199 00d4 B86C     		ldr	r0, [r7, #72]
 2200 00d6 F96C     		ldr	r1, [r7, #76]
 2201 00d8 6D4A     		ldr	r2, .L138+12
 2202 00da 0023     		movs	r3, #0
 2203 00dc FFF7FEFF 		bl	__aeabi_uldivmod
 2204 00e0 0300     		movs	r3, r0
 2205 00e2 0C00     		movs	r4, r1
 2206 00e4 3B66     		str	r3, [r7, #96]
1418:Generated_Source\PSoC4/RTC.c ****     tmpVar = tmpDay * RTC_SECONDS_PER_DAY;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 86


 2207              		.loc 2 1418 0
 2208 00e6 3A6E     		ldr	r2, [r7, #96]
 2209 00e8 694B     		ldr	r3, .L138+12
 2210 00ea 5343     		muls	r3, r2
 2211 00ec 7B66     		str	r3, [r7, #100]
1419:Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2212              		.loc 2 1419 0
 2213 00ee 7B6E     		ldr	r3, [r7, #100]
 2214 00f0 BB63     		str	r3, [r7, #56]
 2215 00f2 0023     		movs	r3, #0
 2216 00f4 FB63     		str	r3, [r7, #60]
 2217 00f6 FB6C     		ldr	r3, [r7, #76]
 2218 00f8 FA6B     		ldr	r2, [r7, #60]
 2219 00fa 9342     		cmp	r3, r2
 2220 00fc 0CD3     		bcc	.L116
 2221 00fe FB6C     		ldr	r3, [r7, #76]
 2222 0100 FA6B     		ldr	r2, [r7, #60]
 2223 0102 9342     		cmp	r3, r2
 2224 0104 03D1     		bne	.L134
 2225 0106 BB6C     		ldr	r3, [r7, #72]
 2226 0108 BA6B     		ldr	r2, [r7, #56]
 2227 010a 9342     		cmp	r3, r2
 2228 010c 04D3     		bcc	.L116
 2229              	.L134:
 2230              		.loc 2 1419 0 is_stmt 0 discriminator 1
 2231 010e 7B6E     		ldr	r3, [r7, #100]
 2232 0110 3B62     		str	r3, [r7, #32]
 2233 0112 0023     		movs	r3, #0
 2234 0114 7B62     		str	r3, [r7, #36]
 2235 0116 03E0     		b	.L118
 2236              	.L116:
 2237              		.loc 2 1419 0 discriminator 2
 2238 0118 0023     		movs	r3, #0
 2239 011a 0024     		movs	r4, #0
 2240 011c 3B62     		str	r3, [r7, #32]
 2241 011e 7C62     		str	r4, [r7, #36]
 2242              	.L118:
 2243              		.loc 2 1419 0 discriminator 4
 2244 0120 BB6C     		ldr	r3, [r7, #72]
 2245 0122 FC6C     		ldr	r4, [r7, #76]
 2246 0124 396A     		ldr	r1, [r7, #32]
 2247 0126 7A6A     		ldr	r2, [r7, #36]
 2248 0128 5B1A     		subs	r3, r3, r1
 2249 012a 9441     		sbcs	r4, r4, r2
 2250 012c BB64     		str	r3, [r7, #72]
 2251 012e FC64     		str	r4, [r7, #76]
1420:Generated_Source\PSoC4/RTC.c ****     tmpDay += 1u;
 2252              		.loc 2 1420 0 is_stmt 1 discriminator 4
 2253 0130 3B6E     		ldr	r3, [r7, #96]
 2254 0132 0133     		adds	r3, r3, #1
 2255 0134 3B66     		str	r3, [r7, #96]
1421:Generated_Source\PSoC4/RTC.c **** 
1422:Generated_Source\PSoC4/RTC.c ****     /* Calculates current hour value. If function works in 12-Hour mode,
1423:Generated_Source\PSoC4/RTC.c ****      * it converts time to 12-Hours mode and calculates AmPm status */
1424:Generated_Source\PSoC4/RTC.c ****     tmpHour = unixTime / RTC_SECONDS_PER_HOUR;
 2256              		.loc 2 1424 0 discriminator 4
 2257 0136 B86C     		ldr	r0, [r7, #72]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 87


 2258 0138 F96C     		ldr	r1, [r7, #76]
 2259 013a E122     		movs	r2, #225
 2260 013c 1201     		lsls	r2, r2, #4
 2261 013e 0023     		movs	r3, #0
 2262 0140 FFF7FEFF 		bl	__aeabi_uldivmod
 2263 0144 0300     		movs	r3, r0
 2264 0146 0C00     		movs	r4, r1
 2265 0148 7B67     		str	r3, [r7, #116]
1425:Generated_Source\PSoC4/RTC.c ****     tmpVar  = tmpHour * RTC_SECONDS_PER_HOUR;
 2266              		.loc 2 1425 0 discriminator 4
 2267 014a 7B6F     		ldr	r3, [r7, #116]
 2268 014c E122     		movs	r2, #225
 2269 014e 1201     		lsls	r2, r2, #4
 2270 0150 5343     		muls	r3, r2
 2271 0152 7B66     		str	r3, [r7, #100]
1426:Generated_Source\PSoC4/RTC.c ****     if((uint32)RTC_24_HOURS_FORMAT != timeFormat)
 2272              		.loc 2 1426 0 discriminator 4
 2273 0154 9023     		movs	r3, #144
 2274 0156 FB18     		adds	r3, r7, r3
 2275 0158 1B68     		ldr	r3, [r3]
 2276 015a 002B     		cmp	r3, #0
 2277 015c 1DD0     		beq	.L119
1427:Generated_Source\PSoC4/RTC.c ****     {
1428:Generated_Source\PSoC4/RTC.c ****         if(unixTime > RTC_UNIX_TIME_PM)
 2278              		.loc 2 1428 0
 2279 015e FB6C     		ldr	r3, [r7, #76]
 2280 0160 002B     		cmp	r3, #0
 2281 0162 06D1     		bne	.L135
 2282 0164 FB6C     		ldr	r3, [r7, #76]
 2283 0166 002B     		cmp	r3, #0
 2284 0168 0ED1     		bne	.L120
 2285 016a BB6C     		ldr	r3, [r7, #72]
 2286 016c 494A     		ldr	r2, .L138+16
 2287 016e 9342     		cmp	r3, r2
 2288 0170 0AD9     		bls	.L120
 2289              	.L135:
1429:Generated_Source\PSoC4/RTC.c ****         {
1430:Generated_Source\PSoC4/RTC.c ****             tmpAmPmState = RTC_PM;
 2290              		.loc 2 1430 0
 2291 0172 0123     		movs	r3, #1
 2292 0174 3B67     		str	r3, [r7, #112]
1431:Generated_Source\PSoC4/RTC.c ****             tmpHour = (tmpHour > 12u) ? (tmpHour - 12u) : tmpHour;
 2293              		.loc 2 1431 0
 2294 0176 7B6F     		ldr	r3, [r7, #116]
 2295 0178 0C2B     		cmp	r3, #12
 2296 017a 02D9     		bls	.L122
 2297              		.loc 2 1431 0 is_stmt 0 discriminator 1
 2298 017c 7B6F     		ldr	r3, [r7, #116]
 2299 017e 0C3B     		subs	r3, r3, #12
 2300 0180 00E0     		b	.L123
 2301              	.L122:
 2302              		.loc 2 1431 0 discriminator 2
 2303 0182 7B6F     		ldr	r3, [r7, #116]
 2304              	.L123:
 2305              		.loc 2 1431 0 discriminator 4
 2306 0184 7B67     		str	r3, [r7, #116]
 2307 0186 08E0     		b	.L119
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 88


 2308              	.L120:
1432:Generated_Source\PSoC4/RTC.c ****         }
1433:Generated_Source\PSoC4/RTC.c ****         else
1434:Generated_Source\PSoC4/RTC.c ****         {
1435:Generated_Source\PSoC4/RTC.c ****             tmpAmPmState = RTC_AM;
 2309              		.loc 2 1435 0 is_stmt 1
 2310 0188 0023     		movs	r3, #0
 2311 018a 3B67     		str	r3, [r7, #112]
1436:Generated_Source\PSoC4/RTC.c ****             tmpHour = (0u != tmpHour) ? tmpHour : 12u;
 2312              		.loc 2 1436 0
 2313 018c 7B6F     		ldr	r3, [r7, #116]
 2314 018e 002B     		cmp	r3, #0
 2315 0190 01D0     		beq	.L124
 2316              		.loc 2 1436 0 is_stmt 0 discriminator 1
 2317 0192 7B6F     		ldr	r3, [r7, #116]
 2318 0194 00E0     		b	.L125
 2319              	.L124:
 2320              		.loc 2 1436 0 discriminator 2
 2321 0196 0C23     		movs	r3, #12
 2322              	.L125:
 2323              		.loc 2 1436 0 discriminator 4
 2324 0198 7B67     		str	r3, [r7, #116]
 2325              	.L119:
1437:Generated_Source\PSoC4/RTC.c ****         }
1438:Generated_Source\PSoC4/RTC.c ****     }
1439:Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2326              		.loc 2 1439 0 is_stmt 1
 2327 019a 7B6E     		ldr	r3, [r7, #100]
 2328 019c 3B63     		str	r3, [r7, #48]
 2329 019e 0023     		movs	r3, #0
 2330 01a0 7B63     		str	r3, [r7, #52]
 2331 01a2 FB6C     		ldr	r3, [r7, #76]
 2332 01a4 7A6B     		ldr	r2, [r7, #52]
 2333 01a6 9342     		cmp	r3, r2
 2334 01a8 0CD3     		bcc	.L126
 2335 01aa FB6C     		ldr	r3, [r7, #76]
 2336 01ac 7A6B     		ldr	r2, [r7, #52]
 2337 01ae 9342     		cmp	r3, r2
 2338 01b0 03D1     		bne	.L136
 2339 01b2 BB6C     		ldr	r3, [r7, #72]
 2340 01b4 3A6B     		ldr	r2, [r7, #48]
 2341 01b6 9342     		cmp	r3, r2
 2342 01b8 04D3     		bcc	.L126
 2343              	.L136:
 2344              		.loc 2 1439 0 is_stmt 0 discriminator 1
 2345 01ba 7B6E     		ldr	r3, [r7, #100]
 2346 01bc BB61     		str	r3, [r7, #24]
 2347 01be 0023     		movs	r3, #0
 2348 01c0 FB61     		str	r3, [r7, #28]
 2349 01c2 03E0     		b	.L128
 2350              	.L126:
 2351              		.loc 2 1439 0 discriminator 2
 2352 01c4 0023     		movs	r3, #0
 2353 01c6 0024     		movs	r4, #0
 2354 01c8 BB61     		str	r3, [r7, #24]
 2355 01ca FC61     		str	r4, [r7, #28]
 2356              	.L128:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 89


 2357              		.loc 2 1439 0 discriminator 4
 2358 01cc BB6C     		ldr	r3, [r7, #72]
 2359 01ce FC6C     		ldr	r4, [r7, #76]
 2360 01d0 B969     		ldr	r1, [r7, #24]
 2361 01d2 FA69     		ldr	r2, [r7, #28]
 2362 01d4 5B1A     		subs	r3, r3, r1
 2363 01d6 9441     		sbcs	r4, r4, r2
 2364 01d8 BB64     		str	r3, [r7, #72]
 2365 01da FC64     		str	r4, [r7, #76]
1440:Generated_Source\PSoC4/RTC.c **** 
1441:Generated_Source\PSoC4/RTC.c ****     /* Calculates current minute.  */
1442:Generated_Source\PSoC4/RTC.c ****     tmpMinute = unixTime / RTC_SECONDS_PER_MINUTE;
 2366              		.loc 2 1442 0 is_stmt 1 discriminator 4
 2367 01dc B86C     		ldr	r0, [r7, #72]
 2368 01de F96C     		ldr	r1, [r7, #76]
 2369 01e0 3C22     		movs	r2, #60
 2370 01e2 0023     		movs	r3, #0
 2371 01e4 FFF7FEFF 		bl	__aeabi_uldivmod
 2372 01e8 0300     		movs	r3, r0
 2373 01ea 0C00     		movs	r4, r1
 2374 01ec FB65     		str	r3, [r7, #92]
1443:Generated_Source\PSoC4/RTC.c ****     tmpVar = tmpMinute * RTC_SECONDS_PER_MINUTE;
 2375              		.loc 2 1443 0 discriminator 4
 2376 01ee FA6D     		ldr	r2, [r7, #92]
 2377 01f0 1300     		movs	r3, r2
 2378 01f2 1B01     		lsls	r3, r3, #4
 2379 01f4 9B1A     		subs	r3, r3, r2
 2380 01f6 9B00     		lsls	r3, r3, #2
 2381 01f8 7B66     		str	r3, [r7, #100]
1444:Generated_Source\PSoC4/RTC.c **** 
1445:Generated_Source\PSoC4/RTC.c ****     /* Calculates current second. */
1446:Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2382              		.loc 2 1446 0 discriminator 4
 2383 01fa 7B6E     		ldr	r3, [r7, #100]
 2384 01fc BB62     		str	r3, [r7, #40]
 2385 01fe 0023     		movs	r3, #0
 2386 0200 FB62     		str	r3, [r7, #44]
 2387 0202 FB6C     		ldr	r3, [r7, #76]
 2388 0204 FA6A     		ldr	r2, [r7, #44]
 2389 0206 9342     		cmp	r3, r2
 2390 0208 0CD3     		bcc	.L129
 2391 020a FB6C     		ldr	r3, [r7, #76]
 2392 020c FA6A     		ldr	r2, [r7, #44]
 2393 020e 9342     		cmp	r3, r2
 2394 0210 03D1     		bne	.L137
 2395 0212 BB6C     		ldr	r3, [r7, #72]
 2396 0214 BA6A     		ldr	r2, [r7, #40]
 2397 0216 9342     		cmp	r3, r2
 2398 0218 04D3     		bcc	.L129
 2399              	.L137:
 2400              		.loc 2 1446 0 is_stmt 0 discriminator 1
 2401 021a 7B6E     		ldr	r3, [r7, #100]
 2402 021c 3B61     		str	r3, [r7, #16]
 2403 021e 0023     		movs	r3, #0
 2404 0220 7B61     		str	r3, [r7, #20]
 2405 0222 03E0     		b	.L131
 2406              	.L129:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 90


 2407              		.loc 2 1446 0 discriminator 2
 2408 0224 0023     		movs	r3, #0
 2409 0226 0024     		movs	r4, #0
 2410 0228 3B61     		str	r3, [r7, #16]
 2411 022a 7C61     		str	r4, [r7, #20]
 2412              	.L131:
 2413              		.loc 2 1446 0 discriminator 4
 2414 022c BB6C     		ldr	r3, [r7, #72]
 2415 022e FC6C     		ldr	r4, [r7, #76]
 2416 0230 3969     		ldr	r1, [r7, #16]
 2417 0232 7A69     		ldr	r2, [r7, #20]
 2418 0234 5B1A     		subs	r3, r3, r1
 2419 0236 9441     		sbcs	r4, r4, r2
 2420 0238 BB64     		str	r3, [r7, #72]
 2421 023a FC64     		str	r4, [r7, #76]
1447:Generated_Source\PSoC4/RTC.c **** 
1448:Generated_Source\PSoC4/RTC.c **** 
1449:Generated_Source\PSoC4/RTC.c ****     dateTime->date = RTC_ConstructDate(tmpMonth, tmpDay, tmpYear);
 2422              		.loc 2 1449 0 is_stmt 1 discriminator 4
 2423 023c BA6E     		ldr	r2, [r7, #104]
 2424 023e 396E     		ldr	r1, [r7, #96]
 2425 0240 FB6E     		ldr	r3, [r7, #108]
 2426 0242 1800     		movs	r0, r3
 2427 0244 FFF7FEFF 		bl	RTC_ConstructDate
 2428 0248 0200     		movs	r2, r0
 2429 024a 7B6D     		ldr	r3, [r7, #84]
 2430 024c 5A60     		str	r2, [r3, #4]
1450:Generated_Source\PSoC4/RTC.c ****     dateTime->time = RTC_ConstructTime(timeFormat, tmpAmPmState, tmpHour, tmpMinute, unixTime);
 2431              		.loc 2 1450 0 discriminator 4
 2432 024e BB6C     		ldr	r3, [r7, #72]
 2433 0250 FC6D     		ldr	r4, [r7, #92]
 2434 0252 7A6F     		ldr	r2, [r7, #116]
 2435 0254 396F     		ldr	r1, [r7, #112]
 2436 0256 9020     		movs	r0, #144
 2437 0258 3818     		adds	r0, r7, r0
 2438 025a 0068     		ldr	r0, [r0]
 2439 025c 0093     		str	r3, [sp]
 2440 025e 2300     		movs	r3, r4
 2441 0260 FFF7FEFF 		bl	RTC_ConstructTime
 2442 0264 0200     		movs	r2, r0
 2443 0266 7B6D     		ldr	r3, [r7, #84]
 2444 0268 1A60     		str	r2, [r3]
1451:Generated_Source\PSoC4/RTC.c ****     dateTime->dayOfWeek = RTC_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 2445              		.loc 2 1451 0 discriminator 4
 2446 026a BA6E     		ldr	r2, [r7, #104]
 2447 026c F96E     		ldr	r1, [r7, #108]
 2448 026e 3B6E     		ldr	r3, [r7, #96]
 2449 0270 1800     		movs	r0, r3
 2450 0272 FFF7FEFF 		bl	RTC_GetDayOfWeek
 2451 0276 0200     		movs	r2, r0
 2452 0278 7B6D     		ldr	r3, [r7, #84]
 2453 027a 9A60     		str	r2, [r3, #8]
1452:Generated_Source\PSoC4/RTC.c **** }
 2454              		.loc 2 1452 0 discriminator 4
 2455 027c C046     		nop
 2456 027e BD46     		mov	sp, r7
 2457 0280 1FB0     		add	sp, sp, #124
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 91


 2458              		@ sp needed
 2459 0282 F0BD     		pop	{r4, r5, r6, r7, pc}
 2460              	.L139:
 2461              		.align	2
 2462              	.L138:
 2463 0284 B2070000 		.word	1970
 2464 0288 8033E101 		.word	31536000
 2465 028c 0085E201 		.word	31622400
 2466 0290 80510100 		.word	86400
 2467 0294 C1A80000 		.word	43201
 2468              		.cfi_endproc
 2469              	.LFE45:
 2470              		.size	RTC_UnixToDateTime, .-RTC_UnixToDateTime
 2471              		.section	.text.RTC_RelativeToFixed,"ax",%progbits
 2472              		.align	2
 2473              		.global	RTC_RelativeToFixed
 2474              		.code	16
 2475              		.thumb_func
 2476              		.type	RTC_RelativeToFixed, %function
 2477              	RTC_RelativeToFixed:
 2478              	.LFB46:
1453:Generated_Source\PSoC4/RTC.c **** 
1454:Generated_Source\PSoC4/RTC.c **** 
1455:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1456:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_RelativeToFixed
1457:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1458:Generated_Source\PSoC4/RTC.c **** *
1459:Generated_Source\PSoC4/RTC.c **** * \brief
1460:Generated_Source\PSoC4/RTC.c **** * This is an internal function to convert a relative date into
1461:Generated_Source\PSoC4/RTC.c **** * a fixed date.
1462:Generated_Source\PSoC4/RTC.c **** *
1463:Generated_Source\PSoC4/RTC.c **** * \param dayOfWeek A day of a week <br>
1464:Generated_Source\PSoC4/RTC.c **** *                 RTC_SUNDAY <br>
1465:Generated_Source\PSoC4/RTC.c **** *                 RTC_MONDAY <br>
1466:Generated_Source\PSoC4/RTC.c **** *                 RTC_TUESDAY <br>
1467:Generated_Source\PSoC4/RTC.c **** *                 RTC_WEDNESDAY <br>
1468:Generated_Source\PSoC4/RTC.c **** *                 RTC_THURSDAY <br>
1469:Generated_Source\PSoC4/RTC.c **** *                 RTC_FRIDAY <br>
1470:Generated_Source\PSoC4/RTC.c **** *                 RTC_SATURDAY <br>
1471:Generated_Source\PSoC4/RTC.c **** *
1472:Generated_Source\PSoC4/RTC.c **** *  \param weekOfMonth A week of a month <br>
1473:Generated_Source\PSoC4/RTC.c **** *                 RTC_FIRST <br>
1474:Generated_Source\PSoC4/RTC.c **** *                 RTC_SECOND <br>
1475:Generated_Source\PSoC4/RTC.c **** *                 RTC_THIRD <br>
1476:Generated_Source\PSoC4/RTC.c **** *                 RTC_FOURTH <br>
1477:Generated_Source\PSoC4/RTC.c **** *                 RTC_FIFTH <br>
1478:Generated_Source\PSoC4/RTC.c **** *                 RTC_LAST <br>
1479:Generated_Source\PSoC4/RTC.c **** *
1480:Generated_Source\PSoC4/RTC.c **** * \param month A month of a year <br>
1481:Generated_Source\PSoC4/RTC.c **** *                  RTC_JANUARY <br>
1482:Generated_Source\PSoC4/RTC.c **** *                  RTC_FEBRUARY <br>
1483:Generated_Source\PSoC4/RTC.c **** *                  RTC_MARCH <br>
1484:Generated_Source\PSoC4/RTC.c **** *                  RTC_APRIL <br>
1485:Generated_Source\PSoC4/RTC.c **** *                  RTC_MAY <br>
1486:Generated_Source\PSoC4/RTC.c **** *                  RTC_JUNE <br>
1487:Generated_Source\PSoC4/RTC.c **** *                  RTC_JULY <br>
1488:Generated_Source\PSoC4/RTC.c **** *                  RTC_AUGUST <br>
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 92


1489:Generated_Source\PSoC4/RTC.c **** *                  RTC_SEPTEMBER <br>
1490:Generated_Source\PSoC4/RTC.c **** *                  RTC_OCTOBER <br>
1491:Generated_Source\PSoC4/RTC.c **** *                  RTC_NOVEMBER <br>
1492:Generated_Source\PSoC4/RTC.c **** *                  RTC_DECEMBER <br>
1493:Generated_Source\PSoC4/RTC.c **** *
1494:Generated_Source\PSoC4/RTC.c **** * \param year A year value.
1495:Generated_Source\PSoC4/RTC.c **** *
1496:Generated_Source\PSoC4/RTC.c **** * \return A date in the "date format".
1497:Generated_Source\PSoC4/RTC.c **** *
1498:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1499:Generated_Source\PSoC4/RTC.c **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year)
1500:Generated_Source\PSoC4/RTC.c **** {
 2479              		.loc 2 1500 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 40
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0000 80B5     		push	{r7, lr}
 2484              		.cfi_def_cfa_offset 8
 2485              		.cfi_offset 7, -8
 2486              		.cfi_offset 14, -4
 2487 0002 8AB0     		sub	sp, sp, #40
 2488              		.cfi_def_cfa_offset 48
 2489 0004 00AF     		add	r7, sp, #0
 2490              		.cfi_def_cfa_register 7
 2491 0006 F860     		str	r0, [r7, #12]
 2492 0008 B960     		str	r1, [r7, #8]
 2493 000a 7A60     		str	r2, [r7, #4]
 2494 000c 3B60     		str	r3, [r7]
1501:Generated_Source\PSoC4/RTC.c ****     uint32 curDay;
1502:Generated_Source\PSoC4/RTC.c ****     uint32 curWeek;
1503:Generated_Source\PSoC4/RTC.c ****     uint32 daysInMonth;
1504:Generated_Source\PSoC4/RTC.c ****     uint32 dayOfMonthTmp;
1505:Generated_Source\PSoC4/RTC.c **** 
1506:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1507:Generated_Source\PSoC4/RTC.c **** 
1508:Generated_Source\PSoC4/RTC.c ****     curDay      = 1u;
 2495              		.loc 2 1508 0
 2496 000e 0123     		movs	r3, #1
 2497 0010 7B62     		str	r3, [r7, #36]
1509:Generated_Source\PSoC4/RTC.c ****     curWeek     = (uint32)RTC_FIRST;
 2498              		.loc 2 1509 0
 2499 0012 0123     		movs	r3, #1
 2500 0014 3B62     		str	r3, [r7, #32]
1510:Generated_Source\PSoC4/RTC.c ****     daysInMonth = RTC_DaysInMonth(month, year);
 2501              		.loc 2 1510 0
 2502 0016 3A68     		ldr	r2, [r7]
 2503 0018 7B68     		ldr	r3, [r7, #4]
 2504 001a 1100     		movs	r1, r2
 2505 001c 1800     		movs	r0, r3
 2506 001e FFF7FEFF 		bl	RTC_DaysInMonth
 2507 0022 0300     		movs	r3, r0
 2508 0024 BB61     		str	r3, [r7, #24]
1511:Generated_Source\PSoC4/RTC.c ****     dayOfMonthTmp = curDay;
 2509              		.loc 2 1511 0
 2510 0026 7B6A     		ldr	r3, [r7, #36]
 2511 0028 FB61     		str	r3, [r7, #28]
1512:Generated_Source\PSoC4/RTC.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 93


1513:Generated_Source\PSoC4/RTC.c ****     while((curWeek <= weekOfMonth) && (curDay <= daysInMonth))
 2512              		.loc 2 1513 0
 2513 002a 11E0     		b	.L141
 2514              	.L144:
1514:Generated_Source\PSoC4/RTC.c ****     {
1515:Generated_Source\PSoC4/RTC.c ****         if(dayOfWeek == RTC_GetDayOfWeek(curDay, month, year))
 2515              		.loc 2 1515 0
 2516 002c 3A68     		ldr	r2, [r7]
 2517 002e 7968     		ldr	r1, [r7, #4]
 2518 0030 7B6A     		ldr	r3, [r7, #36]
 2519 0032 1800     		movs	r0, r3
 2520 0034 FFF7FEFF 		bl	RTC_GetDayOfWeek
 2521 0038 0200     		movs	r2, r0
 2522 003a FB68     		ldr	r3, [r7, #12]
 2523 003c 9A42     		cmp	r2, r3
 2524 003e 04D1     		bne	.L142
1516:Generated_Source\PSoC4/RTC.c ****         {
1517:Generated_Source\PSoC4/RTC.c ****             dayOfMonthTmp = curDay;
 2525              		.loc 2 1517 0
 2526 0040 7B6A     		ldr	r3, [r7, #36]
 2527 0042 FB61     		str	r3, [r7, #28]
1518:Generated_Source\PSoC4/RTC.c ****             curWeek++;
 2528              		.loc 2 1518 0
 2529 0044 3B6A     		ldr	r3, [r7, #32]
 2530 0046 0133     		adds	r3, r3, #1
 2531 0048 3B62     		str	r3, [r7, #32]
 2532              	.L142:
1519:Generated_Source\PSoC4/RTC.c ****         }
1520:Generated_Source\PSoC4/RTC.c ****         curDay++;
 2533              		.loc 2 1520 0
 2534 004a 7B6A     		ldr	r3, [r7, #36]
 2535 004c 0133     		adds	r3, r3, #1
 2536 004e 7B62     		str	r3, [r7, #36]
 2537              	.L141:
1513:Generated_Source\PSoC4/RTC.c ****     {
 2538              		.loc 2 1513 0
 2539 0050 3A6A     		ldr	r2, [r7, #32]
 2540 0052 BB68     		ldr	r3, [r7, #8]
 2541 0054 9A42     		cmp	r2, r3
 2542 0056 03D8     		bhi	.L143
1513:Generated_Source\PSoC4/RTC.c ****     {
 2543              		.loc 2 1513 0 is_stmt 0 discriminator 1
 2544 0058 7A6A     		ldr	r2, [r7, #36]
 2545 005a BB69     		ldr	r3, [r7, #24]
 2546 005c 9A42     		cmp	r2, r3
 2547 005e E5D9     		bls	.L144
 2548              	.L143:
1521:Generated_Source\PSoC4/RTC.c ****     }
1522:Generated_Source\PSoC4/RTC.c **** 
1523:Generated_Source\PSoC4/RTC.c ****     retVal = RTC_ConstructDate(month, dayOfMonthTmp, year);
 2549              		.loc 2 1523 0 is_stmt 1
 2550 0060 3A68     		ldr	r2, [r7]
 2551 0062 F969     		ldr	r1, [r7, #28]
 2552 0064 7B68     		ldr	r3, [r7, #4]
 2553 0066 1800     		movs	r0, r3
 2554 0068 FFF7FEFF 		bl	RTC_ConstructDate
 2555 006c 0300     		movs	r3, r0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 94


 2556 006e 7B61     		str	r3, [r7, #20]
1524:Generated_Source\PSoC4/RTC.c **** 
1525:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 2557              		.loc 2 1525 0
 2558 0070 7B69     		ldr	r3, [r7, #20]
1526:Generated_Source\PSoC4/RTC.c **** }
 2559              		.loc 2 1526 0
 2560 0072 1800     		movs	r0, r3
 2561 0074 BD46     		mov	sp, r7
 2562 0076 0AB0     		add	sp, sp, #40
 2563              		@ sp needed
 2564 0078 80BD     		pop	{r7, pc}
 2565              		.cfi_endproc
 2566              	.LFE46:
 2567              		.size	RTC_RelativeToFixed, .-RTC_RelativeToFixed
 2568 007a C046     		.section	.text.RTC_DaysInMonth,"ax",%progbits
 2569              		.align	2
 2570              		.global	RTC_DaysInMonth
 2571              		.code	16
 2572              		.thumb_func
 2573              		.type	RTC_DaysInMonth, %function
 2574              	RTC_DaysInMonth:
 2575              	.LFB47:
1527:Generated_Source\PSoC4/RTC.c **** 
1528:Generated_Source\PSoC4/RTC.c **** 
1529:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1530:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_DaysInMonth
1531:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1532:Generated_Source\PSoC4/RTC.c **** *
1533:Generated_Source\PSoC4/RTC.c **** * \brief
1534:Generated_Source\PSoC4/RTC.c **** *  Returns a number of days in a month passed through the parameters.
1535:Generated_Source\PSoC4/RTC.c **** *
1536:Generated_Source\PSoC4/RTC.c **** * \param
1537:Generated_Source\PSoC4/RTC.c **** *  month A month of a year
1538:Generated_Source\PSoC4/RTC.c **** *  RTC_JANUARY
1539:Generated_Source\PSoC4/RTC.c **** *  RTC_FEBRUARY
1540:Generated_Source\PSoC4/RTC.c **** *  RTC_MARCH
1541:Generated_Source\PSoC4/RTC.c **** *  RTC_APRIL
1542:Generated_Source\PSoC4/RTC.c **** *  RTC_MAY
1543:Generated_Source\PSoC4/RTC.c **** *  RTC_JUNE
1544:Generated_Source\PSoC4/RTC.c **** *  RTC_JULY
1545:Generated_Source\PSoC4/RTC.c **** *  RTC_AUGUST
1546:Generated_Source\PSoC4/RTC.c **** *  RTC_SEPTEMBER
1547:Generated_Source\PSoC4/RTC.c **** *  RTC_OCTOBER
1548:Generated_Source\PSoC4/RTC.c **** *  RTC_NOVEMBER
1549:Generated_Source\PSoC4/RTC.c **** *  RTC_DECEMBER
1550:Generated_Source\PSoC4/RTC.c **** *
1551:Generated_Source\PSoC4/RTC.c **** * \param
1552:Generated_Source\PSoC4/RTC.c **** * year A year value.
1553:Generated_Source\PSoC4/RTC.c **** *
1554:Generated_Source\PSoC4/RTC.c **** * \return
1555:Generated_Source\PSoC4/RTC.c **** *  A number of days in a month in the year passed through the parameters.
1556:Generated_Source\PSoC4/RTC.c **** *
1557:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1558:Generated_Source\PSoC4/RTC.c **** uint32 RTC_DaysInMonth(uint32 month, uint32 year)
1559:Generated_Source\PSoC4/RTC.c **** {
 2576              		.loc 2 1559 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 95


 2577              		.cfi_startproc
 2578              		@ args = 0, pretend = 0, frame = 16
 2579              		@ frame_needed = 1, uses_anonymous_args = 0
 2580 0000 80B5     		push	{r7, lr}
 2581              		.cfi_def_cfa_offset 8
 2582              		.cfi_offset 7, -8
 2583              		.cfi_offset 14, -4
 2584 0002 84B0     		sub	sp, sp, #16
 2585              		.cfi_def_cfa_offset 24
 2586 0004 00AF     		add	r7, sp, #0
 2587              		.cfi_def_cfa_register 7
 2588 0006 7860     		str	r0, [r7, #4]
 2589 0008 3960     		str	r1, [r7]
1560:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1561:Generated_Source\PSoC4/RTC.c **** 
1562:Generated_Source\PSoC4/RTC.c ****     retVal = RTC_daysInMonthTbl[month - 1u];
 2590              		.loc 2 1562 0
 2591 000a 7B68     		ldr	r3, [r7, #4]
 2592 000c 013B     		subs	r3, r3, #1
 2593 000e 0A4A     		ldr	r2, .L149
 2594 0010 D35C     		ldrb	r3, [r2, r3]
 2595 0012 FB60     		str	r3, [r7, #12]
1563:Generated_Source\PSoC4/RTC.c ****     if((uint32)RTC_FEBRUARY == month)
 2596              		.loc 2 1563 0
 2597 0014 7B68     		ldr	r3, [r7, #4]
 2598 0016 022B     		cmp	r3, #2
 2599 0018 08D1     		bne	.L147
1564:Generated_Source\PSoC4/RTC.c ****     {
1565:Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(year))
 2600              		.loc 2 1565 0
 2601 001a 3B68     		ldr	r3, [r7]
 2602 001c 1800     		movs	r0, r3
 2603 001e FFF7FEFF 		bl	RTC_LeapYear
 2604 0022 031E     		subs	r3, r0, #0
 2605 0024 02D0     		beq	.L147
1566:Generated_Source\PSoC4/RTC.c ****         {
1567:Generated_Source\PSoC4/RTC.c ****             retVal++;
 2606              		.loc 2 1567 0
 2607 0026 FB68     		ldr	r3, [r7, #12]
 2608 0028 0133     		adds	r3, r3, #1
 2609 002a FB60     		str	r3, [r7, #12]
 2610              	.L147:
1568:Generated_Source\PSoC4/RTC.c ****         }
1569:Generated_Source\PSoC4/RTC.c ****     }
1570:Generated_Source\PSoC4/RTC.c **** 
1571:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 2611              		.loc 2 1571 0
 2612 002c FB68     		ldr	r3, [r7, #12]
1572:Generated_Source\PSoC4/RTC.c **** }
 2613              		.loc 2 1572 0
 2614 002e 1800     		movs	r0, r3
 2615 0030 BD46     		mov	sp, r7
 2616 0032 04B0     		add	sp, sp, #16
 2617              		@ sp needed
 2618 0034 80BD     		pop	{r7, pc}
 2619              	.L150:
 2620 0036 C046     		.align	2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 96


 2621              	.L149:
 2622 0038 00000000 		.word	RTC_daysInMonthTbl
 2623              		.cfi_endproc
 2624              	.LFE47:
 2625              		.size	RTC_DaysInMonth, .-RTC_DaysInMonth
 2626              		.section	.text.RTC_DaysBeforeMonth,"ax",%progbits
 2627              		.align	2
 2628              		.global	RTC_DaysBeforeMonth
 2629              		.code	16
 2630              		.thumb_func
 2631              		.type	RTC_DaysBeforeMonth, %function
 2632              	RTC_DaysBeforeMonth:
 2633              	.LFB48:
1573:Generated_Source\PSoC4/RTC.c **** 
1574:Generated_Source\PSoC4/RTC.c **** 
1575:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1576:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_DaysBeforeMonth
1577:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1578:Generated_Source\PSoC4/RTC.c **** *
1579:Generated_Source\PSoC4/RTC.c **** * \brief
1580:Generated_Source\PSoC4/RTC.c **** *  Calculates how many days elapsed from the beginning of the year to the
1581:Generated_Source\PSoC4/RTC.c **** *  beginning of the current month.
1582:Generated_Source\PSoC4/RTC.c **** *
1583:Generated_Source\PSoC4/RTC.c **** * \param
1584:Generated_Source\PSoC4/RTC.c **** *  month A month of a year
1585:Generated_Source\PSoC4/RTC.c **** *  RTC_JANUARY
1586:Generated_Source\PSoC4/RTC.c **** *  RTC_FEBRUARY
1587:Generated_Source\PSoC4/RTC.c **** *  RTC_MARCH
1588:Generated_Source\PSoC4/RTC.c **** *  RTC_APRIL
1589:Generated_Source\PSoC4/RTC.c **** *  RTC_MAY
1590:Generated_Source\PSoC4/RTC.c **** *  RTC_JUNE
1591:Generated_Source\PSoC4/RTC.c **** *  RTC_JULY
1592:Generated_Source\PSoC4/RTC.c **** *  RTC_AUGUST
1593:Generated_Source\PSoC4/RTC.c **** *  RTC_SEPTEMBER
1594:Generated_Source\PSoC4/RTC.c **** *  RTC_OCTOBER
1595:Generated_Source\PSoC4/RTC.c **** *  RTC_NOVEMBER
1596:Generated_Source\PSoC4/RTC.c **** *  RTC_DECEMBER
1597:Generated_Source\PSoC4/RTC.c **** *
1598:Generated_Source\PSoC4/RTC.c **** * \param
1599:Generated_Source\PSoC4/RTC.c **** * year A year value.
1600:Generated_Source\PSoC4/RTC.c **** *
1601:Generated_Source\PSoC4/RTC.c **** * \return
1602:Generated_Source\PSoC4/RTC.c **** *  A number of days elapsed from the beginning of the year to the
1603:Generated_Source\PSoC4/RTC.c **** *  beginning of the current month passed through the parameters.
1604:Generated_Source\PSoC4/RTC.c **** *
1605:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1606:Generated_Source\PSoC4/RTC.c **** uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year)
1607:Generated_Source\PSoC4/RTC.c **** {
 2634              		.loc 2 1607 0
 2635              		.cfi_startproc
 2636              		@ args = 0, pretend = 0, frame = 16
 2637              		@ frame_needed = 1, uses_anonymous_args = 0
 2638 0000 80B5     		push	{r7, lr}
 2639              		.cfi_def_cfa_offset 8
 2640              		.cfi_offset 7, -8
 2641              		.cfi_offset 14, -4
 2642 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 97


 2643              		.cfi_def_cfa_offset 24
 2644 0004 00AF     		add	r7, sp, #0
 2645              		.cfi_def_cfa_register 7
 2646 0006 7860     		str	r0, [r7, #4]
 2647 0008 3960     		str	r1, [r7]
1608:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1609:Generated_Source\PSoC4/RTC.c **** 
1610:Generated_Source\PSoC4/RTC.c ****     retVal = RTC_daysBeforeMonthTbl[month];
 2648              		.loc 2 1610 0
 2649 000a 0B4B     		ldr	r3, .L154
 2650 000c 7A68     		ldr	r2, [r7, #4]
 2651 000e 5200     		lsls	r2, r2, #1
 2652 0010 D35A     		ldrh	r3, [r2, r3]
 2653 0012 FB60     		str	r3, [r7, #12]
1611:Generated_Source\PSoC4/RTC.c ****     if((0u == RTC_LeapYear(year)) && (month > (uint32)RTC_FEBRUARY))
 2654              		.loc 2 1611 0
 2655 0014 3B68     		ldr	r3, [r7]
 2656 0016 1800     		movs	r0, r3
 2657 0018 FFF7FEFF 		bl	RTC_LeapYear
 2658 001c 031E     		subs	r3, r0, #0
 2659 001e 05D1     		bne	.L152
 2660              		.loc 2 1611 0 is_stmt 0 discriminator 1
 2661 0020 7B68     		ldr	r3, [r7, #4]
 2662 0022 022B     		cmp	r3, #2
 2663 0024 02D9     		bls	.L152
1612:Generated_Source\PSoC4/RTC.c ****     {
1613:Generated_Source\PSoC4/RTC.c ****         retVal++;
 2664              		.loc 2 1613 0 is_stmt 1
 2665 0026 FB68     		ldr	r3, [r7, #12]
 2666 0028 0133     		adds	r3, r3, #1
 2667 002a FB60     		str	r3, [r7, #12]
 2668              	.L152:
1614:Generated_Source\PSoC4/RTC.c ****     }
1615:Generated_Source\PSoC4/RTC.c **** 
1616:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 2669              		.loc 2 1616 0
 2670 002c FB68     		ldr	r3, [r7, #12]
1617:Generated_Source\PSoC4/RTC.c **** }
 2671              		.loc 2 1617 0
 2672 002e 1800     		movs	r0, r3
 2673 0030 BD46     		mov	sp, r7
 2674 0032 04B0     		add	sp, sp, #16
 2675              		@ sp needed
 2676 0034 80BD     		pop	{r7, pc}
 2677              	.L155:
 2678 0036 C046     		.align	2
 2679              	.L154:
 2680 0038 00000000 		.word	RTC_daysBeforeMonthTbl
 2681              		.cfi_endproc
 2682              	.LFE48:
 2683              		.size	RTC_DaysBeforeMonth, .-RTC_DaysBeforeMonth
 2684              		.bss
 2685              		.align	2
 2686              	RTC_currentTickNumber.5210:
 2687 000c 00000000 		.space	4
 2688              		.text
 2689              	.Letext0:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 98


 2690              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 2691              		.section	.debug_info,"",%progbits
 2692              	.Ldebug_info0:
 2693 0000 590A0000 		.4byte	0xa59
 2694 0004 0400     		.2byte	0x4
 2695 0006 00000000 		.4byte	.Ldebug_abbrev0
 2696 000a 04       		.byte	0x4
 2697 000b 01       		.uleb128 0x1
 2698 000c 03030000 		.4byte	.LASF102
 2699 0010 0C       		.byte	0xc
 2700 0011 C5030000 		.4byte	.LASF103
 2701 0015 7C020000 		.4byte	.LASF104
 2702 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2703 001d 00000000 		.4byte	0
 2704 0021 00000000 		.4byte	.Ldebug_line0
 2705 0025 02       		.uleb128 0x2
 2706 0026 01       		.byte	0x1
 2707 0027 06       		.byte	0x6
 2708 0028 3C010000 		.4byte	.LASF0
 2709 002c 02       		.uleb128 0x2
 2710 002d 01       		.byte	0x1
 2711 002e 08       		.byte	0x8
 2712 002f 62040000 		.4byte	.LASF1
 2713 0033 02       		.uleb128 0x2
 2714 0034 02       		.byte	0x2
 2715 0035 05       		.byte	0x5
 2716 0036 A7040000 		.4byte	.LASF2
 2717 003a 02       		.uleb128 0x2
 2718 003b 02       		.byte	0x2
 2719 003c 07       		.byte	0x7
 2720 003d E5020000 		.4byte	.LASF3
 2721 0041 02       		.uleb128 0x2
 2722 0042 04       		.byte	0x4
 2723 0043 05       		.byte	0x5
 2724 0044 A2010000 		.4byte	.LASF4
 2725 0048 02       		.uleb128 0x2
 2726 0049 04       		.byte	0x4
 2727 004a 07       		.byte	0x7
 2728 004b B8020000 		.4byte	.LASF5
 2729 004f 02       		.uleb128 0x2
 2730 0050 08       		.byte	0x8
 2731 0051 05       		.byte	0x5
 2732 0052 2E010000 		.4byte	.LASF6
 2733 0056 02       		.uleb128 0x2
 2734 0057 08       		.byte	0x8
 2735 0058 07       		.byte	0x7
 2736 0059 AD000000 		.4byte	.LASF7
 2737 005d 03       		.uleb128 0x3
 2738 005e 04       		.byte	0x4
 2739 005f 05       		.byte	0x5
 2740 0060 696E7400 		.ascii	"int\000"
 2741 0064 02       		.uleb128 0x2
 2742 0065 04       		.byte	0x4
 2743 0066 07       		.byte	0x7
 2744 0067 48020000 		.4byte	.LASF8
 2745 006b 04       		.uleb128 0x4
 2746 006c CE010000 		.4byte	.LASF9
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 99


 2747 0070 03       		.byte	0x3
 2748 0071 9801     		.2byte	0x198
 2749 0073 2C000000 		.4byte	0x2c
 2750 0077 04       		.uleb128 0x4
 2751 0078 1D000000 		.4byte	.LASF10
 2752 007c 03       		.byte	0x3
 2753 007d 9901     		.2byte	0x199
 2754 007f 3A000000 		.4byte	0x3a
 2755 0083 04       		.uleb128 0x4
 2756 0084 03020000 		.4byte	.LASF11
 2757 0088 03       		.byte	0x3
 2758 0089 9A01     		.2byte	0x19a
 2759 008b 48000000 		.4byte	0x48
 2760 008f 02       		.uleb128 0x2
 2761 0090 04       		.byte	0x4
 2762 0091 04       		.byte	0x4
 2763 0092 31040000 		.4byte	.LASF12
 2764 0096 02       		.uleb128 0x2
 2765 0097 08       		.byte	0x8
 2766 0098 04       		.byte	0x4
 2767 0099 EA010000 		.4byte	.LASF13
 2768 009d 04       		.uleb128 0x4
 2769 009e A0040000 		.4byte	.LASF14
 2770 00a2 03       		.byte	0x3
 2771 00a3 A401     		.2byte	0x1a4
 2772 00a5 56000000 		.4byte	0x56
 2773 00a9 02       		.uleb128 0x2
 2774 00aa 01       		.byte	0x1
 2775 00ab 08       		.byte	0x8
 2776 00ac FB040000 		.4byte	.LASF15
 2777 00b0 05       		.uleb128 0x5
 2778 00b1 83000000 		.4byte	0x83
 2779 00b5 02       		.uleb128 0x2
 2780 00b6 08       		.byte	0x8
 2781 00b7 04       		.byte	0x4
 2782 00b8 E2030000 		.4byte	.LASF16
 2783 00bc 02       		.uleb128 0x2
 2784 00bd 04       		.byte	0x4
 2785 00be 07       		.byte	0x7
 2786 00bf BC030000 		.4byte	.LASF17
 2787 00c3 06       		.uleb128 0x6
 2788 00c4 10       		.byte	0x10
 2789 00c5 01       		.byte	0x1
 2790 00c6 29       		.byte	0x29
 2791 00c7 FC000000 		.4byte	0xfc
 2792 00cb 07       		.uleb128 0x7
 2793 00cc 27040000 		.4byte	.LASF18
 2794 00d0 01       		.byte	0x1
 2795 00d1 2B       		.byte	0x2b
 2796 00d2 83000000 		.4byte	0x83
 2797 00d6 00       		.byte	0
 2798 00d7 07       		.uleb128 0x7
 2799 00d8 F8020000 		.4byte	.LASF19
 2800 00dc 01       		.byte	0x1
 2801 00dd 2C       		.byte	0x2c
 2802 00de 83000000 		.4byte	0x83
 2803 00e2 04       		.byte	0x4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 100


 2804 00e3 07       		.uleb128 0x7
 2805 00e4 A4030000 		.4byte	.LASF20
 2806 00e8 01       		.byte	0x1
 2807 00e9 2D       		.byte	0x2d
 2808 00ea 83000000 		.4byte	0x83
 2809 00ee 08       		.byte	0x8
 2810 00ef 07       		.uleb128 0x7
 2811 00f0 78050000 		.4byte	.LASF21
 2812 00f4 01       		.byte	0x1
 2813 00f5 2E       		.byte	0x2e
 2814 00f6 83000000 		.4byte	0x83
 2815 00fa 0C       		.byte	0xc
 2816 00fb 00       		.byte	0
 2817 00fc 08       		.uleb128 0x8
 2818 00fd E1040000 		.4byte	.LASF22
 2819 0101 01       		.byte	0x1
 2820 0102 2F       		.byte	0x2f
 2821 0103 C3000000 		.4byte	0xc3
 2822 0107 09       		.uleb128 0x9
 2823 0108 B9050000 		.4byte	.LASF24
 2824 010c 01       		.byte	0x1
 2825 010d BA01     		.2byte	0x1ba
 2826 010f 83000000 		.4byte	0x83
 2827 0113 00000000 		.4byte	.LFB2
 2828 0117 24000000 		.4byte	.LFE2-.LFB2
 2829 011b 01       		.uleb128 0x1
 2830 011c 9C       		.byte	0x9c
 2831 011d 40010000 		.4byte	0x140
 2832 0121 0A       		.uleb128 0xa
 2833 0122 76617200 		.ascii	"var\000"
 2834 0126 01       		.byte	0x1
 2835 0127 BA01     		.2byte	0x1ba
 2836 0129 83000000 		.4byte	0x83
 2837 012d 02       		.uleb128 0x2
 2838 012e 91       		.byte	0x91
 2839 012f 74       		.sleb128 -12
 2840 0130 0B       		.uleb128 0xb
 2841 0131 2A020000 		.4byte	.LASF23
 2842 0135 01       		.byte	0x1
 2843 0136 BA01     		.2byte	0x1ba
 2844 0138 83000000 		.4byte	0x83
 2845 013c 02       		.uleb128 0x2
 2846 013d 91       		.byte	0x91
 2847 013e 70       		.sleb128 -16
 2848 013f 00       		.byte	0
 2849 0140 0C       		.uleb128 0xc
 2850 0141 66000000 		.4byte	.LASF25
 2851 0145 01       		.byte	0x1
 2852 0146 D201     		.2byte	0x1d2
 2853 0148 83000000 		.4byte	0x83
 2854 014c 00000000 		.4byte	.LFB3
 2855 0150 42000000 		.4byte	.LFE3-.LFB3
 2856 0154 01       		.uleb128 0x1
 2857 0155 9C       		.byte	0x9c
 2858 0156 79010000 		.4byte	0x179
 2859 015a 0B       		.uleb128 0xb
 2860 015b 81010000 		.4byte	.LASF26
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 101


 2861 015f 01       		.byte	0x1
 2862 0160 D201     		.2byte	0x1d2
 2863 0162 83000000 		.4byte	0x83
 2864 0166 02       		.uleb128 0x2
 2865 0167 91       		.byte	0x91
 2866 0168 6C       		.sleb128 -20
 2867 0169 0D       		.uleb128 0xd
 2868 016a 24000000 		.4byte	.LASF29
 2869 016e 01       		.byte	0x1
 2870 016f D401     		.2byte	0x1d4
 2871 0171 83000000 		.4byte	0x83
 2872 0175 02       		.uleb128 0x2
 2873 0176 91       		.byte	0x91
 2874 0177 74       		.sleb128 -12
 2875 0178 00       		.byte	0
 2876 0179 09       		.uleb128 0x9
 2877 017a 2B000000 		.4byte	.LASF27
 2878 017e 01       		.byte	0x1
 2879 017f F101     		.2byte	0x1f1
 2880 0181 83000000 		.4byte	0x83
 2881 0185 00000000 		.4byte	.LFB4
 2882 0189 30000000 		.4byte	.LFE4-.LFB4
 2883 018d 01       		.uleb128 0x1
 2884 018e 9C       		.byte	0x9c
 2885 018f B2010000 		.4byte	0x1b2
 2886 0193 0B       		.uleb128 0xb
 2887 0194 96040000 		.4byte	.LASF28
 2888 0198 01       		.byte	0x1
 2889 0199 F101     		.2byte	0x1f1
 2890 019b 83000000 		.4byte	0x83
 2891 019f 02       		.uleb128 0x2
 2892 01a0 91       		.byte	0x91
 2893 01a1 6C       		.sleb128 -20
 2894 01a2 0D       		.uleb128 0xd
 2895 01a3 24000000 		.4byte	.LASF29
 2896 01a7 01       		.byte	0x1
 2897 01a8 F301     		.2byte	0x1f3
 2898 01aa 83000000 		.4byte	0x83
 2899 01ae 02       		.uleb128 0x2
 2900 01af 91       		.byte	0x91
 2901 01b0 74       		.sleb128 -12
 2902 01b1 00       		.byte	0
 2903 01b2 09       		.uleb128 0x9
 2904 01b3 BF010000 		.4byte	.LASF30
 2905 01b7 01       		.byte	0x1
 2906 01b8 0B02     		.2byte	0x20b
 2907 01ba 83000000 		.4byte	0x83
 2908 01be 00000000 		.4byte	.LFB5
 2909 01c2 32000000 		.4byte	.LFE5-.LFB5
 2910 01c6 01       		.uleb128 0x1
 2911 01c7 9C       		.byte	0x9c
 2912 01c8 EB010000 		.4byte	0x1eb
 2913 01cc 0B       		.uleb128 0xb
 2914 01cd 96040000 		.4byte	.LASF28
 2915 01d1 01       		.byte	0x1
 2916 01d2 0B02     		.2byte	0x20b
 2917 01d4 83000000 		.4byte	0x83
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 102


 2918 01d8 02       		.uleb128 0x2
 2919 01d9 91       		.byte	0x91
 2920 01da 6C       		.sleb128 -20
 2921 01db 0D       		.uleb128 0xd
 2922 01dc 24000000 		.4byte	.LASF29
 2923 01e0 01       		.byte	0x1
 2924 01e1 0D02     		.2byte	0x20d
 2925 01e3 83000000 		.4byte	0x83
 2926 01e7 02       		.uleb128 0x2
 2927 01e8 91       		.byte	0x91
 2928 01e9 74       		.sleb128 -12
 2929 01ea 00       		.byte	0
 2930 01eb 09       		.uleb128 0x9
 2931 01ec CA020000 		.4byte	.LASF31
 2932 01f0 01       		.byte	0x1
 2933 01f1 2402     		.2byte	0x224
 2934 01f3 83000000 		.4byte	0x83
 2935 01f7 00000000 		.4byte	.LFB6
 2936 01fb 32000000 		.4byte	.LFE6-.LFB6
 2937 01ff 01       		.uleb128 0x1
 2938 0200 9C       		.byte	0x9c
 2939 0201 24020000 		.4byte	0x224
 2940 0205 0B       		.uleb128 0xb
 2941 0206 96040000 		.4byte	.LASF28
 2942 020a 01       		.byte	0x1
 2943 020b 2402     		.2byte	0x224
 2944 020d 83000000 		.4byte	0x83
 2945 0211 02       		.uleb128 0x2
 2946 0212 91       		.byte	0x91
 2947 0213 6C       		.sleb128 -20
 2948 0214 0D       		.uleb128 0xd
 2949 0215 24000000 		.4byte	.LASF29
 2950 0219 01       		.byte	0x1
 2951 021a 2602     		.2byte	0x226
 2952 021c 83000000 		.4byte	0x83
 2953 0220 02       		.uleb128 0x2
 2954 0221 91       		.byte	0x91
 2955 0222 74       		.sleb128 -12
 2956 0223 00       		.byte	0
 2957 0224 0C       		.uleb128 0xc
 2958 0225 5E050000 		.4byte	.LASF32
 2959 0229 01       		.byte	0x1
 2960 022a 3F02     		.2byte	0x23f
 2961 022c 83000000 		.4byte	0x83
 2962 0230 00000000 		.4byte	.LFB7
 2963 0234 20000000 		.4byte	.LFE7-.LFB7
 2964 0238 01       		.uleb128 0x1
 2965 0239 9C       		.byte	0x9c
 2966 023a 4E020000 		.4byte	0x24e
 2967 023e 0B       		.uleb128 0xb
 2968 023f 96040000 		.4byte	.LASF28
 2969 0243 01       		.byte	0x1
 2970 0244 3F02     		.2byte	0x23f
 2971 0246 83000000 		.4byte	0x83
 2972 024a 02       		.uleb128 0x2
 2973 024b 91       		.byte	0x91
 2974 024c 74       		.sleb128 -12
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 103


 2975 024d 00       		.byte	0
 2976 024e 09       		.uleb128 0x9
 2977 024f 4A050000 		.4byte	.LASF33
 2978 0253 01       		.byte	0x1
 2979 0254 5302     		.2byte	0x253
 2980 0256 83000000 		.4byte	0x83
 2981 025a 00000000 		.4byte	.LFB8
 2982 025e 32000000 		.4byte	.LFE8-.LFB8
 2983 0262 01       		.uleb128 0x1
 2984 0263 9C       		.byte	0x9c
 2985 0264 87020000 		.4byte	0x287
 2986 0268 0B       		.uleb128 0xb
 2987 0269 F8020000 		.4byte	.LASF19
 2988 026d 01       		.byte	0x1
 2989 026e 5302     		.2byte	0x253
 2990 0270 83000000 		.4byte	0x83
 2991 0274 02       		.uleb128 0x2
 2992 0275 91       		.byte	0x91
 2993 0276 6C       		.sleb128 -20
 2994 0277 0D       		.uleb128 0xd
 2995 0278 24000000 		.4byte	.LASF29
 2996 027c 01       		.byte	0x1
 2997 027d 5502     		.2byte	0x255
 2998 027f 83000000 		.4byte	0x83
 2999 0283 02       		.uleb128 0x2
 3000 0284 91       		.byte	0x91
 3001 0285 74       		.sleb128 -12
 3002 0286 00       		.byte	0
 3003 0287 09       		.uleb128 0x9
 3004 0288 10000000 		.4byte	.LASF34
 3005 028c 01       		.byte	0x1
 3006 028d 6C02     		.2byte	0x26c
 3007 028f 83000000 		.4byte	0x83
 3008 0293 00000000 		.4byte	.LFB9
 3009 0297 32000000 		.4byte	.LFE9-.LFB9
 3010 029b 01       		.uleb128 0x1
 3011 029c 9C       		.byte	0x9c
 3012 029d C0020000 		.4byte	0x2c0
 3013 02a1 0B       		.uleb128 0xb
 3014 02a2 F8020000 		.4byte	.LASF19
 3015 02a6 01       		.byte	0x1
 3016 02a7 6C02     		.2byte	0x26c
 3017 02a9 83000000 		.4byte	0x83
 3018 02ad 02       		.uleb128 0x2
 3019 02ae 91       		.byte	0x91
 3020 02af 6C       		.sleb128 -20
 3021 02b0 0D       		.uleb128 0xd
 3022 02b1 24000000 		.4byte	.LASF29
 3023 02b5 01       		.byte	0x1
 3024 02b6 6E02     		.2byte	0x26e
 3025 02b8 83000000 		.4byte	0x83
 3026 02bc 02       		.uleb128 0x2
 3027 02bd 91       		.byte	0x91
 3028 02be 74       		.sleb128 -12
 3029 02bf 00       		.byte	0
 3030 02c0 09       		.uleb128 0x9
 3031 02c1 F1010000 		.4byte	.LASF35
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 104


 3032 02c5 01       		.byte	0x1
 3033 02c6 8502     		.2byte	0x285
 3034 02c8 83000000 		.4byte	0x83
 3035 02cc 00000000 		.4byte	.LFB10
 3036 02d0 58000000 		.4byte	.LFE10-.LFB10
 3037 02d4 01       		.uleb128 0x1
 3038 02d5 9C       		.byte	0x9c
 3039 02d6 F9020000 		.4byte	0x2f9
 3040 02da 0B       		.uleb128 0xb
 3041 02db F8020000 		.4byte	.LASF19
 3042 02df 01       		.byte	0x1
 3043 02e0 8502     		.2byte	0x285
 3044 02e2 83000000 		.4byte	0x83
 3045 02e6 02       		.uleb128 0x2
 3046 02e7 91       		.byte	0x91
 3047 02e8 6C       		.sleb128 -20
 3048 02e9 0D       		.uleb128 0xd
 3049 02ea 24000000 		.4byte	.LASF29
 3050 02ee 01       		.byte	0x1
 3051 02ef 8702     		.2byte	0x287
 3052 02f1 83000000 		.4byte	0x83
 3053 02f5 02       		.uleb128 0x2
 3054 02f6 91       		.byte	0x91
 3055 02f7 74       		.sleb128 -12
 3056 02f8 00       		.byte	0
 3057 02f9 09       		.uleb128 0x9
 3058 02fa 4C000000 		.4byte	.LASF36
 3059 02fe 01       		.byte	0x1
 3060 02ff 0304     		.2byte	0x403
 3061 0301 83000000 		.4byte	0x83
 3062 0305 00000000 		.4byte	.LFB24
 3063 0309 20000000 		.4byte	.LFE24-.LFB24
 3064 030d 01       		.uleb128 0x1
 3065 030e 9C       		.byte	0x9c
 3066 030f 23030000 		.4byte	0x323
 3067 0313 0B       		.uleb128 0xb
 3068 0314 96040000 		.4byte	.LASF28
 3069 0318 01       		.byte	0x1
 3070 0319 0304     		.2byte	0x403
 3071 031b 83000000 		.4byte	0x83
 3072 031f 02       		.uleb128 0x2
 3073 0320 91       		.byte	0x91
 3074 0321 74       		.sleb128 -12
 3075 0322 00       		.byte	0
 3076 0323 0C       		.uleb128 0xc
 3077 0324 84040000 		.4byte	.LASF37
 3078 0328 01       		.byte	0x1
 3079 0329 2904     		.2byte	0x429
 3080 032b 83000000 		.4byte	0x83
 3081 032f 00000000 		.4byte	.LFB25
 3082 0333 A0000000 		.4byte	.LFE25-.LFB25
 3083 0337 01       		.uleb128 0x1
 3084 0338 9C       		.byte	0x9c
 3085 0339 98030000 		.4byte	0x398
 3086 033d 0B       		.uleb128 0xb
 3087 033e 55020000 		.4byte	.LASF38
 3088 0342 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 105


 3089 0343 2904     		.2byte	0x429
 3090 0345 83000000 		.4byte	0x83
 3091 0349 02       		.uleb128 0x2
 3092 034a 91       		.byte	0x91
 3093 034b 6C       		.sleb128 -20
 3094 034c 0B       		.uleb128 0xb
 3095 034d 58040000 		.4byte	.LASF39
 3096 0351 01       		.byte	0x1
 3097 0352 2904     		.2byte	0x429
 3098 0354 83000000 		.4byte	0x83
 3099 0358 02       		.uleb128 0x2
 3100 0359 91       		.byte	0x91
 3101 035a 68       		.sleb128 -24
 3102 035b 0B       		.uleb128 0xb
 3103 035c 2C040000 		.4byte	.LASF40
 3104 0360 01       		.byte	0x1
 3105 0361 2904     		.2byte	0x429
 3106 0363 83000000 		.4byte	0x83
 3107 0367 02       		.uleb128 0x2
 3108 0368 91       		.byte	0x91
 3109 0369 64       		.sleb128 -28
 3110 036a 0A       		.uleb128 0xa
 3111 036b 6D696E00 		.ascii	"min\000"
 3112 036f 01       		.byte	0x1
 3113 0370 2904     		.2byte	0x429
 3114 0372 83000000 		.4byte	0x83
 3115 0376 02       		.uleb128 0x2
 3116 0377 91       		.byte	0x91
 3117 0378 60       		.sleb128 -32
 3118 0379 0A       		.uleb128 0xa
 3119 037a 73656300 		.ascii	"sec\000"
 3120 037e 01       		.byte	0x1
 3121 037f 2904     		.2byte	0x429
 3122 0381 83000000 		.4byte	0x83
 3123 0385 02       		.uleb128 0x2
 3124 0386 91       		.byte	0x91
 3125 0387 00       		.sleb128 0
 3126 0388 0D       		.uleb128 0xd
 3127 0389 24000000 		.4byte	.LASF29
 3128 038d 01       		.byte	0x1
 3129 038e 2B04     		.2byte	0x42b
 3130 0390 83000000 		.4byte	0x83
 3131 0394 02       		.uleb128 0x2
 3132 0395 91       		.byte	0x91
 3133 0396 74       		.sleb128 -12
 3134 0397 00       		.byte	0
 3135 0398 0C       		.uleb128 0xc
 3136 0399 1B050000 		.4byte	.LASF41
 3137 039d 01       		.byte	0x1
 3138 039e 5204     		.2byte	0x452
 3139 03a0 83000000 		.4byte	0x83
 3140 03a4 00000000 		.4byte	.LFB26
 3141 03a8 D6000000 		.4byte	.LFE26-.LFB26
 3142 03ac 01       		.uleb128 0x1
 3143 03ad 9C       		.byte	0x9c
 3144 03ae FE030000 		.4byte	0x3fe
 3145 03b2 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 106


 3146 03b3 42020000 		.4byte	.LASF42
 3147 03b7 01       		.byte	0x1
 3148 03b8 5204     		.2byte	0x452
 3149 03ba 83000000 		.4byte	0x83
 3150 03be 02       		.uleb128 0x2
 3151 03bf 91       		.byte	0x91
 3152 03c0 6C       		.sleb128 -20
 3153 03c1 0A       		.uleb128 0xa
 3154 03c2 64617900 		.ascii	"day\000"
 3155 03c6 01       		.byte	0x1
 3156 03c7 5204     		.2byte	0x452
 3157 03c9 83000000 		.4byte	0x83
 3158 03cd 02       		.uleb128 0x2
 3159 03ce 91       		.byte	0x91
 3160 03cf 68       		.sleb128 -24
 3161 03d0 0B       		.uleb128 0xb
 3162 03d1 81010000 		.4byte	.LASF26
 3163 03d5 01       		.byte	0x1
 3164 03d6 5204     		.2byte	0x452
 3165 03d8 83000000 		.4byte	0x83
 3166 03dc 02       		.uleb128 0x2
 3167 03dd 91       		.byte	0x91
 3168 03de 64       		.sleb128 -28
 3169 03df 0D       		.uleb128 0xd
 3170 03e0 24000000 		.4byte	.LASF29
 3171 03e4 01       		.byte	0x1
 3172 03e5 5404     		.2byte	0x454
 3173 03e7 83000000 		.4byte	0x83
 3174 03eb 02       		.uleb128 0x2
 3175 03ec 91       		.byte	0x91
 3176 03ed 70       		.sleb128 -16
 3177 03ee 0D       		.uleb128 0xd
 3178 03ef BA040000 		.4byte	.LASF43
 3179 03f3 01       		.byte	0x1
 3180 03f4 5504     		.2byte	0x455
 3181 03f6 83000000 		.4byte	0x83
 3182 03fa 02       		.uleb128 0x2
 3183 03fb 91       		.byte	0x91
 3184 03fc 74       		.sleb128 -12
 3185 03fd 00       		.byte	0
 3186 03fe 0C       		.uleb128 0xc
 3187 03ff C4000000 		.4byte	.LASF44
 3188 0403 01       		.byte	0x1
 3189 0404 A404     		.2byte	0x4a4
 3190 0406 83000000 		.4byte	0x83
 3191 040a 00000000 		.4byte	.LFB27
 3192 040e 88000000 		.4byte	.LFE27-.LFB27
 3193 0412 01       		.uleb128 0x1
 3194 0413 9C       		.byte	0x9c
 3195 0414 55040000 		.4byte	0x455
 3196 0418 0A       		.uleb128 0xa
 3197 0419 64617900 		.ascii	"day\000"
 3198 041d 01       		.byte	0x1
 3199 041e A404     		.2byte	0x4a4
 3200 0420 83000000 		.4byte	0x83
 3201 0424 02       		.uleb128 0x2
 3202 0425 91       		.byte	0x91
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 107


 3203 0426 64       		.sleb128 -28
 3204 0427 0B       		.uleb128 0xb
 3205 0428 42020000 		.4byte	.LASF42
 3206 042c 01       		.byte	0x1
 3207 042d A404     		.2byte	0x4a4
 3208 042f 83000000 		.4byte	0x83
 3209 0433 02       		.uleb128 0x2
 3210 0434 91       		.byte	0x91
 3211 0435 60       		.sleb128 -32
 3212 0436 0B       		.uleb128 0xb
 3213 0437 81010000 		.4byte	.LASF26
 3214 043b 01       		.byte	0x1
 3215 043c A404     		.2byte	0x4a4
 3216 043e 83000000 		.4byte	0x83
 3217 0442 02       		.uleb128 0x2
 3218 0443 91       		.byte	0x91
 3219 0444 5C       		.sleb128 -36
 3220 0445 0D       		.uleb128 0xd
 3221 0446 24000000 		.4byte	.LASF29
 3222 044a 01       		.byte	0x1
 3223 044b A604     		.2byte	0x4a6
 3224 044d 83000000 		.4byte	0x83
 3225 0451 02       		.uleb128 0x2
 3226 0452 91       		.byte	0x91
 3227 0453 6C       		.sleb128 -20
 3228 0454 00       		.byte	0
 3229 0455 0E       		.uleb128 0xe
 3230 0456 6B010000 		.4byte	.LASF45
 3231 045a 02       		.byte	0x2
 3232 045b 5A       		.byte	0x5a
 3233 045c 00000000 		.4byte	.LFB28
 3234 0460 1C000000 		.4byte	.LFE28-.LFB28
 3235 0464 01       		.uleb128 0x1
 3236 0465 9C       		.byte	0x9c
 3237 0466 0F       		.uleb128 0xf
 3238 0467 B1040000 		.4byte	.LASF46
 3239 046b 02       		.byte	0x2
 3240 046c 71       		.byte	0x71
 3241 046d 00000000 		.4byte	.LFB29
 3242 0471 0A000000 		.4byte	.LFE29-.LFB29
 3243 0475 01       		.uleb128 0x1
 3244 0476 9C       		.byte	0x9c
 3245 0477 10       		.uleb128 0x10
 3246 0478 86000000 		.4byte	.LASF49
 3247 047c 02       		.byte	0x2
 3248 047d 8C       		.byte	0x8c
 3249 047e 00000000 		.4byte	.LFB30
 3250 0482 74000000 		.4byte	.LFE30-.LFB30
 3251 0486 01       		.uleb128 0x1
 3252 0487 9C       		.byte	0x9c
 3253 0488 A9040000 		.4byte	0x4a9
 3254 048c 11       		.uleb128 0x11
 3255 048d 5E000000 		.4byte	.LASF47
 3256 0491 02       		.byte	0x2
 3257 0492 8E       		.byte	0x8e
 3258 0493 83000000 		.4byte	0x83
 3259 0497 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 108


 3260 0498 91       		.byte	0x91
 3261 0499 74       		.sleb128 -12
 3262 049a 11       		.uleb128 0x11
 3263 049b 9A050000 		.4byte	.LASF48
 3264 049f 02       		.byte	0x2
 3265 04a0 8F       		.byte	0x8f
 3266 04a1 83000000 		.4byte	0x83
 3267 04a5 02       		.uleb128 0x2
 3268 04a6 91       		.byte	0x91
 3269 04a7 70       		.sleb128 -16
 3270 04a8 00       		.byte	0
 3271 04a9 10       		.uleb128 0x10
 3272 04aa 17020000 		.4byte	.LASF50
 3273 04ae 02       		.byte	0x2
 3274 04af E5       		.byte	0xe5
 3275 04b0 00000000 		.4byte	.LFB31
 3276 04b4 74000000 		.4byte	.LFE31-.LFB31
 3277 04b8 01       		.uleb128 0x1
 3278 04b9 9C       		.byte	0x9c
 3279 04ba 05050000 		.4byte	0x505
 3280 04be 12       		.uleb128 0x12
 3281 04bf 96040000 		.4byte	.LASF28
 3282 04c3 02       		.byte	0x2
 3283 04c4 E5       		.byte	0xe5
 3284 04c5 83000000 		.4byte	0x83
 3285 04c9 02       		.uleb128 0x2
 3286 04ca 91       		.byte	0x91
 3287 04cb 5C       		.sleb128 -36
 3288 04cc 12       		.uleb128 0x12
 3289 04cd 2D050000 		.4byte	.LASF51
 3290 04d1 02       		.byte	0x2
 3291 04d2 E5       		.byte	0xe5
 3292 04d3 83000000 		.4byte	0x83
 3293 04d7 02       		.uleb128 0x2
 3294 04d8 91       		.byte	0x91
 3295 04d9 58       		.sleb128 -40
 3296 04da 11       		.uleb128 0x11
 3297 04db 09000000 		.4byte	.LASF52
 3298 04df 02       		.byte	0x2
 3299 04e0 E7       		.byte	0xe7
 3300 04e1 83000000 		.4byte	0x83
 3301 04e5 02       		.uleb128 0x2
 3302 04e6 91       		.byte	0x91
 3303 04e7 6C       		.sleb128 -20
 3304 04e8 11       		.uleb128 0x11
 3305 04e9 E5000000 		.4byte	.LASF53
 3306 04ed 02       		.byte	0x2
 3307 04ee E8       		.byte	0xe8
 3308 04ef 83000000 		.4byte	0x83
 3309 04f3 02       		.uleb128 0x2
 3310 04f4 91       		.byte	0x91
 3311 04f5 68       		.sleb128 -24
 3312 04f6 11       		.uleb128 0x11
 3313 04f7 EE030000 		.4byte	.LASF54
 3314 04fb 02       		.byte	0x2
 3315 04fc E9       		.byte	0xe9
 3316 04fd 83000000 		.4byte	0x83
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 109


 3317 0501 02       		.uleb128 0x2
 3318 0502 91       		.byte	0x91
 3319 0503 64       		.sleb128 -28
 3320 0504 00       		.byte	0
 3321 0505 13       		.uleb128 0x13
 3322 0506 86010000 		.4byte	.LASF55
 3323 050a 02       		.byte	0x2
 3324 050b 1901     		.2byte	0x119
 3325 050d 00000000 		.4byte	.LFB32
 3326 0511 38000000 		.4byte	.LFE32-.LFB32
 3327 0515 01       		.uleb128 0x1
 3328 0516 9C       		.byte	0x9c
 3329 0517 3A050000 		.4byte	0x53a
 3330 051b 0B       		.uleb128 0xb
 3331 051c 55050000 		.4byte	.LASF56
 3332 0520 02       		.byte	0x2
 3333 0521 1901     		.2byte	0x119
 3334 0523 9D000000 		.4byte	0x9d
 3335 0527 02       		.uleb128 0x2
 3336 0528 91       		.byte	0x91
 3337 0529 58       		.sleb128 -40
 3338 052a 0D       		.uleb128 0xd
 3339 052b AD050000 		.4byte	.LASF57
 3340 052f 02       		.byte	0x2
 3341 0530 1B01     		.2byte	0x11b
 3342 0532 FC000000 		.4byte	0xfc
 3343 0536 02       		.uleb128 0x2
 3344 0537 91       		.byte	0x91
 3345 0538 60       		.sleb128 -32
 3346 0539 00       		.byte	0
 3347 053a 14       		.uleb128 0x14
 3348 053b 37040000 		.4byte	.LASF61
 3349 053f 02       		.byte	0x2
 3350 0540 3E01     		.2byte	0x13e
 3351 0542 9D000000 		.4byte	0x9d
 3352 0546 00000000 		.4byte	.LFB33
 3353 054a 18000000 		.4byte	.LFE33-.LFB33
 3354 054e 01       		.uleb128 0x1
 3355 054f 9C       		.byte	0x9c
 3356 0550 15       		.uleb128 0x15
 3357 0551 48010000 		.4byte	.LASF58
 3358 0555 02       		.byte	0x2
 3359 0556 5A01     		.2byte	0x15a
 3360 0558 00000000 		.4byte	.LFB34
 3361 055c 28000000 		.4byte	.LFE34-.LFB34
 3362 0560 01       		.uleb128 0x1
 3363 0561 9C       		.byte	0x9c
 3364 0562 85050000 		.4byte	0x585
 3365 0566 0B       		.uleb128 0xb
 3366 0567 FD020000 		.4byte	.LASF59
 3367 056b 02       		.byte	0x2
 3368 056c 5A01     		.2byte	0x15a
 3369 056e 83000000 		.4byte	0x83
 3370 0572 02       		.uleb128 0x2
 3371 0573 91       		.byte	0x91
 3372 0574 74       		.sleb128 -12
 3373 0575 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 110


 3374 0576 D4010000 		.4byte	.LASF60
 3375 057a 02       		.byte	0x2
 3376 057b 5A01     		.2byte	0x15a
 3377 057d 83000000 		.4byte	0x83
 3378 0581 02       		.uleb128 0x2
 3379 0582 91       		.byte	0x91
 3380 0583 70       		.sleb128 -16
 3381 0584 00       		.byte	0
 3382 0585 14       		.uleb128 0x14
 3383 0586 D7020000 		.4byte	.LASF62
 3384 058a 02       		.byte	0x2
 3385 058b 6B01     		.2byte	0x16b
 3386 058d 83000000 		.4byte	0x83
 3387 0591 00000000 		.4byte	.LFB35
 3388 0595 14000000 		.4byte	.LFE35-.LFB35
 3389 0599 01       		.uleb128 0x1
 3390 059a 9C       		.byte	0x9c
 3391 059b 14       		.uleb128 0x14
 3392 059c 47040000 		.4byte	.LASF63
 3393 05a0 02       		.byte	0x2
 3394 05a1 7C01     		.2byte	0x17c
 3395 05a3 83000000 		.4byte	0x83
 3396 05a7 00000000 		.4byte	.LFB36
 3397 05ab 14000000 		.4byte	.LFE36-.LFB36
 3398 05af 01       		.uleb128 0x1
 3399 05b0 9C       		.byte	0x9c
 3400 05b1 13       		.uleb128 0x13
 3401 05b2 39000000 		.4byte	.LASF64
 3402 05b6 02       		.byte	0x2
 3403 05b7 8C01     		.2byte	0x18c
 3404 05b9 00000000 		.4byte	.LFB37
 3405 05bd 3C000000 		.4byte	.LFE37-.LFB37
 3406 05c1 01       		.uleb128 0x1
 3407 05c2 9C       		.byte	0x9c
 3408 05c3 D7050000 		.4byte	0x5d7
 3409 05c7 0B       		.uleb128 0xb
 3410 05c8 00000000 		.4byte	.LASF65
 3411 05cc 02       		.byte	0x2
 3412 05cd 8C01     		.2byte	0x18c
 3413 05cf D7050000 		.4byte	0x5d7
 3414 05d3 02       		.uleb128 0x2
 3415 05d4 91       		.byte	0x91
 3416 05d5 6C       		.sleb128 -20
 3417 05d6 00       		.byte	0
 3418 05d7 16       		.uleb128 0x16
 3419 05d8 04       		.byte	0x4
 3420 05d9 FC000000 		.4byte	0xfc
 3421 05dd 17       		.uleb128 0x17
 3422 05de 8E050000 		.4byte	.LASF66
 3423 05e2 02       		.byte	0x2
 3424 05e3 A301     		.2byte	0x1a3
 3425 05e5 83000000 		.4byte	0x83
 3426 05e9 00000000 		.4byte	.LFB38
 3427 05ed 44000000 		.4byte	.LFE38-.LFB38
 3428 05f1 01       		.uleb128 0x1
 3429 05f2 9C       		.byte	0x9c
 3430 05f3 17       		.uleb128 0x17
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 111


 3431 05f4 EF040000 		.4byte	.LASF67
 3432 05f8 02       		.byte	0x2
 3433 05f9 BD01     		.2byte	0x1bd
 3434 05fb 83000000 		.4byte	0x83
 3435 05ff 00000000 		.4byte	.LFB39
 3436 0603 44000000 		.4byte	.LFE39-.LFB39
 3437 0607 01       		.uleb128 0x1
 3438 0608 9C       		.byte	0x9c
 3439 0609 18       		.uleb128 0x18
 3440 060a 7F050000 		.4byte	.LASF69
 3441 060e 02       		.byte	0x2
 3442 060f 9B03     		.2byte	0x39b
 3443 0611 83000000 		.4byte	0x83
 3444 0615 00000000 		.4byte	.LFB40
 3445 0619 80000000 		.4byte	.LFE40-.LFB40
 3446 061d 01       		.uleb128 0x1
 3447 061e 9C       		.byte	0x9c
 3448 061f 42060000 		.4byte	0x642
 3449 0623 0D       		.uleb128 0xd
 3450 0624 EE030000 		.4byte	.LASF54
 3451 0628 02       		.byte	0x2
 3452 0629 9D03     		.2byte	0x39d
 3453 062b 83000000 		.4byte	0x83
 3454 062f 02       		.uleb128 0x2
 3455 0630 91       		.byte	0x91
 3456 0631 74       		.sleb128 -12
 3457 0632 0D       		.uleb128 0xd
 3458 0633 96010000 		.4byte	.LASF68
 3459 0637 02       		.byte	0x2
 3460 0638 9E03     		.2byte	0x39e
 3461 063a FC000000 		.4byte	0xfc
 3462 063e 02       		.uleb128 0x2
 3463 063f 91       		.byte	0x91
 3464 0640 64       		.sleb128 -28
 3465 0641 00       		.byte	0
 3466 0642 19       		.uleb128 0x19
 3467 0643 AB010000 		.4byte	.LASF70
 3468 0647 02       		.byte	0x2
 3469 0648 5E04     		.2byte	0x45e
 3470 064a 83000000 		.4byte	0x83
 3471 064e 00000000 		.4byte	.LFB41
 3472 0652 4E000000 		.4byte	.LFE41-.LFB41
 3473 0656 01       		.uleb128 0x1
 3474 0657 9C       		.byte	0x9c
 3475 0658 97060000 		.4byte	0x697
 3476 065c 0B       		.uleb128 0xb
 3477 065d 1B010000 		.4byte	.LASF71
 3478 0661 02       		.byte	0x2
 3479 0662 5E04     		.2byte	0x45e
 3480 0664 83000000 		.4byte	0x83
 3481 0668 02       		.uleb128 0x2
 3482 0669 91       		.byte	0x91
 3483 066a 64       		.sleb128 -28
 3484 066b 1A       		.uleb128 0x1a
 3485 066c 6900     		.ascii	"i\000"
 3486 066e 02       		.byte	0x2
 3487 066f 6004     		.2byte	0x460
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 112


 3488 0671 83000000 		.4byte	0x83
 3489 0675 02       		.uleb128 0x2
 3490 0676 91       		.byte	0x91
 3491 0677 74       		.sleb128 -12
 3492 0678 0D       		.uleb128 0xd
 3493 0679 00050000 		.4byte	.LASF72
 3494 067d 02       		.byte	0x2
 3495 067e 6104     		.2byte	0x461
 3496 0680 83000000 		.4byte	0x83
 3497 0684 02       		.uleb128 0x2
 3498 0685 91       		.byte	0x91
 3499 0686 70       		.sleb128 -16
 3500 0687 0D       		.uleb128 0xd
 3501 0688 24000000 		.4byte	.LASF29
 3502 068c 02       		.byte	0x2
 3503 068d 6204     		.2byte	0x462
 3504 068f 83000000 		.4byte	0x83
 3505 0693 02       		.uleb128 0x2
 3506 0694 91       		.byte	0x91
 3507 0695 6C       		.sleb128 -20
 3508 0696 00       		.byte	0
 3509 0697 18       		.uleb128 0x18
 3510 0698 60020000 		.4byte	.LASF73
 3511 069c 02       		.byte	0x2
 3512 069d 8404     		.2byte	0x484
 3513 069f 83000000 		.4byte	0x83
 3514 06a3 00000000 		.4byte	.LFB42
 3515 06a7 60000000 		.4byte	.LFE42-.LFB42
 3516 06ab 01       		.uleb128 0x1
 3517 06ac 9C       		.byte	0x9c
 3518 06ad EE060000 		.4byte	0x6ee
 3519 06b1 0B       		.uleb128 0xb
 3520 06b2 DA040000 		.4byte	.LASF74
 3521 06b6 02       		.byte	0x2
 3522 06b7 8404     		.2byte	0x484
 3523 06b9 83000000 		.4byte	0x83
 3524 06bd 02       		.uleb128 0x2
 3525 06be 91       		.byte	0x91
 3526 06bf 64       		.sleb128 -28
 3527 06c0 0D       		.uleb128 0xd
 3528 06c1 FD010000 		.4byte	.LASF75
 3529 06c5 02       		.byte	0x2
 3530 06c6 8604     		.2byte	0x486
 3531 06c8 83000000 		.4byte	0x83
 3532 06cc 02       		.uleb128 0x2
 3533 06cd 91       		.byte	0x91
 3534 06ce 74       		.sleb128 -12
 3535 06cf 0D       		.uleb128 0xd
 3536 06d0 BA040000 		.4byte	.LASF43
 3537 06d4 02       		.byte	0x2
 3538 06d5 8704     		.2byte	0x487
 3539 06d7 83000000 		.4byte	0x83
 3540 06db 02       		.uleb128 0x2
 3541 06dc 91       		.byte	0x91
 3542 06dd 70       		.sleb128 -16
 3543 06de 0D       		.uleb128 0xd
 3544 06df 24000000 		.4byte	.LASF29
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 113


 3545 06e3 02       		.byte	0x2
 3546 06e4 8804     		.2byte	0x488
 3547 06e6 83000000 		.4byte	0x83
 3548 06ea 02       		.uleb128 0x2
 3549 06eb 91       		.byte	0x91
 3550 06ec 6C       		.sleb128 -20
 3551 06ed 00       		.byte	0
 3552 06ee 15       		.uleb128 0x15
 3553 06ef A2050000 		.4byte	.LASF76
 3554 06f3 02       		.byte	0x2
 3555 06f4 B704     		.2byte	0x4b7
 3556 06f6 00000000 		.4byte	.LFB43
 3557 06fa 50000000 		.4byte	.LFE43-.LFB43
 3558 06fe 01       		.uleb128 0x1
 3559 06ff 9C       		.byte	0x9c
 3560 0700 17070000 		.4byte	0x717
 3561 0704 0D       		.uleb128 0xd
 3562 0705 05050000 		.4byte	.LASF77
 3563 0709 02       		.byte	0x2
 3564 070a B904     		.2byte	0x4b9
 3565 070c B0000000 		.4byte	0xb0
 3566 0710 05       		.uleb128 0x5
 3567 0711 03       		.byte	0x3
 3568 0712 0C000000 		.4byte	RTC_currentTickNumber.5210
 3569 0716 00       		.byte	0
 3570 0717 18       		.uleb128 0x18
 3571 0718 91030000 		.4byte	.LASF78
 3572 071c 02       		.byte	0x2
 3573 071d F204     		.2byte	0x4f2
 3574 071f 9D000000 		.4byte	0x9d
 3575 0723 00000000 		.4byte	.LFB44
 3576 0727 90010000 		.4byte	.LFE44-.LFB44
 3577 072b 01       		.uleb128 0x1
 3578 072c 9C       		.byte	0x9c
 3579 072d 99070000 		.4byte	0x799
 3580 0731 0B       		.uleb128 0xb
 3581 0732 2D050000 		.4byte	.LASF51
 3582 0736 02       		.byte	0x2
 3583 0737 F204     		.2byte	0x4f2
 3584 0739 83000000 		.4byte	0x83
 3585 073d 02       		.uleb128 0x2
 3586 073e 91       		.byte	0x91
 3587 073f 4C       		.sleb128 -52
 3588 0740 0B       		.uleb128 0xb
 3589 0741 96040000 		.4byte	.LASF28
 3590 0745 02       		.byte	0x2
 3591 0746 F204     		.2byte	0x4f2
 3592 0748 83000000 		.4byte	0x83
 3593 074c 02       		.uleb128 0x2
 3594 074d 91       		.byte	0x91
 3595 074e 48       		.sleb128 -56
 3596 074f 1A       		.uleb128 0x1a
 3597 0750 6900     		.ascii	"i\000"
 3598 0752 02       		.byte	0x2
 3599 0753 F404     		.2byte	0x4f4
 3600 0755 83000000 		.4byte	0x83
 3601 0759 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 114


 3602 075a 91       		.byte	0x91
 3603 075b 64       		.sleb128 -28
 3604 075c 0D       		.uleb128 0xd
 3605 075d EE030000 		.4byte	.LASF54
 3606 0761 02       		.byte	0x2
 3607 0762 F504     		.2byte	0x4f5
 3608 0764 83000000 		.4byte	0x83
 3609 0768 02       		.uleb128 0x2
 3610 0769 91       		.byte	0x91
 3611 076a 54       		.sleb128 -44
 3612 076b 0D       		.uleb128 0xd
 3613 076c E5000000 		.4byte	.LASF53
 3614 0770 02       		.byte	0x2
 3615 0771 F604     		.2byte	0x4f6
 3616 0773 83000000 		.4byte	0x83
 3617 0777 02       		.uleb128 0x2
 3618 0778 91       		.byte	0x91
 3619 0779 50       		.sleb128 -48
 3620 077a 0D       		.uleb128 0xd
 3621 077b BA040000 		.4byte	.LASF43
 3622 077f 02       		.byte	0x2
 3623 0780 F704     		.2byte	0x4f7
 3624 0782 83000000 		.4byte	0x83
 3625 0786 02       		.uleb128 0x2
 3626 0787 91       		.byte	0x91
 3627 0788 60       		.sleb128 -32
 3628 0789 0D       		.uleb128 0xd
 3629 078a 55050000 		.4byte	.LASF56
 3630 078e 02       		.byte	0x2
 3631 078f F804     		.2byte	0x4f8
 3632 0791 9D000000 		.4byte	0x9d
 3633 0795 02       		.uleb128 0x2
 3634 0796 91       		.byte	0x91
 3635 0797 58       		.sleb128 -40
 3636 0798 00       		.byte	0
 3637 0799 13       		.uleb128 0x13
 3638 079a 37050000 		.4byte	.LASF79
 3639 079e 02       		.byte	0x2
 3640 079f 5505     		.2byte	0x555
 3641 07a1 00000000 		.4byte	.LFB45
 3642 07a5 98020000 		.4byte	.LFE45-.LFB45
 3643 07a9 01       		.uleb128 0x1
 3644 07aa 9C       		.byte	0x9c
 3645 07ab 47080000 		.4byte	0x847
 3646 07af 0B       		.uleb128 0xb
 3647 07b0 00000000 		.4byte	.LASF65
 3648 07b4 02       		.byte	0x2
 3649 07b5 5505     		.2byte	0x555
 3650 07b7 D7050000 		.4byte	0x5d7
 3651 07bb 02       		.uleb128 0x2
 3652 07bc 91       		.byte	0x91
 3653 07bd 44       		.sleb128 -60
 3654 07be 0B       		.uleb128 0xb
 3655 07bf 55050000 		.4byte	.LASF56
 3656 07c3 02       		.byte	0x2
 3657 07c4 5505     		.2byte	0x555
 3658 07c6 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 115


 3659 07ca 03       		.uleb128 0x3
 3660 07cb 91       		.byte	0x91
 3661 07cc B87F     		.sleb128 -72
 3662 07ce 0B       		.uleb128 0xb
 3663 07cf 55020000 		.4byte	.LASF38
 3664 07d3 02       		.byte	0x2
 3665 07d4 5505     		.2byte	0x555
 3666 07d6 83000000 		.4byte	0x83
 3667 07da 02       		.uleb128 0x2
 3668 07db 91       		.byte	0x91
 3669 07dc 00       		.sleb128 0
 3670 07dd 0D       		.uleb128 0xd
 3671 07de 8F000000 		.4byte	.LASF80
 3672 07e2 02       		.byte	0x2
 3673 07e3 5705     		.2byte	0x557
 3674 07e5 83000000 		.4byte	0x83
 3675 07e9 02       		.uleb128 0x2
 3676 07ea 91       		.byte	0x91
 3677 07eb 4C       		.sleb128 -52
 3678 07ec 0D       		.uleb128 0xd
 3679 07ed 0D040000 		.4byte	.LASF81
 3680 07f1 02       		.byte	0x2
 3681 07f2 5805     		.2byte	0x558
 3682 07f4 83000000 		.4byte	0x83
 3683 07f8 02       		.uleb128 0x2
 3684 07f9 91       		.byte	0x91
 3685 07fa 64       		.sleb128 -28
 3686 07fb 0D       		.uleb128 0xd
 3687 07fc FA000000 		.4byte	.LASF82
 3688 0800 02       		.byte	0x2
 3689 0801 5905     		.2byte	0x559
 3690 0803 83000000 		.4byte	0x83
 3691 0807 02       		.uleb128 0x2
 3692 0808 91       		.byte	0x91
 3693 0809 60       		.sleb128 -32
 3694 080a 0D       		.uleb128 0xd
 3695 080b 09000000 		.4byte	.LASF52
 3696 080f 02       		.byte	0x2
 3697 0810 5B05     		.2byte	0x55b
 3698 0812 83000000 		.4byte	0x83
 3699 0816 02       		.uleb128 0x2
 3700 0817 91       		.byte	0x91
 3701 0818 50       		.sleb128 -48
 3702 0819 0D       		.uleb128 0xd
 3703 081a E5000000 		.4byte	.LASF53
 3704 081e 02       		.byte	0x2
 3705 081f 5C05     		.2byte	0x55c
 3706 0821 83000000 		.4byte	0x83
 3707 0825 02       		.uleb128 0x2
 3708 0826 91       		.byte	0x91
 3709 0827 5C       		.sleb128 -36
 3710 0828 0D       		.uleb128 0xd
 3711 0829 EE030000 		.4byte	.LASF54
 3712 082d 02       		.byte	0x2
 3713 082e 5D05     		.2byte	0x55d
 3714 0830 83000000 		.4byte	0x83
 3715 0834 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 116


 3716 0835 91       		.byte	0x91
 3717 0836 58       		.sleb128 -40
 3718 0837 0D       		.uleb128 0xd
 3719 0838 D3040000 		.4byte	.LASF83
 3720 083c 02       		.byte	0x2
 3721 083d 5F05     		.2byte	0x55f
 3722 083f 83000000 		.4byte	0x83
 3723 0843 02       		.uleb128 0x2
 3724 0844 91       		.byte	0x91
 3725 0845 54       		.sleb128 -44
 3726 0846 00       		.byte	0
 3727 0847 18       		.uleb128 0x18
 3728 0848 99000000 		.4byte	.LASF84
 3729 084c 02       		.byte	0x2
 3730 084d DB05     		.2byte	0x5db
 3731 084f 83000000 		.4byte	0x83
 3732 0853 00000000 		.4byte	.LFB46
 3733 0857 7A000000 		.4byte	.LFE46-.LFB46
 3734 085b 01       		.uleb128 0x1
 3735 085c 9C       		.byte	0x9c
 3736 085d E9080000 		.4byte	0x8e9
 3737 0861 0B       		.uleb128 0xb
 3738 0862 A4030000 		.4byte	.LASF20
 3739 0866 02       		.byte	0x2
 3740 0867 DB05     		.2byte	0x5db
 3741 0869 83000000 		.4byte	0x83
 3742 086d 02       		.uleb128 0x2
 3743 086e 91       		.byte	0x91
 3744 086f 5C       		.sleb128 -36
 3745 0870 0B       		.uleb128 0xb
 3746 0871 EE000000 		.4byte	.LASF85
 3747 0875 02       		.byte	0x2
 3748 0876 DB05     		.2byte	0x5db
 3749 0878 83000000 		.4byte	0x83
 3750 087c 02       		.uleb128 0x2
 3751 087d 91       		.byte	0x91
 3752 087e 58       		.sleb128 -40
 3753 087f 0B       		.uleb128 0xb
 3754 0880 42020000 		.4byte	.LASF42
 3755 0884 02       		.byte	0x2
 3756 0885 DB05     		.2byte	0x5db
 3757 0887 83000000 		.4byte	0x83
 3758 088b 02       		.uleb128 0x2
 3759 088c 91       		.byte	0x91
 3760 088d 54       		.sleb128 -44
 3761 088e 0B       		.uleb128 0xb
 3762 088f 81010000 		.4byte	.LASF26
 3763 0893 02       		.byte	0x2
 3764 0894 DB05     		.2byte	0x5db
 3765 0896 83000000 		.4byte	0x83
 3766 089a 02       		.uleb128 0x2
 3767 089b 91       		.byte	0x91
 3768 089c 50       		.sleb128 -48
 3769 089d 0D       		.uleb128 0xd
 3770 089e E3010000 		.4byte	.LASF86
 3771 08a2 02       		.byte	0x2
 3772 08a3 DD05     		.2byte	0x5dd
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 117


 3773 08a5 83000000 		.4byte	0x83
 3774 08a9 02       		.uleb128 0x2
 3775 08aa 91       		.byte	0x91
 3776 08ab 74       		.sleb128 -12
 3777 08ac 0D       		.uleb128 0xd
 3778 08ad 74020000 		.4byte	.LASF87
 3779 08b1 02       		.byte	0x2
 3780 08b2 DE05     		.2byte	0x5de
 3781 08b4 83000000 		.4byte	0x83
 3782 08b8 02       		.uleb128 0x2
 3783 08b9 91       		.byte	0x91
 3784 08ba 70       		.sleb128 -16
 3785 08bb 0D       		.uleb128 0xd
 3786 08bc 22010000 		.4byte	.LASF88
 3787 08c0 02       		.byte	0x2
 3788 08c1 DF05     		.2byte	0x5df
 3789 08c3 83000000 		.4byte	0x83
 3790 08c7 02       		.uleb128 0x2
 3791 08c8 91       		.byte	0x91
 3792 08c9 68       		.sleb128 -24
 3793 08ca 0D       		.uleb128 0xd
 3794 08cb AE030000 		.4byte	.LASF89
 3795 08cf 02       		.byte	0x2
 3796 08d0 E005     		.2byte	0x5e0
 3797 08d2 83000000 		.4byte	0x83
 3798 08d6 02       		.uleb128 0x2
 3799 08d7 91       		.byte	0x91
 3800 08d8 6C       		.sleb128 -20
 3801 08d9 0D       		.uleb128 0xd
 3802 08da 24000000 		.4byte	.LASF29
 3803 08de 02       		.byte	0x2
 3804 08df E205     		.2byte	0x5e2
 3805 08e1 83000000 		.4byte	0x83
 3806 08e5 02       		.uleb128 0x2
 3807 08e6 91       		.byte	0x91
 3808 08e7 64       		.sleb128 -28
 3809 08e8 00       		.byte	0
 3810 08e9 18       		.uleb128 0x18
 3811 08ea D5000000 		.4byte	.LASF90
 3812 08ee 02       		.byte	0x2
 3813 08ef 1606     		.2byte	0x616
 3814 08f1 83000000 		.4byte	0x83
 3815 08f5 00000000 		.4byte	.LFB47
 3816 08f9 3C000000 		.4byte	.LFE47-.LFB47
 3817 08fd 01       		.uleb128 0x1
 3818 08fe 9C       		.byte	0x9c
 3819 08ff 31090000 		.4byte	0x931
 3820 0903 0B       		.uleb128 0xb
 3821 0904 42020000 		.4byte	.LASF42
 3822 0908 02       		.byte	0x2
 3823 0909 1606     		.2byte	0x616
 3824 090b 83000000 		.4byte	0x83
 3825 090f 02       		.uleb128 0x2
 3826 0910 91       		.byte	0x91
 3827 0911 6C       		.sleb128 -20
 3828 0912 0B       		.uleb128 0xb
 3829 0913 81010000 		.4byte	.LASF26
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 118


 3830 0917 02       		.byte	0x2
 3831 0918 1606     		.2byte	0x616
 3832 091a 83000000 		.4byte	0x83
 3833 091e 02       		.uleb128 0x2
 3834 091f 91       		.byte	0x91
 3835 0920 68       		.sleb128 -24
 3836 0921 0D       		.uleb128 0xd
 3837 0922 24000000 		.4byte	.LASF29
 3838 0926 02       		.byte	0x2
 3839 0927 1806     		.2byte	0x618
 3840 0929 83000000 		.4byte	0x83
 3841 092d 02       		.uleb128 0x2
 3842 092e 91       		.byte	0x91
 3843 092f 74       		.sleb128 -12
 3844 0930 00       		.byte	0
 3845 0931 18       		.uleb128 0x18
 3846 0932 07010000 		.4byte	.LASF91
 3847 0936 02       		.byte	0x2
 3848 0937 4606     		.2byte	0x646
 3849 0939 83000000 		.4byte	0x83
 3850 093d 00000000 		.4byte	.LFB48
 3851 0941 3C000000 		.4byte	.LFE48-.LFB48
 3852 0945 01       		.uleb128 0x1
 3853 0946 9C       		.byte	0x9c
 3854 0947 79090000 		.4byte	0x979
 3855 094b 0B       		.uleb128 0xb
 3856 094c 42020000 		.4byte	.LASF42
 3857 0950 02       		.byte	0x2
 3858 0951 4606     		.2byte	0x646
 3859 0953 83000000 		.4byte	0x83
 3860 0957 02       		.uleb128 0x2
 3861 0958 91       		.byte	0x91
 3862 0959 6C       		.sleb128 -20
 3863 095a 0B       		.uleb128 0xb
 3864 095b 81010000 		.4byte	.LASF26
 3865 095f 02       		.byte	0x2
 3866 0960 4606     		.2byte	0x646
 3867 0962 83000000 		.4byte	0x83
 3868 0966 02       		.uleb128 0x2
 3869 0967 91       		.byte	0x91
 3870 0968 68       		.sleb128 -24
 3871 0969 0D       		.uleb128 0xd
 3872 096a 24000000 		.4byte	.LASF29
 3873 096e 02       		.byte	0x2
 3874 096f 4806     		.2byte	0x648
 3875 0971 83000000 		.4byte	0x83
 3876 0975 02       		.uleb128 0x2
 3877 0976 91       		.byte	0x91
 3878 0977 74       		.sleb128 -12
 3879 0978 00       		.byte	0
 3880 0979 11       		.uleb128 0x11
 3881 097a 56010000 		.4byte	.LASF92
 3882 097e 02       		.byte	0x2
 3883 097f 17       		.byte	0x17
 3884 0980 83000000 		.4byte	0x83
 3885 0984 05       		.uleb128 0x5
 3886 0985 03       		.byte	0x3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 119


 3887 0986 00000000 		.4byte	RTC_updateTimePeriod
 3888 098a 11       		.uleb128 0x11
 3889 098b C1040000 		.4byte	.LASF93
 3890 098f 02       		.byte	0x2
 3891 0990 18       		.byte	0x18
 3892 0991 83000000 		.4byte	0x83
 3893 0995 05       		.uleb128 0x5
 3894 0996 03       		.byte	0x3
 3895 0997 04000000 		.4byte	RTC_tickRefOneSec
 3896 099b 11       		.uleb128 0x11
 3897 099c 15040000 		.4byte	.LASF94
 3898 09a0 02       		.byte	0x2
 3899 09a1 1B       		.byte	0x1b
 3900 09a2 83000000 		.4byte	0x83
 3901 09a6 05       		.uleb128 0x5
 3902 09a7 03       		.byte	0x3
 3903 09a8 08000000 		.4byte	RTC_dstTimeOffset
 3904 09ac 1B       		.uleb128 0x1b
 3905 09ad 75010000 		.4byte	.LASF95
 3906 09b1 02       		.byte	0x2
 3907 09b2 12       		.byte	0x12
 3908 09b3 6B000000 		.4byte	0x6b
 3909 09b7 05       		.uleb128 0x5
 3910 09b8 03       		.byte	0x3
 3911 09b9 00000000 		.4byte	RTC_initVar
 3912 09bd 1B       		.uleb128 0x1b
 3913 09be 6A050000 		.4byte	.LASF96
 3914 09c2 02       		.byte	0x2
 3915 09c3 1A       		.byte	0x1a
 3916 09c4 6B000000 		.4byte	0x6b
 3917 09c8 05       		.uleb128 0x5
 3918 09c9 03       		.byte	0x3
 3919 09ca 00000000 		.4byte	RTC_dstStatus
 3920 09ce 1B       		.uleb128 0x1b
 3921 09cf 0A020000 		.4byte	.LASF97
 3922 09d3 02       		.byte	0x2
 3923 09d4 14       		.byte	0x14
 3924 09d5 DF090000 		.4byte	0x9df
 3925 09d9 05       		.uleb128 0x5
 3926 09da 03       		.byte	0x3
 3927 09db 00000000 		.4byte	RTC_unixTime
 3928 09df 05       		.uleb128 0x5
 3929 09e0 9D000000 		.4byte	0x9d
 3930 09e4 1B       		.uleb128 0x1b
 3931 09e5 70040000 		.4byte	.LASF98
 3932 09e9 02       		.byte	0x2
 3933 09ea 15       		.byte	0x15
 3934 09eb FC000000 		.4byte	0xfc
 3935 09ef 05       		.uleb128 0x5
 3936 09f0 03       		.byte	0x3
 3937 09f1 00000000 		.4byte	RTC_currentTimeDate
 3938 09f5 1B       		.uleb128 0x1b
 3939 09f6 2F020000 		.4byte	.LASF99
 3940 09fa 02       		.byte	0x2
 3941 09fb 23       		.byte	0x23
 3942 09fc 83000000 		.4byte	0x83
 3943 0a00 05       		.uleb128 0x5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 120


 3944 0a01 03       		.byte	0x3
 3945 0a02 00000000 		.4byte	RTC_alarmCurStatus
 3946 0a06 1C       		.uleb128 0x1c
 3947 0a07 160A0000 		.4byte	0xa16
 3948 0a0b 160A0000 		.4byte	0xa16
 3949 0a0f 1D       		.uleb128 0x1d
 3950 0a10 BC000000 		.4byte	0xbc
 3951 0a14 0B       		.byte	0xb
 3952 0a15 00       		.byte	0
 3953 0a16 1E       		.uleb128 0x1e
 3954 0a17 77000000 		.4byte	0x77
 3955 0a1b 1B       		.uleb128 0x1b
 3956 0a1c F6030000 		.4byte	.LASF100
 3957 0a20 02       		.byte	0x2
 3958 0a21 2B       		.byte	0x2b
 3959 0a22 2C0A0000 		.4byte	0xa2c
 3960 0a26 05       		.uleb128 0x5
 3961 0a27 03       		.byte	0x3
 3962 0a28 00000000 		.4byte	RTC_daysBeforeMonthTbl
 3963 0a2c 1E       		.uleb128 0x1e
 3964 0a2d 060A0000 		.4byte	0xa06
 3965 0a31 1C       		.uleb128 0x1c
 3966 0a32 410A0000 		.4byte	0xa41
 3967 0a36 410A0000 		.4byte	0xa41
 3968 0a3a 1D       		.uleb128 0x1d
 3969 0a3b BC000000 		.4byte	0xbc
 3970 0a3f 0B       		.byte	0xb
 3971 0a40 00       		.byte	0
 3972 0a41 1E       		.uleb128 0x1e
 3973 0a42 6B000000 		.4byte	0x6b
 3974 0a46 1B       		.uleb128 0x1b
 3975 0a47 73000000 		.4byte	.LASF101
 3976 0a4b 02       		.byte	0x2
 3977 0a4c 39       		.byte	0x39
 3978 0a4d 570A0000 		.4byte	0xa57
 3979 0a51 05       		.uleb128 0x5
 3980 0a52 03       		.byte	0x3
 3981 0a53 00000000 		.4byte	RTC_daysInMonthTbl
 3982 0a57 1E       		.uleb128 0x1e
 3983 0a58 310A0000 		.4byte	0xa31
 3984 0a5c 00       		.byte	0
 3985              		.section	.debug_abbrev,"",%progbits
 3986              	.Ldebug_abbrev0:
 3987 0000 01       		.uleb128 0x1
 3988 0001 11       		.uleb128 0x11
 3989 0002 01       		.byte	0x1
 3990 0003 25       		.uleb128 0x25
 3991 0004 0E       		.uleb128 0xe
 3992 0005 13       		.uleb128 0x13
 3993 0006 0B       		.uleb128 0xb
 3994 0007 03       		.uleb128 0x3
 3995 0008 0E       		.uleb128 0xe
 3996 0009 1B       		.uleb128 0x1b
 3997 000a 0E       		.uleb128 0xe
 3998 000b 55       		.uleb128 0x55
 3999 000c 17       		.uleb128 0x17
 4000 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 121


 4001 000e 01       		.uleb128 0x1
 4002 000f 10       		.uleb128 0x10
 4003 0010 17       		.uleb128 0x17
 4004 0011 00       		.byte	0
 4005 0012 00       		.byte	0
 4006 0013 02       		.uleb128 0x2
 4007 0014 24       		.uleb128 0x24
 4008 0015 00       		.byte	0
 4009 0016 0B       		.uleb128 0xb
 4010 0017 0B       		.uleb128 0xb
 4011 0018 3E       		.uleb128 0x3e
 4012 0019 0B       		.uleb128 0xb
 4013 001a 03       		.uleb128 0x3
 4014 001b 0E       		.uleb128 0xe
 4015 001c 00       		.byte	0
 4016 001d 00       		.byte	0
 4017 001e 03       		.uleb128 0x3
 4018 001f 24       		.uleb128 0x24
 4019 0020 00       		.byte	0
 4020 0021 0B       		.uleb128 0xb
 4021 0022 0B       		.uleb128 0xb
 4022 0023 3E       		.uleb128 0x3e
 4023 0024 0B       		.uleb128 0xb
 4024 0025 03       		.uleb128 0x3
 4025 0026 08       		.uleb128 0x8
 4026 0027 00       		.byte	0
 4027 0028 00       		.byte	0
 4028 0029 04       		.uleb128 0x4
 4029 002a 16       		.uleb128 0x16
 4030 002b 00       		.byte	0
 4031 002c 03       		.uleb128 0x3
 4032 002d 0E       		.uleb128 0xe
 4033 002e 3A       		.uleb128 0x3a
 4034 002f 0B       		.uleb128 0xb
 4035 0030 3B       		.uleb128 0x3b
 4036 0031 05       		.uleb128 0x5
 4037 0032 49       		.uleb128 0x49
 4038 0033 13       		.uleb128 0x13
 4039 0034 00       		.byte	0
 4040 0035 00       		.byte	0
 4041 0036 05       		.uleb128 0x5
 4042 0037 35       		.uleb128 0x35
 4043 0038 00       		.byte	0
 4044 0039 49       		.uleb128 0x49
 4045 003a 13       		.uleb128 0x13
 4046 003b 00       		.byte	0
 4047 003c 00       		.byte	0
 4048 003d 06       		.uleb128 0x6
 4049 003e 13       		.uleb128 0x13
 4050 003f 01       		.byte	0x1
 4051 0040 0B       		.uleb128 0xb
 4052 0041 0B       		.uleb128 0xb
 4053 0042 3A       		.uleb128 0x3a
 4054 0043 0B       		.uleb128 0xb
 4055 0044 3B       		.uleb128 0x3b
 4056 0045 0B       		.uleb128 0xb
 4057 0046 01       		.uleb128 0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 122


 4058 0047 13       		.uleb128 0x13
 4059 0048 00       		.byte	0
 4060 0049 00       		.byte	0
 4061 004a 07       		.uleb128 0x7
 4062 004b 0D       		.uleb128 0xd
 4063 004c 00       		.byte	0
 4064 004d 03       		.uleb128 0x3
 4065 004e 0E       		.uleb128 0xe
 4066 004f 3A       		.uleb128 0x3a
 4067 0050 0B       		.uleb128 0xb
 4068 0051 3B       		.uleb128 0x3b
 4069 0052 0B       		.uleb128 0xb
 4070 0053 49       		.uleb128 0x49
 4071 0054 13       		.uleb128 0x13
 4072 0055 38       		.uleb128 0x38
 4073 0056 0B       		.uleb128 0xb
 4074 0057 00       		.byte	0
 4075 0058 00       		.byte	0
 4076 0059 08       		.uleb128 0x8
 4077 005a 16       		.uleb128 0x16
 4078 005b 00       		.byte	0
 4079 005c 03       		.uleb128 0x3
 4080 005d 0E       		.uleb128 0xe
 4081 005e 3A       		.uleb128 0x3a
 4082 005f 0B       		.uleb128 0xb
 4083 0060 3B       		.uleb128 0x3b
 4084 0061 0B       		.uleb128 0xb
 4085 0062 49       		.uleb128 0x49
 4086 0063 13       		.uleb128 0x13
 4087 0064 00       		.byte	0
 4088 0065 00       		.byte	0
 4089 0066 09       		.uleb128 0x9
 4090 0067 2E       		.uleb128 0x2e
 4091 0068 01       		.byte	0x1
 4092 0069 03       		.uleb128 0x3
 4093 006a 0E       		.uleb128 0xe
 4094 006b 3A       		.uleb128 0x3a
 4095 006c 0B       		.uleb128 0xb
 4096 006d 3B       		.uleb128 0x3b
 4097 006e 05       		.uleb128 0x5
 4098 006f 27       		.uleb128 0x27
 4099 0070 19       		.uleb128 0x19
 4100 0071 49       		.uleb128 0x49
 4101 0072 13       		.uleb128 0x13
 4102 0073 11       		.uleb128 0x11
 4103 0074 01       		.uleb128 0x1
 4104 0075 12       		.uleb128 0x12
 4105 0076 06       		.uleb128 0x6
 4106 0077 40       		.uleb128 0x40
 4107 0078 18       		.uleb128 0x18
 4108 0079 9742     		.uleb128 0x2117
 4109 007b 19       		.uleb128 0x19
 4110 007c 01       		.uleb128 0x1
 4111 007d 13       		.uleb128 0x13
 4112 007e 00       		.byte	0
 4113 007f 00       		.byte	0
 4114 0080 0A       		.uleb128 0xa
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 123


 4115 0081 05       		.uleb128 0x5
 4116 0082 00       		.byte	0
 4117 0083 03       		.uleb128 0x3
 4118 0084 08       		.uleb128 0x8
 4119 0085 3A       		.uleb128 0x3a
 4120 0086 0B       		.uleb128 0xb
 4121 0087 3B       		.uleb128 0x3b
 4122 0088 05       		.uleb128 0x5
 4123 0089 49       		.uleb128 0x49
 4124 008a 13       		.uleb128 0x13
 4125 008b 02       		.uleb128 0x2
 4126 008c 18       		.uleb128 0x18
 4127 008d 00       		.byte	0
 4128 008e 00       		.byte	0
 4129 008f 0B       		.uleb128 0xb
 4130 0090 05       		.uleb128 0x5
 4131 0091 00       		.byte	0
 4132 0092 03       		.uleb128 0x3
 4133 0093 0E       		.uleb128 0xe
 4134 0094 3A       		.uleb128 0x3a
 4135 0095 0B       		.uleb128 0xb
 4136 0096 3B       		.uleb128 0x3b
 4137 0097 05       		.uleb128 0x5
 4138 0098 49       		.uleb128 0x49
 4139 0099 13       		.uleb128 0x13
 4140 009a 02       		.uleb128 0x2
 4141 009b 18       		.uleb128 0x18
 4142 009c 00       		.byte	0
 4143 009d 00       		.byte	0
 4144 009e 0C       		.uleb128 0xc
 4145 009f 2E       		.uleb128 0x2e
 4146 00a0 01       		.byte	0x1
 4147 00a1 03       		.uleb128 0x3
 4148 00a2 0E       		.uleb128 0xe
 4149 00a3 3A       		.uleb128 0x3a
 4150 00a4 0B       		.uleb128 0xb
 4151 00a5 3B       		.uleb128 0x3b
 4152 00a6 05       		.uleb128 0x5
 4153 00a7 27       		.uleb128 0x27
 4154 00a8 19       		.uleb128 0x19
 4155 00a9 49       		.uleb128 0x49
 4156 00aa 13       		.uleb128 0x13
 4157 00ab 11       		.uleb128 0x11
 4158 00ac 01       		.uleb128 0x1
 4159 00ad 12       		.uleb128 0x12
 4160 00ae 06       		.uleb128 0x6
 4161 00af 40       		.uleb128 0x40
 4162 00b0 18       		.uleb128 0x18
 4163 00b1 9642     		.uleb128 0x2116
 4164 00b3 19       		.uleb128 0x19
 4165 00b4 01       		.uleb128 0x1
 4166 00b5 13       		.uleb128 0x13
 4167 00b6 00       		.byte	0
 4168 00b7 00       		.byte	0
 4169 00b8 0D       		.uleb128 0xd
 4170 00b9 34       		.uleb128 0x34
 4171 00ba 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 124


 4172 00bb 03       		.uleb128 0x3
 4173 00bc 0E       		.uleb128 0xe
 4174 00bd 3A       		.uleb128 0x3a
 4175 00be 0B       		.uleb128 0xb
 4176 00bf 3B       		.uleb128 0x3b
 4177 00c0 05       		.uleb128 0x5
 4178 00c1 49       		.uleb128 0x49
 4179 00c2 13       		.uleb128 0x13
 4180 00c3 02       		.uleb128 0x2
 4181 00c4 18       		.uleb128 0x18
 4182 00c5 00       		.byte	0
 4183 00c6 00       		.byte	0
 4184 00c7 0E       		.uleb128 0xe
 4185 00c8 2E       		.uleb128 0x2e
 4186 00c9 00       		.byte	0
 4187 00ca 3F       		.uleb128 0x3f
 4188 00cb 19       		.uleb128 0x19
 4189 00cc 03       		.uleb128 0x3
 4190 00cd 0E       		.uleb128 0xe
 4191 00ce 3A       		.uleb128 0x3a
 4192 00cf 0B       		.uleb128 0xb
 4193 00d0 3B       		.uleb128 0x3b
 4194 00d1 0B       		.uleb128 0xb
 4195 00d2 27       		.uleb128 0x27
 4196 00d3 19       		.uleb128 0x19
 4197 00d4 11       		.uleb128 0x11
 4198 00d5 01       		.uleb128 0x1
 4199 00d6 12       		.uleb128 0x12
 4200 00d7 06       		.uleb128 0x6
 4201 00d8 40       		.uleb128 0x40
 4202 00d9 18       		.uleb128 0x18
 4203 00da 9642     		.uleb128 0x2116
 4204 00dc 19       		.uleb128 0x19
 4205 00dd 00       		.byte	0
 4206 00de 00       		.byte	0
 4207 00df 0F       		.uleb128 0xf
 4208 00e0 2E       		.uleb128 0x2e
 4209 00e1 00       		.byte	0
 4210 00e2 3F       		.uleb128 0x3f
 4211 00e3 19       		.uleb128 0x19
 4212 00e4 03       		.uleb128 0x3
 4213 00e5 0E       		.uleb128 0xe
 4214 00e6 3A       		.uleb128 0x3a
 4215 00e7 0B       		.uleb128 0xb
 4216 00e8 3B       		.uleb128 0x3b
 4217 00e9 0B       		.uleb128 0xb
 4218 00ea 27       		.uleb128 0x27
 4219 00eb 19       		.uleb128 0x19
 4220 00ec 11       		.uleb128 0x11
 4221 00ed 01       		.uleb128 0x1
 4222 00ee 12       		.uleb128 0x12
 4223 00ef 06       		.uleb128 0x6
 4224 00f0 40       		.uleb128 0x40
 4225 00f1 18       		.uleb128 0x18
 4226 00f2 9742     		.uleb128 0x2117
 4227 00f4 19       		.uleb128 0x19
 4228 00f5 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 125


 4229 00f6 00       		.byte	0
 4230 00f7 10       		.uleb128 0x10
 4231 00f8 2E       		.uleb128 0x2e
 4232 00f9 01       		.byte	0x1
 4233 00fa 3F       		.uleb128 0x3f
 4234 00fb 19       		.uleb128 0x19
 4235 00fc 03       		.uleb128 0x3
 4236 00fd 0E       		.uleb128 0xe
 4237 00fe 3A       		.uleb128 0x3a
 4238 00ff 0B       		.uleb128 0xb
 4239 0100 3B       		.uleb128 0x3b
 4240 0101 0B       		.uleb128 0xb
 4241 0102 27       		.uleb128 0x27
 4242 0103 19       		.uleb128 0x19
 4243 0104 11       		.uleb128 0x11
 4244 0105 01       		.uleb128 0x1
 4245 0106 12       		.uleb128 0x12
 4246 0107 06       		.uleb128 0x6
 4247 0108 40       		.uleb128 0x40
 4248 0109 18       		.uleb128 0x18
 4249 010a 9642     		.uleb128 0x2116
 4250 010c 19       		.uleb128 0x19
 4251 010d 01       		.uleb128 0x1
 4252 010e 13       		.uleb128 0x13
 4253 010f 00       		.byte	0
 4254 0110 00       		.byte	0
 4255 0111 11       		.uleb128 0x11
 4256 0112 34       		.uleb128 0x34
 4257 0113 00       		.byte	0
 4258 0114 03       		.uleb128 0x3
 4259 0115 0E       		.uleb128 0xe
 4260 0116 3A       		.uleb128 0x3a
 4261 0117 0B       		.uleb128 0xb
 4262 0118 3B       		.uleb128 0x3b
 4263 0119 0B       		.uleb128 0xb
 4264 011a 49       		.uleb128 0x49
 4265 011b 13       		.uleb128 0x13
 4266 011c 02       		.uleb128 0x2
 4267 011d 18       		.uleb128 0x18
 4268 011e 00       		.byte	0
 4269 011f 00       		.byte	0
 4270 0120 12       		.uleb128 0x12
 4271 0121 05       		.uleb128 0x5
 4272 0122 00       		.byte	0
 4273 0123 03       		.uleb128 0x3
 4274 0124 0E       		.uleb128 0xe
 4275 0125 3A       		.uleb128 0x3a
 4276 0126 0B       		.uleb128 0xb
 4277 0127 3B       		.uleb128 0x3b
 4278 0128 0B       		.uleb128 0xb
 4279 0129 49       		.uleb128 0x49
 4280 012a 13       		.uleb128 0x13
 4281 012b 02       		.uleb128 0x2
 4282 012c 18       		.uleb128 0x18
 4283 012d 00       		.byte	0
 4284 012e 00       		.byte	0
 4285 012f 13       		.uleb128 0x13
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 126


 4286 0130 2E       		.uleb128 0x2e
 4287 0131 01       		.byte	0x1
 4288 0132 3F       		.uleb128 0x3f
 4289 0133 19       		.uleb128 0x19
 4290 0134 03       		.uleb128 0x3
 4291 0135 0E       		.uleb128 0xe
 4292 0136 3A       		.uleb128 0x3a
 4293 0137 0B       		.uleb128 0xb
 4294 0138 3B       		.uleb128 0x3b
 4295 0139 05       		.uleb128 0x5
 4296 013a 27       		.uleb128 0x27
 4297 013b 19       		.uleb128 0x19
 4298 013c 11       		.uleb128 0x11
 4299 013d 01       		.uleb128 0x1
 4300 013e 12       		.uleb128 0x12
 4301 013f 06       		.uleb128 0x6
 4302 0140 40       		.uleb128 0x40
 4303 0141 18       		.uleb128 0x18
 4304 0142 9642     		.uleb128 0x2116
 4305 0144 19       		.uleb128 0x19
 4306 0145 01       		.uleb128 0x1
 4307 0146 13       		.uleb128 0x13
 4308 0147 00       		.byte	0
 4309 0148 00       		.byte	0
 4310 0149 14       		.uleb128 0x14
 4311 014a 2E       		.uleb128 0x2e
 4312 014b 00       		.byte	0
 4313 014c 3F       		.uleb128 0x3f
 4314 014d 19       		.uleb128 0x19
 4315 014e 03       		.uleb128 0x3
 4316 014f 0E       		.uleb128 0xe
 4317 0150 3A       		.uleb128 0x3a
 4318 0151 0B       		.uleb128 0xb
 4319 0152 3B       		.uleb128 0x3b
 4320 0153 05       		.uleb128 0x5
 4321 0154 27       		.uleb128 0x27
 4322 0155 19       		.uleb128 0x19
 4323 0156 49       		.uleb128 0x49
 4324 0157 13       		.uleb128 0x13
 4325 0158 11       		.uleb128 0x11
 4326 0159 01       		.uleb128 0x1
 4327 015a 12       		.uleb128 0x12
 4328 015b 06       		.uleb128 0x6
 4329 015c 40       		.uleb128 0x40
 4330 015d 18       		.uleb128 0x18
 4331 015e 9742     		.uleb128 0x2117
 4332 0160 19       		.uleb128 0x19
 4333 0161 00       		.byte	0
 4334 0162 00       		.byte	0
 4335 0163 15       		.uleb128 0x15
 4336 0164 2E       		.uleb128 0x2e
 4337 0165 01       		.byte	0x1
 4338 0166 3F       		.uleb128 0x3f
 4339 0167 19       		.uleb128 0x19
 4340 0168 03       		.uleb128 0x3
 4341 0169 0E       		.uleb128 0xe
 4342 016a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 127


 4343 016b 0B       		.uleb128 0xb
 4344 016c 3B       		.uleb128 0x3b
 4345 016d 05       		.uleb128 0x5
 4346 016e 27       		.uleb128 0x27
 4347 016f 19       		.uleb128 0x19
 4348 0170 11       		.uleb128 0x11
 4349 0171 01       		.uleb128 0x1
 4350 0172 12       		.uleb128 0x12
 4351 0173 06       		.uleb128 0x6
 4352 0174 40       		.uleb128 0x40
 4353 0175 18       		.uleb128 0x18
 4354 0176 9742     		.uleb128 0x2117
 4355 0178 19       		.uleb128 0x19
 4356 0179 01       		.uleb128 0x1
 4357 017a 13       		.uleb128 0x13
 4358 017b 00       		.byte	0
 4359 017c 00       		.byte	0
 4360 017d 16       		.uleb128 0x16
 4361 017e 0F       		.uleb128 0xf
 4362 017f 00       		.byte	0
 4363 0180 0B       		.uleb128 0xb
 4364 0181 0B       		.uleb128 0xb
 4365 0182 49       		.uleb128 0x49
 4366 0183 13       		.uleb128 0x13
 4367 0184 00       		.byte	0
 4368 0185 00       		.byte	0
 4369 0186 17       		.uleb128 0x17
 4370 0187 2E       		.uleb128 0x2e
 4371 0188 00       		.byte	0
 4372 0189 3F       		.uleb128 0x3f
 4373 018a 19       		.uleb128 0x19
 4374 018b 03       		.uleb128 0x3
 4375 018c 0E       		.uleb128 0xe
 4376 018d 3A       		.uleb128 0x3a
 4377 018e 0B       		.uleb128 0xb
 4378 018f 3B       		.uleb128 0x3b
 4379 0190 05       		.uleb128 0x5
 4380 0191 27       		.uleb128 0x27
 4381 0192 19       		.uleb128 0x19
 4382 0193 49       		.uleb128 0x49
 4383 0194 13       		.uleb128 0x13
 4384 0195 11       		.uleb128 0x11
 4385 0196 01       		.uleb128 0x1
 4386 0197 12       		.uleb128 0x12
 4387 0198 06       		.uleb128 0x6
 4388 0199 40       		.uleb128 0x40
 4389 019a 18       		.uleb128 0x18
 4390 019b 9642     		.uleb128 0x2116
 4391 019d 19       		.uleb128 0x19
 4392 019e 00       		.byte	0
 4393 019f 00       		.byte	0
 4394 01a0 18       		.uleb128 0x18
 4395 01a1 2E       		.uleb128 0x2e
 4396 01a2 01       		.byte	0x1
 4397 01a3 3F       		.uleb128 0x3f
 4398 01a4 19       		.uleb128 0x19
 4399 01a5 03       		.uleb128 0x3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 128


 4400 01a6 0E       		.uleb128 0xe
 4401 01a7 3A       		.uleb128 0x3a
 4402 01a8 0B       		.uleb128 0xb
 4403 01a9 3B       		.uleb128 0x3b
 4404 01aa 05       		.uleb128 0x5
 4405 01ab 27       		.uleb128 0x27
 4406 01ac 19       		.uleb128 0x19
 4407 01ad 49       		.uleb128 0x49
 4408 01ae 13       		.uleb128 0x13
 4409 01af 11       		.uleb128 0x11
 4410 01b0 01       		.uleb128 0x1
 4411 01b1 12       		.uleb128 0x12
 4412 01b2 06       		.uleb128 0x6
 4413 01b3 40       		.uleb128 0x40
 4414 01b4 18       		.uleb128 0x18
 4415 01b5 9642     		.uleb128 0x2116
 4416 01b7 19       		.uleb128 0x19
 4417 01b8 01       		.uleb128 0x1
 4418 01b9 13       		.uleb128 0x13
 4419 01ba 00       		.byte	0
 4420 01bb 00       		.byte	0
 4421 01bc 19       		.uleb128 0x19
 4422 01bd 2E       		.uleb128 0x2e
 4423 01be 01       		.byte	0x1
 4424 01bf 3F       		.uleb128 0x3f
 4425 01c0 19       		.uleb128 0x19
 4426 01c1 03       		.uleb128 0x3
 4427 01c2 0E       		.uleb128 0xe
 4428 01c3 3A       		.uleb128 0x3a
 4429 01c4 0B       		.uleb128 0xb
 4430 01c5 3B       		.uleb128 0x3b
 4431 01c6 05       		.uleb128 0x5
 4432 01c7 27       		.uleb128 0x27
 4433 01c8 19       		.uleb128 0x19
 4434 01c9 49       		.uleb128 0x49
 4435 01ca 13       		.uleb128 0x13
 4436 01cb 11       		.uleb128 0x11
 4437 01cc 01       		.uleb128 0x1
 4438 01cd 12       		.uleb128 0x12
 4439 01ce 06       		.uleb128 0x6
 4440 01cf 40       		.uleb128 0x40
 4441 01d0 18       		.uleb128 0x18
 4442 01d1 9742     		.uleb128 0x2117
 4443 01d3 19       		.uleb128 0x19
 4444 01d4 01       		.uleb128 0x1
 4445 01d5 13       		.uleb128 0x13
 4446 01d6 00       		.byte	0
 4447 01d7 00       		.byte	0
 4448 01d8 1A       		.uleb128 0x1a
 4449 01d9 34       		.uleb128 0x34
 4450 01da 00       		.byte	0
 4451 01db 03       		.uleb128 0x3
 4452 01dc 08       		.uleb128 0x8
 4453 01dd 3A       		.uleb128 0x3a
 4454 01de 0B       		.uleb128 0xb
 4455 01df 3B       		.uleb128 0x3b
 4456 01e0 05       		.uleb128 0x5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 129


 4457 01e1 49       		.uleb128 0x49
 4458 01e2 13       		.uleb128 0x13
 4459 01e3 02       		.uleb128 0x2
 4460 01e4 18       		.uleb128 0x18
 4461 01e5 00       		.byte	0
 4462 01e6 00       		.byte	0
 4463 01e7 1B       		.uleb128 0x1b
 4464 01e8 34       		.uleb128 0x34
 4465 01e9 00       		.byte	0
 4466 01ea 03       		.uleb128 0x3
 4467 01eb 0E       		.uleb128 0xe
 4468 01ec 3A       		.uleb128 0x3a
 4469 01ed 0B       		.uleb128 0xb
 4470 01ee 3B       		.uleb128 0x3b
 4471 01ef 0B       		.uleb128 0xb
 4472 01f0 49       		.uleb128 0x49
 4473 01f1 13       		.uleb128 0x13
 4474 01f2 3F       		.uleb128 0x3f
 4475 01f3 19       		.uleb128 0x19
 4476 01f4 02       		.uleb128 0x2
 4477 01f5 18       		.uleb128 0x18
 4478 01f6 00       		.byte	0
 4479 01f7 00       		.byte	0
 4480 01f8 1C       		.uleb128 0x1c
 4481 01f9 01       		.uleb128 0x1
 4482 01fa 01       		.byte	0x1
 4483 01fb 49       		.uleb128 0x49
 4484 01fc 13       		.uleb128 0x13
 4485 01fd 01       		.uleb128 0x1
 4486 01fe 13       		.uleb128 0x13
 4487 01ff 00       		.byte	0
 4488 0200 00       		.byte	0
 4489 0201 1D       		.uleb128 0x1d
 4490 0202 21       		.uleb128 0x21
 4491 0203 00       		.byte	0
 4492 0204 49       		.uleb128 0x49
 4493 0205 13       		.uleb128 0x13
 4494 0206 2F       		.uleb128 0x2f
 4495 0207 0B       		.uleb128 0xb
 4496 0208 00       		.byte	0
 4497 0209 00       		.byte	0
 4498 020a 1E       		.uleb128 0x1e
 4499 020b 26       		.uleb128 0x26
 4500 020c 00       		.byte	0
 4501 020d 49       		.uleb128 0x49
 4502 020e 13       		.uleb128 0x13
 4503 020f 00       		.byte	0
 4504 0210 00       		.byte	0
 4505 0211 00       		.byte	0
 4506              		.section	.debug_aranges,"",%progbits
 4507 0000 24010000 		.4byte	0x124
 4508 0004 0200     		.2byte	0x2
 4509 0006 00000000 		.4byte	.Ldebug_info0
 4510 000a 04       		.byte	0x4
 4511 000b 00       		.byte	0
 4512 000c 0000     		.2byte	0
 4513 000e 0000     		.2byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 130


 4514 0010 00000000 		.4byte	.LFB2
 4515 0014 24000000 		.4byte	.LFE2-.LFB2
 4516 0018 00000000 		.4byte	.LFB3
 4517 001c 42000000 		.4byte	.LFE3-.LFB3
 4518 0020 00000000 		.4byte	.LFB4
 4519 0024 30000000 		.4byte	.LFE4-.LFB4
 4520 0028 00000000 		.4byte	.LFB5
 4521 002c 32000000 		.4byte	.LFE5-.LFB5
 4522 0030 00000000 		.4byte	.LFB6
 4523 0034 32000000 		.4byte	.LFE6-.LFB6
 4524 0038 00000000 		.4byte	.LFB7
 4525 003c 20000000 		.4byte	.LFE7-.LFB7
 4526 0040 00000000 		.4byte	.LFB8
 4527 0044 32000000 		.4byte	.LFE8-.LFB8
 4528 0048 00000000 		.4byte	.LFB9
 4529 004c 32000000 		.4byte	.LFE9-.LFB9
 4530 0050 00000000 		.4byte	.LFB10
 4531 0054 58000000 		.4byte	.LFE10-.LFB10
 4532 0058 00000000 		.4byte	.LFB24
 4533 005c 20000000 		.4byte	.LFE24-.LFB24
 4534 0060 00000000 		.4byte	.LFB25
 4535 0064 A0000000 		.4byte	.LFE25-.LFB25
 4536 0068 00000000 		.4byte	.LFB26
 4537 006c D6000000 		.4byte	.LFE26-.LFB26
 4538 0070 00000000 		.4byte	.LFB27
 4539 0074 88000000 		.4byte	.LFE27-.LFB27
 4540 0078 00000000 		.4byte	.LFB28
 4541 007c 1C000000 		.4byte	.LFE28-.LFB28
 4542 0080 00000000 		.4byte	.LFB29
 4543 0084 0A000000 		.4byte	.LFE29-.LFB29
 4544 0088 00000000 		.4byte	.LFB30
 4545 008c 74000000 		.4byte	.LFE30-.LFB30
 4546 0090 00000000 		.4byte	.LFB31
 4547 0094 74000000 		.4byte	.LFE31-.LFB31
 4548 0098 00000000 		.4byte	.LFB32
 4549 009c 38000000 		.4byte	.LFE32-.LFB32
 4550 00a0 00000000 		.4byte	.LFB33
 4551 00a4 18000000 		.4byte	.LFE33-.LFB33
 4552 00a8 00000000 		.4byte	.LFB34
 4553 00ac 28000000 		.4byte	.LFE34-.LFB34
 4554 00b0 00000000 		.4byte	.LFB35
 4555 00b4 14000000 		.4byte	.LFE35-.LFB35
 4556 00b8 00000000 		.4byte	.LFB36
 4557 00bc 14000000 		.4byte	.LFE36-.LFB36
 4558 00c0 00000000 		.4byte	.LFB37
 4559 00c4 3C000000 		.4byte	.LFE37-.LFB37
 4560 00c8 00000000 		.4byte	.LFB38
 4561 00cc 44000000 		.4byte	.LFE38-.LFB38
 4562 00d0 00000000 		.4byte	.LFB39
 4563 00d4 44000000 		.4byte	.LFE39-.LFB39
 4564 00d8 00000000 		.4byte	.LFB40
 4565 00dc 80000000 		.4byte	.LFE40-.LFB40
 4566 00e0 00000000 		.4byte	.LFB41
 4567 00e4 4E000000 		.4byte	.LFE41-.LFB41
 4568 00e8 00000000 		.4byte	.LFB42
 4569 00ec 60000000 		.4byte	.LFE42-.LFB42
 4570 00f0 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 131


 4571 00f4 50000000 		.4byte	.LFE43-.LFB43
 4572 00f8 00000000 		.4byte	.LFB44
 4573 00fc 90010000 		.4byte	.LFE44-.LFB44
 4574 0100 00000000 		.4byte	.LFB45
 4575 0104 98020000 		.4byte	.LFE45-.LFB45
 4576 0108 00000000 		.4byte	.LFB46
 4577 010c 7A000000 		.4byte	.LFE46-.LFB46
 4578 0110 00000000 		.4byte	.LFB47
 4579 0114 3C000000 		.4byte	.LFE47-.LFB47
 4580 0118 00000000 		.4byte	.LFB48
 4581 011c 3C000000 		.4byte	.LFE48-.LFB48
 4582 0120 00000000 		.4byte	0
 4583 0124 00000000 		.4byte	0
 4584              		.section	.debug_ranges,"",%progbits
 4585              	.Ldebug_ranges0:
 4586 0000 00000000 		.4byte	.LFB2
 4587 0004 24000000 		.4byte	.LFE2
 4588 0008 00000000 		.4byte	.LFB3
 4589 000c 42000000 		.4byte	.LFE3
 4590 0010 00000000 		.4byte	.LFB4
 4591 0014 30000000 		.4byte	.LFE4
 4592 0018 00000000 		.4byte	.LFB5
 4593 001c 32000000 		.4byte	.LFE5
 4594 0020 00000000 		.4byte	.LFB6
 4595 0024 32000000 		.4byte	.LFE6
 4596 0028 00000000 		.4byte	.LFB7
 4597 002c 20000000 		.4byte	.LFE7
 4598 0030 00000000 		.4byte	.LFB8
 4599 0034 32000000 		.4byte	.LFE8
 4600 0038 00000000 		.4byte	.LFB9
 4601 003c 32000000 		.4byte	.LFE9
 4602 0040 00000000 		.4byte	.LFB10
 4603 0044 58000000 		.4byte	.LFE10
 4604 0048 00000000 		.4byte	.LFB24
 4605 004c 20000000 		.4byte	.LFE24
 4606 0050 00000000 		.4byte	.LFB25
 4607 0054 A0000000 		.4byte	.LFE25
 4608 0058 00000000 		.4byte	.LFB26
 4609 005c D6000000 		.4byte	.LFE26
 4610 0060 00000000 		.4byte	.LFB27
 4611 0064 88000000 		.4byte	.LFE27
 4612 0068 00000000 		.4byte	.LFB28
 4613 006c 1C000000 		.4byte	.LFE28
 4614 0070 00000000 		.4byte	.LFB29
 4615 0074 0A000000 		.4byte	.LFE29
 4616 0078 00000000 		.4byte	.LFB30
 4617 007c 74000000 		.4byte	.LFE30
 4618 0080 00000000 		.4byte	.LFB31
 4619 0084 74000000 		.4byte	.LFE31
 4620 0088 00000000 		.4byte	.LFB32
 4621 008c 38000000 		.4byte	.LFE32
 4622 0090 00000000 		.4byte	.LFB33
 4623 0094 18000000 		.4byte	.LFE33
 4624 0098 00000000 		.4byte	.LFB34
 4625 009c 28000000 		.4byte	.LFE34
 4626 00a0 00000000 		.4byte	.LFB35
 4627 00a4 14000000 		.4byte	.LFE35
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 132


 4628 00a8 00000000 		.4byte	.LFB36
 4629 00ac 14000000 		.4byte	.LFE36
 4630 00b0 00000000 		.4byte	.LFB37
 4631 00b4 3C000000 		.4byte	.LFE37
 4632 00b8 00000000 		.4byte	.LFB38
 4633 00bc 44000000 		.4byte	.LFE38
 4634 00c0 00000000 		.4byte	.LFB39
 4635 00c4 44000000 		.4byte	.LFE39
 4636 00c8 00000000 		.4byte	.LFB40
 4637 00cc 80000000 		.4byte	.LFE40
 4638 00d0 00000000 		.4byte	.LFB41
 4639 00d4 4E000000 		.4byte	.LFE41
 4640 00d8 00000000 		.4byte	.LFB42
 4641 00dc 60000000 		.4byte	.LFE42
 4642 00e0 00000000 		.4byte	.LFB43
 4643 00e4 50000000 		.4byte	.LFE43
 4644 00e8 00000000 		.4byte	.LFB44
 4645 00ec 90010000 		.4byte	.LFE44
 4646 00f0 00000000 		.4byte	.LFB45
 4647 00f4 98020000 		.4byte	.LFE45
 4648 00f8 00000000 		.4byte	.LFB46
 4649 00fc 7A000000 		.4byte	.LFE46
 4650 0100 00000000 		.4byte	.LFB47
 4651 0104 3C000000 		.4byte	.LFE47
 4652 0108 00000000 		.4byte	.LFB48
 4653 010c 3C000000 		.4byte	.LFE48
 4654 0110 00000000 		.4byte	0
 4655 0114 00000000 		.4byte	0
 4656              		.section	.debug_line,"",%progbits
 4657              	.Ldebug_line0:
 4658 0000 96040000 		.section	.debug_str,"MS",%progbits,1
 4658      02004900 
 4658      00000201 
 4658      FB0E0D00 
 4658      01010101 
 4659              	.LASF65:
 4660 0000 64617465 		.ascii	"dateTime\000"
 4660      54696D65 
 4660      00
 4661              	.LASF52:
 4662 0009 746D7044 		.ascii	"tmpDay\000"
 4662      617900
 4663              	.LASF34:
 4664 0010 5254435F 		.ascii	"RTC_GetMonth\000"
 4664      4765744D 
 4664      6F6E7468 
 4664      00
 4665              	.LASF10:
 4666 001d 75696E74 		.ascii	"uint16\000"
 4666      313600
 4667              	.LASF29:
 4668 0024 72657456 		.ascii	"retVal\000"
 4668      616C00
 4669              	.LASF27:
 4670 002b 5254435F 		.ascii	"RTC_GetSecond\000"
 4670      47657453 
 4670      65636F6E 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 133


 4670      6400
 4671              	.LASF64:
 4672 0039 5254435F 		.ascii	"RTC_GetDateAndTime\000"
 4672      47657444 
 4672      61746541 
 4672      6E645469 
 4672      6D6500
 4673              	.LASF36:
 4674 004c 5254435F 		.ascii	"RTC_GetTimeFormat\000"
 4674      47657454 
 4674      696D6546 
 4674      6F726D61 
 4674      7400
 4675              	.LASF47:
 4676 005e 746D7044 		.ascii	"tmpDate\000"
 4676      61746500 
 4677              	.LASF25:
 4678 0066 5254435F 		.ascii	"RTC_LeapYear\000"
 4678      4C656170 
 4678      59656172 
 4678      00
 4679              	.LASF101:
 4680 0073 5254435F 		.ascii	"RTC_daysInMonthTbl\000"
 4680      64617973 
 4680      496E4D6F 
 4680      6E746854 
 4680      626C00
 4681              	.LASF49:
 4682 0086 5254435F 		.ascii	"RTC_Init\000"
 4682      496E6974 
 4682      00
 4683              	.LASF80:
 4684 008f 746D704D 		.ascii	"tmpMinute\000"
 4684      696E7574 
 4684      6500
 4685              	.LASF84:
 4686 0099 5254435F 		.ascii	"RTC_RelativeToFixed\000"
 4686      52656C61 
 4686      74697665 
 4686      546F4669 
 4686      78656400 
 4687              	.LASF7:
 4688 00ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 4688      206C6F6E 
 4688      6720756E 
 4688      7369676E 
 4688      65642069 
 4689              	.LASF44:
 4690 00c4 5254435F 		.ascii	"RTC_GetDayOfWeek\000"
 4690      47657444 
 4690      61794F66 
 4690      5765656B 
 4690      00
 4691              	.LASF90:
 4692 00d5 5254435F 		.ascii	"RTC_DaysInMonth\000"
 4692      44617973 
 4692      496E4D6F 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 134


 4692      6E746800 
 4693              	.LASF53:
 4694 00e5 746D704D 		.ascii	"tmpMonth\000"
 4694      6F6E7468 
 4694      00
 4695              	.LASF85:
 4696 00ee 7765656B 		.ascii	"weekOfMonth\000"
 4696      4F664D6F 
 4696      6E746800 
 4697              	.LASF82:
 4698 00fa 746D7041 		.ascii	"tmpAmPmState\000"
 4698      6D506D53 
 4698      74617465 
 4698      00
 4699              	.LASF91:
 4700 0107 5254435F 		.ascii	"RTC_DaysBeforeMonth\000"
 4700      44617973 
 4700      4265666F 
 4700      72654D6F 
 4700      6E746800 
 4701              	.LASF71:
 4702 011b 6263644E 		.ascii	"bcdNum\000"
 4702      756D00
 4703              	.LASF88:
 4704 0122 64617973 		.ascii	"daysInMonth\000"
 4704      496E4D6F 
 4704      6E746800 
 4705              	.LASF6:
 4706 012e 6C6F6E67 		.ascii	"long long int\000"
 4706      206C6F6E 
 4706      6720696E 
 4706      7400
 4707              	.LASF0:
 4708 013c 7369676E 		.ascii	"signed char\000"
 4708      65642063 
 4708      68617200 
 4709              	.LASF58:
 4710 0148 5254435F 		.ascii	"RTC_SetPeriod\000"
 4710      53657450 
 4710      6572696F 
 4710      6400
 4711              	.LASF92:
 4712 0156 5254435F 		.ascii	"RTC_updateTimePeriod\000"
 4712      75706461 
 4712      74655469 
 4712      6D655065 
 4712      72696F64 
 4713              	.LASF45:
 4714 016b 5254435F 		.ascii	"RTC_Start\000"
 4714      53746172 
 4714      7400
 4715              	.LASF95:
 4716 0175 5254435F 		.ascii	"RTC_initVar\000"
 4716      696E6974 
 4716      56617200 
 4717              	.LASF26:
 4718 0181 79656172 		.ascii	"year\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 135


 4718      00
 4719              	.LASF55:
 4720 0186 5254435F 		.ascii	"RTC_SetUnixTime\000"
 4720      53657455 
 4720      6E697854 
 4720      696D6500 
 4721              	.LASF68:
 4722 0196 746D7054 		.ascii	"tmpTimeDate\000"
 4722      696D6544 
 4722      61746500 
 4723              	.LASF4:
 4724 01a2 6C6F6E67 		.ascii	"long int\000"
 4724      20696E74 
 4724      00
 4725              	.LASF70:
 4726 01ab 5254435F 		.ascii	"RTC_ConvertBCDToDec\000"
 4726      436F6E76 
 4726      65727442 
 4726      4344546F 
 4726      44656300 
 4727              	.LASF30:
 4728 01bf 5254435F 		.ascii	"RTC_GetMinutes\000"
 4728      4765744D 
 4728      696E7574 
 4728      657300
 4729              	.LASF9:
 4730 01ce 75696E74 		.ascii	"uint8\000"
 4730      3800
 4731              	.LASF60:
 4732 01d4 7265664F 		.ascii	"refOneSecTicks\000"
 4732      6E655365 
 4732      63546963 
 4732      6B7300
 4733              	.LASF86:
 4734 01e3 63757244 		.ascii	"curDay\000"
 4734      617900
 4735              	.LASF13:
 4736 01ea 646F7562 		.ascii	"double\000"
 4736      6C6500
 4737              	.LASF35:
 4738 01f1 5254435F 		.ascii	"RTC_GetYear\000"
 4738      47657459 
 4738      65617200 
 4739              	.LASF75:
 4740 01fd 73686966 		.ascii	"shift\000"
 4740      7400
 4741              	.LASF11:
 4742 0203 75696E74 		.ascii	"uint32\000"
 4742      333200
 4743              	.LASF97:
 4744 020a 5254435F 		.ascii	"RTC_unixTime\000"
 4744      756E6978 
 4744      54696D65 
 4744      00
 4745              	.LASF50:
 4746 0217 5254435F 		.ascii	"RTC_SetDateAndTime\000"
 4746      53657444 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 136


 4746      61746541 
 4746      6E645469 
 4746      6D6500
 4747              	.LASF23:
 4748 022a 6D61736B 		.ascii	"mask\000"
 4748      00
 4749              	.LASF99:
 4750 022f 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 4750      616C6172 
 4750      6D437572 
 4750      53746174 
 4750      757300
 4751              	.LASF42:
 4752 0242 6D6F6E74 		.ascii	"month\000"
 4752      6800
 4753              	.LASF8:
 4754 0248 756E7369 		.ascii	"unsigned int\000"
 4754      676E6564 
 4754      20696E74 
 4754      00
 4755              	.LASF38:
 4756 0255 74696D65 		.ascii	"timeFormat\000"
 4756      466F726D 
 4756      617400
 4757              	.LASF73:
 4758 0260 5254435F 		.ascii	"RTC_ConvertDecToBCD\000"
 4758      436F6E76 
 4758      65727444 
 4758      6563546F 
 4758      42434400 
 4759              	.LASF87:
 4760 0274 63757257 		.ascii	"curWeek\000"
 4760      65656B00 
 4761              	.LASF104:
 4762 027c 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\dev\\FW\\start\\s"
 4762      79707265 
 4762      73735C73 
 4762      79737465 
 4762      6D2D7374 
 4763 02a9 74617274 		.ascii	"tart_v11.cydsn\000"
 4763      5F763131 
 4763      2E637964 
 4763      736E00
 4764              	.LASF5:
 4765 02b8 6C6F6E67 		.ascii	"long unsigned int\000"
 4765      20756E73 
 4765      69676E65 
 4765      6420696E 
 4765      7400
 4766              	.LASF31:
 4767 02ca 5254435F 		.ascii	"RTC_GetHours\000"
 4767      47657448 
 4767      6F757273 
 4767      00
 4768              	.LASF62:
 4769 02d7 5254435F 		.ascii	"RTC_GetPeriod\000"
 4769      47657450 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 137


 4769      6572696F 
 4769      6400
 4770              	.LASF3:
 4771 02e5 73686F72 		.ascii	"short unsigned int\000"
 4771      7420756E 
 4771      7369676E 
 4771      65642069 
 4771      6E7400
 4772              	.LASF19:
 4773 02f8 64617465 		.ascii	"date\000"
 4773      00
 4774              	.LASF59:
 4775 02fd 7469636B 		.ascii	"ticks\000"
 4775      7300
 4776              	.LASF102:
 4777 0303 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4777      43313120 
 4777      352E342E 
 4777      31203230 
 4777      31363036 
 4778 0336 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4778      20726576 
 4778      6973696F 
 4778      6E203233 
 4778      37373135 
 4779 0369 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4779      66756E63 
 4779      74696F6E 
 4779      2D736563 
 4779      74696F6E 
 4780              	.LASF78:
 4781 0391 5254435F 		.ascii	"RTC_DateTimeToUnix\000"
 4781      44617465 
 4781      54696D65 
 4781      546F556E 
 4781      697800
 4782              	.LASF20:
 4783 03a4 6461794F 		.ascii	"dayOfWeek\000"
 4783      66576565 
 4783      6B00
 4784              	.LASF89:
 4785 03ae 6461794F 		.ascii	"dayOfMonthTmp\000"
 4785      664D6F6E 
 4785      7468546D 
 4785      7000
 4786              	.LASF17:
 4787 03bc 73697A65 		.ascii	"sizetype\000"
 4787      74797065 
 4787      00
 4788              	.LASF103:
 4789 03c5 47656E65 		.ascii	"Generated_Source\\PSoC4\\RTC.c\000"
 4789      72617465 
 4789      645F536F 
 4789      75726365 
 4789      5C50536F 
 4790              	.LASF16:
 4791 03e2 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 138


 4791      20646F75 
 4791      626C6500 
 4792              	.LASF54:
 4793 03ee 746D7059 		.ascii	"tmpYear\000"
 4793      65617200 
 4794              	.LASF100:
 4795 03f6 5254435F 		.ascii	"RTC_daysBeforeMonthTbl\000"
 4795      64617973 
 4795      4265666F 
 4795      72654D6F 
 4795      6E746854 
 4796              	.LASF81:
 4797 040d 746D7048 		.ascii	"tmpHour\000"
 4797      6F757200 
 4798              	.LASF94:
 4799 0415 5254435F 		.ascii	"RTC_dstTimeOffset\000"
 4799      64737454 
 4799      696D654F 
 4799      66667365 
 4799      7400
 4800              	.LASF18:
 4801 0427 74696D65 		.ascii	"time\000"
 4801      00
 4802              	.LASF40:
 4803 042c 686F7572 		.ascii	"hour\000"
 4803      00
 4804              	.LASF12:
 4805 0431 666C6F61 		.ascii	"float\000"
 4805      7400
 4806              	.LASF61:
 4807 0437 5254435F 		.ascii	"RTC_GetUnixTime\000"
 4807      47657455 
 4807      6E697854 
 4807      696D6500 
 4808              	.LASF63:
 4809 0447 5254435F 		.ascii	"RTC_GetRefOneSec\000"
 4809      47657452 
 4809      65664F6E 
 4809      65536563 
 4809      00
 4810              	.LASF39:
 4811 0458 73746174 		.ascii	"stateAmPm\000"
 4811      65416D50 
 4811      6D00
 4812              	.LASF1:
 4813 0462 756E7369 		.ascii	"unsigned char\000"
 4813      676E6564 
 4813      20636861 
 4813      7200
 4814              	.LASF98:
 4815 0470 5254435F 		.ascii	"RTC_currentTimeDate\000"
 4815      63757272 
 4815      656E7454 
 4815      696D6544 
 4815      61746500 
 4816              	.LASF37:
 4817 0484 5254435F 		.ascii	"RTC_ConstructTime\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 139


 4817      436F6E73 
 4817      74727563 
 4817      7454696D 
 4817      6500
 4818              	.LASF28:
 4819 0496 696E7075 		.ascii	"inputTime\000"
 4819      7454696D 
 4819      6500
 4820              	.LASF14:
 4821 04a0 75696E74 		.ascii	"uint64\000"
 4821      363400
 4822              	.LASF2:
 4823 04a7 73686F72 		.ascii	"short int\000"
 4823      7420696E 
 4823      7400
 4824              	.LASF46:
 4825 04b1 5254435F 		.ascii	"RTC_Stop\000"
 4825      53746F70 
 4825      00
 4826              	.LASF43:
 4827 04ba 746D7056 		.ascii	"tmpVal\000"
 4827      616C00
 4828              	.LASF93:
 4829 04c1 5254435F 		.ascii	"RTC_tickRefOneSec\000"
 4829      7469636B 
 4829      5265664F 
 4829      6E655365 
 4829      6300
 4830              	.LASF83:
 4831 04d3 746D7056 		.ascii	"tmpVar\000"
 4831      617200
 4832              	.LASF74:
 4833 04da 6465634E 		.ascii	"decNum\000"
 4833      756D00
 4834              	.LASF22:
 4835 04e1 5254435F 		.ascii	"RTC_DATE_TIME\000"
 4835      44415445 
 4835      5F54494D 
 4835      4500
 4836              	.LASF67:
 4837 04ef 5254435F 		.ascii	"RTC_GetDate\000"
 4837      47657444 
 4837      61746500 
 4838              	.LASF15:
 4839 04fb 63686172 		.ascii	"char\000"
 4839      00
 4840              	.LASF72:
 4841 0500 6D756C74 		.ascii	"mult\000"
 4841      00
 4842              	.LASF77:
 4843 0505 5254435F 		.ascii	"RTC_currentTickNumber\000"
 4843      63757272 
 4843      656E7454 
 4843      69636B4E 
 4843      756D6265 
 4844              	.LASF41:
 4845 051b 5254435F 		.ascii	"RTC_ConstructDate\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 140


 4845      436F6E73 
 4845      74727563 
 4845      74446174 
 4845      6500
 4846              	.LASF51:
 4847 052d 696E7075 		.ascii	"inputDate\000"
 4847      74446174 
 4847      6500
 4848              	.LASF79:
 4849 0537 5254435F 		.ascii	"RTC_UnixToDateTime\000"
 4849      556E6978 
 4849      546F4461 
 4849      74655469 
 4849      6D6500
 4850              	.LASF33:
 4851 054a 5254435F 		.ascii	"RTC_GetDay\000"
 4851      47657444 
 4851      617900
 4852              	.LASF56:
 4853 0555 756E6978 		.ascii	"unixTime\000"
 4853      54696D65 
 4853      00
 4854              	.LASF32:
 4855 055e 5254435F 		.ascii	"RTC_GetAmPm\000"
 4855      47657441 
 4855      6D506D00 
 4856              	.LASF96:
 4857 056a 5254435F 		.ascii	"RTC_dstStatus\000"
 4857      64737453 
 4857      74617475 
 4857      7300
 4858              	.LASF21:
 4859 0578 73746174 		.ascii	"status\000"
 4859      757300
 4860              	.LASF69:
 4861 057f 5254435F 		.ascii	"RTC_ReadStatus\000"
 4861      52656164 
 4861      53746174 
 4861      757300
 4862              	.LASF66:
 4863 058e 5254435F 		.ascii	"RTC_GetTime\000"
 4863      47657454 
 4863      696D6500 
 4864              	.LASF48:
 4865 059a 746D7054 		.ascii	"tmpTime\000"
 4865      696D6500 
 4866              	.LASF76:
 4867 05a2 5254435F 		.ascii	"RTC_Update\000"
 4867      55706461 
 4867      746500
 4868              	.LASF57:
 4869 05ad 746D7044 		.ascii	"tmpDateTime\000"
 4869      61746554 
 4869      696D6500 
 4870              	.LASF24:
 4871 05b9 5254435F 		.ascii	"RTC_IsBitSet\000"
 4871      49734269 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccKBpiTo.s 			page 141


 4871      74536574 
 4871      00
 4872              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
