ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_initVar
  20              		.bss
  21              		.type	ADC_initVar, %object
  22              		.size	ADC_initVar, 1
  23              	ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_offset,2,4
  26              		.comm	ADC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_channelsConfig, %object
  30              		.size	ADC_channelsConfig, 4
  31              	ADC_channelsConfig:
  32 0000 00000000 		.space	4
  33              		.section	.text.ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_Start, %function
  39              	ADC_Start:
  40              	.LFB2:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 2


  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_initVar
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	ADC_Start, .-ADC_Start
  78              		.global	__aeabi_idiv
  79              		.section	.text.ADC_Init,"ax",%progbits
  80              		.align	2
  81              		.global	ADC_Init
  82              		.code	16
  83              		.thumb_func
  84              		.type	ADC_Init, %function
  85              	ADC_Init:
  86              	.LFB3:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 4


  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  87              		.loc 1 95 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 16
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 5


 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  99              		.loc 1 172 0
 100 0006 0321     		movs	r1, #3
 101 0008 0F20     		movs	r0, #15
 102 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 103              		.loc 1 173 0
 104 000e 574B     		ldr	r3, .L17
 105 0010 1900     		movs	r1, r3
 106 0012 0F20     		movs	r0, #15
 107 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 108              		.loc 1 177 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 6


 109 0018 554B     		ldr	r3, .L17+4
 110 001a 0122     		movs	r2, #1
 111 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 112              		.loc 1 180 0
 113 001e 554B     		ldr	r3, .L17+8
 114 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0
 116 0022 002B     		cmp	r3, #0
 117 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 is_stmt 0 discriminator 1
 119 0026 5449     		ldr	r1, .L17+12
 120 0028 00E0     		b	.L7
 121              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 122              		.loc 1 178 0 discriminator 2
 123 002a 5449     		ldr	r1, .L17+16
 124              	.L7:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 125              		.loc 1 178 0 discriminator 4
 126 002c 544B     		ldr	r3, .L17+20
 127 002e 544A     		ldr	r2, .L17+20
 128 0030 1268     		ldr	r2, [r2]
 129 0032 0A43     		orrs	r2, r1
 130 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 131              		.loc 1 182 0 is_stmt 1 discriminator 4
 132 0036 534B     		ldr	r3, .L17+24
 133 0038 534A     		ldr	r2, .L17+28
 134 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 135              		.loc 1 183 0 discriminator 4
 136 003c 534B     		ldr	r3, .L17+32
 137 003e 544A     		ldr	r2, .L17+36
 138 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 139              		.loc 1 184 0 discriminator 4
 140 0042 544B     		ldr	r3, .L17+40
 141 0044 0022     		movs	r2, #0
 142 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 143              		.loc 1 185 0 discriminator 4
 144 0048 534B     		ldr	r3, .L17+44
 145 004a 544A     		ldr	r2, .L17+48
 146 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 147              		.loc 1 186 0 discriminator 4
 148 004e 544B     		ldr	r3, .L17+52
 149 0050 524A     		ldr	r2, .L17+48
 150 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 7


 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 151              		.loc 1 190 0 discriminator 4
 152 0054 534B     		ldr	r3, .L17+56
 153 0056 534A     		ldr	r2, .L17+56
 154 0058 1268     		ldr	r2, [r2]
 155 005a 8021     		movs	r1, #128
 156 005c 4902     		lsls	r1, r1, #9
 157 005e 0A43     		orrs	r2, r1
 158 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 159              		.loc 1 197 0 discriminator 4
 160 0062 514B     		ldr	r3, .L17+60
 161 0064 0022     		movs	r2, #0
 162 0066 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 163              		.loc 1 198 0 discriminator 4
 164 0068 504B     		ldr	r3, .L17+64
 165 006a 0022     		movs	r2, #0
 166 006c 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 167              		.loc 1 199 0 discriminator 4
 168 006e 504B     		ldr	r3, .L17+68
 169 0070 0122     		movs	r2, #1
 170 0072 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 171              		.loc 1 206 0 discriminator 4
 172 0074 4F4B     		ldr	r3, .L17+72
 173 0076 1B68     		ldr	r3, [r3]
 174 0078 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 175              		.loc 1 207 0 discriminator 4
 176 007a 7B68     		ldr	r3, [r7, #4]
 177 007c 4E4A     		ldr	r2, .L17+76
 178 007e 1340     		ands	r3, r2
 179 0080 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 8


 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 180              		.loc 1 220 0 discriminator 4
 181 0082 7B68     		ldr	r3, [r7, #4]
 182 0084 8022     		movs	r2, #128
 183 0086 9205     		lsls	r2, r2, #22
 184 0088 1343     		orrs	r3, r2
 185 008a 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 186              		.loc 1 221 0 discriminator 4
 187 008c 7B68     		ldr	r3, [r7, #4]
 188 008e 0122     		movs	r2, #1
 189 0090 9343     		bics	r3, r2
 190 0092 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 191              		.loc 1 226 0 discriminator 4
 192 0094 474B     		ldr	r3, .L17+72
 193 0096 7A68     		ldr	r2, [r7, #4]
 194 0098 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 195              		.loc 1 232 0 discriminator 4
 196 009a 0023     		movs	r3, #0
 197 009c FB60     		str	r3, [r7, #12]
 198 009e 5EE0     		b	.L8
 199              	.L16:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 200              		.loc 1 234 0
 201 00a0 0022     		movs	r2, #0
 202 00a2 DC23     		movs	r3, #220
 203 00a4 9B01     		lsls	r3, r3, #6
 204 00a6 1340     		ands	r3, r2
 205 00a8 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 9


 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 206              		.loc 1 253 0
 207 00aa FB68     		ldr	r3, [r7, #12]
 208 00ac 9B00     		lsls	r3, r3, #2
 209 00ae 434A     		ldr	r2, .L17+80
 210 00b0 9446     		mov	ip, r2
 211 00b2 6344     		add	r3, r3, ip
 212 00b4 7A68     		ldr	r2, [r7, #4]
 213 00b6 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 214              		.loc 1 255 0
 215 00b8 0022     		movs	r2, #0
 216 00ba 0123     		movs	r3, #1
 217 00bc 1340     		ands	r3, r2
 218 00be 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 219              		.loc 1 257 0
 220 00c0 394B     		ldr	r3, .L17+60
 221 00c2 394A     		ldr	r2, .L17+60
 222 00c4 1168     		ldr	r1, [r2]
 223 00c6 0120     		movs	r0, #1
 224 00c8 FA68     		ldr	r2, [r7, #12]
 225 00ca 9040     		lsls	r0, r0, r2
 226 00cc 0200     		movs	r2, r0
 227 00ce 1204     		lsls	r2, r2, #16
 228 00d0 120C     		lsrs	r2, r2, #16
 229 00d2 0A43     		orrs	r2, r1
 230 00d4 1A60     		str	r2, [r3]
 231              	.L9:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 232              		.loc 1 260 0
 233 00d6 0022     		movs	r2, #0
 234 00d8 0223     		movs	r3, #2
 235 00da 1340     		ands	r3, r2
 236 00dc 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 237              		.loc 1 262 0
 238 00de 334B     		ldr	r3, .L17+64
 239 00e0 324A     		ldr	r2, .L17+64
 240 00e2 1168     		ldr	r1, [r2]
 241 00e4 0120     		movs	r0, #1
 242 00e6 FA68     		ldr	r2, [r7, #12]
 243 00e8 9040     		lsls	r0, r0, r2
 244 00ea 0200     		movs	r2, r0
 245 00ec 1204     		lsls	r2, r2, #16
 246 00ee 120C     		lsrs	r2, r2, #16
 247 00f0 0A43     		orrs	r2, r1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 10


 248 00f2 1A60     		str	r2, [r3]
 249              	.L10:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 250              		.loc 1 282 0
 251 00f4 0022     		movs	r2, #0
 252 00f6 8023     		movs	r3, #128
 253 00f8 9B00     		lsls	r3, r3, #2
 254 00fa 1340     		ands	r3, r2
 255 00fc 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 256              		.loc 1 284 0
 257 00fe 8023     		movs	r3, #128
 258 0100 5B00     		lsls	r3, r3, #1
 259 0102 BB60     		str	r3, [r7, #8]
 260 0104 02E0     		b	.L12
 261              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 262              		.loc 1 288 0
 263 0106 8023     		movs	r3, #128
 264 0108 5B01     		lsls	r3, r3, #5
 265 010a BB60     		str	r3, [r7, #8]
 266              	.L12:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 267              		.loc 1 291 0
 268 010c 0022     		movs	r2, #0
 269 010e 8023     		movs	r3, #128
 270 0110 5B00     		lsls	r3, r3, #1
 271 0112 1340     		ands	r3, r2
 272 0114 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 11


 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 273              		.loc 1 298 0
 274 0116 2A4B     		ldr	r3, .L17+84
 275 0118 FA68     		ldr	r2, [r7, #12]
 276 011a 5200     		lsls	r2, r2, #1
 277 011c 0021     		movs	r1, #0
 278 011e D152     		strh	r1, [r2, r3]
 279 0120 09E0     		b	.L14
 280              	.L13:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 281              		.loc 1 305 0
 282 0122 BB68     		ldr	r3, [r7, #8]
 283 0124 002B     		cmp	r3, #0
 284 0126 00DA     		bge	.L15
 285 0128 0133     		adds	r3, r3, #1
 286              	.L15:
 287 012a 5B10     		asrs	r3, r3, #1
 288 012c 19B2     		sxth	r1, r3
 289 012e 244B     		ldr	r3, .L17+84
 290 0130 FA68     		ldr	r2, [r7, #12]
 291 0132 5200     		lsls	r2, r2, #1
 292 0134 D152     		strh	r1, [r2, r3]
 293              	.L14:
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 294              		.loc 1 311 0 discriminator 2
 295 0136 BB68     		ldr	r3, [r7, #8]
 296 0138 224A     		ldr	r2, .L17+88
 297 013a 5343     		muls	r3, r2
 298 013c 224A     		ldr	r2, .L17+92
 299 013e 9446     		mov	ip, r2
 300 0140 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 301              		.loc 1 312 0 discriminator 2
 302 0142 2249     		ldr	r1, .L17+96
 303 0144 1800     		movs	r0, r3
 304 0146 FFF7FEFF 		bl	__aeabi_idiv
 305 014a 0300     		movs	r3, r0
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 306              		.loc 1 311 0 discriminator 2
 307 014c 1BB2     		sxth	r3, r3
 308 014e 1900     		movs	r1, r3
 309 0150 1F4B     		ldr	r3, .L17+100
 310 0152 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 12


 311 0154 9200     		lsls	r2, r2, #2
 312 0156 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 313              		.loc 1 232 0 discriminator 2
 314 0158 FB68     		ldr	r3, [r7, #12]
 315 015a 0133     		adds	r3, r3, #1
 316 015c FB60     		str	r3, [r7, #12]
 317              	.L8:
 232:Generated_Source\PSoC4/ADC.c ****     {
 318              		.loc 1 232 0 is_stmt 0 discriminator 1
 319 015e FB68     		ldr	r3, [r7, #12]
 320 0160 002B     		cmp	r3, #0
 321 0162 9DD0     		beq	.L16
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 322              		.loc 1 314 0 is_stmt 1
 323 0164 C046     		nop
 324 0166 BD46     		mov	sp, r7
 325 0168 04B0     		add	sp, sp, #16
 326              		@ sp needed
 327 016a 80BD     		pop	{r7, pc}
 328              	.L18:
 329              		.align	2
 330              	.L17:
 331 016c 00000000 		.word	ADC_ISR
 332 0170 20003A40 		.word	1077542944
 333 0174 80033A40 		.word	1077543808
 334 0178 70021051 		.word	1360003696
 335 017c 70020051 		.word	1358955120
 336 0180 00003A40 		.word	1077542912
 337 0184 04003A40 		.word	1077542916
 338 0188 84000080 		.word	-2147483516
 339 018c 18003A40 		.word	1077542936
 340 0190 0000FF07 		.word	134152192
 341 0194 1C003A40 		.word	1077542940
 342 0198 10003A40 		.word	1077542928
 343 019c 04000400 		.word	262148
 344 01a0 14003A40 		.word	1077542932
 345 01a4 00033A40 		.word	1077543680
 346 01a8 28023A40 		.word	1077543464
 347 01ac 38023A40 		.word	1077543480
 348 01b0 18023A40 		.word	1077543448
 349 01b4 30003A40 		.word	1077542960
 350 01b8 FFFFFFDF 		.word	-536870913
 351 01bc 80003A40 		.word	1077543040
 352 01c0 00000000 		.word	ADC_offset
 353 01c4 10270000 		.word	10000
 354 01c8 E40C0000 		.word	3300
 355 01cc C8190000 		.word	6600
 356 01d0 00000000 		.word	ADC_countsPer10Volt
 357              		.cfi_endproc
 358              	.LFE3:
 359              		.size	ADC_Init, .-ADC_Init
 360              		.section	.text.ADC_Enable,"ax",%progbits
 361              		.align	2
 362              		.global	ADC_Enable
 363              		.code	16
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 13


 364              		.thumb_func
 365              		.type	ADC_Enable, %function
 366              	ADC_Enable:
 367              	.LFB4:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 368              		.loc 1 331 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 378              		.loc 1 332 0
 379 0004 0A4B     		ldr	r3, .L23
 380 0006 1B68     		ldr	r3, [r3]
 381 0008 002B     		cmp	r3, #0
 382 000a 0EDB     		blt	.L22
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 383              		.loc 1 336 0
 384 000c C046     		nop
 385              	.L21:
 386              		.loc 1 336 0 is_stmt 0 discriminator 1
 387 000e 094B     		ldr	r3, .L23+4
 388 0010 1B68     		ldr	r3, [r3]
 389 0012 002B     		cmp	r3, #0
 390 0014 FBDB     		blt	.L21
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 391              		.loc 1 342 0 is_stmt 1
 392 0016 064B     		ldr	r3, .L23
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 14


 393 0018 054A     		ldr	r2, .L23
 394 001a 1268     		ldr	r2, [r2]
 395 001c 8021     		movs	r1, #128
 396 001e 0906     		lsls	r1, r1, #24
 397 0020 0A43     		orrs	r2, r1
 398 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 399              		.loc 1 345 0
 400 0024 0A20     		movs	r0, #10
 401 0026 FFF7FEFF 		bl	CyDelayUs
 402              	.L22:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 403              		.loc 1 347 0
 404 002a C046     		nop
 405 002c BD46     		mov	sp, r7
 406              		@ sp needed
 407 002e 80BD     		pop	{r7, pc}
 408              	.L24:
 409              		.align	2
 410              	.L23:
 411 0030 00003A40 		.word	1077542912
 412 0034 08023A40 		.word	1077543432
 413              		.cfi_endproc
 414              	.LFE4:
 415              		.size	ADC_Enable, .-ADC_Enable
 416              		.section	.text.ADC_Stop,"ax",%progbits
 417              		.align	2
 418              		.global	ADC_Stop
 419              		.code	16
 420              		.thumb_func
 421              		.type	ADC_Stop, %function
 422              	ADC_Stop:
 423              	.LFB5:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 424              		.loc 1 366 0
 425              		.cfi_startproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 15


 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0000 80B5     		push	{r7, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 434              		.loc 1 367 0
 435 0004 044B     		ldr	r3, .L26
 436 0006 044A     		ldr	r2, .L26
 437 0008 1268     		ldr	r2, [r2]
 438 000a 5200     		lsls	r2, r2, #1
 439 000c 5208     		lsrs	r2, r2, #1
 440 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC.c **** }
 441              		.loc 1 368 0
 442 0010 C046     		nop
 443 0012 BD46     		mov	sp, r7
 444              		@ sp needed
 445 0014 80BD     		pop	{r7, pc}
 446              	.L27:
 447 0016 C046     		.align	2
 448              	.L26:
 449 0018 00003A40 		.word	1077542912
 450              		.cfi_endproc
 451              	.LFE5:
 452              		.size	ADC_Stop, .-ADC_Stop
 453              		.section	.text.ADC_StartConvert,"ax",%progbits
 454              		.align	2
 455              		.global	ADC_StartConvert
 456              		.code	16
 457              		.thumb_func
 458              		.type	ADC_StartConvert, %function
 459              	ADC_StartConvert:
 460              	.LFB6:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 16


 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 461              		.loc 1 392 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465 0000 80B5     		push	{r7, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 471              		.loc 1 394 0
 472 0004 044B     		ldr	r3, .L29
 473 0006 044A     		ldr	r2, .L29
 474 0008 1268     		ldr	r2, [r2]
 475 000a 8021     		movs	r1, #128
 476 000c 4902     		lsls	r1, r1, #9
 477 000e 0A43     		orrs	r2, r1
 478 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 479              		.loc 1 399 0
 480 0012 C046     		nop
 481 0014 BD46     		mov	sp, r7
 482              		@ sp needed
 483 0016 80BD     		pop	{r7, pc}
 484              	.L30:
 485              		.align	2
 486              	.L29:
 487 0018 04003A40 		.word	1077542916
 488              		.cfi_endproc
 489              	.LFE6:
 490              		.size	ADC_StartConvert, .-ADC_StartConvert
 491              		.section	.text.ADC_StopConvert,"ax",%progbits
 492              		.align	2
 493              		.global	ADC_StopConvert
 494              		.code	16
 495              		.thumb_func
 496              		.type	ADC_StopConvert, %function
 497              	ADC_StopConvert:
 498              	.LFB7:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 17


 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 499              		.loc 1 417 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503 0000 80B5     		push	{r7, lr}
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 509              		.loc 1 419 0
 510 0004 044B     		ldr	r3, .L32
 511 0006 044A     		ldr	r2, .L32
 512 0008 1268     		ldr	r2, [r2]
 513 000a 0449     		ldr	r1, .L32+4
 514 000c 0A40     		ands	r2, r1
 515 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 516              		.loc 1 421 0
 517 0010 C046     		nop
 518 0012 BD46     		mov	sp, r7
 519              		@ sp needed
 520 0014 80BD     		pop	{r7, pc}
 521              	.L33:
 522 0016 C046     		.align	2
 523              	.L32:
 524 0018 04003A40 		.word	1077542916
 525 001c FFFFFEFF 		.word	-65537
 526              		.cfi_endproc
 527              	.LFE7:
 528              		.size	ADC_StopConvert, .-ADC_StopConvert
 529              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 530              		.align	2
 531              		.global	ADC_IsEndConversion
 532              		.code	16
 533              		.thumb_func
 534              		.type	ADC_IsEndConversion, %function
 535              	ADC_IsEndConversion:
 536              	.LFB8:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 18


 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 537              		.loc 1 451 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 16
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541 0000 80B5     		push	{r7, lr}
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 7, -8
 544              		.cfi_offset 14, -4
 545 0002 84B0     		sub	sp, sp, #16
 546              		.cfi_def_cfa_offset 24
 547 0004 00AF     		add	r7, sp, #0
 548              		.cfi_def_cfa_register 7
 549 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 550              		.loc 1 452 0
 551 0008 0023     		movs	r3, #0
 552 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 553              		.loc 1 454 0
 554 000c 7B68     		ldr	r3, [r7, #4]
 555 000e 0322     		movs	r2, #3
 556 0010 1340     		ands	r3, r2
 557 0012 11D0     		beq	.L35
 558              	.L37:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 559              		.loc 1 458 0 discriminator 2
 560 0014 0B4B     		ldr	r3, .L39
 561 0016 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 19


 562 0018 0122     		movs	r2, #1
 563 001a 1340     		ands	r3, r2
 564 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 565              		.loc 1 459 0 discriminator 2
 566 001e FB68     		ldr	r3, [r7, #12]
 567 0020 002B     		cmp	r3, #0
 568 0022 03D1     		bne	.L36
 569              		.loc 1 459 0 is_stmt 0 discriminator 1
 570 0024 7B68     		ldr	r3, [r7, #4]
 571 0026 0222     		movs	r2, #2
 572 0028 1340     		ands	r3, r2
 573 002a F3D1     		bne	.L37
 574              	.L36:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 575              		.loc 1 461 0 is_stmt 1
 576 002c FB68     		ldr	r3, [r7, #12]
 577 002e 002B     		cmp	r3, #0
 578 0030 02D0     		beq	.L35
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 579              		.loc 1 464 0
 580 0032 044B     		ldr	r3, .L39
 581 0034 0122     		movs	r2, #1
 582 0036 1A60     		str	r2, [r3]
 583              	.L35:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 584              		.loc 1 485 0
 585 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC.c **** }
 586              		.loc 1 486 0
 587 003a 1800     		movs	r0, r3
 588 003c BD46     		mov	sp, r7
 589 003e 04B0     		add	sp, sp, #16
 590              		@ sp needed
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 20


 591 0040 80BD     		pop	{r7, pc}
 592              	.L40:
 593 0042 C046     		.align	2
 594              	.L39:
 595 0044 10023A40 		.word	1077543440
 596              		.cfi_endproc
 597              	.LFE8:
 598              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 599              		.section	.text.ADC_GetResult16,"ax",%progbits
 600              		.align	2
 601              		.global	ADC_GetResult16
 602              		.code	16
 603              		.thumb_func
 604              		.type	ADC_GetResult16, %function
 605              	ADC_GetResult16:
 606              	.LFB9:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 607              		.loc 1 505 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 16
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611 0000 80B5     		push	{r7, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0002 84B0     		sub	sp, sp, #16
 616              		.cfi_def_cfa_offset 24
 617 0004 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 619 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 620              		.loc 1 509 0
 621 0008 7B68     		ldr	r3, [r7, #4]
 622 000a 002B     		cmp	r3, #0
 623 000c 02D0     		beq	.L42
 624              		.loc 1 509 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 21


 625 000e 0020     		movs	r0, #0
 626 0010 FFF7FEFF 		bl	CyHalt
 627              	.L42:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 628              		.loc 1 511 0 is_stmt 1
 629 0014 7B68     		ldr	r3, [r7, #4]
 630 0016 002B     		cmp	r3, #0
 631 0018 09D1     		bne	.L43
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 632              		.loc 1 513 0
 633 001a 7B68     		ldr	r3, [r7, #4]
 634 001c 9B00     		lsls	r3, r3, #2
 635 001e 084A     		ldr	r2, .L46
 636 0020 9446     		mov	ip, r2
 637 0022 6344     		add	r3, r3, ip
 638 0024 1B68     		ldr	r3, [r3]
 639 0026 1B04     		lsls	r3, r3, #16
 640 0028 1B0C     		lsrs	r3, r3, #16
 641 002a FB60     		str	r3, [r7, #12]
 642 002c 01E0     		b	.L44
 643              	.L43:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 644              		.loc 1 521 0
 645 002e 0023     		movs	r3, #0
 646 0030 FB60     		str	r3, [r7, #12]
 647              	.L44:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 648              		.loc 1 525 0
 649 0032 FB68     		ldr	r3, [r7, #12]
 650 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC.c **** }
 651              		.loc 1 526 0
 652 0036 1800     		movs	r0, r3
 653 0038 BD46     		mov	sp, r7
 654 003a 04B0     		add	sp, sp, #16
 655              		@ sp needed
 656 003c 80BD     		pop	{r7, pc}
 657              	.L47:
 658 003e C046     		.align	2
 659              	.L46:
 660 0040 80013A40 		.word	1077543296
 661              		.cfi_endproc
 662              	.LFE9:
 663              		.size	ADC_GetResult16, .-ADC_GetResult16
 664              		.section	.text.ADC_SetChanMask,"ax",%progbits
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 22


 665              		.align	2
 666              		.global	ADC_SetChanMask
 667              		.code	16
 668              		.thumb_func
 669              		.type	ADC_SetChanMask, %function
 670              	ADC_SetChanMask:
 671              	.LFB10:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 672              		.loc 1 550 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 80B5     		push	{r7, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 82B0     		sub	sp, sp, #8
 681              		.cfi_def_cfa_offset 16
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 685              		.loc 1 551 0
 686 0008 044B     		ldr	r3, .L49
 687 000a 7A68     		ldr	r2, [r7, #4]
 688 000c 0121     		movs	r1, #1
 689 000e 0A40     		ands	r2, r1
 690 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 691              		.loc 1 552 0
 692 0012 C046     		nop
 693 0014 BD46     		mov	sp, r7
 694 0016 02B0     		add	sp, sp, #8
 695              		@ sp needed
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 23


 696 0018 80BD     		pop	{r7, pc}
 697              	.L50:
 698 001a C046     		.align	2
 699              	.L49:
 700 001c 20003A40 		.word	1077542944
 701              		.cfi_endproc
 702              	.LFE10:
 703              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 704              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 705              		.align	2
 706              		.global	ADC_SetLowLimit
 707              		.code	16
 708              		.thumb_func
 709              		.type	ADC_SetLowLimit, %function
 710              	ADC_SetLowLimit:
 711              	.LFB11:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 24


 594:Generated_Source\PSoC4/ADC.c **** {
 712              		.loc 1 594 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716 0000 80B5     		push	{r7, lr}
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720 0002 82B0     		sub	sp, sp, #8
 721              		.cfi_def_cfa_offset 16
 722 0004 00AF     		add	r7, sp, #0
 723              		.cfi_def_cfa_register 7
 724 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 725              		.loc 1 595 0
 726 0008 084B     		ldr	r3, .L52
 727 000a 084A     		ldr	r2, .L52
 728 000c 1268     		ldr	r2, [r2]
 729 000e 120C     		lsrs	r2, r2, #16
 730 0010 1204     		lsls	r2, r2, #16
 731 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 732              		.loc 1 596 0
 733 0014 054B     		ldr	r3, .L52
 734 0016 054A     		ldr	r2, .L52
 735 0018 1168     		ldr	r1, [r2]
 736 001a 7A68     		ldr	r2, [r7, #4]
 737 001c 1204     		lsls	r2, r2, #16
 738 001e 120C     		lsrs	r2, r2, #16
 739 0020 0A43     		orrs	r2, r1
 740 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC.c **** }
 741              		.loc 1 597 0
 742 0024 C046     		nop
 743 0026 BD46     		mov	sp, r7
 744 0028 02B0     		add	sp, sp, #8
 745              		@ sp needed
 746 002a 80BD     		pop	{r7, pc}
 747              	.L53:
 748              		.align	2
 749              	.L52:
 750 002c 18003A40 		.word	1077542936
 751              		.cfi_endproc
 752              	.LFE11:
 753              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 754              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 755              		.align	2
 756              		.global	ADC_SetHighLimit
 757              		.code	16
 758              		.thumb_func
 759              		.type	ADC_SetHighLimit, %function
 760              	ADC_SetHighLimit:
 761              	.LFB12:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 25


 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 762              		.loc 1 615 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 80B5     		push	{r7, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 82B0     		sub	sp, sp, #8
 771              		.cfi_def_cfa_offset 16
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 774 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 775              		.loc 1 616 0
 776 0008 084B     		ldr	r3, .L55
 777 000a 084A     		ldr	r2, .L55
 778 000c 1268     		ldr	r2, [r2]
 779 000e 1204     		lsls	r2, r2, #16
 780 0010 120C     		lsrs	r2, r2, #16
 781 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 782              		.loc 1 617 0
 783 0014 054B     		ldr	r3, .L55
 784 0016 054A     		ldr	r2, .L55
 785 0018 1168     		ldr	r1, [r2]
 786 001a 7A68     		ldr	r2, [r7, #4]
 787 001c 1204     		lsls	r2, r2, #16
 788 001e 0A43     		orrs	r2, r1
 789 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC.c **** }
 790              		.loc 1 618 0
 791 0022 C046     		nop
 792 0024 BD46     		mov	sp, r7
 793 0026 02B0     		add	sp, sp, #8
 794              		@ sp needed
 795 0028 80BD     		pop	{r7, pc}
 796              	.L56:
 797 002a C046     		.align	2
 798              	.L55:
 799 002c 18003A40 		.word	1077542936
 800              		.cfi_endproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 26


 801              	.LFE12:
 802              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 803              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 804              		.align	2
 805              		.global	ADC_SetLimitMask
 806              		.code	16
 807              		.thumb_func
 808              		.type	ADC_SetLimitMask, %function
 809              	ADC_SetLimitMask:
 810              	.LFB13:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 811              		.loc 1 639 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 80B5     		push	{r7, lr}
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 82B0     		sub	sp, sp, #8
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 823 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 824              		.loc 1 640 0
 825 0008 044B     		ldr	r3, .L58
 826 000a 7A68     		ldr	r2, [r7, #4]
 827 000c 0121     		movs	r1, #1
 828 000e 0A40     		ands	r2, r1
 829 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 830              		.loc 1 641 0
 831 0012 C046     		nop
 832 0014 BD46     		mov	sp, r7
 833 0016 02B0     		add	sp, sp, #8
 834              		@ sp needed
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 27


 835 0018 80BD     		pop	{r7, pc}
 836              	.L59:
 837 001a C046     		.align	2
 838              	.L58:
 839 001c 38023A40 		.word	1077543480
 840              		.cfi_endproc
 841              	.LFE13:
 842              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 843              		.section	.text.ADC_SetSatMask,"ax",%progbits
 844              		.align	2
 845              		.global	ADC_SetSatMask
 846              		.code	16
 847              		.thumb_func
 848              		.type	ADC_SetSatMask, %function
 849              	ADC_SetSatMask:
 850              	.LFB14:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 851              		.loc 1 662 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0000 80B5     		push	{r7, lr}
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 7, -8
 858              		.cfi_offset 14, -4
 859 0002 82B0     		sub	sp, sp, #8
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 863 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 864              		.loc 1 663 0
 865 0008 044B     		ldr	r3, .L61
 866 000a 7A68     		ldr	r2, [r7, #4]
 867 000c 0121     		movs	r1, #1
 868 000e 0A40     		ands	r2, r1
 869 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 28


 664:Generated_Source\PSoC4/ADC.c **** }
 870              		.loc 1 664 0
 871 0012 C046     		nop
 872 0014 BD46     		mov	sp, r7
 873 0016 02B0     		add	sp, sp, #8
 874              		@ sp needed
 875 0018 80BD     		pop	{r7, pc}
 876              	.L62:
 877 001a C046     		.align	2
 878              	.L61:
 879 001c 28023A40 		.word	1077543464
 880              		.cfi_endproc
 881              	.LFE14:
 882              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 883              		.section	.text.ADC_SetOffset,"ax",%progbits
 884              		.align	2
 885              		.global	ADC_SetOffset
 886              		.code	16
 887              		.thumb_func
 888              		.type	ADC_SetOffset, %function
 889              	ADC_SetOffset:
 890              	.LFB15:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 891              		.loc 1 690 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 8
 894              		@ frame_needed = 1, uses_anonymous_args = 0
 895 0000 80B5     		push	{r7, lr}
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 29


 900              		.cfi_def_cfa_offset 16
 901 0004 00AF     		add	r7, sp, #0
 902              		.cfi_def_cfa_register 7
 903 0006 7860     		str	r0, [r7, #4]
 904 0008 0A00     		movs	r2, r1
 905 000a BB1C     		adds	r3, r7, #2
 906 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 907              		.loc 1 692 0
 908 000e 7B68     		ldr	r3, [r7, #4]
 909 0010 002B     		cmp	r3, #0
 910 0012 02D0     		beq	.L64
 911              		.loc 1 692 0 is_stmt 0 discriminator 1
 912 0014 0020     		movs	r0, #0
 913 0016 FFF7FEFF 		bl	CyHalt
 914              	.L64:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 915              		.loc 1 694 0 is_stmt 1
 916 001a 054B     		ldr	r3, .L65
 917 001c 7A68     		ldr	r2, [r7, #4]
 918 001e 5200     		lsls	r2, r2, #1
 919 0020 B91C     		adds	r1, r7, #2
 920 0022 0988     		ldrh	r1, [r1]
 921 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 922              		.loc 1 695 0
 923 0026 C046     		nop
 924 0028 BD46     		mov	sp, r7
 925 002a 02B0     		add	sp, sp, #8
 926              		@ sp needed
 927 002c 80BD     		pop	{r7, pc}
 928              	.L66:
 929 002e C046     		.align	2
 930              	.L65:
 931 0030 00000000 		.word	ADC_offset
 932              		.cfi_endproc
 933              	.LFE15:
 934              		.size	ADC_SetOffset, .-ADC_SetOffset
 935              		.section	.text.ADC_SetGain,"ax",%progbits
 936              		.align	2
 937              		.global	ADC_SetGain
 938              		.code	16
 939              		.thumb_func
 940              		.type	ADC_SetGain, %function
 941              	ADC_SetGain:
 942              	.LFB16:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 30


 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 943              		.loc 1 724 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 8
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947 0000 80B5     		push	{r7, lr}
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 7, -8
 950              		.cfi_offset 14, -4
 951 0002 82B0     		sub	sp, sp, #8
 952              		.cfi_def_cfa_offset 16
 953 0004 00AF     		add	r7, sp, #0
 954              		.cfi_def_cfa_register 7
 955 0006 7860     		str	r0, [r7, #4]
 956 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 957              		.loc 1 726 0
 958 000a 7B68     		ldr	r3, [r7, #4]
 959 000c 002B     		cmp	r3, #0
 960 000e 02D0     		beq	.L68
 961              		.loc 1 726 0 is_stmt 0 discriminator 1
 962 0010 0020     		movs	r0, #0
 963 0012 FFF7FEFF 		bl	CyHalt
 964              	.L68:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 965              		.loc 1 728 0 is_stmt 1
 966 0016 044B     		ldr	r3, .L69
 967 0018 7A68     		ldr	r2, [r7, #4]
 968 001a 9200     		lsls	r2, r2, #2
 969 001c 3968     		ldr	r1, [r7]
 970 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 971              		.loc 1 729 0
 972 0020 C046     		nop
 973 0022 BD46     		mov	sp, r7
 974 0024 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 31


 975              		@ sp needed
 976 0026 80BD     		pop	{r7, pc}
 977              	.L70:
 978              		.align	2
 979              	.L69:
 980 0028 00000000 		.word	ADC_countsPer10Volt
 981              		.cfi_endproc
 982              	.LFE16:
 983              		.size	ADC_SetGain, .-ADC_SetGain
 984              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 985              		.align	2
 986              		.global	ADC_CountsTo_mVolts
 987              		.code	16
 988              		.thumb_func
 989              		.type	ADC_CountsTo_mVolts, %function
 990              	ADC_CountsTo_mVolts:
 991              	.LFB17:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 992              		.loc 1 757 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 16
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996 0000 80B5     		push	{r7, lr}
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 84B0     		sub	sp, sp, #16
 1001              		.cfi_def_cfa_offset 24
 1002 0004 00AF     		add	r7, sp, #0
 1003              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 32


 1004 0006 7860     		str	r0, [r7, #4]
 1005 0008 0A00     		movs	r2, r1
 1006 000a BB1C     		adds	r3, r7, #2
 1007 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1008              		.loc 1 761 0
 1009 000e 7B68     		ldr	r3, [r7, #4]
 1010 0010 002B     		cmp	r3, #0
 1011 0012 02D0     		beq	.L72
 1012              		.loc 1 761 0 is_stmt 0 discriminator 1
 1013 0014 0020     		movs	r0, #0
 1014 0016 FFF7FEFF 		bl	CyHalt
 1015              	.L72:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1016              		.loc 1 772 0 is_stmt 1
 1017 001a 1E4B     		ldr	r3, .L78
 1018 001c 7A68     		ldr	r2, [r7, #4]
 1019 001e 5200     		lsls	r2, r2, #1
 1020 0020 D35A     		ldrh	r3, [r2, r3]
 1021 0022 19B2     		sxth	r1, r3
 1022 0024 BB1C     		adds	r3, r7, #2
 1023 0026 1A88     		ldrh	r2, [r3]
 1024 0028 8BB2     		uxth	r3, r1
 1025 002a D31A     		subs	r3, r2, r3
 1026 002c 9AB2     		uxth	r2, r3
 1027 002e BB1C     		adds	r3, r7, #2
 1028 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1029              		.loc 1 774 0
 1030 0032 BB1C     		adds	r3, r7, #2
 1031 0034 0022     		movs	r2, #0
 1032 0036 9B5E     		ldrsh	r3, [r3, r2]
 1033 0038 174A     		ldr	r2, .L78+4
 1034 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1035              		.loc 1 775 0
 1036 003c BB1C     		adds	r3, r7, #2
 1037 003e 0021     		movs	r1, #0
 1038 0040 5B5E     		ldrsh	r3, [r3, r1]
 1039 0042 002B     		cmp	r3, #0
 1040 0044 08DD     		ble	.L73
 1041              		.loc 1 775 0 is_stmt 0 discriminator 1
 1042 0046 154B     		ldr	r3, .L78+8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 33


 1043 0048 7968     		ldr	r1, [r7, #4]
 1044 004a 8900     		lsls	r1, r1, #2
 1045 004c CB58     		ldr	r3, [r1, r3]
 1046 004e 002B     		cmp	r3, #0
 1047 0050 00DA     		bge	.L74
 1048 0052 0133     		adds	r3, r3, #1
 1049              	.L74:
 1050 0054 5B10     		asrs	r3, r3, #1
 1051 0056 08E0     		b	.L75
 1052              	.L73:
 1053              		.loc 1 775 0 discriminator 2
 1054 0058 104B     		ldr	r3, .L78+8
 1055 005a 7968     		ldr	r1, [r7, #4]
 1056 005c 8900     		lsls	r1, r1, #2
 1057 005e CB58     		ldr	r3, [r1, r3]
 1058 0060 002B     		cmp	r3, #0
 1059 0062 00DA     		bge	.L76
 1060 0064 0133     		adds	r3, r3, #1
 1061              	.L76:
 1062 0066 5B10     		asrs	r3, r3, #1
 1063 0068 5B42     		rsbs	r3, r3, #0
 1064              	.L75:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1065              		.loc 1 774 0 is_stmt 1
 1066 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1067              		.loc 1 776 0
 1068 006c 0B4B     		ldr	r3, .L78+8
 1069 006e 7A68     		ldr	r2, [r7, #4]
 1070 0070 9200     		lsls	r2, r2, #2
 1071 0072 D358     		ldr	r3, [r2, r3]
 1072 0074 1900     		movs	r1, r3
 1073 0076 FFF7FEFF 		bl	__aeabi_idiv
 1074 007a 0300     		movs	r3, r0
 1075 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1076              		.loc 1 774 0
 1077 007e 0E23     		movs	r3, #14
 1078 0080 FB18     		adds	r3, r7, r3
 1079 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1080              		.loc 1 778 0
 1081 0084 0E23     		movs	r3, #14
 1082 0086 FB18     		adds	r3, r7, r3
 1083 0088 0022     		movs	r2, #0
 1084 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC.c ****     }
 1085              		.loc 1 779 0
 1086 008c 1800     		movs	r0, r3
 1087 008e BD46     		mov	sp, r7
 1088 0090 04B0     		add	sp, sp, #16
 1089              		@ sp needed
 1090 0092 80BD     		pop	{r7, pc}
 1091              	.L79:
 1092              		.align	2
 1093              	.L78:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 34


 1094 0094 00000000 		.word	ADC_offset
 1095 0098 10270000 		.word	10000
 1096 009c 00000000 		.word	ADC_countsPer10Volt
 1097              		.cfi_endproc
 1098              	.LFE17:
 1099              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1100              		.global	__aeabi_lmul
 1101              		.global	__aeabi_ldivmod
 1102              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1103              		.align	2
 1104              		.global	ADC_CountsTo_uVolts
 1105              		.code	16
 1106              		.thumb_func
 1107              		.type	ADC_CountsTo_uVolts, %function
 1108              	ADC_CountsTo_uVolts:
 1109              	.LFB18:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1110              		.loc 1 811 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 24
 1113              		@ frame_needed = 1, uses_anonymous_args = 0
 1114 0000 B0B5     		push	{r4, r5, r7, lr}
 1115              		.cfi_def_cfa_offset 16
 1116              		.cfi_offset 4, -16
 1117              		.cfi_offset 5, -12
 1118              		.cfi_offset 7, -8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 35


 1119              		.cfi_offset 14, -4
 1120 0002 86B0     		sub	sp, sp, #24
 1121              		.cfi_def_cfa_offset 40
 1122 0004 00AF     		add	r7, sp, #0
 1123              		.cfi_def_cfa_register 7
 1124 0006 F860     		str	r0, [r7, #12]
 1125 0008 0A00     		movs	r2, r1
 1126 000a 0A23     		movs	r3, #10
 1127 000c FB18     		adds	r3, r7, r3
 1128 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1129              		.loc 1 815 0
 1130 0010 FB68     		ldr	r3, [r7, #12]
 1131 0012 002B     		cmp	r3, #0
 1132 0014 02D0     		beq	.L81
 1133              		.loc 1 815 0 is_stmt 0 discriminator 1
 1134 0016 0020     		movs	r0, #0
 1135 0018 FFF7FEFF 		bl	CyHalt
 1136              	.L81:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1137              		.loc 1 826 0 is_stmt 1
 1138 001c 194B     		ldr	r3, .L83
 1139 001e FA68     		ldr	r2, [r7, #12]
 1140 0020 5200     		lsls	r2, r2, #1
 1141 0022 D35A     		ldrh	r3, [r2, r3]
 1142 0024 19B2     		sxth	r1, r3
 1143 0026 0A23     		movs	r3, #10
 1144 0028 FB18     		adds	r3, r7, r3
 1145 002a 1A88     		ldrh	r2, [r3]
 1146 002c 8BB2     		uxth	r3, r1
 1147 002e D31A     		subs	r3, r2, r3
 1148 0030 9AB2     		uxth	r2, r3
 1149 0032 0A23     		movs	r3, #10
 1150 0034 FB18     		adds	r3, r7, r3
 1151 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1152              		.loc 1 828 0
 1153 0038 0A23     		movs	r3, #10
 1154 003a FB18     		adds	r3, r7, r3
 1155 003c 1B88     		ldrh	r3, [r3]
 1156 003e 1BB2     		sxth	r3, r3
 1157 0040 3B60     		str	r3, [r7]
 1158 0042 DB17     		asrs	r3, r3, #31
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 36


 1159 0044 7B60     		str	r3, [r7, #4]
 1160 0046 104A     		ldr	r2, .L83+4
 1161 0048 0023     		movs	r3, #0
 1162 004a 3868     		ldr	r0, [r7]
 1163 004c 7968     		ldr	r1, [r7, #4]
 1164 004e FFF7FEFF 		bl	__aeabi_lmul
 1165 0052 0200     		movs	r2, r0
 1166 0054 0B00     		movs	r3, r1
 1167 0056 1000     		movs	r0, r2
 1168 0058 1900     		movs	r1, r3
 1169 005a 0C4B     		ldr	r3, .L83+8
 1170 005c FA68     		ldr	r2, [r7, #12]
 1171 005e 9200     		lsls	r2, r2, #2
 1172 0060 D358     		ldr	r3, [r2, r3]
 1173 0062 1C00     		movs	r4, r3
 1174 0064 DB17     		asrs	r3, r3, #31
 1175 0066 1D00     		movs	r5, r3
 1176 0068 2200     		movs	r2, r4
 1177 006a 2B00     		movs	r3, r5
 1178 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1179 0070 0300     		movs	r3, r0
 1180 0072 0C00     		movs	r4, r1
 1181 0074 3B61     		str	r3, [r7, #16]
 1182 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1183              		.loc 1 830 0
 1184 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC.c ****     }
 1185              		.loc 1 831 0
 1186 007a 1800     		movs	r0, r3
 1187 007c BD46     		mov	sp, r7
 1188 007e 06B0     		add	sp, sp, #24
 1189              		@ sp needed
 1190 0080 B0BD     		pop	{r4, r5, r7, pc}
 1191              	.L84:
 1192 0082 C046     		.align	2
 1193              	.L83:
 1194 0084 00000000 		.word	ADC_offset
 1195 0088 80969800 		.word	10000000
 1196 008c 00000000 		.word	ADC_countsPer10Volt
 1197              		.cfi_endproc
 1198              	.LFE18:
 1199              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1200              		.global	__aeabi_i2f
 1201              		.global	__aeabi_fmul
 1202              		.global	__aeabi_fdiv
 1203              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1204              		.align	2
 1205              		.global	ADC_CountsTo_Volts
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	ADC_CountsTo_Volts, %function
 1209              	ADC_CountsTo_Volts:
 1210              	.LFB19:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 37


 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1211              		.loc 1 856 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 16
 1214              		@ frame_needed = 1, uses_anonymous_args = 0
 1215 0000 90B5     		push	{r4, r7, lr}
 1216              		.cfi_def_cfa_offset 12
 1217              		.cfi_offset 4, -12
 1218              		.cfi_offset 7, -8
 1219              		.cfi_offset 14, -4
 1220 0002 85B0     		sub	sp, sp, #20
 1221              		.cfi_def_cfa_offset 32
 1222 0004 00AF     		add	r7, sp, #0
 1223              		.cfi_def_cfa_register 7
 1224 0006 7860     		str	r0, [r7, #4]
 1225 0008 0A00     		movs	r2, r1
 1226 000a BB1C     		adds	r3, r7, #2
 1227 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1228              		.loc 1 860 0
 1229 000e 7B68     		ldr	r3, [r7, #4]
 1230 0010 002B     		cmp	r3, #0
 1231 0012 02D0     		beq	.L86
 1232              		.loc 1 860 0 is_stmt 0 discriminator 1
 1233 0014 0020     		movs	r0, #0
 1234 0016 FFF7FEFF 		bl	CyHalt
 1235              	.L86:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 38


 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1236              		.loc 1 871 0 is_stmt 1
 1237 001a 164B     		ldr	r3, .L88
 1238 001c 7A68     		ldr	r2, [r7, #4]
 1239 001e 5200     		lsls	r2, r2, #1
 1240 0020 D35A     		ldrh	r3, [r2, r3]
 1241 0022 19B2     		sxth	r1, r3
 1242 0024 BB1C     		adds	r3, r7, #2
 1243 0026 1A88     		ldrh	r2, [r3]
 1244 0028 8BB2     		uxth	r3, r1
 1245 002a D31A     		subs	r3, r2, r3
 1246 002c 9AB2     		uxth	r2, r3
 1247 002e BB1C     		adds	r3, r7, #2
 1248 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1249              		.loc 1 873 0
 1250 0032 BB1C     		adds	r3, r7, #2
 1251 0034 0022     		movs	r2, #0
 1252 0036 9B5E     		ldrsh	r3, [r3, r2]
 1253 0038 1800     		movs	r0, r3
 1254 003a FFF7FEFF 		bl	__aeabi_i2f
 1255 003e 031C     		adds	r3, r0, #0
 1256 0040 0D49     		ldr	r1, .L88+4
 1257 0042 181C     		adds	r0, r3, #0
 1258 0044 FFF7FEFF 		bl	__aeabi_fmul
 1259 0048 031C     		adds	r3, r0, #0
 1260 004a 1C1C     		adds	r4, r3, #0
 1261 004c 0B4B     		ldr	r3, .L88+8
 1262 004e 7A68     		ldr	r2, [r7, #4]
 1263 0050 9200     		lsls	r2, r2, #2
 1264 0052 D358     		ldr	r3, [r2, r3]
 1265 0054 1800     		movs	r0, r3
 1266 0056 FFF7FEFF 		bl	__aeabi_i2f
 1267 005a 031C     		adds	r3, r0, #0
 1268 005c 191C     		adds	r1, r3, #0
 1269 005e 201C     		adds	r0, r4, #0
 1270 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1271 0064 031C     		adds	r3, r0, #0
 1272 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1273              		.loc 1 875 0
 1274 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC.c ****     }
 1275              		.loc 1 876 0
 1276 006a 181C     		adds	r0, r3, #0
 1277 006c BD46     		mov	sp, r7
 1278 006e 05B0     		add	sp, sp, #20
 1279              		@ sp needed
 1280 0070 90BD     		pop	{r4, r7, pc}
 1281              	.L89:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 39


 1282 0072 C046     		.align	2
 1283              	.L88:
 1284 0074 00000000 		.word	ADC_offset
 1285 0078 00002041 		.word	1092616192
 1286 007c 00000000 		.word	ADC_countsPer10Volt
 1287              		.cfi_endproc
 1288              	.LFE19:
 1289              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1290              		.text
 1291              	.Letext0:
 1292              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1293              		.section	.debug_info,"",%progbits
 1294              	.Ldebug_info0:
 1295 0000 8D040000 		.4byte	0x48d
 1296 0004 0400     		.2byte	0x4
 1297 0006 00000000 		.4byte	.Ldebug_abbrev0
 1298 000a 04       		.byte	0x4
 1299 000b 01       		.uleb128 0x1
 1300 000c 9E010000 		.4byte	.LASF60
 1301 0010 0C       		.byte	0xc
 1302 0011 9A020000 		.4byte	.LASF61
 1303 0015 0E010000 		.4byte	.LASF62
 1304 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1305 001d 00000000 		.4byte	0
 1306 0021 00000000 		.4byte	.Ldebug_line0
 1307 0025 02       		.uleb128 0x2
 1308 0026 01       		.byte	0x1
 1309 0027 06       		.byte	0x6
 1310 0028 68000000 		.4byte	.LASF0
 1311 002c 02       		.uleb128 0x2
 1312 002d 01       		.byte	0x1
 1313 002e 08       		.byte	0x8
 1314 002f F7020000 		.4byte	.LASF1
 1315 0033 02       		.uleb128 0x2
 1316 0034 02       		.byte	0x2
 1317 0035 05       		.byte	0x5
 1318 0036 10030000 		.4byte	.LASF2
 1319 003a 02       		.uleb128 0x2
 1320 003b 02       		.byte	0x2
 1321 003c 07       		.byte	0x7
 1322 003d 7B010000 		.4byte	.LASF3
 1323 0041 02       		.uleb128 0x2
 1324 0042 04       		.byte	0x4
 1325 0043 05       		.byte	0x5
 1326 0044 8B000000 		.4byte	.LASF4
 1327 0048 02       		.uleb128 0x2
 1328 0049 04       		.byte	0x4
 1329 004a 07       		.byte	0x7
 1330 004b 4A010000 		.4byte	.LASF5
 1331 004f 02       		.uleb128 0x2
 1332 0050 08       		.byte	0x8
 1333 0051 05       		.byte	0x5
 1334 0052 5A000000 		.4byte	.LASF6
 1335 0056 02       		.uleb128 0x2
 1336 0057 08       		.byte	0x8
 1337 0058 07       		.byte	0x7
 1338 0059 32000000 		.4byte	.LASF7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 40


 1339 005d 03       		.uleb128 0x3
 1340 005e 04       		.byte	0x4
 1341 005f 05       		.byte	0x5
 1342 0060 696E7400 		.ascii	"int\000"
 1343 0064 02       		.uleb128 0x2
 1344 0065 04       		.byte	0x4
 1345 0066 07       		.byte	0x7
 1346 0067 FA000000 		.4byte	.LASF8
 1347 006b 04       		.uleb128 0x4
 1348 006c BC000000 		.4byte	.LASF9
 1349 0070 02       		.byte	0x2
 1350 0071 9801     		.2byte	0x198
 1351 0073 2C000000 		.4byte	0x2c
 1352 0077 04       		.uleb128 0x4
 1353 0078 00000000 		.4byte	.LASF10
 1354 007c 02       		.byte	0x2
 1355 007d 9901     		.2byte	0x199
 1356 007f 3A000000 		.4byte	0x3a
 1357 0083 04       		.uleb128 0x4
 1358 0084 C9000000 		.4byte	.LASF11
 1359 0088 02       		.byte	0x2
 1360 0089 9A01     		.2byte	0x19a
 1361 008b 48000000 		.4byte	0x48
 1362 008f 04       		.uleb128 0x4
 1363 0090 62030000 		.4byte	.LASF12
 1364 0094 02       		.byte	0x2
 1365 0095 9C01     		.2byte	0x19c
 1366 0097 33000000 		.4byte	0x33
 1367 009b 04       		.uleb128 0x4
 1368 009c 7B000000 		.4byte	.LASF13
 1369 00a0 02       		.byte	0x2
 1370 00a1 9D01     		.2byte	0x19d
 1371 00a3 41000000 		.4byte	0x41
 1372 00a7 04       		.uleb128 0x4
 1373 00a8 39020000 		.4byte	.LASF14
 1374 00ac 02       		.byte	0x2
 1375 00ad 9E01     		.2byte	0x19e
 1376 00af B3000000 		.4byte	0xb3
 1377 00b3 02       		.uleb128 0x2
 1378 00b4 04       		.byte	0x4
 1379 00b5 04       		.byte	0x4
 1380 00b6 C3020000 		.4byte	.LASF15
 1381 00ba 02       		.uleb128 0x2
 1382 00bb 08       		.byte	0x8
 1383 00bc 04       		.byte	0x4
 1384 00bd C2000000 		.4byte	.LASF16
 1385 00c1 04       		.uleb128 0x4
 1386 00c2 84020000 		.4byte	.LASF17
 1387 00c6 02       		.byte	0x2
 1388 00c7 A301     		.2byte	0x1a3
 1389 00c9 4F000000 		.4byte	0x4f
 1390 00cd 02       		.uleb128 0x2
 1391 00ce 01       		.byte	0x1
 1392 00cf 08       		.byte	0x8
 1393 00d0 2E030000 		.4byte	.LASF18
 1394 00d4 04       		.uleb128 0x4
 1395 00d5 33020000 		.4byte	.LASF19
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 41


 1396 00d9 02       		.byte	0x2
 1397 00da 4402     		.2byte	0x244
 1398 00dc E0000000 		.4byte	0xe0
 1399 00e0 05       		.uleb128 0x5
 1400 00e1 83000000 		.4byte	0x83
 1401 00e5 02       		.uleb128 0x2
 1402 00e6 08       		.byte	0x8
 1403 00e7 04       		.byte	0x4
 1404 00e8 53020000 		.4byte	.LASF20
 1405 00ec 02       		.uleb128 0x2
 1406 00ed 04       		.byte	0x4
 1407 00ee 07       		.byte	0x7
 1408 00ef 41020000 		.4byte	.LASF21
 1409 00f3 06       		.uleb128 0x6
 1410 00f4 81000000 		.4byte	.LASF25
 1411 00f8 01       		.byte	0x1
 1412 00f9 3F       		.byte	0x3f
 1413 00fa 00000000 		.4byte	.LFB2
 1414 00fe 24000000 		.4byte	.LFE2-.LFB2
 1415 0102 01       		.uleb128 0x1
 1416 0103 9C       		.byte	0x9c
 1417 0104 07       		.uleb128 0x7
 1418 0105 29000000 		.4byte	.LASF36
 1419 0109 01       		.byte	0x1
 1420 010a 5E       		.byte	0x5e
 1421 010b 00000000 		.4byte	.LFB3
 1422 010f D4010000 		.4byte	.LFE3-.LFB3
 1423 0113 01       		.uleb128 0x1
 1424 0114 9C       		.byte	0x9c
 1425 0115 44010000 		.4byte	0x144
 1426 0119 08       		.uleb128 0x8
 1427 011a 23030000 		.4byte	.LASF22
 1428 011e 01       		.byte	0x1
 1429 011f 60       		.byte	0x60
 1430 0120 83000000 		.4byte	0x83
 1431 0124 02       		.uleb128 0x2
 1432 0125 91       		.byte	0x91
 1433 0126 74       		.sleb128 -12
 1434 0127 08       		.uleb128 0x8
 1435 0128 71010000 		.4byte	.LASF23
 1436 012c 01       		.byte	0x1
 1437 012d 61       		.byte	0x61
 1438 012e 83000000 		.4byte	0x83
 1439 0132 02       		.uleb128 0x2
 1440 0133 91       		.byte	0x91
 1441 0134 6C       		.sleb128 -20
 1442 0135 08       		.uleb128 0x8
 1443 0136 0F000000 		.4byte	.LASF24
 1444 013a 01       		.byte	0x1
 1445 013b 62       		.byte	0x62
 1446 013c 9B000000 		.4byte	0x9b
 1447 0140 02       		.uleb128 0x2
 1448 0141 91       		.byte	0x91
 1449 0142 70       		.sleb128 -16
 1450 0143 00       		.byte	0
 1451 0144 09       		.uleb128 0x9
 1452 0145 57030000 		.4byte	.LASF26
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 42


 1453 0149 01       		.byte	0x1
 1454 014a 4A01     		.2byte	0x14a
 1455 014c 00000000 		.4byte	.LFB4
 1456 0150 38000000 		.4byte	.LFE4-.LFB4
 1457 0154 01       		.uleb128 0x1
 1458 0155 9C       		.byte	0x9c
 1459 0156 0A       		.uleb128 0xa
 1460 0157 1A030000 		.4byte	.LASF27
 1461 015b 01       		.byte	0x1
 1462 015c 6D01     		.2byte	0x16d
 1463 015e 00000000 		.4byte	.LFB5
 1464 0162 1C000000 		.4byte	.LFE5-.LFB5
 1465 0166 01       		.uleb128 0x1
 1466 0167 9C       		.byte	0x9c
 1467 0168 0A       		.uleb128 0xa
 1468 0169 49000000 		.4byte	.LASF28
 1469 016d 01       		.byte	0x1
 1470 016e 8701     		.2byte	0x187
 1471 0170 00000000 		.4byte	.LFB6
 1472 0174 1C000000 		.4byte	.LFE6-.LFB6
 1473 0178 01       		.uleb128 0x1
 1474 0179 9C       		.byte	0x9c
 1475 017a 0A       		.uleb128 0xa
 1476 017b 8E010000 		.4byte	.LASF29
 1477 017f 01       		.byte	0x1
 1478 0180 A001     		.2byte	0x1a0
 1479 0182 00000000 		.4byte	.LFB7
 1480 0186 20000000 		.4byte	.LFE7-.LFB7
 1481 018a 01       		.uleb128 0x1
 1482 018b 9C       		.byte	0x9c
 1483 018c 0B       		.uleb128 0xb
 1484 018d 70020000 		.4byte	.LASF31
 1485 0191 01       		.byte	0x1
 1486 0192 C201     		.2byte	0x1c2
 1487 0194 83000000 		.4byte	0x83
 1488 0198 00000000 		.4byte	.LFB8
 1489 019c 48000000 		.4byte	.LFE8-.LFB8
 1490 01a0 01       		.uleb128 0x1
 1491 01a1 9C       		.byte	0x9c
 1492 01a2 C5010000 		.4byte	0x1c5
 1493 01a6 0C       		.uleb128 0xc
 1494 01a7 E1000000 		.4byte	.LASF33
 1495 01ab 01       		.byte	0x1
 1496 01ac C201     		.2byte	0x1c2
 1497 01ae 83000000 		.4byte	0x83
 1498 01b2 02       		.uleb128 0x2
 1499 01b3 91       		.byte	0x91
 1500 01b4 6C       		.sleb128 -20
 1501 01b5 0D       		.uleb128 0xd
 1502 01b6 74000000 		.4byte	.LASF30
 1503 01ba 01       		.byte	0x1
 1504 01bb C401     		.2byte	0x1c4
 1505 01bd 83000000 		.4byte	0x83
 1506 01c1 02       		.uleb128 0x2
 1507 01c2 91       		.byte	0x91
 1508 01c3 74       		.sleb128 -12
 1509 01c4 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 43


 1510 01c5 0E       		.uleb128 0xe
 1511 01c6 7D030000 		.4byte	.LASF32
 1512 01ca 01       		.byte	0x1
 1513 01cb F801     		.2byte	0x1f8
 1514 01cd 8F000000 		.4byte	0x8f
 1515 01d1 00000000 		.4byte	.LFB9
 1516 01d5 44000000 		.4byte	.LFE9-.LFB9
 1517 01d9 01       		.uleb128 0x1
 1518 01da 9C       		.byte	0x9c
 1519 01db FE010000 		.4byte	0x1fe
 1520 01df 0C       		.uleb128 0xc
 1521 01e0 29030000 		.4byte	.LASF34
 1522 01e4 01       		.byte	0x1
 1523 01e5 F801     		.2byte	0x1f8
 1524 01e7 83000000 		.4byte	0x83
 1525 01eb 02       		.uleb128 0x2
 1526 01ec 91       		.byte	0x91
 1527 01ed 6C       		.sleb128 -20
 1528 01ee 0D       		.uleb128 0xd
 1529 01ef 76030000 		.4byte	.LASF35
 1530 01f3 01       		.byte	0x1
 1531 01f4 FA01     		.2byte	0x1fa
 1532 01f6 83000000 		.4byte	0x83
 1533 01fa 02       		.uleb128 0x2
 1534 01fb 91       		.byte	0x91
 1535 01fc 74       		.sleb128 -12
 1536 01fd 00       		.byte	0
 1537 01fe 0F       		.uleb128 0xf
 1538 01ff 8A020000 		.4byte	.LASF37
 1539 0203 01       		.byte	0x1
 1540 0204 2502     		.2byte	0x225
 1541 0206 00000000 		.4byte	.LFB10
 1542 020a 20000000 		.4byte	.LFE10-.LFB10
 1543 020e 01       		.uleb128 0x1
 1544 020f 9C       		.byte	0x9c
 1545 0210 24020000 		.4byte	0x224
 1546 0214 0C       		.uleb128 0xc
 1547 0215 D0000000 		.4byte	.LASF38
 1548 0219 01       		.byte	0x1
 1549 021a 2502     		.2byte	0x225
 1550 021c 83000000 		.4byte	0x83
 1551 0220 02       		.uleb128 0x2
 1552 0221 91       		.byte	0x91
 1553 0222 74       		.sleb128 -12
 1554 0223 00       		.byte	0
 1555 0224 0F       		.uleb128 0xf
 1556 0225 E7020000 		.4byte	.LASF39
 1557 0229 01       		.byte	0x1
 1558 022a 5102     		.2byte	0x251
 1559 022c 00000000 		.4byte	.LFB11
 1560 0230 30000000 		.4byte	.LFE11-.LFB11
 1561 0234 01       		.uleb128 0x1
 1562 0235 9C       		.byte	0x9c
 1563 0236 4A020000 		.4byte	0x24a
 1564 023a 0C       		.uleb128 0xc
 1565 023b 4A020000 		.4byte	.LASF40
 1566 023f 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 44


 1567 0240 5102     		.2byte	0x251
 1568 0242 83000000 		.4byte	0x83
 1569 0246 02       		.uleb128 0x2
 1570 0247 91       		.byte	0x91
 1571 0248 74       		.sleb128 -12
 1572 0249 00       		.byte	0
 1573 024a 0F       		.uleb128 0xf
 1574 024b 5F020000 		.4byte	.LASF41
 1575 024f 01       		.byte	0x1
 1576 0250 6602     		.2byte	0x266
 1577 0252 00000000 		.4byte	.LFB12
 1578 0256 30000000 		.4byte	.LFE12-.LFB12
 1579 025a 01       		.uleb128 0x1
 1580 025b 9C       		.byte	0x9c
 1581 025c 70020000 		.4byte	0x270
 1582 0260 0C       		.uleb128 0xc
 1583 0261 C9020000 		.4byte	.LASF42
 1584 0265 01       		.byte	0x1
 1585 0266 6602     		.2byte	0x266
 1586 0268 83000000 		.4byte	0x83
 1587 026c 02       		.uleb128 0x2
 1588 026d 91       		.byte	0x91
 1589 026e 74       		.sleb128 -12
 1590 026f 00       		.byte	0
 1591 0270 0F       		.uleb128 0xf
 1592 0271 E9000000 		.4byte	.LASF43
 1593 0275 01       		.byte	0x1
 1594 0276 7E02     		.2byte	0x27e
 1595 0278 00000000 		.4byte	.LFB13
 1596 027c 20000000 		.4byte	.LFE13-.LFB13
 1597 0280 01       		.uleb128 0x1
 1598 0281 9C       		.byte	0x9c
 1599 0282 96020000 		.4byte	0x296
 1600 0286 0C       		.uleb128 0xc
 1601 0287 D0000000 		.4byte	.LASF38
 1602 028b 01       		.byte	0x1
 1603 028c 7E02     		.2byte	0x27e
 1604 028e 83000000 		.4byte	0x83
 1605 0292 02       		.uleb128 0x2
 1606 0293 91       		.byte	0x91
 1607 0294 74       		.sleb128 -12
 1608 0295 00       		.byte	0
 1609 0296 0F       		.uleb128 0xf
 1610 0297 5C010000 		.4byte	.LASF44
 1611 029b 01       		.byte	0x1
 1612 029c 9502     		.2byte	0x295
 1613 029e 00000000 		.4byte	.LFB14
 1614 02a2 20000000 		.4byte	.LFE14-.LFB14
 1615 02a6 01       		.uleb128 0x1
 1616 02a7 9C       		.byte	0x9c
 1617 02a8 BC020000 		.4byte	0x2bc
 1618 02ac 0C       		.uleb128 0xc
 1619 02ad D0000000 		.4byte	.LASF38
 1620 02b1 01       		.byte	0x1
 1621 02b2 9502     		.2byte	0x295
 1622 02b4 83000000 		.4byte	0x83
 1623 02b8 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 45


 1624 02b9 91       		.byte	0x91
 1625 02ba 74       		.sleb128 -12
 1626 02bb 00       		.byte	0
 1627 02bc 10       		.uleb128 0x10
 1628 02bd 68030000 		.4byte	.LASF45
 1629 02c1 01       		.byte	0x1
 1630 02c2 B102     		.2byte	0x2b1
 1631 02c4 00000000 		.4byte	.LFB15
 1632 02c8 34000000 		.4byte	.LFE15-.LFB15
 1633 02cc 01       		.uleb128 0x1
 1634 02cd 9C       		.byte	0x9c
 1635 02ce F1020000 		.4byte	0x2f1
 1636 02d2 0C       		.uleb128 0xc
 1637 02d3 29030000 		.4byte	.LASF34
 1638 02d7 01       		.byte	0x1
 1639 02d8 B102     		.2byte	0x2b1
 1640 02da 83000000 		.4byte	0x83
 1641 02de 02       		.uleb128 0x2
 1642 02df 91       		.byte	0x91
 1643 02e0 74       		.sleb128 -12
 1644 02e1 0C       		.uleb128 0xc
 1645 02e2 46030000 		.4byte	.LASF46
 1646 02e6 01       		.byte	0x1
 1647 02e7 B102     		.2byte	0x2b1
 1648 02e9 8F000000 		.4byte	0x8f
 1649 02ed 02       		.uleb128 0x2
 1650 02ee 91       		.byte	0x91
 1651 02ef 72       		.sleb128 -14
 1652 02f0 00       		.byte	0
 1653 02f1 10       		.uleb128 0x10
 1654 02f2 B7020000 		.4byte	.LASF47
 1655 02f6 01       		.byte	0x1
 1656 02f7 D302     		.2byte	0x2d3
 1657 02f9 00000000 		.4byte	.LFB16
 1658 02fd 2C000000 		.4byte	.LFE16-.LFB16
 1659 0301 01       		.uleb128 0x1
 1660 0302 9C       		.byte	0x9c
 1661 0303 26030000 		.4byte	0x326
 1662 0307 0C       		.uleb128 0xc
 1663 0308 29030000 		.4byte	.LASF34
 1664 030c 01       		.byte	0x1
 1665 030d D302     		.2byte	0x2d3
 1666 030f 83000000 		.4byte	0x83
 1667 0313 02       		.uleb128 0x2
 1668 0314 91       		.byte	0x91
 1669 0315 74       		.sleb128 -12
 1670 0316 0C       		.uleb128 0xc
 1671 0317 07000000 		.4byte	.LASF48
 1672 031b 01       		.byte	0x1
 1673 031c D302     		.2byte	0x2d3
 1674 031e 9B000000 		.4byte	0x9b
 1675 0322 02       		.uleb128 0x2
 1676 0323 91       		.byte	0x91
 1677 0324 70       		.sleb128 -16
 1678 0325 00       		.byte	0
 1679 0326 0E       		.uleb128 0xe
 1680 0327 D3020000 		.4byte	.LASF49
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 46


 1681 032b 01       		.byte	0x1
 1682 032c F402     		.2byte	0x2f4
 1683 032e 8F000000 		.4byte	0x8f
 1684 0332 00000000 		.4byte	.LFB17
 1685 0336 A0000000 		.4byte	.LFE17-.LFB17
 1686 033a 01       		.uleb128 0x1
 1687 033b 9C       		.byte	0x9c
 1688 033c 6E030000 		.4byte	0x36e
 1689 0340 0C       		.uleb128 0xc
 1690 0341 29030000 		.4byte	.LASF34
 1691 0345 01       		.byte	0x1
 1692 0346 F402     		.2byte	0x2f4
 1693 0348 83000000 		.4byte	0x83
 1694 034c 02       		.uleb128 0x2
 1695 034d 91       		.byte	0x91
 1696 034e 6C       		.sleb128 -20
 1697 034f 0C       		.uleb128 0xc
 1698 0350 4D030000 		.4byte	.LASF50
 1699 0354 01       		.byte	0x1
 1700 0355 F402     		.2byte	0x2f4
 1701 0357 8F000000 		.4byte	0x8f
 1702 035b 02       		.uleb128 0x2
 1703 035c 91       		.byte	0x91
 1704 035d 6A       		.sleb128 -22
 1705 035e 0D       		.uleb128 0xd
 1706 035f 2C020000 		.4byte	.LASF51
 1707 0363 01       		.byte	0x1
 1708 0364 F602     		.2byte	0x2f6
 1709 0366 8F000000 		.4byte	0x8f
 1710 036a 02       		.uleb128 0x2
 1711 036b 91       		.byte	0x91
 1712 036c 76       		.sleb128 -10
 1713 036d 00       		.byte	0
 1714 036e 0E       		.uleb128 0xe
 1715 036f 94000000 		.4byte	.LASF52
 1716 0373 01       		.byte	0x1
 1717 0374 2A03     		.2byte	0x32a
 1718 0376 9B000000 		.4byte	0x9b
 1719 037a 00000000 		.4byte	.LFB18
 1720 037e 90000000 		.4byte	.LFE18-.LFB18
 1721 0382 01       		.uleb128 0x1
 1722 0383 9C       		.byte	0x9c
 1723 0384 B6030000 		.4byte	0x3b6
 1724 0388 0C       		.uleb128 0xc
 1725 0389 29030000 		.4byte	.LASF34
 1726 038d 01       		.byte	0x1
 1727 038e 2A03     		.2byte	0x32a
 1728 0390 83000000 		.4byte	0x83
 1729 0394 02       		.uleb128 0x2
 1730 0395 91       		.byte	0x91
 1731 0396 64       		.sleb128 -28
 1732 0397 0C       		.uleb128 0xc
 1733 0398 4D030000 		.4byte	.LASF50
 1734 039c 01       		.byte	0x1
 1735 039d 2A03     		.2byte	0x32a
 1736 039f 8F000000 		.4byte	0x8f
 1737 03a3 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 47


 1738 03a4 91       		.byte	0x91
 1739 03a5 62       		.sleb128 -30
 1740 03a6 0D       		.uleb128 0xd
 1741 03a7 07010000 		.4byte	.LASF53
 1742 03ab 01       		.byte	0x1
 1743 03ac 2C03     		.2byte	0x32c
 1744 03ae C1000000 		.4byte	0xc1
 1745 03b2 02       		.uleb128 0x2
 1746 03b3 91       		.byte	0x91
 1747 03b4 68       		.sleb128 -24
 1748 03b5 00       		.byte	0
 1749 03b6 0E       		.uleb128 0xe
 1750 03b7 16000000 		.4byte	.LASF54
 1751 03bb 01       		.byte	0x1
 1752 03bc 5703     		.2byte	0x357
 1753 03be A7000000 		.4byte	0xa7
 1754 03c2 00000000 		.4byte	.LFB19
 1755 03c6 80000000 		.4byte	.LFE19-.LFB19
 1756 03ca 01       		.uleb128 0x1
 1757 03cb 9C       		.byte	0x9c
 1758 03cc FE030000 		.4byte	0x3fe
 1759 03d0 0C       		.uleb128 0xc
 1760 03d1 29030000 		.4byte	.LASF34
 1761 03d5 01       		.byte	0x1
 1762 03d6 5703     		.2byte	0x357
 1763 03d8 83000000 		.4byte	0x83
 1764 03dc 02       		.uleb128 0x2
 1765 03dd 91       		.byte	0x91
 1766 03de 64       		.sleb128 -28
 1767 03df 0C       		.uleb128 0xc
 1768 03e0 4D030000 		.4byte	.LASF50
 1769 03e4 01       		.byte	0x1
 1770 03e5 5703     		.2byte	0x357
 1771 03e7 8F000000 		.4byte	0x8f
 1772 03eb 02       		.uleb128 0x2
 1773 03ec 91       		.byte	0x91
 1774 03ed 62       		.sleb128 -30
 1775 03ee 0D       		.uleb128 0xd
 1776 03ef 6B010000 		.4byte	.LASF55
 1777 03f3 01       		.byte	0x1
 1778 03f4 5903     		.2byte	0x359
 1779 03f6 A7000000 		.4byte	0xa7
 1780 03fa 02       		.uleb128 0x2
 1781 03fb 91       		.byte	0x91
 1782 03fc 6C       		.sleb128 -20
 1783 03fd 00       		.byte	0
 1784 03fe 11       		.uleb128 0x11
 1785 03ff 0E040000 		.4byte	0x40e
 1786 0403 0E040000 		.4byte	0x40e
 1787 0407 12       		.uleb128 0x12
 1788 0408 EC000000 		.4byte	0xec
 1789 040c 00       		.byte	0
 1790 040d 00       		.byte	0
 1791 040e 13       		.uleb128 0x13
 1792 040f 83000000 		.4byte	0x83
 1793 0413 08       		.uleb128 0x8
 1794 0414 33030000 		.4byte	.LASF56
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 48


 1795 0418 01       		.byte	0x1
 1796 0419 21       		.byte	0x21
 1797 041a 24040000 		.4byte	0x424
 1798 041e 05       		.uleb128 0x5
 1799 041f 03       		.byte	0x3
 1800 0420 00000000 		.4byte	ADC_channelsConfig
 1801 0424 13       		.uleb128 0x13
 1802 0425 FE030000 		.4byte	0x3fe
 1803 0429 14       		.uleb128 0x14
 1804 042a D5000000 		.4byte	.LASF57
 1805 042e 01       		.byte	0x1
 1806 042f 18       		.byte	0x18
 1807 0430 6B000000 		.4byte	0x6b
 1808 0434 05       		.uleb128 0x5
 1809 0435 03       		.byte	0x3
 1810 0436 00000000 		.4byte	ADC_initVar
 1811 043a 11       		.uleb128 0x11
 1812 043b 4A040000 		.4byte	0x44a
 1813 043f 4A040000 		.4byte	0x44a
 1814 0443 12       		.uleb128 0x12
 1815 0444 EC000000 		.4byte	0xec
 1816 0448 00       		.byte	0
 1817 0449 00       		.byte	0
 1818 044a 05       		.uleb128 0x5
 1819 044b 8F000000 		.4byte	0x8f
 1820 044f 14       		.uleb128 0x14
 1821 0450 05030000 		.4byte	.LASF58
 1822 0454 01       		.byte	0x1
 1823 0455 19       		.byte	0x19
 1824 0456 60040000 		.4byte	0x460
 1825 045a 05       		.uleb128 0x5
 1826 045b 03       		.byte	0x3
 1827 045c 00000000 		.4byte	ADC_offset
 1828 0460 05       		.uleb128 0x5
 1829 0461 3A040000 		.4byte	0x43a
 1830 0465 11       		.uleb128 0x11
 1831 0466 75040000 		.4byte	0x475
 1832 046a 75040000 		.4byte	0x475
 1833 046e 12       		.uleb128 0x12
 1834 046f EC000000 		.4byte	0xec
 1835 0473 00       		.byte	0
 1836 0474 00       		.byte	0
 1837 0475 05       		.uleb128 0x5
 1838 0476 9B000000 		.4byte	0x9b
 1839 047a 14       		.uleb128 0x14
 1840 047b A8000000 		.4byte	.LASF59
 1841 047f 01       		.byte	0x1
 1842 0480 1A       		.byte	0x1a
 1843 0481 8B040000 		.4byte	0x48b
 1844 0485 05       		.uleb128 0x5
 1845 0486 03       		.byte	0x3
 1846 0487 00000000 		.4byte	ADC_countsPer10Volt
 1847 048b 05       		.uleb128 0x5
 1848 048c 65040000 		.4byte	0x465
 1849 0490 00       		.byte	0
 1850              		.section	.debug_abbrev,"",%progbits
 1851              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 49


 1852 0000 01       		.uleb128 0x1
 1853 0001 11       		.uleb128 0x11
 1854 0002 01       		.byte	0x1
 1855 0003 25       		.uleb128 0x25
 1856 0004 0E       		.uleb128 0xe
 1857 0005 13       		.uleb128 0x13
 1858 0006 0B       		.uleb128 0xb
 1859 0007 03       		.uleb128 0x3
 1860 0008 0E       		.uleb128 0xe
 1861 0009 1B       		.uleb128 0x1b
 1862 000a 0E       		.uleb128 0xe
 1863 000b 55       		.uleb128 0x55
 1864 000c 17       		.uleb128 0x17
 1865 000d 11       		.uleb128 0x11
 1866 000e 01       		.uleb128 0x1
 1867 000f 10       		.uleb128 0x10
 1868 0010 17       		.uleb128 0x17
 1869 0011 00       		.byte	0
 1870 0012 00       		.byte	0
 1871 0013 02       		.uleb128 0x2
 1872 0014 24       		.uleb128 0x24
 1873 0015 00       		.byte	0
 1874 0016 0B       		.uleb128 0xb
 1875 0017 0B       		.uleb128 0xb
 1876 0018 3E       		.uleb128 0x3e
 1877 0019 0B       		.uleb128 0xb
 1878 001a 03       		.uleb128 0x3
 1879 001b 0E       		.uleb128 0xe
 1880 001c 00       		.byte	0
 1881 001d 00       		.byte	0
 1882 001e 03       		.uleb128 0x3
 1883 001f 24       		.uleb128 0x24
 1884 0020 00       		.byte	0
 1885 0021 0B       		.uleb128 0xb
 1886 0022 0B       		.uleb128 0xb
 1887 0023 3E       		.uleb128 0x3e
 1888 0024 0B       		.uleb128 0xb
 1889 0025 03       		.uleb128 0x3
 1890 0026 08       		.uleb128 0x8
 1891 0027 00       		.byte	0
 1892 0028 00       		.byte	0
 1893 0029 04       		.uleb128 0x4
 1894 002a 16       		.uleb128 0x16
 1895 002b 00       		.byte	0
 1896 002c 03       		.uleb128 0x3
 1897 002d 0E       		.uleb128 0xe
 1898 002e 3A       		.uleb128 0x3a
 1899 002f 0B       		.uleb128 0xb
 1900 0030 3B       		.uleb128 0x3b
 1901 0031 05       		.uleb128 0x5
 1902 0032 49       		.uleb128 0x49
 1903 0033 13       		.uleb128 0x13
 1904 0034 00       		.byte	0
 1905 0035 00       		.byte	0
 1906 0036 05       		.uleb128 0x5
 1907 0037 35       		.uleb128 0x35
 1908 0038 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 50


 1909 0039 49       		.uleb128 0x49
 1910 003a 13       		.uleb128 0x13
 1911 003b 00       		.byte	0
 1912 003c 00       		.byte	0
 1913 003d 06       		.uleb128 0x6
 1914 003e 2E       		.uleb128 0x2e
 1915 003f 00       		.byte	0
 1916 0040 3F       		.uleb128 0x3f
 1917 0041 19       		.uleb128 0x19
 1918 0042 03       		.uleb128 0x3
 1919 0043 0E       		.uleb128 0xe
 1920 0044 3A       		.uleb128 0x3a
 1921 0045 0B       		.uleb128 0xb
 1922 0046 3B       		.uleb128 0x3b
 1923 0047 0B       		.uleb128 0xb
 1924 0048 27       		.uleb128 0x27
 1925 0049 19       		.uleb128 0x19
 1926 004a 11       		.uleb128 0x11
 1927 004b 01       		.uleb128 0x1
 1928 004c 12       		.uleb128 0x12
 1929 004d 06       		.uleb128 0x6
 1930 004e 40       		.uleb128 0x40
 1931 004f 18       		.uleb128 0x18
 1932 0050 9642     		.uleb128 0x2116
 1933 0052 19       		.uleb128 0x19
 1934 0053 00       		.byte	0
 1935 0054 00       		.byte	0
 1936 0055 07       		.uleb128 0x7
 1937 0056 2E       		.uleb128 0x2e
 1938 0057 01       		.byte	0x1
 1939 0058 3F       		.uleb128 0x3f
 1940 0059 19       		.uleb128 0x19
 1941 005a 03       		.uleb128 0x3
 1942 005b 0E       		.uleb128 0xe
 1943 005c 3A       		.uleb128 0x3a
 1944 005d 0B       		.uleb128 0xb
 1945 005e 3B       		.uleb128 0x3b
 1946 005f 0B       		.uleb128 0xb
 1947 0060 27       		.uleb128 0x27
 1948 0061 19       		.uleb128 0x19
 1949 0062 11       		.uleb128 0x11
 1950 0063 01       		.uleb128 0x1
 1951 0064 12       		.uleb128 0x12
 1952 0065 06       		.uleb128 0x6
 1953 0066 40       		.uleb128 0x40
 1954 0067 18       		.uleb128 0x18
 1955 0068 9642     		.uleb128 0x2116
 1956 006a 19       		.uleb128 0x19
 1957 006b 01       		.uleb128 0x1
 1958 006c 13       		.uleb128 0x13
 1959 006d 00       		.byte	0
 1960 006e 00       		.byte	0
 1961 006f 08       		.uleb128 0x8
 1962 0070 34       		.uleb128 0x34
 1963 0071 00       		.byte	0
 1964 0072 03       		.uleb128 0x3
 1965 0073 0E       		.uleb128 0xe
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 51


 1966 0074 3A       		.uleb128 0x3a
 1967 0075 0B       		.uleb128 0xb
 1968 0076 3B       		.uleb128 0x3b
 1969 0077 0B       		.uleb128 0xb
 1970 0078 49       		.uleb128 0x49
 1971 0079 13       		.uleb128 0x13
 1972 007a 02       		.uleb128 0x2
 1973 007b 18       		.uleb128 0x18
 1974 007c 00       		.byte	0
 1975 007d 00       		.byte	0
 1976 007e 09       		.uleb128 0x9
 1977 007f 2E       		.uleb128 0x2e
 1978 0080 00       		.byte	0
 1979 0081 3F       		.uleb128 0x3f
 1980 0082 19       		.uleb128 0x19
 1981 0083 03       		.uleb128 0x3
 1982 0084 0E       		.uleb128 0xe
 1983 0085 3A       		.uleb128 0x3a
 1984 0086 0B       		.uleb128 0xb
 1985 0087 3B       		.uleb128 0x3b
 1986 0088 05       		.uleb128 0x5
 1987 0089 27       		.uleb128 0x27
 1988 008a 19       		.uleb128 0x19
 1989 008b 11       		.uleb128 0x11
 1990 008c 01       		.uleb128 0x1
 1991 008d 12       		.uleb128 0x12
 1992 008e 06       		.uleb128 0x6
 1993 008f 40       		.uleb128 0x40
 1994 0090 18       		.uleb128 0x18
 1995 0091 9642     		.uleb128 0x2116
 1996 0093 19       		.uleb128 0x19
 1997 0094 00       		.byte	0
 1998 0095 00       		.byte	0
 1999 0096 0A       		.uleb128 0xa
 2000 0097 2E       		.uleb128 0x2e
 2001 0098 00       		.byte	0
 2002 0099 3F       		.uleb128 0x3f
 2003 009a 19       		.uleb128 0x19
 2004 009b 03       		.uleb128 0x3
 2005 009c 0E       		.uleb128 0xe
 2006 009d 3A       		.uleb128 0x3a
 2007 009e 0B       		.uleb128 0xb
 2008 009f 3B       		.uleb128 0x3b
 2009 00a0 05       		.uleb128 0x5
 2010 00a1 27       		.uleb128 0x27
 2011 00a2 19       		.uleb128 0x19
 2012 00a3 11       		.uleb128 0x11
 2013 00a4 01       		.uleb128 0x1
 2014 00a5 12       		.uleb128 0x12
 2015 00a6 06       		.uleb128 0x6
 2016 00a7 40       		.uleb128 0x40
 2017 00a8 18       		.uleb128 0x18
 2018 00a9 9742     		.uleb128 0x2117
 2019 00ab 19       		.uleb128 0x19
 2020 00ac 00       		.byte	0
 2021 00ad 00       		.byte	0
 2022 00ae 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 52


 2023 00af 2E       		.uleb128 0x2e
 2024 00b0 01       		.byte	0x1
 2025 00b1 3F       		.uleb128 0x3f
 2026 00b2 19       		.uleb128 0x19
 2027 00b3 03       		.uleb128 0x3
 2028 00b4 0E       		.uleb128 0xe
 2029 00b5 3A       		.uleb128 0x3a
 2030 00b6 0B       		.uleb128 0xb
 2031 00b7 3B       		.uleb128 0x3b
 2032 00b8 05       		.uleb128 0x5
 2033 00b9 27       		.uleb128 0x27
 2034 00ba 19       		.uleb128 0x19
 2035 00bb 49       		.uleb128 0x49
 2036 00bc 13       		.uleb128 0x13
 2037 00bd 11       		.uleb128 0x11
 2038 00be 01       		.uleb128 0x1
 2039 00bf 12       		.uleb128 0x12
 2040 00c0 06       		.uleb128 0x6
 2041 00c1 40       		.uleb128 0x40
 2042 00c2 18       		.uleb128 0x18
 2043 00c3 9742     		.uleb128 0x2117
 2044 00c5 19       		.uleb128 0x19
 2045 00c6 01       		.uleb128 0x1
 2046 00c7 13       		.uleb128 0x13
 2047 00c8 00       		.byte	0
 2048 00c9 00       		.byte	0
 2049 00ca 0C       		.uleb128 0xc
 2050 00cb 05       		.uleb128 0x5
 2051 00cc 00       		.byte	0
 2052 00cd 03       		.uleb128 0x3
 2053 00ce 0E       		.uleb128 0xe
 2054 00cf 3A       		.uleb128 0x3a
 2055 00d0 0B       		.uleb128 0xb
 2056 00d1 3B       		.uleb128 0x3b
 2057 00d2 05       		.uleb128 0x5
 2058 00d3 49       		.uleb128 0x49
 2059 00d4 13       		.uleb128 0x13
 2060 00d5 02       		.uleb128 0x2
 2061 00d6 18       		.uleb128 0x18
 2062 00d7 00       		.byte	0
 2063 00d8 00       		.byte	0
 2064 00d9 0D       		.uleb128 0xd
 2065 00da 34       		.uleb128 0x34
 2066 00db 00       		.byte	0
 2067 00dc 03       		.uleb128 0x3
 2068 00dd 0E       		.uleb128 0xe
 2069 00de 3A       		.uleb128 0x3a
 2070 00df 0B       		.uleb128 0xb
 2071 00e0 3B       		.uleb128 0x3b
 2072 00e1 05       		.uleb128 0x5
 2073 00e2 49       		.uleb128 0x49
 2074 00e3 13       		.uleb128 0x13
 2075 00e4 02       		.uleb128 0x2
 2076 00e5 18       		.uleb128 0x18
 2077 00e6 00       		.byte	0
 2078 00e7 00       		.byte	0
 2079 00e8 0E       		.uleb128 0xe
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 53


 2080 00e9 2E       		.uleb128 0x2e
 2081 00ea 01       		.byte	0x1
 2082 00eb 3F       		.uleb128 0x3f
 2083 00ec 19       		.uleb128 0x19
 2084 00ed 03       		.uleb128 0x3
 2085 00ee 0E       		.uleb128 0xe
 2086 00ef 3A       		.uleb128 0x3a
 2087 00f0 0B       		.uleb128 0xb
 2088 00f1 3B       		.uleb128 0x3b
 2089 00f2 05       		.uleb128 0x5
 2090 00f3 27       		.uleb128 0x27
 2091 00f4 19       		.uleb128 0x19
 2092 00f5 49       		.uleb128 0x49
 2093 00f6 13       		.uleb128 0x13
 2094 00f7 11       		.uleb128 0x11
 2095 00f8 01       		.uleb128 0x1
 2096 00f9 12       		.uleb128 0x12
 2097 00fa 06       		.uleb128 0x6
 2098 00fb 40       		.uleb128 0x40
 2099 00fc 18       		.uleb128 0x18
 2100 00fd 9642     		.uleb128 0x2116
 2101 00ff 19       		.uleb128 0x19
 2102 0100 01       		.uleb128 0x1
 2103 0101 13       		.uleb128 0x13
 2104 0102 00       		.byte	0
 2105 0103 00       		.byte	0
 2106 0104 0F       		.uleb128 0xf
 2107 0105 2E       		.uleb128 0x2e
 2108 0106 01       		.byte	0x1
 2109 0107 3F       		.uleb128 0x3f
 2110 0108 19       		.uleb128 0x19
 2111 0109 03       		.uleb128 0x3
 2112 010a 0E       		.uleb128 0xe
 2113 010b 3A       		.uleb128 0x3a
 2114 010c 0B       		.uleb128 0xb
 2115 010d 3B       		.uleb128 0x3b
 2116 010e 05       		.uleb128 0x5
 2117 010f 27       		.uleb128 0x27
 2118 0110 19       		.uleb128 0x19
 2119 0111 11       		.uleb128 0x11
 2120 0112 01       		.uleb128 0x1
 2121 0113 12       		.uleb128 0x12
 2122 0114 06       		.uleb128 0x6
 2123 0115 40       		.uleb128 0x40
 2124 0116 18       		.uleb128 0x18
 2125 0117 9742     		.uleb128 0x2117
 2126 0119 19       		.uleb128 0x19
 2127 011a 01       		.uleb128 0x1
 2128 011b 13       		.uleb128 0x13
 2129 011c 00       		.byte	0
 2130 011d 00       		.byte	0
 2131 011e 10       		.uleb128 0x10
 2132 011f 2E       		.uleb128 0x2e
 2133 0120 01       		.byte	0x1
 2134 0121 3F       		.uleb128 0x3f
 2135 0122 19       		.uleb128 0x19
 2136 0123 03       		.uleb128 0x3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 54


 2137 0124 0E       		.uleb128 0xe
 2138 0125 3A       		.uleb128 0x3a
 2139 0126 0B       		.uleb128 0xb
 2140 0127 3B       		.uleb128 0x3b
 2141 0128 05       		.uleb128 0x5
 2142 0129 27       		.uleb128 0x27
 2143 012a 19       		.uleb128 0x19
 2144 012b 11       		.uleb128 0x11
 2145 012c 01       		.uleb128 0x1
 2146 012d 12       		.uleb128 0x12
 2147 012e 06       		.uleb128 0x6
 2148 012f 40       		.uleb128 0x40
 2149 0130 18       		.uleb128 0x18
 2150 0131 9642     		.uleb128 0x2116
 2151 0133 19       		.uleb128 0x19
 2152 0134 01       		.uleb128 0x1
 2153 0135 13       		.uleb128 0x13
 2154 0136 00       		.byte	0
 2155 0137 00       		.byte	0
 2156 0138 11       		.uleb128 0x11
 2157 0139 01       		.uleb128 0x1
 2158 013a 01       		.byte	0x1
 2159 013b 49       		.uleb128 0x49
 2160 013c 13       		.uleb128 0x13
 2161 013d 01       		.uleb128 0x1
 2162 013e 13       		.uleb128 0x13
 2163 013f 00       		.byte	0
 2164 0140 00       		.byte	0
 2165 0141 12       		.uleb128 0x12
 2166 0142 21       		.uleb128 0x21
 2167 0143 00       		.byte	0
 2168 0144 49       		.uleb128 0x49
 2169 0145 13       		.uleb128 0x13
 2170 0146 2F       		.uleb128 0x2f
 2171 0147 0B       		.uleb128 0xb
 2172 0148 00       		.byte	0
 2173 0149 00       		.byte	0
 2174 014a 13       		.uleb128 0x13
 2175 014b 26       		.uleb128 0x26
 2176 014c 00       		.byte	0
 2177 014d 49       		.uleb128 0x49
 2178 014e 13       		.uleb128 0x13
 2179 014f 00       		.byte	0
 2180 0150 00       		.byte	0
 2181 0151 14       		.uleb128 0x14
 2182 0152 34       		.uleb128 0x34
 2183 0153 00       		.byte	0
 2184 0154 03       		.uleb128 0x3
 2185 0155 0E       		.uleb128 0xe
 2186 0156 3A       		.uleb128 0x3a
 2187 0157 0B       		.uleb128 0xb
 2188 0158 3B       		.uleb128 0x3b
 2189 0159 0B       		.uleb128 0xb
 2190 015a 49       		.uleb128 0x49
 2191 015b 13       		.uleb128 0x13
 2192 015c 3F       		.uleb128 0x3f
 2193 015d 19       		.uleb128 0x19
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 55


 2194 015e 02       		.uleb128 0x2
 2195 015f 18       		.uleb128 0x18
 2196 0160 00       		.byte	0
 2197 0161 00       		.byte	0
 2198 0162 00       		.byte	0
 2199              		.section	.debug_aranges,"",%progbits
 2200 0000 A4000000 		.4byte	0xa4
 2201 0004 0200     		.2byte	0x2
 2202 0006 00000000 		.4byte	.Ldebug_info0
 2203 000a 04       		.byte	0x4
 2204 000b 00       		.byte	0
 2205 000c 0000     		.2byte	0
 2206 000e 0000     		.2byte	0
 2207 0010 00000000 		.4byte	.LFB2
 2208 0014 24000000 		.4byte	.LFE2-.LFB2
 2209 0018 00000000 		.4byte	.LFB3
 2210 001c D4010000 		.4byte	.LFE3-.LFB3
 2211 0020 00000000 		.4byte	.LFB4
 2212 0024 38000000 		.4byte	.LFE4-.LFB4
 2213 0028 00000000 		.4byte	.LFB5
 2214 002c 1C000000 		.4byte	.LFE5-.LFB5
 2215 0030 00000000 		.4byte	.LFB6
 2216 0034 1C000000 		.4byte	.LFE6-.LFB6
 2217 0038 00000000 		.4byte	.LFB7
 2218 003c 20000000 		.4byte	.LFE7-.LFB7
 2219 0040 00000000 		.4byte	.LFB8
 2220 0044 48000000 		.4byte	.LFE8-.LFB8
 2221 0048 00000000 		.4byte	.LFB9
 2222 004c 44000000 		.4byte	.LFE9-.LFB9
 2223 0050 00000000 		.4byte	.LFB10
 2224 0054 20000000 		.4byte	.LFE10-.LFB10
 2225 0058 00000000 		.4byte	.LFB11
 2226 005c 30000000 		.4byte	.LFE11-.LFB11
 2227 0060 00000000 		.4byte	.LFB12
 2228 0064 30000000 		.4byte	.LFE12-.LFB12
 2229 0068 00000000 		.4byte	.LFB13
 2230 006c 20000000 		.4byte	.LFE13-.LFB13
 2231 0070 00000000 		.4byte	.LFB14
 2232 0074 20000000 		.4byte	.LFE14-.LFB14
 2233 0078 00000000 		.4byte	.LFB15
 2234 007c 34000000 		.4byte	.LFE15-.LFB15
 2235 0080 00000000 		.4byte	.LFB16
 2236 0084 2C000000 		.4byte	.LFE16-.LFB16
 2237 0088 00000000 		.4byte	.LFB17
 2238 008c A0000000 		.4byte	.LFE17-.LFB17
 2239 0090 00000000 		.4byte	.LFB18
 2240 0094 90000000 		.4byte	.LFE18-.LFB18
 2241 0098 00000000 		.4byte	.LFB19
 2242 009c 80000000 		.4byte	.LFE19-.LFB19
 2243 00a0 00000000 		.4byte	0
 2244 00a4 00000000 		.4byte	0
 2245              		.section	.debug_ranges,"",%progbits
 2246              	.Ldebug_ranges0:
 2247 0000 00000000 		.4byte	.LFB2
 2248 0004 24000000 		.4byte	.LFE2
 2249 0008 00000000 		.4byte	.LFB3
 2250 000c D4010000 		.4byte	.LFE3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 56


 2251 0010 00000000 		.4byte	.LFB4
 2252 0014 38000000 		.4byte	.LFE4
 2253 0018 00000000 		.4byte	.LFB5
 2254 001c 1C000000 		.4byte	.LFE5
 2255 0020 00000000 		.4byte	.LFB6
 2256 0024 1C000000 		.4byte	.LFE6
 2257 0028 00000000 		.4byte	.LFB7
 2258 002c 20000000 		.4byte	.LFE7
 2259 0030 00000000 		.4byte	.LFB8
 2260 0034 48000000 		.4byte	.LFE8
 2261 0038 00000000 		.4byte	.LFB9
 2262 003c 44000000 		.4byte	.LFE9
 2263 0040 00000000 		.4byte	.LFB10
 2264 0044 20000000 		.4byte	.LFE10
 2265 0048 00000000 		.4byte	.LFB11
 2266 004c 30000000 		.4byte	.LFE11
 2267 0050 00000000 		.4byte	.LFB12
 2268 0054 30000000 		.4byte	.LFE12
 2269 0058 00000000 		.4byte	.LFB13
 2270 005c 20000000 		.4byte	.LFE13
 2271 0060 00000000 		.4byte	.LFB14
 2272 0064 20000000 		.4byte	.LFE14
 2273 0068 00000000 		.4byte	.LFB15
 2274 006c 34000000 		.4byte	.LFE15
 2275 0070 00000000 		.4byte	.LFB16
 2276 0074 2C000000 		.4byte	.LFE16
 2277 0078 00000000 		.4byte	.LFB17
 2278 007c A0000000 		.4byte	.LFE17
 2279 0080 00000000 		.4byte	.LFB18
 2280 0084 90000000 		.4byte	.LFE18
 2281 0088 00000000 		.4byte	.LFB19
 2282 008c 80000000 		.4byte	.LFE19
 2283 0090 00000000 		.4byte	0
 2284 0094 00000000 		.4byte	0
 2285              		.section	.debug_line,"",%progbits
 2286              	.Ldebug_line0:
 2287 0000 96020000 		.section	.debug_str,"MS",%progbits,1
 2287      02004000 
 2287      00000201 
 2287      FB0E0D00 
 2287      01010101 
 2288              	.LASF10:
 2289 0000 75696E74 		.ascii	"uint16\000"
 2289      313600
 2290              	.LASF48:
 2291 0007 61646347 		.ascii	"adcGain\000"
 2291      61696E00 
 2292              	.LASF24:
 2293 000f 636F756E 		.ascii	"counts\000"
 2293      747300
 2294              	.LASF54:
 2295 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2295      436F756E 
 2295      7473546F 
 2295      5F566F6C 
 2295      747300
 2296              	.LASF36:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 57


 2297 0029 4144435F 		.ascii	"ADC_Init\000"
 2297      496E6974 
 2297      00
 2298              	.LASF7:
 2299 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2299      206C6F6E 
 2299      6720756E 
 2299      7369676E 
 2299      65642069 
 2300              	.LASF28:
 2301 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2301      53746172 
 2301      74436F6E 
 2301      76657274 
 2301      00
 2302              	.LASF6:
 2303 005a 6C6F6E67 		.ascii	"long long int\000"
 2303      206C6F6E 
 2303      6720696E 
 2303      7400
 2304              	.LASF0:
 2305 0068 7369676E 		.ascii	"signed char\000"
 2305      65642063 
 2305      68617200 
 2306              	.LASF30:
 2307 0074 73746174 		.ascii	"status\000"
 2307      757300
 2308              	.LASF13:
 2309 007b 696E7433 		.ascii	"int32\000"
 2309      3200
 2310              	.LASF25:
 2311 0081 4144435F 		.ascii	"ADC_Start\000"
 2311      53746172 
 2311      7400
 2312              	.LASF4:
 2313 008b 6C6F6E67 		.ascii	"long int\000"
 2313      20696E74 
 2313      00
 2314              	.LASF52:
 2315 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2315      436F756E 
 2315      7473546F 
 2315      5F75566F 
 2315      6C747300 
 2316              	.LASF59:
 2317 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2317      636F756E 
 2317      74735065 
 2317      72313056 
 2317      6F6C7400 
 2318              	.LASF9:
 2319 00bc 75696E74 		.ascii	"uint8\000"
 2319      3800
 2320              	.LASF16:
 2321 00c2 646F7562 		.ascii	"double\000"
 2321      6C6500
 2322              	.LASF11:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 58


 2323 00c9 75696E74 		.ascii	"uint32\000"
 2323      333200
 2324              	.LASF38:
 2325 00d0 6D61736B 		.ascii	"mask\000"
 2325      00
 2326              	.LASF57:
 2327 00d5 4144435F 		.ascii	"ADC_initVar\000"
 2327      696E6974 
 2327      56617200 
 2328              	.LASF33:
 2329 00e1 7265744D 		.ascii	"retMode\000"
 2329      6F646500 
 2330              	.LASF43:
 2331 00e9 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2331      5365744C 
 2331      696D6974 
 2331      4D61736B 
 2331      00
 2332              	.LASF8:
 2333 00fa 756E7369 		.ascii	"unsigned int\000"
 2333      676E6564 
 2333      20696E74 
 2333      00
 2334              	.LASF53:
 2335 0107 75566F6C 		.ascii	"uVolts\000"
 2335      747300
 2336              	.LASF62:
 2337 010e 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\dev\\FW\\start\\s"
 2337      79707265 
 2337      73735C73 
 2337      79737465 
 2337      6D2D7374 
 2338 013b 74617274 		.ascii	"tart_v11.cydsn\000"
 2338      5F763131 
 2338      2E637964 
 2338      736E00
 2339              	.LASF5:
 2340 014a 6C6F6E67 		.ascii	"long unsigned int\000"
 2340      20756E73 
 2340      69676E65 
 2340      6420696E 
 2340      7400
 2341              	.LASF44:
 2342 015c 4144435F 		.ascii	"ADC_SetSatMask\000"
 2342      53657453 
 2342      61744D61 
 2342      736B00
 2343              	.LASF55:
 2344 016b 766F6C74 		.ascii	"volts\000"
 2344      7300
 2345              	.LASF23:
 2346 0171 746D7052 		.ascii	"tmpRegVal\000"
 2346      65675661 
 2346      6C00
 2347              	.LASF3:
 2348 017b 73686F72 		.ascii	"short unsigned int\000"
 2348      7420756E 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 59


 2348      7369676E 
 2348      65642069 
 2348      6E7400
 2349              	.LASF29:
 2350 018e 4144435F 		.ascii	"ADC_StopConvert\000"
 2350      53746F70 
 2350      436F6E76 
 2350      65727400 
 2351              	.LASF60:
 2352 019e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2352      43313120 
 2352      352E342E 
 2352      31203230 
 2352      31363036 
 2353 01d1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2353      20726576 
 2353      6973696F 
 2353      6E203233 
 2353      37373135 
 2354 0204 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2354      66756E63 
 2354      74696F6E 
 2354      2D736563 
 2354      74696F6E 
 2355              	.LASF51:
 2356 022c 6D566F6C 		.ascii	"mVolts\000"
 2356      747300
 2357              	.LASF19:
 2358 0233 72656733 		.ascii	"reg32\000"
 2358      3200
 2359              	.LASF14:
 2360 0239 666C6F61 		.ascii	"float32\000"
 2360      74333200 
 2361              	.LASF21:
 2362 0241 73697A65 		.ascii	"sizetype\000"
 2362      74797065 
 2362      00
 2363              	.LASF40:
 2364 024a 6C6F774C 		.ascii	"lowLimit\000"
 2364      696D6974 
 2364      00
 2365              	.LASF20:
 2366 0253 6C6F6E67 		.ascii	"long double\000"
 2366      20646F75 
 2366      626C6500 
 2367              	.LASF41:
 2368 025f 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2368      53657448 
 2368      6967684C 
 2368      696D6974 
 2368      00
 2369              	.LASF31:
 2370 0270 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2370      4973456E 
 2370      64436F6E 
 2370      76657273 
 2370      696F6E00 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 60


 2371              	.LASF17:
 2372 0284 696E7436 		.ascii	"int64\000"
 2372      3400
 2373              	.LASF37:
 2374 028a 4144435F 		.ascii	"ADC_SetChanMask\000"
 2374      53657443 
 2374      68616E4D 
 2374      61736B00 
 2375              	.LASF61:
 2376 029a 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2376      72617465 
 2376      645F536F 
 2376      75726365 
 2376      5C50536F 
 2377              	.LASF47:
 2378 02b7 4144435F 		.ascii	"ADC_SetGain\000"
 2378      53657447 
 2378      61696E00 
 2379              	.LASF15:
 2380 02c3 666C6F61 		.ascii	"float\000"
 2380      7400
 2381              	.LASF42:
 2382 02c9 68696768 		.ascii	"highLimit\000"
 2382      4C696D69 
 2382      7400
 2383              	.LASF49:
 2384 02d3 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2384      436F756E 
 2384      7473546F 
 2384      5F6D566F 
 2384      6C747300 
 2385              	.LASF39:
 2386 02e7 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2386      5365744C 
 2386      6F774C69 
 2386      6D697400 
 2387              	.LASF1:
 2388 02f7 756E7369 		.ascii	"unsigned char\000"
 2388      676E6564 
 2388      20636861 
 2388      7200
 2389              	.LASF58:
 2390 0305 4144435F 		.ascii	"ADC_offset\000"
 2390      6F666673 
 2390      657400
 2391              	.LASF2:
 2392 0310 73686F72 		.ascii	"short int\000"
 2392      7420696E 
 2392      7400
 2393              	.LASF27:
 2394 031a 4144435F 		.ascii	"ADC_Stop\000"
 2394      53746F70 
 2394      00
 2395              	.LASF22:
 2396 0323 63684E75 		.ascii	"chNum\000"
 2396      6D00
 2397              	.LASF34:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccE4cdcC.s 			page 61


 2398 0329 6368616E 		.ascii	"chan\000"
 2398      00
 2399              	.LASF18:
 2400 032e 63686172 		.ascii	"char\000"
 2400      00
 2401              	.LASF56:
 2402 0333 4144435F 		.ascii	"ADC_channelsConfig\000"
 2402      6368616E 
 2402      6E656C73 
 2402      436F6E66 
 2402      696700
 2403              	.LASF46:
 2404 0346 6F666673 		.ascii	"offset\000"
 2404      657400
 2405              	.LASF50:
 2406 034d 61646343 		.ascii	"adcCounts\000"
 2406      6F756E74 
 2406      7300
 2407              	.LASF26:
 2408 0357 4144435F 		.ascii	"ADC_Enable\000"
 2408      456E6162 
 2408      6C6500
 2409              	.LASF12:
 2410 0362 696E7431 		.ascii	"int16\000"
 2410      3600
 2411              	.LASF45:
 2412 0368 4144435F 		.ascii	"ADC_SetOffset\000"
 2412      5365744F 
 2412      66667365 
 2412      7400
 2413              	.LASF35:
 2414 0376 72657375 		.ascii	"result\000"
 2414      6C7400
 2415              	.LASF32:
 2416 037d 4144435F 		.ascii	"ADC_GetResult16\000"
 2416      47657452 
 2416      6573756C 
 2416      74313600 
 2417              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
