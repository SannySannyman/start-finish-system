ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 006CDC02 		.word	48000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 80BB0000 		.word	48000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 30       		.byte	48
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000C05D 		.word	1572864000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.section	.text.CySysClkImoStart,"ax",%progbits
 106              		.align	2
 107              		.global	CySysClkImoStart
 108              		.code	16
 109              		.thumb_func
 110              		.type	CySysClkImoStart, %function
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 3


 111              	CySysClkImoStart:
 112              	.LFB2:
 113              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:Generated_Source\PSoC4/CyLib.c **** 
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:Generated_Source\PSoC4/CyLib.c **** *
  46:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:Generated_Source\PSoC4/CyLib.c **** *
  49:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 4


  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLib.c **** 
  73:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:Generated_Source\PSoC4/CyLib.c **** 
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:Generated_Source\PSoC4/CyLib.c **** *
  96:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:Generated_Source\PSoC4/CyLib.c **** {
 114              		.loc 1 105 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 80B5     		push	{r7, lr}
 119              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 5


 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 00AF     		add	r7, sp, #0
 123              		.cfi_def_cfa_register 7
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 124              		.loc 1 106 0
 125 0004 044B     		ldr	r3, .L2
 126 0006 044A     		ldr	r2, .L2
 127 0008 1268     		ldr	r2, [r2]
 128 000a 8021     		movs	r1, #128
 129 000c 0906     		lsls	r1, r1, #24
 130 000e 0A43     		orrs	r2, r1
 131 0010 1A60     		str	r2, [r3]
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:Generated_Source\PSoC4/CyLib.c **** 
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:Generated_Source\PSoC4/CyLib.c **** 
 121:Generated_Source\PSoC4/CyLib.c **** }
 132              		.loc 1 121 0
 133 0012 C046     		nop
 134 0014 BD46     		mov	sp, r7
 135              		@ sp needed
 136 0016 80BD     		pop	{r7, pc}
 137              	.L3:
 138              		.align	2
 139              	.L2:
 140 0018 08010B40 		.word	1074462984
 141              		.cfi_endproc
 142              	.LFE2:
 143              		.size	CySysClkImoStart, .-CySysClkImoStart
 144              		.section	.text.CySysClkImoStop,"ax",%progbits
 145              		.align	2
 146              		.global	CySysClkImoStop
 147              		.code	16
 148              		.thumb_func
 149              		.type	CySysClkImoStop, %function
 150              	CySysClkImoStop:
 151              	.LFB3:
 122:Generated_Source\PSoC4/CyLib.c **** 
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 6


 131:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:Generated_Source\PSoC4/CyLib.c **** {
 152              		.loc 1 137 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 138:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:Generated_Source\PSoC4/CyLib.c **** 
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 162              		.loc 1 146 0
 163 0004 044B     		ldr	r3, .L5
 164 0006 044A     		ldr	r2, .L5
 165 0008 1268     		ldr	r2, [r2]
 166 000a 5200     		lsls	r2, r2, #1
 167 000c 5208     		lsrs	r2, r2, #1
 168 000e 1A60     		str	r2, [r3]
 147:Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 147 0
 170 0010 C046     		nop
 171 0012 BD46     		mov	sp, r7
 172              		@ sp needed
 173 0014 80BD     		pop	{r7, pc}
 174              	.L6:
 175 0016 C046     		.align	2
 176              	.L5:
 177 0018 08010B40 		.word	1074462984
 178              		.cfi_endproc
 179              	.LFE3:
 180              		.size	CySysClkImoStop, .-CySysClkImoStop
 181              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 182              		.align	2
 183              		.global	CySysClkWriteHfclkDirect
 184              		.code	16
 185              		.thumb_func
 186              		.type	CySysClkWriteHfclkDirect, %function
 187              	CySysClkWriteHfclkDirect:
 188              	.LFB4:
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 7


 151:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:Generated_Source\PSoC4/CyLib.c ****     *
 155:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:Generated_Source\PSoC4/CyLib.c ****     {
 174:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:Generated_Source\PSoC4/CyLib.c **** 
 184:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:Generated_Source\PSoC4/CyLib.c ****         {
 186:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:Generated_Source\PSoC4/CyLib.c **** 
 195:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:Generated_Source\PSoC4/CyLib.c ****                 {
 200:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:Generated_Source\PSoC4/CyLib.c ****                     {
 202:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:Generated_Source\PSoC4/CyLib.c ****                         break;
 204:Generated_Source\PSoC4/CyLib.c ****                     }
 205:Generated_Source\PSoC4/CyLib.c ****                 }
 206:Generated_Source\PSoC4/CyLib.c ****             #else
 207:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 8


 208:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:Generated_Source\PSoC4/CyLib.c ****                 #else
 214:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:Generated_Source\PSoC4/CyLib.c **** 
 218:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:Generated_Source\PSoC4/CyLib.c ****                 {
 224:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:Generated_Source\PSoC4/CyLib.c ****                 }
 227:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:Generated_Source\PSoC4/CyLib.c **** 
 229:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:Generated_Source\PSoC4/CyLib.c ****             {
 243:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:Generated_Source\PSoC4/CyLib.c ****             }
 245:Generated_Source\PSoC4/CyLib.c ****             else
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:Generated_Source\PSoC4/CyLib.c ****             }
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 262:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:Generated_Source\PSoC4/CyLib.c **** 
 264:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 9


 265:Generated_Source\PSoC4/CyLib.c ****         }
 266:Generated_Source\PSoC4/CyLib.c ****     }
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:Generated_Source\PSoC4/CyLib.c ****     *
 273:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:Generated_Source\PSoC4/CyLib.c ****     {
 284:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:Generated_Source\PSoC4/CyLib.c ****     }
 286:Generated_Source\PSoC4/CyLib.c **** 
 287:Generated_Source\PSoC4/CyLib.c **** 
 288:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:Generated_Source\PSoC4/CyLib.c ****     *
 292:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:Generated_Source\PSoC4/CyLib.c ****     *
 294:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:Generated_Source\PSoC4/CyLib.c ****     {
 303:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:Generated_Source\PSoC4/CyLib.c ****     }
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:Generated_Source\PSoC4/CyLib.c **** 
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:Generated_Source\PSoC4/CyLib.c ****     *
 317:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:Generated_Source\PSoC4/CyLib.c ****     *
 319:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 10


 322:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:Generated_Source\PSoC4/CyLib.c ****     {
 330:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:Generated_Source\PSoC4/CyLib.c **** 
 336:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** 
 347:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:Generated_Source\PSoC4/CyLib.c ****     *
 353:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:Generated_Source\PSoC4/CyLib.c ****     {
 362:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:Generated_Source\PSoC4/CyLib.c **** 
 364:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:Generated_Source\PSoC4/CyLib.c ****     }
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c **** 
 372:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:Generated_Source\PSoC4/CyLib.c ****     *
 376:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:Generated_Source\PSoC4/CyLib.c ****     *
 378:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 11


 379:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:Generated_Source\PSoC4/CyLib.c ****     {
 387:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:Generated_Source\PSoC4/CyLib.c ****     }
 391:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:Generated_Source\PSoC4/CyLib.c **** 
 393:Generated_Source\PSoC4/CyLib.c **** 
 394:Generated_Source\PSoC4/CyLib.c **** 
 395:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:Generated_Source\PSoC4/CyLib.c **** *
 399:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:Generated_Source\PSoC4/CyLib.c **** *
 401:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:Generated_Source\PSoC4/CyLib.c **** *
 403:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:Generated_Source\PSoC4/CyLib.c **** *
 407:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:Generated_Source\PSoC4/CyLib.c **** *
 414:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:Generated_Source\PSoC4/CyLib.c **** *
 425:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:Generated_Source\PSoC4/CyLib.c **** {
 189              		.loc 1 427 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 16
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 90B5     		push	{r4, r7, lr}
 194              		.cfi_def_cfa_offset 12
 195              		.cfi_offset 4, -12
 196              		.cfi_offset 7, -8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 12


 197              		.cfi_offset 14, -4
 198 0002 85B0     		sub	sp, sp, #20
 199              		.cfi_def_cfa_offset 32
 200 0004 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
 428:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 203              		.loc 1 431 0
 204 0008 0F23     		movs	r3, #15
 205 000a FC18     		adds	r4, r7, r3
 206 000c FFF7FEFF 		bl	CyEnterCriticalSection
 207 0010 0300     		movs	r3, r0
 208 0012 2370     		strb	r3, [r4]
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 209              		.loc 1 434 0
 210 0014 0B4B     		ldr	r3, .L8
 211 0016 1B68     		ldr	r3, [r3]
 212 0018 0722     		movs	r2, #7
 213 001a 9343     		bics	r3, r2
 214 001c BB60     		str	r3, [r7, #8]
 435:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:Generated_Source\PSoC4/CyLib.c ****     {
 440:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:Generated_Source\PSoC4/CyLib.c ****     }
 442:Generated_Source\PSoC4/CyLib.c ****     else
 443:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 215              		.loc 1 445 0
 216 001e 7B68     		ldr	r3, [r7, #4]
 217 0020 0722     		movs	r2, #7
 218 0022 1340     		ands	r3, r2
 219 0024 BA68     		ldr	r2, [r7, #8]
 220 0026 1343     		orrs	r3, r2
 221 0028 BB60     		str	r3, [r7, #8]
 446:Generated_Source\PSoC4/CyLib.c ****     }
 447:Generated_Source\PSoC4/CyLib.c **** 
 448:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 222              		.loc 1 448 0
 223 002a 064B     		ldr	r3, .L8
 224 002c BA68     		ldr	r2, [r7, #8]
 225 002e 1A60     		str	r2, [r3]
 449:Generated_Source\PSoC4/CyLib.c **** 
 450:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 226              		.loc 1 450 0
 227 0030 0F23     		movs	r3, #15
 228 0032 FB18     		adds	r3, r7, r3
 229 0034 1B78     		ldrb	r3, [r3]
 230 0036 1800     		movs	r0, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 13


 231 0038 FFF7FEFF 		bl	CyExitCriticalSection
 451:Generated_Source\PSoC4/CyLib.c **** }
 232              		.loc 1 451 0
 233 003c C046     		nop
 234 003e BD46     		mov	sp, r7
 235 0040 05B0     		add	sp, sp, #20
 236              		@ sp needed
 237 0042 90BD     		pop	{r4, r7, pc}
 238              	.L9:
 239              		.align	2
 240              	.L8:
 241 0044 00010B40 		.word	1074462976
 242              		.cfi_endproc
 243              	.LFE4:
 244              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 245              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 246              		.align	2
 247              		.global	CySysClkGetSysclkSource
 248              		.code	16
 249              		.thumb_func
 250              		.type	CySysClkGetSysclkSource, %function
 251              	CySysClkGetSysclkSource:
 252              	.LFB5:
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:Generated_Source\PSoC4/CyLib.c **** *
 458:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:Generated_Source\PSoC4/CyLib.c **** *
 460:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:Generated_Source\PSoC4/CyLib.c **** *
 462:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:Generated_Source\PSoC4/CyLib.c **** {
 253              		.loc 1 464 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 90B5     		push	{r4, r7, lr}
 258              		.cfi_def_cfa_offset 12
 259              		.cfi_offset 4, -12
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0002 83B0     		sub	sp, sp, #12
 263              		.cfi_def_cfa_offset 24
 264 0004 00AF     		add	r7, sp, #0
 265              		.cfi_def_cfa_register 7
 465:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 266              		.loc 1 468 0
 267 0006 FC1D     		adds	r4, r7, #7
 268 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 269 000c 0300     		movs	r3, r0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 14


 270 000e 2370     		strb	r3, [r4]
 469:Generated_Source\PSoC4/CyLib.c **** 
 470:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:Generated_Source\PSoC4/CyLib.c ****     {
 473:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:Generated_Source\PSoC4/CyLib.c ****     }
 475:Generated_Source\PSoC4/CyLib.c ****     else
 476:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:Generated_Source\PSoC4/CyLib.c ****     {
 478:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 271              		.loc 1 478 0
 272 0010 074B     		ldr	r3, .L12
 273 0012 1B68     		ldr	r3, [r3]
 274 0014 0722     		movs	r2, #7
 275 0016 1340     		ands	r3, r2
 276 0018 3B60     		str	r3, [r7]
 479:Generated_Source\PSoC4/CyLib.c ****     }
 480:Generated_Source\PSoC4/CyLib.c **** 
 481:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 277              		.loc 1 481 0
 278 001a FB1D     		adds	r3, r7, #7
 279 001c 1B78     		ldrb	r3, [r3]
 280 001e 1800     		movs	r0, r3
 281 0020 FFF7FEFF 		bl	CyExitCriticalSection
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 282              		.loc 1 483 0
 283 0024 3B68     		ldr	r3, [r7]
 484:Generated_Source\PSoC4/CyLib.c **** }
 284              		.loc 1 484 0
 285 0026 1800     		movs	r0, r3
 286 0028 BD46     		mov	sp, r7
 287 002a 03B0     		add	sp, sp, #12
 288              		@ sp needed
 289 002c 90BD     		pop	{r4, r7, pc}
 290              	.L13:
 291 002e C046     		.align	2
 292              	.L12:
 293 0030 00010B40 		.word	1074462976
 294              		.cfi_endproc
 295              	.LFE5:
 296              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 297              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 298              		.align	2
 299              		.global	CySysClkWriteSysclkDiv
 300              		.code	16
 301              		.thumb_func
 302              		.type	CySysClkWriteSysclkDiv, %function
 303              	CySysClkWriteSysclkDiv:
 304              	.LFB6:
 485:Generated_Source\PSoC4/CyLib.c **** 
 486:Generated_Source\PSoC4/CyLib.c **** 
 487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 15


 491:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:Generated_Source\PSoC4/CyLib.c **** *
 496:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:Generated_Source\PSoC4/CyLib.c **** *
 500:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:Generated_Source\PSoC4/CyLib.c **** *
 517:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:Generated_Source\PSoC4/CyLib.c **** {
 305              		.loc 1 519 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 16
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 90B5     		push	{r4, r7, lr}
 310              		.cfi_def_cfa_offset 12
 311              		.cfi_offset 4, -12
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 85B0     		sub	sp, sp, #20
 315              		.cfi_def_cfa_offset 32
 316 0004 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 318 0006 7860     		str	r0, [r7, #4]
 520:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 319              		.loc 1 522 0
 320 0008 0F23     		movs	r3, #15
 321 000a FC18     		adds	r4, r7, r3
 322 000c FFF7FEFF 		bl	CyEnterCriticalSection
 323 0010 0300     		movs	r3, r0
 324 0012 2370     		strb	r3, [r4]
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 325              		.loc 1 524 0
 326 0014 0A4B     		ldr	r3, .L15
 327 0016 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 16


 328 0018 D104     		lsls	r1, r2, #19
 329 001a E022     		movs	r2, #224
 330 001c 9203     		lsls	r2, r2, #14
 331 001e 1140     		ands	r1, r2
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 332              		.loc 1 526 0
 333 0020 074A     		ldr	r2, .L15
 334 0022 1268     		ldr	r2, [r2]
 335 0024 0748     		ldr	r0, .L15+4
 336 0026 0240     		ands	r2, r0
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 337              		.loc 1 525 0
 338 0028 0A43     		orrs	r2, r1
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 339              		.loc 1 524 0
 340 002a 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:Generated_Source\PSoC4/CyLib.c **** 
 529:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 341              		.loc 1 529 0
 342 002c 0F23     		movs	r3, #15
 343 002e FB18     		adds	r3, r7, r3
 344 0030 1B78     		ldrb	r3, [r3]
 345 0032 1800     		movs	r0, r3
 346 0034 FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/CyLib.c **** }
 347              		.loc 1 530 0
 348 0038 C046     		nop
 349 003a BD46     		mov	sp, r7
 350 003c 05B0     		add	sp, sp, #20
 351              		@ sp needed
 352 003e 90BD     		pop	{r4, r7, pc}
 353              	.L16:
 354              		.align	2
 355              	.L15:
 356 0040 00010B40 		.word	1074462976
 357 0044 FFFFC7FF 		.word	-3670017
 358              		.cfi_endproc
 359              	.LFE6:
 360              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 361              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 362              		.align	2
 363              		.global	CySysClkWriteImoFreq
 364              		.code	16
 365              		.thumb_func
 366              		.type	CySysClkWriteImoFreq, %function
 367              	CySysClkWriteImoFreq:
 368              	.LFB7:
 531:Generated_Source\PSoC4/CyLib.c **** 
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:Generated_Source\PSoC4/CyLib.c **** *
 537:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 17


 539:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:Generated_Source\PSoC4/CyLib.c **** *
 542:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:Generated_Source\PSoC4/CyLib.c **** *
 546:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:Generated_Source\PSoC4/CyLib.c **** *
 550:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:Generated_Source\PSoC4/CyLib.c **** *
 558:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:Generated_Source\PSoC4/CyLib.c **** *
 565:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:Generated_Source\PSoC4/CyLib.c **** *
 569:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:Generated_Source\PSoC4/CyLib.c **** * 4.
 573:Generated_Source\PSoC4/CyLib.c **** *
 574:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:Generated_Source\PSoC4/CyLib.c ****     {
 369              		.loc 1 577 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 40
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373 0000 90B5     		push	{r4, r7, lr}
 374              		.cfi_def_cfa_offset 12
 375              		.cfi_offset 4, -12
 376              		.cfi_offset 7, -8
 377              		.cfi_offset 14, -4
 378 0002 8BB0     		sub	sp, sp, #44
 379              		.cfi_def_cfa_offset 56
 380 0004 00AF     		add	r7, sp, #0
 381              		.cfi_def_cfa_register 7
 382 0006 7860     		str	r0, [r7, #4]
 578:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 18


 582:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:Generated_Source\PSoC4/CyLib.c **** 
 597:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:Generated_Source\PSoC4/CyLib.c **** 
 599:Generated_Source\PSoC4/CyLib.c **** 
 600:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 383              		.loc 1 600 0
 384 0008 2723     		movs	r3, #39
 385 000a FC18     		adds	r4, r7, r3
 386 000c FFF7FEFF 		bl	CyEnterCriticalSection
 387 0010 0300     		movs	r3, r0
 388 0012 2370     		strb	r3, [r4]
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:Generated_Source\PSoC4/CyLib.c ****             {
 605:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:Generated_Source\PSoC4/CyLib.c ****             }
 608:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:Generated_Source\PSoC4/CyLib.c **** 
 610:Generated_Source\PSoC4/CyLib.c **** 
 611:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:Generated_Source\PSoC4/CyLib.c ****                 {
 616:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:Generated_Source\PSoC4/CyLib.c **** 
 618:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:Generated_Source\PSoC4/CyLib.c ****                 {
 620:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:Generated_Source\PSoC4/CyLib.c ****                 }
 623:Generated_Source\PSoC4/CyLib.c **** 
 624:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:Generated_Source\PSoC4/CyLib.c ****                 }
 626:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:Generated_Source\PSoC4/CyLib.c **** 
 630:Generated_Source\PSoC4/CyLib.c **** 
 631:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 19


 633:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 389              		.loc 1 634 0
 390 0014 194B     		ldr	r3, .L18
 391 0016 1A68     		ldr	r2, [r3]
 392 0018 0C23     		movs	r3, #12
 393 001a FB18     		adds	r3, r7, r3
 394 001c 1A60     		str	r2, [r3]
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 395              		.loc 1 635 0
 396 001e 184B     		ldr	r3, .L18+4
 397 0020 1A68     		ldr	r2, [r3]
 398 0022 0C23     		movs	r3, #12
 399 0024 FB18     		adds	r3, r7, r3
 400 0026 5A60     		str	r2, [r3, #4]
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 401              		.loc 1 636 0
 402 0028 7B68     		ldr	r3, [r7, #4]
 403 002a 033B     		subs	r3, r3, #3
 404 002c 154A     		ldr	r2, .L18+8
 405 002e D35C     		ldrb	r3, [r2, r3]
 406 0030 1A00     		movs	r2, r3
 407 0032 0C23     		movs	r3, #12
 408 0034 FB18     		adds	r3, r7, r3
 409 0036 9A60     		str	r2, [r3, #8]
 637:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 410              		.loc 1 637 0
 411 0038 134B     		ldr	r3, .L18+12
 412 003a 1A68     		ldr	r2, [r3]
 413 003c 0C23     		movs	r3, #12
 414 003e FB18     		adds	r3, r7, r3
 415 0040 DA60     		str	r2, [r3, #12]
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 416              		.loc 1 639 0
 417 0042 1C23     		movs	r3, #28
 418 0044 FB18     		adds	r3, r7, r3
 419 0046 114A     		ldr	r2, .L18+16
 420 0048 1A60     		str	r2, [r3]
 640:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 421              		.loc 1 642 0
 422 004a 0C23     		movs	r3, #12
 423 004c FA18     		adds	r2, r7, r3
 424 004e 1C23     		movs	r3, #28
 425 0050 FB18     		adds	r3, r7, r3
 426 0052 5A60     		str	r2, [r3, #4]
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 427              		.loc 1 644 0
 428 0054 0E4B     		ldr	r3, .L18+20
 429 0056 1C22     		movs	r2, #28
 430 0058 BA18     		adds	r2, r7, r2
 431 005a 1A60     		str	r2, [r3]
 645:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 432              		.loc 1 645 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 20


 433 005c 0D4B     		ldr	r3, .L18+24
 434 005e 0E4A     		ldr	r2, .L18+28
 435 0060 1A60     		str	r2, [r3]
 646:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 436              		.loc 1 646 0
 437 0062 0B4B     		ldr	r3, .L18+20
 438 0064 1B68     		ldr	r3, [r3]
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:Generated_Source\PSoC4/CyLib.c **** 
 650:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:Generated_Source\PSoC4/CyLib.c ****         {
 652:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:Generated_Source\PSoC4/CyLib.c ****             {
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:Generated_Source\PSoC4/CyLib.c ****             }
 657:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:Generated_Source\PSoC4/CyLib.c ****             {
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:Generated_Source\PSoC4/CyLib.c ****             }
 662:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:Generated_Source\PSoC4/CyLib.c ****             {
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:Generated_Source\PSoC4/CyLib.c ****             }
 667:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:Generated_Source\PSoC4/CyLib.c ****             {
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:Generated_Source\PSoC4/CyLib.c ****             }
 672:Generated_Source\PSoC4/CyLib.c ****             else
 673:Generated_Source\PSoC4/CyLib.c ****             {
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:Generated_Source\PSoC4/CyLib.c ****             }
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:Generated_Source\PSoC4/CyLib.c **** 
 681:Generated_Source\PSoC4/CyLib.c **** 
 682:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:Generated_Source\PSoC4/CyLib.c ****             *
 687:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:Generated_Source\PSoC4/CyLib.c ****             {
 693:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 21


 697:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:Generated_Source\PSoC4/CyLib.c **** 
 699:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:Generated_Source\PSoC4/CyLib.c ****             }
 701:Generated_Source\PSoC4/CyLib.c ****             else
 702:Generated_Source\PSoC4/CyLib.c ****             {
 703:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:Generated_Source\PSoC4/CyLib.c ****             }
 705:Generated_Source\PSoC4/CyLib.c **** 
 706:Generated_Source\PSoC4/CyLib.c **** 
 707:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:Generated_Source\PSoC4/CyLib.c ****             *
 711:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:Generated_Source\PSoC4/CyLib.c ****             {
 717:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:Generated_Source\PSoC4/CyLib.c ****             }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:Generated_Source\PSoC4/CyLib.c ****                 {
 727:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:Generated_Source\PSoC4/CyLib.c ****                 }
 729:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:Generated_Source\PSoC4/CyLib.c ****                 {
 731:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:Generated_Source\PSoC4/CyLib.c ****                 }
 733:Generated_Source\PSoC4/CyLib.c ****                 else
 734:Generated_Source\PSoC4/CyLib.c ****                 {
 735:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:Generated_Source\PSoC4/CyLib.c ****                 }
 737:Generated_Source\PSoC4/CyLib.c ****             #else
 738:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:Generated_Source\PSoC4/CyLib.c **** 
 741:Generated_Source\PSoC4/CyLib.c **** 
 742:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:Generated_Source\PSoC4/CyLib.c **** 
 747:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:Generated_Source\PSoC4/CyLib.c ****             {
 749:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:Generated_Source\PSoC4/CyLib.c ****             }
 753:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 22


 754:Generated_Source\PSoC4/CyLib.c ****         else
 755:Generated_Source\PSoC4/CyLib.c ****         {
 756:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:Generated_Source\PSoC4/CyLib.c ****         }
 759:Generated_Source\PSoC4/CyLib.c **** 
 760:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:Generated_Source\PSoC4/CyLib.c **** 
 762:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:Generated_Source\PSoC4/CyLib.c ****             {
 765:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:Generated_Source\PSoC4/CyLib.c ****             }
 767:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:Generated_Source\PSoC4/CyLib.c ****             {
 772:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:Generated_Source\PSoC4/CyLib.c ****             }
 774:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:Generated_Source\PSoC4/CyLib.c **** 
 776:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 439              		.loc 1 776 0
 440 0066 2723     		movs	r3, #39
 441 0068 FB18     		adds	r3, r7, r3
 442 006a 1B78     		ldrb	r3, [r3]
 443 006c 1800     		movs	r0, r3
 444 006e FFF7FEFF 		bl	CyExitCriticalSection
 777:Generated_Source\PSoC4/CyLib.c ****     }
 445              		.loc 1 777 0
 446 0072 C046     		nop
 447 0074 BD46     		mov	sp, r7
 448 0076 0BB0     		add	sp, sp, #44
 449              		@ sp needed
 450 0078 90BD     		pop	{r4, r7, pc}
 451              	.L19:
 452 007a C046     		.align	2
 453              	.L18:
 454 007c 08010B40 		.word	1074462984
 455 0080 00010B40 		.word	1074462976
 456 0084 00000000 		.word	cyImoFreqMhz2Reg
 457 0088 30001040 		.word	1074790448
 458 008c B6EA0000 		.word	60086
 459 0090 08001040 		.word	1074790408
 460 0094 04001040 		.word	1074790404
 461 0098 17000080 		.word	-2147483625
 462              		.cfi_endproc
 463              	.LFE7:
 464              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 465              		.section	.text.CySysClkEcoStart,"ax",%progbits
 466              		.align	2
 467              		.global	CySysClkEcoStart
 468              		.code	16
 469              		.thumb_func
 470              		.type	CySysClkEcoStart, %function
 471              	CySysClkEcoStart:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 23


 472              	.LFB8:
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c **** #else
 780:Generated_Source\PSoC4/CyLib.c **** 
 781:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:Generated_Source\PSoC4/CyLib.c ****     {
 783:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:Generated_Source\PSoC4/CyLib.c **** 
 786:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:Generated_Source\PSoC4/CyLib.c ****         
 790:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:Generated_Source\PSoC4/CyLib.c ****         #else
 797:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:Generated_Source\PSoC4/CyLib.c ****         {
 802:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:Generated_Source\PSoC4/CyLib.c ****                 }
 810:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:Generated_Source\PSoC4/CyLib.c ****                     {
 817:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:Generated_Source\PSoC4/CyLib.c ****                     {
 821:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:Generated_Source\PSoC4/CyLib.c ****                     }
 824:Generated_Source\PSoC4/CyLib.c **** 
 825:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:Generated_Source\PSoC4/CyLib.c ****                     }
 827:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:Generated_Source\PSoC4/CyLib.c **** 
 831:Generated_Source\PSoC4/CyLib.c **** 
 832:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 24


 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c **** 
 836:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:Generated_Source\PSoC4/CyLib.c ****                 {
 840:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:Generated_Source\PSoC4/CyLib.c ****                 }
 842:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:Generated_Source\PSoC4/CyLib.c ****                 {
 844:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 }
 846:Generated_Source\PSoC4/CyLib.c ****                 else
 847:Generated_Source\PSoC4/CyLib.c ****                 {
 848:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:Generated_Source\PSoC4/CyLib.c ****                 }
 850:Generated_Source\PSoC4/CyLib.c ****             #else
 851:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:Generated_Source\PSoC4/CyLib.c **** 
 855:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:Generated_Source\PSoC4/CyLib.c **** 
 862:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:Generated_Source\PSoC4/CyLib.c ****             {
 866:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:Generated_Source\PSoC4/CyLib.c ****             }
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:Generated_Source\PSoC4/CyLib.c ****                 {
 881:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:Generated_Source\PSoC4/CyLib.c ****                 }
 883:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:Generated_Source\PSoC4/CyLib.c ****         
 885:Generated_Source\PSoC4/CyLib.c ****         
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 25


 891:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:Generated_Source\PSoC4/CyLib.c **** 
 893:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:Generated_Source\PSoC4/CyLib.c ****         }
 895:Generated_Source\PSoC4/CyLib.c ****         else
 896:Generated_Source\PSoC4/CyLib.c ****         {
 897:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:Generated_Source\PSoC4/CyLib.c ****         }
 900:Generated_Source\PSoC4/CyLib.c ****     }
 901:Generated_Source\PSoC4/CyLib.c **** 
 902:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:Generated_Source\PSoC4/CyLib.c ****     *
 910:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:Generated_Source\PSoC4/CyLib.c ****     *
 912:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:Generated_Source\PSoC4/CyLib.c ****     *
 916:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:Generated_Source\PSoC4/CyLib.c ****     *
 919:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:Generated_Source\PSoC4/CyLib.c ****     *
 926:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:Generated_Source\PSoC4/CyLib.c ****     *
 931:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:Generated_Source\PSoC4/CyLib.c ****     {
 934:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:Generated_Source\PSoC4/CyLib.c **** 
 936:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 937:Generated_Source\PSoC4/CyLib.c **** 
 938:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 939:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****     }
 944:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 26


 948:Generated_Source\PSoC4/CyLib.c **** 
 949:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:Generated_Source\PSoC4/CyLib.c ****     *
 953:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:Generated_Source\PSoC4/CyLib.c ****     *
 956:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:Generated_Source\PSoC4/CyLib.c ****     * called.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:Generated_Source\PSoC4/CyLib.c ****     *
 963:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:Generated_Source\PSoC4/CyLib.c ****     *
 971:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:Generated_Source\PSoC4/CyLib.c ****     *
 977:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:Generated_Source\PSoC4/CyLib.c ****     {
 473              		.loc 1 979 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 16
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477 0000 80B5     		push	{r7, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 84B0     		sub	sp, sp, #16
 482              		.cfi_def_cfa_offset 24
 483 0004 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 485 0006 7860     		str	r0, [r7, #4]
 980:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 486              		.loc 1 980 0
 487 0008 0023     		movs	r3, #0
 488 000a FB60     		str	r3, [r7, #12]
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 489              		.loc 1 984 0
 490 000c 154B     		ldr	r3, .L26
 491 000e 154A     		ldr	r2, .L26
 492 0010 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 27


 493 0012 0121     		movs	r1, #1
 494 0014 0A43     		orrs	r2, r1
 495 0016 1A60     		str	r2, [r3]
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 496              		.loc 1 987 0
 497 0018 134B     		ldr	r3, .L26+4
 498 001a 144A     		ldr	r2, .L26+8
 499 001c 1A60     		str	r2, [r3]
 988:Generated_Source\PSoC4/CyLib.c **** 
 989:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 500              		.loc 1 990 0
 501 001e 144B     		ldr	r3, .L26+12
 502 0020 134A     		ldr	r2, .L26+12
 503 0022 1268     		ldr	r2, [r2]
 504 0024 8021     		movs	r1, #128
 505 0026 0902     		lsls	r1, r1, #8
 506 0028 0A43     		orrs	r2, r1
 507 002a 1A60     		str	r2, [r3]
 991:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 508              		.loc 1 997 0
 509 002c 7B68     		ldr	r3, [r7, #4]
 510 002e 002B     		cmp	r3, #0
 511 0030 12D0     		beq	.L21
 998:Generated_Source\PSoC4/CyLib.c ****         {
 999:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 512              		.loc 1 999 0
 513 0032 1023     		movs	r3, #16
 514 0034 FB60     		str	r3, [r7, #12]
1000:Generated_Source\PSoC4/CyLib.c **** 
1001:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 515              		.loc 1 1001 0
 516 0036 0CE0     		b	.L22
 517              	.L24:
1002:Generated_Source\PSoC4/CyLib.c ****             {
1003:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 518              		.loc 1 1003 0
 519 0038 0120     		movs	r0, #1
 520 003a FFF7FEFF 		bl	CyDelayUs
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 521              		.loc 1 1005 0
 522 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 523 0042 031E     		subs	r3, r0, #0
 524 0044 02D0     		beq	.L23
1006:Generated_Source\PSoC4/CyLib.c ****                 {
1007:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 525              		.loc 1 1007 0
 526 0046 0023     		movs	r3, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 28


 527 0048 FB60     		str	r3, [r7, #12]
1008:Generated_Source\PSoC4/CyLib.c ****                     break;
 528              		.loc 1 1008 0
 529 004a 05E0     		b	.L21
 530              	.L23:
1001:Generated_Source\PSoC4/CyLib.c ****             {
 531              		.loc 1 1001 0
 532 004c 7B68     		ldr	r3, [r7, #4]
 533 004e 013B     		subs	r3, r3, #1
 534 0050 7B60     		str	r3, [r7, #4]
 535              	.L22:
1001:Generated_Source\PSoC4/CyLib.c ****             {
 536              		.loc 1 1001 0 is_stmt 0 discriminator 1
 537 0052 7B68     		ldr	r3, [r7, #4]
 538 0054 002B     		cmp	r3, #0
 539 0056 EFD1     		bne	.L24
 540              	.L21:
1009:Generated_Source\PSoC4/CyLib.c ****                 }
1010:Generated_Source\PSoC4/CyLib.c ****             }
1011:Generated_Source\PSoC4/CyLib.c **** 
1012:Generated_Source\PSoC4/CyLib.c ****         }
1013:Generated_Source\PSoC4/CyLib.c **** 
1014:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 541              		.loc 1 1014 0 is_stmt 1
 542 0058 FB68     		ldr	r3, [r7, #12]
1015:Generated_Source\PSoC4/CyLib.c ****     }
 543              		.loc 1 1015 0
 544 005a 1800     		movs	r0, r3
 545 005c BD46     		mov	sp, r7
 546 005e 04B0     		add	sp, sp, #16
 547              		@ sp needed
 548 0060 80BD     		pop	{r7, pc}
 549              	.L27:
 550 0062 C046     		.align	2
 551              	.L26:
 552 0064 60F02E40 		.word	1076818016
 553 0068 78002E40 		.word	1076756600
 554 006c 02200000 		.word	8194
 555 0070 10002E40 		.word	1076756496
 556              		.cfi_endproc
 557              	.LFE8:
 558              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 559              		.section	.text.CySysClkEcoStop,"ax",%progbits
 560              		.align	2
 561              		.global	CySysClkEcoStop
 562              		.code	16
 563              		.thumb_func
 564              		.type	CySysClkEcoStop, %function
 565              	CySysClkEcoStop:
 566              	.LFB9:
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:Generated_Source\PSoC4/CyLib.c ****     *
1022:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 29


1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:Generated_Source\PSoC4/CyLib.c ****     *
1028:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:Generated_Source\PSoC4/CyLib.c ****     {
 567              		.loc 1 1030 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571 0000 80B5     		push	{r7, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 00AF     		add	r7, sp, #0
 576              		.cfi_def_cfa_register 7
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 577              		.loc 1 1033 0
 578 0004 074B     		ldr	r3, .L29
 579 0006 074A     		ldr	r2, .L29
 580 0008 1268     		ldr	r2, [r2]
 581 000a 0121     		movs	r1, #1
 582 000c 8A43     		bics	r2, r1
 583 000e 1A60     		str	r2, [r3]
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 584              		.loc 1 1036 0
 585 0010 054B     		ldr	r3, .L29+4
 586 0012 054A     		ldr	r2, .L29+4
 587 0014 1268     		ldr	r2, [r2]
 588 0016 0549     		ldr	r1, .L29+8
 589 0018 0A40     		ands	r2, r1
 590 001a 1A60     		str	r2, [r3]
1037:Generated_Source\PSoC4/CyLib.c ****         #else
1038:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:Generated_Source\PSoC4/CyLib.c ****     }
 591              		.loc 1 1040 0
 592 001c C046     		nop
 593 001e BD46     		mov	sp, r7
 594              		@ sp needed
 595 0020 80BD     		pop	{r7, pc}
 596              	.L30:
 597 0022 C046     		.align	2
 598              	.L29:
 599 0024 60F02E40 		.word	1076818016
 600 0028 10002E40 		.word	1076756496
 601 002c FF7FFFFF 		.word	-32769
 602              		.cfi_endproc
 603              	.LFE9:
 604              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 605              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 30


 606              		.align	2
 607              		.global	CySysClkEcoReadStatus
 608              		.code	16
 609              		.thumb_func
 610              		.type	CySysClkEcoReadStatus, %function
 611              	CySysClkEcoReadStatus:
 612              	.LFB10:
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:Generated_Source\PSoC4/CyLib.c ****     *
1047:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:Generated_Source\PSoC4/CyLib.c ****     *
1049:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:Generated_Source\PSoC4/CyLib.c ****     *
1052:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:Generated_Source\PSoC4/CyLib.c ****     *
1055:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:Generated_Source\PSoC4/CyLib.c ****     *
1058:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:Generated_Source\PSoC4/CyLib.c ****     *
1060:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:Generated_Source\PSoC4/CyLib.c ****     {
 613              		.loc 1 1062 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 8
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617 0000 80B5     		push	{r7, lr}
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 82B0     		sub	sp, sp, #8
 622              		.cfi_def_cfa_offset 16
 623 0004 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
1063:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:Generated_Source\PSoC4/CyLib.c **** 
1065:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 625              		.loc 1 1066 0
 626 0006 054B     		ldr	r3, .L33
 627 0008 1B68     		ldr	r3, [r3]
 628 000a 0122     		movs	r2, #1
 629 000c 1340     		ands	r3, r2
 630 000e 7B60     		str	r3, [r7, #4]
1067:Generated_Source\PSoC4/CyLib.c ****         #else
1068:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:Generated_Source\PSoC4/CyLib.c **** 
1071:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 631              		.loc 1 1071 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 31


 632 0010 7B68     		ldr	r3, [r7, #4]
1072:Generated_Source\PSoC4/CyLib.c ****     }
 633              		.loc 1 1072 0
 634 0012 1800     		movs	r0, r3
 635 0014 BD46     		mov	sp, r7
 636 0016 02B0     		add	sp, sp, #8
 637              		@ sp needed
 638 0018 80BD     		pop	{r7, pc}
 639              	.L34:
 640 001a C046     		.align	2
 641              	.L33:
 642 001c 0C002E40 		.word	1076756492
 643              		.cfi_endproc
 644              	.LFE10:
 645              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 646              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 647              		.align	2
 648              		.global	CySysClkWriteEcoDiv
 649              		.code	16
 650              		.thumb_func
 651              		.type	CySysClkWriteEcoDiv, %function
 652              	CySysClkWriteEcoDiv:
 653              	.LFB11:
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:Generated_Source\PSoC4/CyLib.c ****         *
1079:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:Generated_Source\PSoC4/CyLib.c ****         *
1081:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:Generated_Source\PSoC4/CyLib.c ****         *
1087:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:Generated_Source\PSoC4/CyLib.c ****         *
1094:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:Generated_Source\PSoC4/CyLib.c ****         *
1100:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:Generated_Source\PSoC4/CyLib.c ****         {
 654              		.loc 1 1102 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 16
 657              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 32


 658 0000 90B5     		push	{r4, r7, lr}
 659              		.cfi_def_cfa_offset 12
 660              		.cfi_offset 4, -12
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 85B0     		sub	sp, sp, #20
 664              		.cfi_def_cfa_offset 32
 665 0004 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
 667 0006 7860     		str	r0, [r7, #4]
1103:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:Generated_Source\PSoC4/CyLib.c **** 
1105:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 668              		.loc 1 1105 0
 669 0008 114B     		ldr	r3, .L39
 670 000a 1B68     		ldr	r3, [r3]
 671 000c 0722     		movs	r2, #7
 672 000e 1340     		ands	r3, r2
 673 0010 022B     		cmp	r3, #2
 674 0012 16D0     		beq	.L36
1106:Generated_Source\PSoC4/CyLib.c ****             {
1107:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 675              		.loc 1 1107 0
 676 0014 0F23     		movs	r3, #15
 677 0016 FC18     		adds	r4, r7, r3
 678 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 679 001c 0300     		movs	r3, r0
 680 001e 2370     		strb	r3, [r4]
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 681              		.loc 1 1109 0
 682 0020 0C4B     		ldr	r3, .L39+4
 683 0022 7A68     		ldr	r2, [r7, #4]
 684 0024 0321     		movs	r1, #3
 685 0026 1140     		ands	r1, r2
1110:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 686              		.loc 1 1110 0
 687 0028 0A4A     		ldr	r2, .L39+4
 688 002a 1268     		ldr	r2, [r2]
 689 002c 0320     		movs	r0, #3
 690 002e 8243     		bics	r2, r0
1109:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 691              		.loc 1 1109 0
 692 0030 0A43     		orrs	r2, r1
 693 0032 1A60     		str	r2, [r3]
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 694              		.loc 1 1112 0
 695 0034 0F23     		movs	r3, #15
 696 0036 FB18     		adds	r3, r7, r3
 697 0038 1B78     		ldrb	r3, [r3]
 698 003a 1800     		movs	r0, r3
 699 003c FFF7FEFF 		bl	CyExitCriticalSection
1113:Generated_Source\PSoC4/CyLib.c ****             }
1114:Generated_Source\PSoC4/CyLib.c ****             else
1115:Generated_Source\PSoC4/CyLib.c ****             {
1116:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 33


1117:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:Generated_Source\PSoC4/CyLib.c ****             }
1119:Generated_Source\PSoC4/CyLib.c ****         }
 700              		.loc 1 1119 0
 701 0040 02E0     		b	.L38
 702              	.L36:
1117:Generated_Source\PSoC4/CyLib.c ****             }
 703              		.loc 1 1117 0 discriminator 1
 704 0042 0020     		movs	r0, #0
 705 0044 FFF7FEFF 		bl	CyHalt
 706              	.L38:
 707              		.loc 1 1119 0
 708 0048 C046     		nop
 709 004a BD46     		mov	sp, r7
 710 004c 05B0     		add	sp, sp, #20
 711              		@ sp needed
 712 004e 90BD     		pop	{r4, r7, pc}
 713              	.L40:
 714              		.align	2
 715              	.L39:
 716 0050 00010B40 		.word	1074462976
 717 0054 64F02E40 		.word	1076818020
 718              		.cfi_endproc
 719              	.LFE11:
 720              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 721              		.section	.text.CySysLvdEnable,"ax",%progbits
 722              		.align	2
 723              		.global	CySysLvdEnable
 724              		.code	16
 725              		.thumb_func
 726              		.type	CySysLvdEnable, %function
 727              	CySysLvdEnable:
 728              	.LFB12:
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c ****     #else
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****         *
1127:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:Generated_Source\PSoC4/CyLib.c ****         *
1130:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:Generated_Source\PSoC4/CyLib.c ****         *
1133:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:Generated_Source\PSoC4/CyLib.c ****         *
1136:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:Generated_Source\PSoC4/CyLib.c ****         *
1140:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:Generated_Source\PSoC4/CyLib.c ****         *
1143:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 34


1144:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:Generated_Source\PSoC4/CyLib.c ****         *
1146:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:Generated_Source\PSoC4/CyLib.c ****         *
1149:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:Generated_Source\PSoC4/CyLib.c ****         *
1152:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:Generated_Source\PSoC4/CyLib.c ****         *
1158:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:Generated_Source\PSoC4/CyLib.c ****         *
1168:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:Generated_Source\PSoC4/CyLib.c ****         *
1174:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:Generated_Source\PSoC4/CyLib.c ****         *
1180:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:Generated_Source\PSoC4/CyLib.c ****         *
1189:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:Generated_Source\PSoC4/CyLib.c ****         {
1192:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:Generated_Source\PSoC4/CyLib.c **** 
1195:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:Generated_Source\PSoC4/CyLib.c **** 
1197:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 35


1201:Generated_Source\PSoC4/CyLib.c **** 
1202:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:Generated_Source\PSoC4/CyLib.c **** 
1211:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:Generated_Source\PSoC4/CyLib.c ****         }
1213:Generated_Source\PSoC4/CyLib.c **** 
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:Generated_Source\PSoC4/CyLib.c ****         *
1219:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:Generated_Source\PSoC4/CyLib.c ****         *
1223:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:Generated_Source\PSoC4/CyLib.c ****         *
1225:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:Generated_Source\PSoC4/CyLib.c ****         *
1231:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:Generated_Source\PSoC4/CyLib.c ****         *
1237:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:Generated_Source\PSoC4/CyLib.c ****         *
1240:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:Generated_Source\PSoC4/CyLib.c ****         {
1243:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:Generated_Source\PSoC4/CyLib.c **** 
1245:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:Generated_Source\PSoC4/CyLib.c **** 
1251:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:Generated_Source\PSoC4/CyLib.c ****             {
1257:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 36


1258:Generated_Source\PSoC4/CyLib.c ****             }
1259:Generated_Source\PSoC4/CyLib.c ****             else
1260:Generated_Source\PSoC4/CyLib.c ****             {
1261:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:Generated_Source\PSoC4/CyLib.c **** 
1264:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:Generated_Source\PSoC4/CyLib.c ****                 {
1266:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:Generated_Source\PSoC4/CyLib.c ****                 }
1268:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:Generated_Source\PSoC4/CyLib.c ****                 {
1270:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:Generated_Source\PSoC4/CyLib.c ****                 }
1272:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:Generated_Source\PSoC4/CyLib.c ****                 {
1274:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:Generated_Source\PSoC4/CyLib.c ****                 }
1276:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:Generated_Source\PSoC4/CyLib.c ****                 {
1278:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:Generated_Source\PSoC4/CyLib.c ****                 }
1280:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:Generated_Source\PSoC4/CyLib.c ****                 {
1282:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:Generated_Source\PSoC4/CyLib.c ****                 }
1284:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:Generated_Source\PSoC4/CyLib.c ****                 {
1286:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:Generated_Source\PSoC4/CyLib.c ****                 }
1288:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:Generated_Source\PSoC4/CyLib.c ****                 {
1290:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:Generated_Source\PSoC4/CyLib.c ****                 }
1292:Generated_Source\PSoC4/CyLib.c ****                 else
1293:Generated_Source\PSoC4/CyLib.c ****                 {
1294:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:Generated_Source\PSoC4/CyLib.c ****                 }
1296:Generated_Source\PSoC4/CyLib.c **** 
1297:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:Generated_Source\PSoC4/CyLib.c **** 
1300:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:Generated_Source\PSoC4/CyLib.c ****                 {
1304:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:Generated_Source\PSoC4/CyLib.c ****                 }
1307:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:Generated_Source\PSoC4/CyLib.c ****                 {
1309:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:Generated_Source\PSoC4/CyLib.c ****                 }
1311:Generated_Source\PSoC4/CyLib.c ****                 else
1312:Generated_Source\PSoC4/CyLib.c ****                 {
1313:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 37


1315:Generated_Source\PSoC4/CyLib.c **** 
1316:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:Generated_Source\PSoC4/CyLib.c ****                 {
1319:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:Generated_Source\PSoC4/CyLib.c ****                 }
1321:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:Generated_Source\PSoC4/CyLib.c ****                 {
1323:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:Generated_Source\PSoC4/CyLib.c ****                 }
1325:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:Generated_Source\PSoC4/CyLib.c ****                 {
1327:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:Generated_Source\PSoC4/CyLib.c ****                 }
1329:Generated_Source\PSoC4/CyLib.c ****                 else
1330:Generated_Source\PSoC4/CyLib.c ****                 {
1331:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:Generated_Source\PSoC4/CyLib.c ****                 }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:Generated_Source\PSoC4/CyLib.c **** 
1337:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:Generated_Source\PSoC4/CyLib.c **** 
1339:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:Generated_Source\PSoC4/CyLib.c ****                 {
1342:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:Generated_Source\PSoC4/CyLib.c ****                 }
1345:Generated_Source\PSoC4/CyLib.c ****                 else
1346:Generated_Source\PSoC4/CyLib.c ****                 {
1347:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:Generated_Source\PSoC4/CyLib.c ****                     */
1350:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:Generated_Source\PSoC4/CyLib.c ****                 }
1352:Generated_Source\PSoC4/CyLib.c ****             }
1353:Generated_Source\PSoC4/CyLib.c **** 
1354:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:Generated_Source\PSoC4/CyLib.c ****         }
1356:Generated_Source\PSoC4/CyLib.c **** 
1357:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:Generated_Source\PSoC4/CyLib.c ****     *
1367:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:Generated_Source\PSoC4/CyLib.c ****     *
1370:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 38


1372:Generated_Source\PSoC4/CyLib.c ****     *
1373:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:Generated_Source\PSoC4/CyLib.c ****     *
1375:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:Generated_Source\PSoC4/CyLib.c ****     *
1379:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:Generated_Source\PSoC4/CyLib.c ****     *
1384:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:Generated_Source\PSoC4/CyLib.c ****     *
1391:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:Generated_Source\PSoC4/CyLib.c ****     {
1394:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:Generated_Source\PSoC4/CyLib.c ****         {
1400:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:Generated_Source\PSoC4/CyLib.c **** 
1405:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:Generated_Source\PSoC4/CyLib.c **** 
1408:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:Generated_Source\PSoC4/CyLib.c **** 
1410:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:Generated_Source\PSoC4/CyLib.c **** 
1416:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:Generated_Source\PSoC4/CyLib.c ****             {
1418:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:Generated_Source\PSoC4/CyLib.c **** 
1420:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:Generated_Source\PSoC4/CyLib.c ****                 {
1422:Generated_Source\PSoC4/CyLib.c **** 
1423:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:Generated_Source\PSoC4/CyLib.c ****                     {
1425:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:Generated_Source\PSoC4/CyLib.c ****                         break;
1428:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 39


1429:Generated_Source\PSoC4/CyLib.c **** 
1430:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****             }
1434:Generated_Source\PSoC4/CyLib.c ****         }
1435:Generated_Source\PSoC4/CyLib.c ****         else
1436:Generated_Source\PSoC4/CyLib.c ****         {
1437:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:Generated_Source\PSoC4/CyLib.c ****         }
1439:Generated_Source\PSoC4/CyLib.c **** 
1440:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:Generated_Source\PSoC4/CyLib.c ****     }
1442:Generated_Source\PSoC4/CyLib.c **** 
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:Generated_Source\PSoC4/CyLib.c ****     *
1448:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:Generated_Source\PSoC4/CyLib.c ****     *
1450:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:Generated_Source\PSoC4/CyLib.c ****     *
1452:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:Generated_Source\PSoC4/CyLib.c ****     *
1456:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:Generated_Source\PSoC4/CyLib.c ****     *
1458:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:Generated_Source\PSoC4/CyLib.c ****     {
1461:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:Generated_Source\PSoC4/CyLib.c **** 
1464:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:Generated_Source\PSoC4/CyLib.c **** 
1466:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:Generated_Source\PSoC4/CyLib.c ****         {
1472:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:Generated_Source\PSoC4/CyLib.c ****         }
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:Generated_Source\PSoC4/CyLib.c **** 
1477:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:Generated_Source\PSoC4/CyLib.c ****     }
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:Generated_Source\PSoC4/CyLib.c ****     *
1484:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 40


1486:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:Generated_Source\PSoC4/CyLib.c ****     *
1489:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:Generated_Source\PSoC4/CyLib.c ****     *
1491:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:Generated_Source\PSoC4/CyLib.c ****     *
1495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:Generated_Source\PSoC4/CyLib.c ****     {
1498:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:Generated_Source\PSoC4/CyLib.c ****         {
1502:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:Generated_Source\PSoC4/CyLib.c ****         }
1506:Generated_Source\PSoC4/CyLib.c ****     }
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** 
1509:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:Generated_Source\PSoC4/CyLib.c ****     *
1513:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:Generated_Source\PSoC4/CyLib.c ****     *
1521:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:Generated_Source\PSoC4/CyLib.c ****     *
1523:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:Generated_Source\PSoC4/CyLib.c ****     *
1527:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:Generated_Source\PSoC4/CyLib.c ****     *
1530:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:Generated_Source\PSoC4/CyLib.c ****     *
1532:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:Generated_Source\PSoC4/CyLib.c ****     *
1536:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 41


1543:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:Generated_Source\PSoC4/CyLib.c **** 
1548:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:Generated_Source\PSoC4/CyLib.c **** 
1550:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:Generated_Source\PSoC4/CyLib.c **** 
1552:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:Generated_Source\PSoC4/CyLib.c ****         {
1558:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:Generated_Source\PSoC4/CyLib.c **** 
1567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:Generated_Source\PSoC4/CyLib.c ****         }
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:Generated_Source\PSoC4/CyLib.c **** 
1574:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:Generated_Source\PSoC4/CyLib.c ****     }
1576:Generated_Source\PSoC4/CyLib.c **** 
1577:Generated_Source\PSoC4/CyLib.c **** 
1578:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:Generated_Source\PSoC4/CyLib.c ****     *
1582:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:Generated_Source\PSoC4/CyLib.c ****     *
1584:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:Generated_Source\PSoC4/CyLib.c ****     *
1587:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:Generated_Source\PSoC4/CyLib.c ****     *
1592:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:Generated_Source\PSoC4/CyLib.c ****     *
1594:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:Generated_Source\PSoC4/CyLib.c ****     *
1598:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 42


1600:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:Generated_Source\PSoC4/CyLib.c ****     *
1603:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:Generated_Source\PSoC4/CyLib.c ****     *
1606:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:Generated_Source\PSoC4/CyLib.c ****     *
1608:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:Generated_Source\PSoC4/CyLib.c ****     {
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:Generated_Source\PSoC4/CyLib.c **** 
1614:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:Generated_Source\PSoC4/CyLib.c ****         {
1618:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:Generated_Source\PSoC4/CyLib.c ****         }
1622:Generated_Source\PSoC4/CyLib.c **** 
1623:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:Generated_Source\PSoC4/CyLib.c ****     }
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:Generated_Source\PSoC4/CyLib.c ****     *
1634:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:Generated_Source\PSoC4/CyLib.c ****     *
1641:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:Generated_Source\PSoC4/CyLib.c ****     {
1644:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:Generated_Source\PSoC4/CyLib.c **** 
1647:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:Generated_Source\PSoC4/CyLib.c **** 
1651:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:Generated_Source\PSoC4/CyLib.c **** 
1656:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 43


1657:Generated_Source\PSoC4/CyLib.c ****     }
1658:Generated_Source\PSoC4/CyLib.c **** 
1659:Generated_Source\PSoC4/CyLib.c **** 
1660:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:Generated_Source\PSoC4/CyLib.c ****     *
1669:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:Generated_Source\PSoC4/CyLib.c ****     *
1673:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:Generated_Source\PSoC4/CyLib.c ****     {
1679:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:Generated_Source\PSoC4/CyLib.c ****         {
1690:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:Generated_Source\PSoC4/CyLib.c ****         }
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:Generated_Source\PSoC4/CyLib.c ****     }
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:Generated_Source\PSoC4/CyLib.c ****     *
1706:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:Generated_Source\PSoC4/CyLib.c ****     *
1708:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 44


1714:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:Generated_Source\PSoC4/CyLib.c ****     {
1717:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:Generated_Source\PSoC4/CyLib.c **** 
1720:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:Generated_Source\PSoC4/CyLib.c **** 
1725:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:Generated_Source\PSoC4/CyLib.c ****     }
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c **** 
1731:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:Generated_Source\PSoC4/CyLib.c ****     *
1739:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:Generated_Source\PSoC4/CyLib.c ****     *
1744:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:Generated_Source\PSoC4/CyLib.c ****     *
1748:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:Generated_Source\PSoC4/CyLib.c ****     *
1750:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:Generated_Source\PSoC4/CyLib.c ****     *
1758:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:Generated_Source\PSoC4/CyLib.c ****     *
1766:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:Generated_Source\PSoC4/CyLib.c ****     {
1769:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 45


1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:Generated_Source\PSoC4/CyLib.c **** 
1778:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:Generated_Source\PSoC4/CyLib.c **** 
1784:Generated_Source\PSoC4/CyLib.c **** 
1785:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:Generated_Source\PSoC4/CyLib.c ****         {
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:Generated_Source\PSoC4/CyLib.c **** 
1802:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:Generated_Source\PSoC4/CyLib.c ****             {
1804:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:Generated_Source\PSoC4/CyLib.c ****                 {
1806:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:Generated_Source\PSoC4/CyLib.c **** 
1811:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:Generated_Source\PSoC4/CyLib.c **** 
1817:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:Generated_Source\PSoC4/CyLib.c ****                     {
1820:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:Generated_Source\PSoC4/CyLib.c ****                         break;
1823:Generated_Source\PSoC4/CyLib.c ****                     }
1824:Generated_Source\PSoC4/CyLib.c ****                 }
1825:Generated_Source\PSoC4/CyLib.c **** 
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 46


1828:Generated_Source\PSoC4/CyLib.c ****                 {
1829:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:Generated_Source\PSoC4/CyLib.c ****                     {
1831:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:Generated_Source\PSoC4/CyLib.c ****                     }
1833:Generated_Source\PSoC4/CyLib.c ****                 }
1834:Generated_Source\PSoC4/CyLib.c ****             }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****         }
1837:Generated_Source\PSoC4/CyLib.c **** 
1838:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:Generated_Source\PSoC4/CyLib.c ****     }
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:Generated_Source\PSoC4/CyLib.c ****     {
1867:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:Generated_Source\PSoC4/CyLib.c **** 
1872:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:Generated_Source\PSoC4/CyLib.c ****         {
1874:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:Generated_Source\PSoC4/CyLib.c ****         }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:Generated_Source\PSoC4/CyLib.c ****     }
1881:Generated_Source\PSoC4/CyLib.c **** 
1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 47


1885:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:Generated_Source\PSoC4/CyLib.c ****     *
1889:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:Generated_Source\PSoC4/CyLib.c ****     *
1892:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:Generated_Source\PSoC4/CyLib.c ****     *
1894:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:Generated_Source\PSoC4/CyLib.c ****     *
1898:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:Generated_Source\PSoC4/CyLib.c ****     *
1908:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:Generated_Source\PSoC4/CyLib.c ****     {
1911:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:Generated_Source\PSoC4/CyLib.c **** 
1916:Generated_Source\PSoC4/CyLib.c **** 
1917:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:Generated_Source\PSoC4/CyLib.c **** 
1919:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:Generated_Source\PSoC4/CyLib.c ****         {
1923:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:Generated_Source\PSoC4/CyLib.c **** 
1928:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:Generated_Source\PSoC4/CyLib.c ****         }
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:Generated_Source\PSoC4/CyLib.c ****     }
1935:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:Generated_Source\PSoC4/CyLib.c **** 
1937:Generated_Source\PSoC4/CyLib.c **** 
1938:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:Generated_Source\PSoC4/CyLib.c **** 
1940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 48


1942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:Generated_Source\PSoC4/CyLib.c ****     *
1968:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:Generated_Source\PSoC4/CyLib.c ****     {
 729              		.loc 1 1970 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 8
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733 0000 80B5     		push	{r7, lr}
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 82B0     		sub	sp, sp, #8
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              		.cfi_def_cfa_register 7
 741 0006 7860     		str	r0, [r7, #4]
1971:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 742              		.loc 1 1972 0
 743 0008 144B     		ldr	r3, .L42
 744 000a 144A     		ldr	r2, .L42
 745 000c 1268     		ldr	r2, [r2]
 746 000e 0221     		movs	r1, #2
 747 0010 8A43     		bics	r2, r1
 748 0012 1A60     		str	r2, [r3]
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 749              		.loc 1 1975 0
 750 0014 124B     		ldr	r3, .L42+4
 751 0016 124A     		ldr	r2, .L42+4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 49


 752 0018 1268     		ldr	r2, [r2]
 753 001a 1E21     		movs	r1, #30
 754 001c 8A43     		bics	r2, r1
 755 001e 1100     		movs	r1, r2
1976:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 756              		.loc 1 1976 0
 757 0020 7A68     		ldr	r2, [r7, #4]
 758 0022 5200     		lsls	r2, r2, #1
 759 0024 1E20     		movs	r0, #30
 760 0026 0240     		ands	r2, r0
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 761              		.loc 1 1975 0
 762 0028 0A43     		orrs	r2, r1
 763 002a 1A60     		str	r2, [r3]
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 764              		.loc 1 1979 0
 765 002c 0C4B     		ldr	r3, .L42+4
 766 002e 0C4A     		ldr	r2, .L42+4
 767 0030 1268     		ldr	r2, [r2]
 768 0032 0121     		movs	r1, #1
 769 0034 0A43     		orrs	r2, r1
 770 0036 1A60     		str	r2, [r3]
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 771              		.loc 1 1982 0
 772 0038 FA23     		movs	r3, #250
 773 003a 9B00     		lsls	r3, r3, #2
 774 003c 1800     		movs	r0, r3
 775 003e FFF7FEFF 		bl	CyDelayUs
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 776              		.loc 1 1985 0
 777 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 778              		.loc 1 1988 0
 779 0046 054B     		ldr	r3, .L42
 780 0048 044A     		ldr	r2, .L42
 781 004a 1268     		ldr	r2, [r2]
 782 004c 0221     		movs	r1, #2
 783 004e 0A43     		orrs	r2, r1
 784 0050 1A60     		str	r2, [r3]
1989:Generated_Source\PSoC4/CyLib.c ****     }
 785              		.loc 1 1989 0
 786 0052 C046     		nop
 787 0054 BD46     		mov	sp, r7
 788 0056 02B0     		add	sp, sp, #8
 789              		@ sp needed
 790 0058 80BD     		pop	{r7, pc}
 791              	.L43:
 792 005a C046     		.align	2
 793              	.L42:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 50


 794 005c 08000B40 		.word	1074462728
 795 0060 18000B40 		.word	1074462744
 796              		.cfi_endproc
 797              	.LFE12:
 798              		.size	CySysLvdEnable, .-CySysLvdEnable
 799              		.section	.text.CySysLvdDisable,"ax",%progbits
 800              		.align	2
 801              		.global	CySysLvdDisable
 802              		.code	16
 803              		.thumb_func
 804              		.type	CySysLvdDisable, %function
 805              	CySysLvdDisable:
 806              	.LFB13:
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c **** 
1992:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:Generated_Source\PSoC4/CyLib.c ****     *
1996:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:Generated_Source\PSoC4/CyLib.c ****     {
 807              		.loc 1 2000 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 1, uses_anonymous_args = 0
 811 0000 80B5     		push	{r7, lr}
 812              		.cfi_def_cfa_offset 8
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
 815 0002 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 817              		.loc 1 2001 0
 818 0004 074B     		ldr	r3, .L45
 819 0006 074A     		ldr	r2, .L45
 820 0008 1268     		ldr	r2, [r2]
 821 000a 0221     		movs	r1, #2
 822 000c 8A43     		bics	r2, r1
 823 000e 1A60     		str	r2, [r3]
2002:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 824              		.loc 1 2002 0
 825 0010 054B     		ldr	r3, .L45+4
 826 0012 054A     		ldr	r2, .L45+4
 827 0014 1268     		ldr	r2, [r2]
 828 0016 0121     		movs	r1, #1
 829 0018 8A43     		bics	r2, r1
 830 001a 1A60     		str	r2, [r3]
2003:Generated_Source\PSoC4/CyLib.c ****     }
 831              		.loc 1 2003 0
 832 001c C046     		nop
 833 001e BD46     		mov	sp, r7
 834              		@ sp needed
 835 0020 80BD     		pop	{r7, pc}
 836              	.L46:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 51


 837 0022 C046     		.align	2
 838              	.L45:
 839 0024 08000B40 		.word	1074462728
 840 0028 18000B40 		.word	1074462744
 841              		.cfi_endproc
 842              	.LFE13:
 843              		.size	CySysLvdDisable, .-CySysLvdDisable
 844              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 845              		.align	2
 846              		.global	CySysLvdGetInterruptSource
 847              		.code	16
 848              		.thumb_func
 849              		.type	CySysLvdGetInterruptSource, %function
 850              	CySysLvdGetInterruptSource:
 851              	.LFB14:
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:Generated_Source\PSoC4/CyLib.c ****     *
2012:Generated_Source\PSoC4/CyLib.c ****     * \return
2013:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:Generated_Source\PSoC4/CyLib.c ****     {
 852              		.loc 1 2018 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856 0000 80B5     		push	{r7, lr}
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 7, -8
 859              		.cfi_offset 14, -4
 860 0002 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
2019:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 862              		.loc 1 2019 0
 863 0004 034B     		ldr	r3, .L49
 864 0006 1B68     		ldr	r3, [r3]
 865 0008 0222     		movs	r2, #2
 866 000a 1340     		ands	r3, r2
2020:Generated_Source\PSoC4/CyLib.c ****     }
 867              		.loc 1 2020 0
 868 000c 1800     		movs	r0, r3
 869 000e BD46     		mov	sp, r7
 870              		@ sp needed
 871 0010 80BD     		pop	{r7, pc}
 872              	.L50:
 873 0012 C046     		.align	2
 874              	.L49:
 875 0014 04000B40 		.word	1074462724
 876              		.cfi_endproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 52


 877              	.LFE14:
 878              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 879              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 880              		.align	2
 881              		.global	CySysLvdClearInterrupt
 882              		.code	16
 883              		.thumb_func
 884              		.type	CySysLvdClearInterrupt, %function
 885              	CySysLvdClearInterrupt:
 886              	.LFB15:
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:Generated_Source\PSoC4/CyLib.c ****     *
2027:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:Generated_Source\PSoC4/CyLib.c ****     *
2029:Generated_Source\PSoC4/CyLib.c ****     * \return
2030:Generated_Source\PSoC4/CyLib.c ****     *  None
2031:Generated_Source\PSoC4/CyLib.c ****     *
2032:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:Generated_Source\PSoC4/CyLib.c ****     {
 887              		.loc 1 2034 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891 0000 80B5     		push	{r7, lr}
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 7, -8
 894              		.cfi_offset 14, -4
 895 0002 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
2035:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 897              		.loc 1 2035 0
 898 0004 024B     		ldr	r3, .L52
 899 0006 0222     		movs	r2, #2
 900 0008 1A60     		str	r2, [r3]
2036:Generated_Source\PSoC4/CyLib.c ****     }
 901              		.loc 1 2036 0
 902 000a C046     		nop
 903 000c BD46     		mov	sp, r7
 904              		@ sp needed
 905 000e 80BD     		pop	{r7, pc}
 906              	.L53:
 907              		.align	2
 908              	.L52:
 909 0010 04000B40 		.word	1074462724
 910              		.cfi_endproc
 911              	.LFE15:
 912              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 913              		.section	.text.CySysGetResetReason,"ax",%progbits
 914              		.align	2
 915              		.global	CySysGetResetReason
 916              		.code	16
 917              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 53


 918              		.type	CySysGetResetReason, %function
 919              	CySysGetResetReason:
 920              	.LFB16:
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:Generated_Source\PSoC4/CyLib.c **** 
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:Generated_Source\PSoC4/CyLib.c **** *
2045:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:Generated_Source\PSoC4/CyLib.c **** *
2050:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:Generated_Source\PSoC4/CyLib.c **** *
2055:Generated_Source\PSoC4/CyLib.c **** * \return
2056:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:Generated_Source\PSoC4/CyLib.c **** *
2058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:Generated_Source\PSoC4/CyLib.c **** {
 921              		.loc 1 2060 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 16
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925 0000 80B5     		push	{r7, lr}
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 84B0     		sub	sp, sp, #16
 930              		.cfi_def_cfa_offset 24
 931 0004 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
 933 0006 7860     		str	r0, [r7, #4]
2061:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 934              		.loc 1 2063 0
 935 0008 7B68     		ldr	r3, [r7, #4]
 936 000a 1922     		movs	r2, #25
 937 000c 1340     		ands	r3, r2
 938 000e 7B60     		str	r3, [r7, #4]
2064:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 939              		.loc 1 2064 0
 940 0010 064B     		ldr	r3, .L56
 941 0012 1B68     		ldr	r3, [r3]
 942 0014 1922     		movs	r2, #25
 943 0016 1340     		ands	r3, r2
 944 0018 FB60     		str	r3, [r7, #12]
2065:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 54


 945              		.loc 1 2066 0
 946 001a 044B     		ldr	r3, .L56
 947 001c 7A68     		ldr	r2, [r7, #4]
 948 001e 1A60     		str	r2, [r3]
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 949              		.loc 1 2068 0
 950 0020 FB68     		ldr	r3, [r7, #12]
2069:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2069 0
 952 0022 1800     		movs	r0, r3
 953 0024 BD46     		mov	sp, r7
 954 0026 04B0     		add	sp, sp, #16
 955              		@ sp needed
 956 0028 80BD     		pop	{r7, pc}
 957              	.L57:
 958 002a C046     		.align	2
 959              	.L56:
 960 002c 00030B40 		.word	1074463488
 961              		.cfi_endproc
 962              	.LFE16:
 963              		.size	CySysGetResetReason, .-CySysGetResetReason
 964              		.section	.text.CyDisableInts,"ax",%progbits
 965              		.align	2
 966              		.global	CyDisableInts
 967              		.code	16
 968              		.thumb_func
 969              		.type	CyDisableInts, %function
 970              	CyDisableInts:
 971              	.LFB17:
2070:Generated_Source\PSoC4/CyLib.c **** 
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:Generated_Source\PSoC4/CyLib.c **** *
2076:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:Generated_Source\PSoC4/CyLib.c **** *
2078:Generated_Source\PSoC4/CyLib.c **** * \return
2079:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:Generated_Source\PSoC4/CyLib.c **** *
2081:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:Generated_Source\PSoC4/CyLib.c **** {
 972              		.loc 1 2083 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 8
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976 0000 80B5     		push	{r7, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 82B0     		sub	sp, sp, #8
 981              		.cfi_def_cfa_offset 16
 982 0004 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
2084:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 55


2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 984              		.loc 1 2087 0
 985 0006 064B     		ldr	r3, .L60
 986 0008 1B68     		ldr	r3, [r3]
 987 000a 7B60     		str	r3, [r7, #4]
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 988              		.loc 1 2090 0
 989 000c 044B     		ldr	r3, .L60
 990 000e 0122     		movs	r2, #1
 991 0010 5242     		rsbs	r2, r2, #0
 992 0012 1A60     		str	r2, [r3]
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 993              		.loc 1 2092 0
 994 0014 7B68     		ldr	r3, [r7, #4]
2093:Generated_Source\PSoC4/CyLib.c **** }
 995              		.loc 1 2093 0
 996 0016 1800     		movs	r0, r3
 997 0018 BD46     		mov	sp, r7
 998 001a 02B0     		add	sp, sp, #8
 999              		@ sp needed
 1000 001c 80BD     		pop	{r7, pc}
 1001              	.L61:
 1002 001e C046     		.align	2
 1003              	.L60:
 1004 0020 80E100E0 		.word	-536813184
 1005              		.cfi_endproc
 1006              	.LFE17:
 1007              		.size	CyDisableInts, .-CyDisableInts
 1008              		.section	.text.CyEnableInts,"ax",%progbits
 1009              		.align	2
 1010              		.global	CyEnableInts
 1011              		.code	16
 1012              		.thumb_func
 1013              		.type	CyEnableInts, %function
 1014              	CyEnableInts:
 1015              	.LFB18:
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c **** 
2096:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:Generated_Source\PSoC4/CyLib.c **** *
2100:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:Generated_Source\PSoC4/CyLib.c **** *
2102:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:Generated_Source\PSoC4/CyLib.c **** *
2104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:Generated_Source\PSoC4/CyLib.c **** {
 1016              		.loc 1 2106 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 56


 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020 0000 80B5     		push	{r7, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 82B0     		sub	sp, sp, #8
 1025              		.cfi_def_cfa_offset 16
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 1028 0006 7860     		str	r0, [r7, #4]
2107:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1029              		.loc 1 2107 0
 1030 0008 034B     		ldr	r3, .L63
 1031 000a 7A68     		ldr	r2, [r7, #4]
 1032 000c 1A60     		str	r2, [r3]
2108:Generated_Source\PSoC4/CyLib.c **** }
 1033              		.loc 1 2108 0
 1034 000e C046     		nop
 1035 0010 BD46     		mov	sp, r7
 1036 0012 02B0     		add	sp, sp, #8
 1037              		@ sp needed
 1038 0014 80BD     		pop	{r7, pc}
 1039              	.L64:
 1040 0016 C046     		.align	2
 1041              	.L63:
 1042 0018 00E100E0 		.word	-536813312
 1043              		.cfi_endproc
 1044              	.LFE18:
 1045              		.size	CyEnableInts, .-CyEnableInts
 1046              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1047              		.align	2
 1048              		.global	CyIntSetSysVector
 1049              		.code	16
 1050              		.thumb_func
 1051              		.type	CyIntSetSysVector, %function
 1052              	CyIntSetSysVector:
 1053              	.LFB19:
2109:Generated_Source\PSoC4/CyLib.c **** 
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:Generated_Source\PSoC4/CyLib.c **** *
2115:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:Generated_Source\PSoC4/CyLib.c **** *
2118:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:Generated_Source\PSoC4/CyLib.c **** *
2125:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:Generated_Source\PSoC4/CyLib.c **** *
2127:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 57


2129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:Generated_Source\PSoC4/CyLib.c **** {
 1054              		.loc 1 2131 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 16
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 84B0     		sub	sp, sp, #16
 1063              		.cfi_def_cfa_offset 24
 1064 0004 00AF     		add	r7, sp, #0
 1065              		.cfi_def_cfa_register 7
 1066 0006 0200     		movs	r2, r0
 1067 0008 3960     		str	r1, [r7]
 1068 000a FB1D     		adds	r3, r7, #7
 1069 000c 1A70     		strb	r2, [r3]
2132:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1070              		.loc 1 2133 0
 1071 000e 8023     		movs	r3, #128
 1072 0010 9B05     		lsls	r3, r3, #22
 1073 0012 FB60     		str	r3, [r7, #12]
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1074              		.loc 1 2135 0
 1075 0014 FB1D     		adds	r3, r7, #7
 1076 0016 1B78     		ldrb	r3, [r3]
 1077 0018 0F2B     		cmp	r3, #15
 1078 001a 02D9     		bls	.L66
 1079              		.loc 1 2135 0 is_stmt 0 discriminator 1
 1080 001c 0020     		movs	r0, #0
 1081 001e FFF7FEFF 		bl	CyHalt
 1082              	.L66:
2136:Generated_Source\PSoC4/CyLib.c **** 
2137:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1083              		.loc 1 2138 0 is_stmt 1
 1084 0022 FB1D     		adds	r3, r7, #7
 1085 0024 1B78     		ldrb	r3, [r3]
 1086 0026 9B00     		lsls	r3, r3, #2
 1087 0028 FA68     		ldr	r2, [r7, #12]
 1088 002a D318     		adds	r3, r2, r3
 1089 002c 1B68     		ldr	r3, [r3]
 1090 002e BB60     		str	r3, [r7, #8]
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1091              		.loc 1 2141 0
 1092 0030 FB1D     		adds	r3, r7, #7
 1093 0032 1B78     		ldrb	r3, [r3]
 1094 0034 9B00     		lsls	r3, r3, #2
 1095 0036 FA68     		ldr	r2, [r7, #12]
 1096 0038 D318     		adds	r3, r2, r3
 1097 003a 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 58


 1098 003c 1A60     		str	r2, [r3]
2142:Generated_Source\PSoC4/CyLib.c **** 
2143:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1099              		.loc 1 2143 0
 1100 003e BB68     		ldr	r3, [r7, #8]
2144:Generated_Source\PSoC4/CyLib.c **** }
 1101              		.loc 1 2144 0
 1102 0040 1800     		movs	r0, r3
 1103 0042 BD46     		mov	sp, r7
 1104 0044 04B0     		add	sp, sp, #16
 1105              		@ sp needed
 1106 0046 80BD     		pop	{r7, pc}
 1107              		.cfi_endproc
 1108              	.LFE19:
 1109              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1110              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1111              		.align	2
 1112              		.global	CyIntGetSysVector
 1113              		.code	16
 1114              		.thumb_func
 1115              		.type	CyIntGetSysVector, %function
 1116              	CyIntGetSysVector:
 1117              	.LFB20:
2145:Generated_Source\PSoC4/CyLib.c **** 
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:Generated_Source\PSoC4/CyLib.c **** *
2151:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:Generated_Source\PSoC4/CyLib.c **** *
2154:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:Generated_Source\PSoC4/CyLib.c **** *
2161:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:Generated_Source\PSoC4/CyLib.c **** *
2163:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:Generated_Source\PSoC4/CyLib.c **** {
 1118              		.loc 1 2165 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 16
 1121              		@ frame_needed = 1, uses_anonymous_args = 0
 1122 0000 80B5     		push	{r7, lr}
 1123              		.cfi_def_cfa_offset 8
 1124              		.cfi_offset 7, -8
 1125              		.cfi_offset 14, -4
 1126 0002 84B0     		sub	sp, sp, #16
 1127              		.cfi_def_cfa_offset 24
 1128 0004 00AF     		add	r7, sp, #0
 1129              		.cfi_def_cfa_register 7
 1130 0006 0200     		movs	r2, r0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 59


 1131 0008 FB1D     		adds	r3, r7, #7
 1132 000a 1A70     		strb	r2, [r3]
2166:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1133              		.loc 1 2166 0
 1134 000c 8023     		movs	r3, #128
 1135 000e 9B05     		lsls	r3, r3, #22
 1136 0010 FB60     		str	r3, [r7, #12]
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1137              		.loc 1 2168 0
 1138 0012 FB1D     		adds	r3, r7, #7
 1139 0014 1B78     		ldrb	r3, [r3]
 1140 0016 0F2B     		cmp	r3, #15
 1141 0018 02D9     		bls	.L69
 1142              		.loc 1 2168 0 is_stmt 0 discriminator 1
 1143 001a 0020     		movs	r0, #0
 1144 001c FFF7FEFF 		bl	CyHalt
 1145              	.L69:
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1146              		.loc 1 2170 0 is_stmt 1
 1147 0020 FB1D     		adds	r3, r7, #7
 1148 0022 1B78     		ldrb	r3, [r3]
 1149 0024 9B00     		lsls	r3, r3, #2
 1150 0026 FA68     		ldr	r2, [r7, #12]
 1151 0028 D318     		adds	r3, r2, r3
 1152 002a 1B68     		ldr	r3, [r3]
2171:Generated_Source\PSoC4/CyLib.c **** }
 1153              		.loc 1 2171 0
 1154 002c 1800     		movs	r0, r3
 1155 002e BD46     		mov	sp, r7
 1156 0030 04B0     		add	sp, sp, #16
 1157              		@ sp needed
 1158 0032 80BD     		pop	{r7, pc}
 1159              		.cfi_endproc
 1160              	.LFE20:
 1161              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1162              		.section	.text.CyIntSetVector,"ax",%progbits
 1163              		.align	2
 1164              		.global	CyIntSetVector
 1165              		.code	16
 1166              		.thumb_func
 1167              		.type	CyIntSetVector, %function
 1168              	CyIntSetVector:
 1169              	.LFB21:
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c **** 
2174:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:Generated_Source\PSoC4/CyLib.c **** *
2178:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:Generated_Source\PSoC4/CyLib.c **** *
2180:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:Generated_Source\PSoC4/CyLib.c **** *
2183:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 60


2184:Generated_Source\PSoC4/CyLib.c **** *
2185:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:Generated_Source\PSoC4/CyLib.c **** {
 1170              		.loc 1 2187 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 16
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174 0000 80B5     		push	{r7, lr}
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 84B0     		sub	sp, sp, #16
 1179              		.cfi_def_cfa_offset 24
 1180 0004 00AF     		add	r7, sp, #0
 1181              		.cfi_def_cfa_register 7
 1182 0006 0200     		movs	r2, r0
 1183 0008 3960     		str	r1, [r7]
 1184 000a FB1D     		adds	r3, r7, #7
 1185 000c 1A70     		strb	r2, [r3]
2188:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1186              		.loc 1 2189 0
 1187 000e 8023     		movs	r3, #128
 1188 0010 9B05     		lsls	r3, r3, #22
 1189 0012 FB60     		str	r3, [r7, #12]
2190:Generated_Source\PSoC4/CyLib.c **** 
2191:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1190              		.loc 1 2191 0
 1191 0014 FB1D     		adds	r3, r7, #7
 1192 0016 1B78     		ldrb	r3, [r3]
 1193 0018 1F2B     		cmp	r3, #31
 1194 001a 02D9     		bls	.L72
 1195              		.loc 1 2191 0 is_stmt 0 discriminator 1
 1196 001c 0020     		movs	r0, #0
 1197 001e FFF7FEFF 		bl	CyHalt
 1198              	.L72:
2192:Generated_Source\PSoC4/CyLib.c **** 
2193:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1199              		.loc 1 2194 0 is_stmt 1
 1200 0022 FB1D     		adds	r3, r7, #7
 1201 0024 1B78     		ldrb	r3, [r3]
 1202 0026 1033     		adds	r3, r3, #16
 1203 0028 9B00     		lsls	r3, r3, #2
 1204 002a FA68     		ldr	r2, [r7, #12]
 1205 002c D318     		adds	r3, r2, r3
 1206 002e 1B68     		ldr	r3, [r3]
 1207 0030 BB60     		str	r3, [r7, #8]
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1208              		.loc 1 2197 0
 1209 0032 FB1D     		adds	r3, r7, #7
 1210 0034 1B78     		ldrb	r3, [r3]
 1211 0036 1033     		adds	r3, r3, #16
 1212 0038 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 61


 1213 003a FA68     		ldr	r2, [r7, #12]
 1214 003c D318     		adds	r3, r2, r3
 1215 003e 3A68     		ldr	r2, [r7]
 1216 0040 1A60     		str	r2, [r3]
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1217              		.loc 1 2199 0
 1218 0042 BB68     		ldr	r3, [r7, #8]
2200:Generated_Source\PSoC4/CyLib.c **** }
 1219              		.loc 1 2200 0
 1220 0044 1800     		movs	r0, r3
 1221 0046 BD46     		mov	sp, r7
 1222 0048 04B0     		add	sp, sp, #16
 1223              		@ sp needed
 1224 004a 80BD     		pop	{r7, pc}
 1225              		.cfi_endproc
 1226              	.LFE21:
 1227              		.size	CyIntSetVector, .-CyIntSetVector
 1228              		.section	.text.CyIntGetVector,"ax",%progbits
 1229              		.align	2
 1230              		.global	CyIntGetVector
 1231              		.code	16
 1232              		.thumb_func
 1233              		.type	CyIntGetVector, %function
 1234              	CyIntGetVector:
 1235              	.LFB22:
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c **** 
2203:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:Generated_Source\PSoC4/CyLib.c **** *
2209:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:Generated_Source\PSoC4/CyLib.c **** *
2211:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:Generated_Source\PSoC4/CyLib.c **** *
2213:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:Generated_Source\PSoC4/CyLib.c **** {
 1236              		.loc 1 2215 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 16
 1239              		@ frame_needed = 1, uses_anonymous_args = 0
 1240 0000 80B5     		push	{r7, lr}
 1241              		.cfi_def_cfa_offset 8
 1242              		.cfi_offset 7, -8
 1243              		.cfi_offset 14, -4
 1244 0002 84B0     		sub	sp, sp, #16
 1245              		.cfi_def_cfa_offset 24
 1246 0004 00AF     		add	r7, sp, #0
 1247              		.cfi_def_cfa_register 7
 1248 0006 0200     		movs	r2, r0
 1249 0008 FB1D     		adds	r3, r7, #7
 1250 000a 1A70     		strb	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 62


 1251              		.loc 1 2216 0
 1252 000c 8023     		movs	r3, #128
 1253 000e 9B05     		lsls	r3, r3, #22
 1254 0010 FB60     		str	r3, [r7, #12]
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1255              		.loc 1 2218 0
 1256 0012 FB1D     		adds	r3, r7, #7
 1257 0014 1B78     		ldrb	r3, [r3]
 1258 0016 1F2B     		cmp	r3, #31
 1259 0018 02D9     		bls	.L75
 1260              		.loc 1 2218 0 is_stmt 0 discriminator 1
 1261 001a 0020     		movs	r0, #0
 1262 001c FFF7FEFF 		bl	CyHalt
 1263              	.L75:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1264              		.loc 1 2220 0 is_stmt 1
 1265 0020 FB1D     		adds	r3, r7, #7
 1266 0022 1B78     		ldrb	r3, [r3]
 1267 0024 1033     		adds	r3, r3, #16
 1268 0026 9B00     		lsls	r3, r3, #2
 1269 0028 FA68     		ldr	r2, [r7, #12]
 1270 002a D318     		adds	r3, r2, r3
 1271 002c 1B68     		ldr	r3, [r3]
2221:Generated_Source\PSoC4/CyLib.c **** }
 1272              		.loc 1 2221 0
 1273 002e 1800     		movs	r0, r3
 1274 0030 BD46     		mov	sp, r7
 1275 0032 04B0     		add	sp, sp, #16
 1276              		@ sp needed
 1277 0034 80BD     		pop	{r7, pc}
 1278              		.cfi_endproc
 1279              	.LFE22:
 1280              		.size	CyIntGetVector, .-CyIntGetVector
 1281 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1282              		.align	2
 1283              		.global	CyIntSetPriority
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	CyIntSetPriority, %function
 1287              	CyIntSetPriority:
 1288              	.LFB23:
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:Generated_Source\PSoC4/CyLib.c **** *
2229:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:Generated_Source\PSoC4/CyLib.c **** *
2232:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:Generated_Source\PSoC4/CyLib.c **** {
 1289              		.loc 1 2234 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 63


 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 24
 1292              		@ frame_needed = 1, uses_anonymous_args = 0
 1293 0000 90B5     		push	{r4, r7, lr}
 1294              		.cfi_def_cfa_offset 12
 1295              		.cfi_offset 4, -12
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0002 87B0     		sub	sp, sp, #28
 1299              		.cfi_def_cfa_offset 40
 1300 0004 00AF     		add	r7, sp, #0
 1301              		.cfi_def_cfa_register 7
 1302 0006 0200     		movs	r2, r0
 1303 0008 FB1D     		adds	r3, r7, #7
 1304 000a 1A70     		strb	r2, [r3]
 1305 000c BB1D     		adds	r3, r7, #6
 1306 000e 0A1C     		adds	r2, r1, #0
 1307 0010 1A70     		strb	r2, [r3]
2235:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:Generated_Source\PSoC4/CyLib.c **** 
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1308              		.loc 1 2239 0
 1309 0012 BB1D     		adds	r3, r7, #6
 1310 0014 1B78     		ldrb	r3, [r3]
 1311 0016 032B     		cmp	r3, #3
 1312 0018 02D9     		bls	.L78
 1313              		.loc 1 2239 0 is_stmt 0 discriminator 1
 1314 001a 0020     		movs	r0, #0
 1315 001c FFF7FEFF 		bl	CyHalt
 1316              	.L78:
2240:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1317              		.loc 1 2240 0 is_stmt 1
 1318 0020 FB1D     		adds	r3, r7, #7
 1319 0022 1B78     		ldrb	r3, [r3]
 1320 0024 1F2B     		cmp	r3, #31
 1321 0026 02D9     		bls	.L79
 1322              		.loc 1 2240 0 is_stmt 0 discriminator 1
 1323 0028 0020     		movs	r0, #0
 1324 002a FFF7FEFF 		bl	CyHalt
 1325              	.L79:
2241:Generated_Source\PSoC4/CyLib.c **** 
2242:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1326              		.loc 1 2242 0 is_stmt 1
 1327 002e FB1D     		adds	r3, r7, #7
 1328 0030 1B78     		ldrb	r3, [r3]
 1329 0032 0322     		movs	r2, #3
 1330 0034 1340     		ands	r3, r2
 1331 0036 DB00     		lsls	r3, r3, #3
 1332 0038 0633     		adds	r3, r3, #6
 1333 003a 7B61     		str	r3, [r7, #20]
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1334              		.loc 1 2244 0
 1335 003c 1323     		movs	r3, #19
 1336 003e FC18     		adds	r4, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 64


 1337 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1338 0044 0300     		movs	r3, r0
 1339 0046 2370     		strb	r3, [r4]
2245:Generated_Source\PSoC4/CyLib.c **** 
2246:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1340              		.loc 1 2246 0
 1341 0048 FB1D     		adds	r3, r7, #7
 1342 004a 1B78     		ldrb	r3, [r3]
 1343 004c 9B08     		lsrs	r3, r3, #2
 1344 004e DBB2     		uxtb	r3, r3
 1345 0050 9B00     		lsls	r3, r3, #2
 1346 0052 144A     		ldr	r2, .L80
 1347 0054 9446     		mov	ip, r2
 1348 0056 6344     		add	r3, r3, ip
 1349 0058 1B68     		ldr	r3, [r3]
 1350 005a FB60     		str	r3, [r7, #12]
2247:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1351              		.loc 1 2247 0
 1352 005c 0322     		movs	r2, #3
 1353 005e 7B69     		ldr	r3, [r7, #20]
 1354 0060 9A40     		lsls	r2, r2, r3
 1355 0062 1300     		movs	r3, r2
 1356 0064 DA43     		mvns	r2, r3
 1357 0066 FB68     		ldr	r3, [r7, #12]
 1358 0068 1340     		ands	r3, r2
 1359 006a FB60     		str	r3, [r7, #12]
2248:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1360              		.loc 1 2248 0
 1361 006c BB1D     		adds	r3, r7, #6
 1362 006e 1A78     		ldrb	r2, [r3]
 1363 0070 7B69     		ldr	r3, [r7, #20]
 1364 0072 9A40     		lsls	r2, r2, r3
 1365 0074 1300     		movs	r3, r2
 1366 0076 FA68     		ldr	r2, [r7, #12]
 1367 0078 1343     		orrs	r3, r2
 1368 007a FB60     		str	r3, [r7, #12]
2249:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1369              		.loc 1 2249 0
 1370 007c FB1D     		adds	r3, r7, #7
 1371 007e 1B78     		ldrb	r3, [r3]
 1372 0080 9B08     		lsrs	r3, r3, #2
 1373 0082 DBB2     		uxtb	r3, r3
 1374 0084 9B00     		lsls	r3, r3, #2
 1375 0086 074A     		ldr	r2, .L80
 1376 0088 9446     		mov	ip, r2
 1377 008a 6344     		add	r3, r3, ip
 1378 008c FA68     		ldr	r2, [r7, #12]
 1379 008e 1A60     		str	r2, [r3]
2250:Generated_Source\PSoC4/CyLib.c **** 
2251:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1380              		.loc 1 2251 0
 1381 0090 1323     		movs	r3, #19
 1382 0092 FB18     		adds	r3, r7, r3
 1383 0094 1B78     		ldrb	r3, [r3]
 1384 0096 1800     		movs	r0, r3
 1385 0098 FFF7FEFF 		bl	CyExitCriticalSection
2252:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 65


 1386              		.loc 1 2252 0
 1387 009c C046     		nop
 1388 009e BD46     		mov	sp, r7
 1389 00a0 07B0     		add	sp, sp, #28
 1390              		@ sp needed
 1391 00a2 90BD     		pop	{r4, r7, pc}
 1392              	.L81:
 1393              		.align	2
 1394              	.L80:
 1395 00a4 00E400E0 		.word	-536812544
 1396              		.cfi_endproc
 1397              	.LFE23:
 1398              		.size	CyIntSetPriority, .-CyIntSetPriority
 1399              		.section	.text.CyIntGetPriority,"ax",%progbits
 1400              		.align	2
 1401              		.global	CyIntGetPriority
 1402              		.code	16
 1403              		.thumb_func
 1404              		.type	CyIntGetPriority, %function
 1405              	CyIntGetPriority:
 1406              	.LFB24:
2253:Generated_Source\PSoC4/CyLib.c **** 
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:Generated_Source\PSoC4/CyLib.c **** *
2259:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:Generated_Source\PSoC4/CyLib.c **** *
2261:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:Generated_Source\PSoC4/CyLib.c **** *
2263:Generated_Source\PSoC4/CyLib.c **** * \return
2264:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:Generated_Source\PSoC4/CyLib.c **** *
2266:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:Generated_Source\PSoC4/CyLib.c **** {
 1407              		.loc 1 2268 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 16
 1410              		@ frame_needed = 1, uses_anonymous_args = 0
 1411 0000 80B5     		push	{r7, lr}
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 7, -8
 1414              		.cfi_offset 14, -4
 1415 0002 84B0     		sub	sp, sp, #16
 1416              		.cfi_def_cfa_offset 24
 1417 0004 00AF     		add	r7, sp, #0
 1418              		.cfi_def_cfa_register 7
 1419 0006 0200     		movs	r2, r0
 1420 0008 FB1D     		adds	r3, r7, #7
 1421 000a 1A70     		strb	r2, [r3]
2269:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1422              		.loc 1 2271 0
 1423 000c FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 66


 1424 000e 1B78     		ldrb	r3, [r3]
 1425 0010 1F2B     		cmp	r3, #31
 1426 0012 02D9     		bls	.L83
 1427              		.loc 1 2271 0 is_stmt 0 discriminator 1
 1428 0014 0020     		movs	r0, #0
 1429 0016 FFF7FEFF 		bl	CyHalt
 1430              	.L83:
2272:Generated_Source\PSoC4/CyLib.c **** 
2273:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1431              		.loc 1 2273 0 is_stmt 1
 1432 001a FB1D     		adds	r3, r7, #7
 1433 001c 1B78     		ldrb	r3, [r3]
 1434 001e 9B08     		lsrs	r3, r3, #2
 1435 0020 DBB2     		uxtb	r3, r3
 1436 0022 9B00     		lsls	r3, r3, #2
 1437 0024 0B4A     		ldr	r2, .L85
 1438 0026 9446     		mov	ip, r2
 1439 0028 6344     		add	r3, r3, ip
 1440 002a 1A68     		ldr	r2, [r3]
 1441 002c FB1D     		adds	r3, r7, #7
 1442 002e 1B78     		ldrb	r3, [r3]
 1443 0030 0321     		movs	r1, #3
 1444 0032 0B40     		ands	r3, r1
 1445 0034 DB00     		lsls	r3, r3, #3
 1446 0036 0633     		adds	r3, r3, #6
 1447 0038 DA40     		lsrs	r2, r2, r3
 1448 003a 0F23     		movs	r3, #15
 1449 003c FB18     		adds	r3, r7, r3
 1450 003e 1A70     		strb	r2, [r3]
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1451              		.loc 1 2275 0
 1452 0040 0F23     		movs	r3, #15
 1453 0042 FB18     		adds	r3, r7, r3
 1454 0044 1B78     		ldrb	r3, [r3]
 1455 0046 0322     		movs	r2, #3
 1456 0048 1340     		ands	r3, r2
 1457 004a DBB2     		uxtb	r3, r3
2276:Generated_Source\PSoC4/CyLib.c **** }
 1458              		.loc 1 2276 0
 1459 004c 1800     		movs	r0, r3
 1460 004e BD46     		mov	sp, r7
 1461 0050 04B0     		add	sp, sp, #16
 1462              		@ sp needed
 1463 0052 80BD     		pop	{r7, pc}
 1464              	.L86:
 1465              		.align	2
 1466              	.L85:
 1467 0054 00E400E0 		.word	-536812544
 1468              		.cfi_endproc
 1469              	.LFE24:
 1470              		.size	CyIntGetPriority, .-CyIntGetPriority
 1471              		.section	.text.CyIntEnable,"ax",%progbits
 1472              		.align	2
 1473              		.global	CyIntEnable
 1474              		.code	16
 1475              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 67


 1476              		.type	CyIntEnable, %function
 1477              	CyIntEnable:
 1478              	.LFB25:
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c **** *
2283:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:Generated_Source\PSoC4/CyLib.c **** *
2285:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:Generated_Source\PSoC4/CyLib.c **** *
2287:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:Generated_Source\PSoC4/CyLib.c **** {
 1479              		.loc 1 2289 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 8
 1482              		@ frame_needed = 1, uses_anonymous_args = 0
 1483 0000 80B5     		push	{r7, lr}
 1484              		.cfi_def_cfa_offset 8
 1485              		.cfi_offset 7, -8
 1486              		.cfi_offset 14, -4
 1487 0002 82B0     		sub	sp, sp, #8
 1488              		.cfi_def_cfa_offset 16
 1489 0004 00AF     		add	r7, sp, #0
 1490              		.cfi_def_cfa_register 7
 1491 0006 0200     		movs	r2, r0
 1492 0008 FB1D     		adds	r3, r7, #7
 1493 000a 1A70     		strb	r2, [r3]
2290:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1494              		.loc 1 2290 0
 1495 000c 064B     		ldr	r3, .L88
 1496 000e FA1D     		adds	r2, r7, #7
 1497 0010 1278     		ldrb	r2, [r2]
 1498 0012 1F21     		movs	r1, #31
 1499 0014 0A40     		ands	r2, r1
 1500 0016 0121     		movs	r1, #1
 1501 0018 9140     		lsls	r1, r1, r2
 1502 001a 0A00     		movs	r2, r1
 1503 001c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** }
 1504              		.loc 1 2291 0
 1505 001e C046     		nop
 1506 0020 BD46     		mov	sp, r7
 1507 0022 02B0     		add	sp, sp, #8
 1508              		@ sp needed
 1509 0024 80BD     		pop	{r7, pc}
 1510              	.L89:
 1511 0026 C046     		.align	2
 1512              	.L88:
 1513 0028 00E100E0 		.word	-536813312
 1514              		.cfi_endproc
 1515              	.LFE25:
 1516              		.size	CyIntEnable, .-CyIntEnable
 1517              		.section	.text.CyIntGetState,"ax",%progbits
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 68


 1518              		.align	2
 1519              		.global	CyIntGetState
 1520              		.code	16
 1521              		.thumb_func
 1522              		.type	CyIntGetState, %function
 1523              	CyIntGetState:
 1524              	.LFB26:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c **** *
2298:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:Generated_Source\PSoC4/CyLib.c **** *
2302:Generated_Source\PSoC4/CyLib.c **** * \return
2303:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:Generated_Source\PSoC4/CyLib.c **** *
2305:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:Generated_Source\PSoC4/CyLib.c **** {
 1525              		.loc 1 2307 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 8
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529 0000 80B5     		push	{r7, lr}
 1530              		.cfi_def_cfa_offset 8
 1531              		.cfi_offset 7, -8
 1532              		.cfi_offset 14, -4
 1533 0002 82B0     		sub	sp, sp, #8
 1534              		.cfi_def_cfa_offset 16
 1535 0004 00AF     		add	r7, sp, #0
 1536              		.cfi_def_cfa_register 7
 1537 0006 0200     		movs	r2, r0
 1538 0008 FB1D     		adds	r3, r7, #7
 1539 000a 1A70     		strb	r2, [r3]
2308:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1540              		.loc 1 2309 0
 1541 000c 074B     		ldr	r3, .L92
 1542 000e 1A68     		ldr	r2, [r3]
 1543 0010 FB1D     		adds	r3, r7, #7
 1544 0012 1B78     		ldrb	r3, [r3]
 1545 0014 1F21     		movs	r1, #31
 1546 0016 0B40     		ands	r3, r1
 1547 0018 DA40     		lsrs	r2, r2, r3
 1548 001a 1300     		movs	r3, r2
 1549 001c DBB2     		uxtb	r3, r3
 1550 001e 0122     		movs	r2, #1
 1551 0020 1340     		ands	r3, r2
 1552 0022 DBB2     		uxtb	r3, r3
2310:Generated_Source\PSoC4/CyLib.c **** }
 1553              		.loc 1 2310 0
 1554 0024 1800     		movs	r0, r3
 1555 0026 BD46     		mov	sp, r7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 69


 1556 0028 02B0     		add	sp, sp, #8
 1557              		@ sp needed
 1558 002a 80BD     		pop	{r7, pc}
 1559              	.L93:
 1560              		.align	2
 1561              	.L92:
 1562 002c 00E100E0 		.word	-536813312
 1563              		.cfi_endproc
 1564              	.LFE26:
 1565              		.size	CyIntGetState, .-CyIntGetState
 1566              		.section	.text.CyIntDisable,"ax",%progbits
 1567              		.align	2
 1568              		.global	CyIntDisable
 1569              		.code	16
 1570              		.thumb_func
 1571              		.type	CyIntDisable, %function
 1572              	CyIntDisable:
 1573              	.LFB27:
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c **** *
2317:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:Generated_Source\PSoC4/CyLib.c **** *
2319:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:Generated_Source\PSoC4/CyLib.c **** {
 1574              		.loc 1 2323 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 8
 1577              		@ frame_needed = 1, uses_anonymous_args = 0
 1578 0000 80B5     		push	{r7, lr}
 1579              		.cfi_def_cfa_offset 8
 1580              		.cfi_offset 7, -8
 1581              		.cfi_offset 14, -4
 1582 0002 82B0     		sub	sp, sp, #8
 1583              		.cfi_def_cfa_offset 16
 1584 0004 00AF     		add	r7, sp, #0
 1585              		.cfi_def_cfa_register 7
 1586 0006 0200     		movs	r2, r0
 1587 0008 FB1D     		adds	r3, r7, #7
 1588 000a 1A70     		strb	r2, [r3]
2324:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1589              		.loc 1 2324 0
 1590 000c 064B     		ldr	r3, .L95
 1591 000e FA1D     		adds	r2, r7, #7
 1592 0010 1278     		ldrb	r2, [r2]
 1593 0012 1F21     		movs	r1, #31
 1594 0014 0A40     		ands	r2, r1
 1595 0016 0121     		movs	r1, #1
 1596 0018 9140     		lsls	r1, r1, r2
 1597 001a 0A00     		movs	r2, r1
 1598 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 70


2325:Generated_Source\PSoC4/CyLib.c **** }
 1599              		.loc 1 2325 0
 1600 001e C046     		nop
 1601 0020 BD46     		mov	sp, r7
 1602 0022 02B0     		add	sp, sp, #8
 1603              		@ sp needed
 1604 0024 80BD     		pop	{r7, pc}
 1605              	.L96:
 1606 0026 C046     		.align	2
 1607              	.L95:
 1608 0028 80E100E0 		.word	-536813184
 1609              		.cfi_endproc
 1610              	.LFE27:
 1611              		.size	CyIntDisable, .-CyIntDisable
 1612              		.section	.text.CyIntSetPending,"ax",%progbits
 1613              		.align	2
 1614              		.global	CyIntSetPending
 1615              		.code	16
 1616              		.thumb_func
 1617              		.type	CyIntSetPending, %function
 1618              	CyIntSetPending:
 1619              	.LFB28:
2326:Generated_Source\PSoC4/CyLib.c **** 
2327:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:Generated_Source\PSoC4/CyLib.c **** *
2331:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:Generated_Source\PSoC4/CyLib.c **** *
2333:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:Generated_Source\PSoC4/CyLib.c **** *
2335:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:Generated_Source\PSoC4/CyLib.c **** {
 1620              		.loc 1 2337 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 8
 1623              		@ frame_needed = 1, uses_anonymous_args = 0
 1624 0000 80B5     		push	{r7, lr}
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 7, -8
 1627              		.cfi_offset 14, -4
 1628 0002 82B0     		sub	sp, sp, #8
 1629              		.cfi_def_cfa_offset 16
 1630 0004 00AF     		add	r7, sp, #0
 1631              		.cfi_def_cfa_register 7
 1632 0006 0200     		movs	r2, r0
 1633 0008 FB1D     		adds	r3, r7, #7
 1634 000a 1A70     		strb	r2, [r3]
2338:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1635              		.loc 1 2338 0
 1636 000c 064B     		ldr	r3, .L98
 1637 000e FA1D     		adds	r2, r7, #7
 1638 0010 1278     		ldrb	r2, [r2]
 1639 0012 1F21     		movs	r1, #31
 1640 0014 0A40     		ands	r2, r1
 1641 0016 0121     		movs	r1, #1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 71


 1642 0018 9140     		lsls	r1, r1, r2
 1643 001a 0A00     		movs	r2, r1
 1644 001c 1A60     		str	r2, [r3]
2339:Generated_Source\PSoC4/CyLib.c **** }
 1645              		.loc 1 2339 0
 1646 001e C046     		nop
 1647 0020 BD46     		mov	sp, r7
 1648 0022 02B0     		add	sp, sp, #8
 1649              		@ sp needed
 1650 0024 80BD     		pop	{r7, pc}
 1651              	.L99:
 1652 0026 C046     		.align	2
 1653              	.L98:
 1654 0028 00E200E0 		.word	-536813056
 1655              		.cfi_endproc
 1656              	.LFE28:
 1657              		.size	CyIntSetPending, .-CyIntSetPending
 1658              		.section	.text.CyIntClearPending,"ax",%progbits
 1659              		.align	2
 1660              		.global	CyIntClearPending
 1661              		.code	16
 1662              		.thumb_func
 1663              		.type	CyIntClearPending, %function
 1664              	CyIntClearPending:
 1665              	.LFB29:
2340:Generated_Source\PSoC4/CyLib.c **** 
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:Generated_Source\PSoC4/CyLib.c **** *
2346:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:Generated_Source\PSoC4/CyLib.c **** *
2348:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:Generated_Source\PSoC4/CyLib.c **** *
2350:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:Generated_Source\PSoC4/CyLib.c **** {
 1666              		.loc 1 2352 0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 8
 1669              		@ frame_needed = 1, uses_anonymous_args = 0
 1670 0000 80B5     		push	{r7, lr}
 1671              		.cfi_def_cfa_offset 8
 1672              		.cfi_offset 7, -8
 1673              		.cfi_offset 14, -4
 1674 0002 82B0     		sub	sp, sp, #8
 1675              		.cfi_def_cfa_offset 16
 1676 0004 00AF     		add	r7, sp, #0
 1677              		.cfi_def_cfa_register 7
 1678 0006 0200     		movs	r2, r0
 1679 0008 FB1D     		adds	r3, r7, #7
 1680 000a 1A70     		strb	r2, [r3]
2353:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1681              		.loc 1 2353 0
 1682 000c 064B     		ldr	r3, .L101
 1683 000e FA1D     		adds	r2, r7, #7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 72


 1684 0010 1278     		ldrb	r2, [r2]
 1685 0012 1F21     		movs	r1, #31
 1686 0014 0A40     		ands	r2, r1
 1687 0016 0121     		movs	r1, #1
 1688 0018 9140     		lsls	r1, r1, r2
 1689 001a 0A00     		movs	r2, r1
 1690 001c 1A60     		str	r2, [r3]
2354:Generated_Source\PSoC4/CyLib.c **** }
 1691              		.loc 1 2354 0
 1692 001e C046     		nop
 1693 0020 BD46     		mov	sp, r7
 1694 0022 02B0     		add	sp, sp, #8
 1695              		@ sp needed
 1696 0024 80BD     		pop	{r7, pc}
 1697              	.L102:
 1698 0026 C046     		.align	2
 1699              	.L101:
 1700 0028 80E200E0 		.word	-536812928
 1701              		.cfi_endproc
 1702              	.LFE29:
 1703              		.size	CyIntClearPending, .-CyIntClearPending
 1704              		.section	.text.CyHalt,"ax",%progbits
 1705              		.align	2
 1706              		.global	CyHalt
 1707              		.code	16
 1708              		.thumb_func
 1709              		.type	CyHalt, %function
 1710              	CyHalt:
 1711              	.LFB30:
2355:Generated_Source\PSoC4/CyLib.c **** 
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:Generated_Source\PSoC4/CyLib.c **** *
2361:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:Generated_Source\PSoC4/CyLib.c **** *
2363:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:Generated_Source\PSoC4/CyLib.c **** *
2365:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:Generated_Source\PSoC4/CyLib.c **** {
 1712              		.loc 1 2367 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 8
 1715              		@ frame_needed = 1, uses_anonymous_args = 0
 1716 0000 80B5     		push	{r7, lr}
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 7, -8
 1719              		.cfi_offset 14, -4
 1720 0002 82B0     		sub	sp, sp, #8
 1721              		.cfi_def_cfa_offset 16
 1722 0004 00AF     		add	r7, sp, #0
 1723              		.cfi_def_cfa_register 7
 1724 0006 0200     		movs	r2, r0
 1725 0008 FB1D     		adds	r3, r7, #7
 1726 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 73


2368:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:Generated_Source\PSoC4/CyLib.c ****     {
2370:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:Generated_Source\PSoC4/CyLib.c ****     }
2372:Generated_Source\PSoC4/CyLib.c **** 
2373:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1727              		.loc 1 2376 0
 1728              		.syntax divided
 1729              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1730 000c 01BE     		    bkpt    1
 1731              	@ 0 "" 2
2377:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:Generated_Source\PSoC4/CyLib.c **** }
 1732              		.loc 1 2380 0
 1733              		.thumb
 1734              		.syntax unified
 1735 000e C046     		nop
 1736 0010 BD46     		mov	sp, r7
 1737 0012 02B0     		add	sp, sp, #8
 1738              		@ sp needed
 1739 0014 80BD     		pop	{r7, pc}
 1740              		.cfi_endproc
 1741              	.LFE30:
 1742              		.size	CyHalt, .-CyHalt
 1743 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1744              		.align	2
 1745              		.global	CySoftwareReset
 1746              		.code	16
 1747              		.thumb_func
 1748              		.type	CySoftwareReset, %function
 1749              	CySoftwareReset:
 1750              	.LFB31:
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLib.c **** *
2387:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:Generated_Source\PSoC4/CyLib.c **** {
 1751              		.loc 1 2391 0
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 0
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755 0000 80B5     		push	{r7, lr}
 1756              		.cfi_def_cfa_offset 8
 1757              		.cfi_offset 7, -8
 1758              		.cfi_offset 14, -4
 1759 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 74


 1760              		.cfi_def_cfa_register 7
2392:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1761              		.loc 1 2396 0
 1762 0004 054B     		ldr	r3, .L105
 1763 0006 054A     		ldr	r2, .L105
 1764 0008 1268     		ldr	r2, [r2]
 1765 000a 1204     		lsls	r2, r2, #16
 1766 000c 120C     		lsrs	r2, r2, #16
2397:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1767              		.loc 1 2397 0
 1768 000e 0449     		ldr	r1, .L105+4
 1769 0010 0A43     		orrs	r2, r1
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1770              		.loc 1 2396 0
 1771 0012 1A60     		str	r2, [r3]
2398:Generated_Source\PSoC4/CyLib.c **** }
 1772              		.loc 1 2398 0
 1773 0014 C046     		nop
 1774 0016 BD46     		mov	sp, r7
 1775              		@ sp needed
 1776 0018 80BD     		pop	{r7, pc}
 1777              	.L106:
 1778 001a C046     		.align	2
 1779              	.L105:
 1780 001c 0CED00E0 		.word	-536810228
 1781 0020 0400FA05 		.word	100270084
 1782              		.cfi_endproc
 1783              	.LFE31:
 1784              		.size	CySoftwareReset, .-CySoftwareReset
 1785              		.section	.text.CyDelay,"ax",%progbits
 1786              		.align	2
 1787              		.global	CyDelay
 1788              		.code	16
 1789              		.thumb_func
 1790              		.type	CyDelay, %function
 1791              	CyDelay:
 1792              	.LFB32:
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c **** 
2401:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:Generated_Source\PSoC4/CyLib.c **** *
2407:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:Generated_Source\PSoC4/CyLib.c **** *
2409:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:Generated_Source\PSoC4/CyLib.c **** {
 1793              		.loc 1 2411 0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 75


 1796              		@ frame_needed = 1, uses_anonymous_args = 0
 1797 0000 80B5     		push	{r7, lr}
 1798              		.cfi_def_cfa_offset 8
 1799              		.cfi_offset 7, -8
 1800              		.cfi_offset 14, -4
 1801 0002 82B0     		sub	sp, sp, #8
 1802              		.cfi_def_cfa_offset 16
 1803 0004 00AF     		add	r7, sp, #0
 1804              		.cfi_def_cfa_register 7
 1805 0006 7860     		str	r0, [r7, #4]
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1806              		.loc 1 2412 0
 1807 0008 09E0     		b	.L108
 1808              	.L109:
2413:Generated_Source\PSoC4/CyLib.c ****     {
2414:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:Generated_Source\PSoC4/CyLib.c ****          */
2417:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1809              		.loc 1 2417 0
 1810 000a 0D4B     		ldr	r3, .L110
 1811 000c 1B68     		ldr	r3, [r3]
 1812 000e 1800     		movs	r0, r3
 1813 0010 FFF7FEFF 		bl	CyDelayCycles
2418:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1814              		.loc 1 2418 0
 1815 0014 7B68     		ldr	r3, [r7, #4]
 1816 0016 0B4A     		ldr	r2, .L110+4
 1817 0018 9446     		mov	ip, r2
 1818 001a 6344     		add	r3, r3, ip
 1819 001c 7B60     		str	r3, [r7, #4]
 1820              	.L108:
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1821              		.loc 1 2412 0
 1822 001e 7A68     		ldr	r2, [r7, #4]
 1823 0020 8023     		movs	r3, #128
 1824 0022 1B02     		lsls	r3, r3, #8
 1825 0024 9A42     		cmp	r2, r3
 1826 0026 F0D8     		bhi	.L109
2419:Generated_Source\PSoC4/CyLib.c ****     }
2420:Generated_Source\PSoC4/CyLib.c **** 
2421:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1827              		.loc 1 2421 0
 1828 0028 074B     		ldr	r3, .L110+8
 1829 002a 1B68     		ldr	r3, [r3]
 1830 002c 7A68     		ldr	r2, [r7, #4]
 1831 002e 5343     		muls	r3, r2
 1832 0030 1800     		movs	r0, r3
 1833 0032 FFF7FEFF 		bl	CyDelayCycles
2422:Generated_Source\PSoC4/CyLib.c **** }
 1834              		.loc 1 2422 0
 1835 0036 C046     		nop
 1836 0038 BD46     		mov	sp, r7
 1837 003a 02B0     		add	sp, sp, #8
 1838              		@ sp needed
 1839 003c 80BD     		pop	{r7, pc}
 1840              	.L111:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 76


 1841 003e C046     		.align	2
 1842              	.L110:
 1843 0040 00000000 		.word	cydelay32kMs
 1844 0044 0080FFFF 		.word	-32768
 1845 0048 00000000 		.word	cydelayFreqKhz
 1846              		.cfi_endproc
 1847              	.LFE32:
 1848              		.size	CyDelay, .-CyDelay
 1849              		.section	.text.CyDelayUs,"ax",%progbits
 1850              		.align	2
 1851              		.global	CyDelayUs
 1852              		.code	16
 1853              		.thumb_func
 1854              		.type	CyDelayUs, %function
 1855              	CyDelayUs:
 1856              	.LFB33:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c **** 
2425:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:Generated_Source\PSoC4/CyLib.c **** *
2430:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:Generated_Source\PSoC4/CyLib.c **** {
 1857              		.loc 1 2434 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 8
 1860              		@ frame_needed = 1, uses_anonymous_args = 0
 1861 0000 80B5     		push	{r7, lr}
 1862              		.cfi_def_cfa_offset 8
 1863              		.cfi_offset 7, -8
 1864              		.cfi_offset 14, -4
 1865 0002 82B0     		sub	sp, sp, #8
 1866              		.cfi_def_cfa_offset 16
 1867 0004 00AF     		add	r7, sp, #0
 1868              		.cfi_def_cfa_register 7
 1869 0006 0200     		movs	r2, r0
 1870 0008 BB1D     		adds	r3, r7, #6
 1871 000a 1A80     		strh	r2, [r3]
2435:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1872              		.loc 1 2435 0
 1873 000c BB1D     		adds	r3, r7, #6
 1874 000e 1B88     		ldrh	r3, [r3]
 1875 0010 044A     		ldr	r2, .L113
 1876 0012 1278     		ldrb	r2, [r2]
 1877 0014 5343     		muls	r3, r2
 1878 0016 1800     		movs	r0, r3
 1879 0018 FFF7FEFF 		bl	CyDelayCycles
2436:Generated_Source\PSoC4/CyLib.c **** }
 1880              		.loc 1 2436 0
 1881 001c C046     		nop
 1882 001e BD46     		mov	sp, r7
 1883 0020 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 77


 1884              		@ sp needed
 1885 0022 80BD     		pop	{r7, pc}
 1886              	.L114:
 1887              		.align	2
 1888              	.L113:
 1889 0024 00000000 		.word	cydelayFreqMhz
 1890              		.cfi_endproc
 1891              	.LFE33:
 1892              		.size	CyDelayUs, .-CyDelayUs
 1893              		.global	__aeabi_uidiv
 1894              		.section	.text.CyDelayFreq,"ax",%progbits
 1895              		.align	2
 1896              		.global	CyDelayFreq
 1897              		.code	16
 1898              		.thumb_func
 1899              		.type	CyDelayFreq, %function
 1900              	CyDelayFreq:
 1901              	.LFB34:
2437:Generated_Source\PSoC4/CyLib.c **** 
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:Generated_Source\PSoC4/CyLib.c **** *
2444:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:Generated_Source\PSoC4/CyLib.c **** *
2446:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:Generated_Source\PSoC4/CyLib.c **** {
 1902              		.loc 1 2448 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 8
 1905              		@ frame_needed = 1, uses_anonymous_args = 0
 1906 0000 80B5     		push	{r7, lr}
 1907              		.cfi_def_cfa_offset 8
 1908              		.cfi_offset 7, -8
 1909              		.cfi_offset 14, -4
 1910 0002 82B0     		sub	sp, sp, #8
 1911              		.cfi_def_cfa_offset 16
 1912 0004 00AF     		add	r7, sp, #0
 1913              		.cfi_def_cfa_register 7
 1914 0006 7860     		str	r0, [r7, #4]
2449:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1915              		.loc 1 2449 0
 1916 0008 7B68     		ldr	r3, [r7, #4]
 1917 000a 002B     		cmp	r3, #0
 1918 000c 03D0     		beq	.L116
2450:Generated_Source\PSoC4/CyLib.c ****     {
2451:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1919              		.loc 1 2451 0
 1920 000e 154B     		ldr	r3, .L118
 1921 0010 7A68     		ldr	r2, [r7, #4]
 1922 0012 1A60     		str	r2, [r3]
 1923 0014 02E0     		b	.L117
 1924              	.L116:
2452:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 78


2453:Generated_Source\PSoC4/CyLib.c ****     else
2454:Generated_Source\PSoC4/CyLib.c ****     {
2455:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1925              		.loc 1 2455 0
 1926 0016 134B     		ldr	r3, .L118
 1927 0018 134A     		ldr	r2, .L118+4
 1928 001a 1A60     		str	r2, [r3]
 1929              	.L117:
2456:Generated_Source\PSoC4/CyLib.c ****     }
2457:Generated_Source\PSoC4/CyLib.c **** 
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1930              		.loc 1 2458 0
 1931 001c 114B     		ldr	r3, .L118
 1932 001e 1B68     		ldr	r3, [r3]
 1933 0020 124A     		ldr	r2, .L118+8
 1934 0022 9446     		mov	ip, r2
 1935 0024 6344     		add	r3, r3, ip
 1936 0026 1249     		ldr	r1, .L118+12
 1937 0028 1800     		movs	r0, r3
 1938 002a FFF7FEFF 		bl	__aeabi_uidiv
 1939 002e 0300     		movs	r3, r0
 1940 0030 DAB2     		uxtb	r2, r3
 1941 0032 104B     		ldr	r3, .L118+16
 1942 0034 1A70     		strb	r2, [r3]
2459:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1943              		.loc 1 2459 0
 1944 0036 0B4B     		ldr	r3, .L118
 1945 0038 1B68     		ldr	r3, [r3]
 1946 003a 0F4A     		ldr	r2, .L118+20
 1947 003c 9A18     		adds	r2, r3, r2
 1948 003e FA23     		movs	r3, #250
 1949 0040 9900     		lsls	r1, r3, #2
 1950 0042 1000     		movs	r0, r2
 1951 0044 FFF7FEFF 		bl	__aeabi_uidiv
 1952 0048 0300     		movs	r3, r0
 1953 004a 1A00     		movs	r2, r3
 1954 004c 0B4B     		ldr	r3, .L118+24
 1955 004e 1A60     		str	r2, [r3]
2460:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1956              		.loc 1 2460 0
 1957 0050 0A4B     		ldr	r3, .L118+24
 1958 0052 1B68     		ldr	r3, [r3]
 1959 0054 DA03     		lsls	r2, r3, #15
 1960 0056 0A4B     		ldr	r3, .L118+28
 1961 0058 1A60     		str	r2, [r3]
2461:Generated_Source\PSoC4/CyLib.c **** }
 1962              		.loc 1 2461 0
 1963 005a C046     		nop
 1964 005c BD46     		mov	sp, r7
 1965 005e 02B0     		add	sp, sp, #8
 1966              		@ sp needed
 1967 0060 80BD     		pop	{r7, pc}
 1968              	.L119:
 1969 0062 C046     		.align	2
 1970              	.L118:
 1971 0064 00000000 		.word	cydelayFreqHz
 1972 0068 006CDC02 		.word	48000000
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 79


 1973 006c 3F420F00 		.word	999999
 1974 0070 40420F00 		.word	1000000
 1975 0074 00000000 		.word	cydelayFreqMhz
 1976 0078 E7030000 		.word	999
 1977 007c 00000000 		.word	cydelayFreqKhz
 1978 0080 00000000 		.word	cydelay32kMs
 1979              		.cfi_endproc
 1980              	.LFE34:
 1981              		.size	CyDelayFreq, .-CyDelayFreq
 1982              		.section	.text.CySysTickStart,"ax",%progbits
 1983              		.align	2
 1984              		.global	CySysTickStart
 1985              		.code	16
 1986              		.thumb_func
 1987              		.type	CySysTickStart, %function
 1988              	CySysTickStart:
 1989              	.LFB35:
2462:Generated_Source\PSoC4/CyLib.c **** 
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:Generated_Source\PSoC4/CyLib.c **** *
2471:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:Generated_Source\PSoC4/CyLib.c **** {
 1990              		.loc 1 2480 0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 0
 1993              		@ frame_needed = 1, uses_anonymous_args = 0
 1994 0000 80B5     		push	{r7, lr}
 1995              		.cfi_def_cfa_offset 8
 1996              		.cfi_offset 7, -8
 1997              		.cfi_offset 14, -4
 1998 0002 00AF     		add	r7, sp, #0
 1999              		.cfi_def_cfa_register 7
2481:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2000              		.loc 1 2481 0
 2001 0004 064B     		ldr	r3, .L122
 2002 0006 1B68     		ldr	r3, [r3]
 2003 0008 002B     		cmp	r3, #0
 2004 000a 04D1     		bne	.L121
2482:Generated_Source\PSoC4/CyLib.c ****     {
2483:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2005              		.loc 1 2483 0
 2006 000c FFF7FEFF 		bl	CySysTickInit
2484:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 80


 2007              		.loc 1 2484 0
 2008 0010 034B     		ldr	r3, .L122
 2009 0012 0122     		movs	r2, #1
 2010 0014 1A60     		str	r2, [r3]
 2011              	.L121:
2485:Generated_Source\PSoC4/CyLib.c ****     }
2486:Generated_Source\PSoC4/CyLib.c **** 
2487:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2012              		.loc 1 2487 0
 2013 0016 FFF7FEFF 		bl	CySysTickEnable
2488:Generated_Source\PSoC4/CyLib.c **** }
 2014              		.loc 1 2488 0
 2015 001a C046     		nop
 2016 001c BD46     		mov	sp, r7
 2017              		@ sp needed
 2018 001e 80BD     		pop	{r7, pc}
 2019              	.L123:
 2020              		.align	2
 2021              	.L122:
 2022 0020 00000000 		.word	CySysTickInitVar
 2023              		.cfi_endproc
 2024              	.LFE35:
 2025              		.size	CySysTickStart, .-CySysTickStart
 2026              		.section	.text.CySysTickInit,"ax",%progbits
 2027              		.align	2
 2028              		.global	CySysTickInit
 2029              		.code	16
 2030              		.thumb_func
 2031              		.type	CySysTickInit, %function
 2032              	CySysTickInit:
 2033              	.LFB36:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:Generated_Source\PSoC4/CyLib.c **** *
2507:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:Generated_Source\PSoC4/CyLib.c **** {
 2034              		.loc 1 2509 0
 2035              		.cfi_startproc
 2036              		@ args = 0, pretend = 0, frame = 8
 2037              		@ frame_needed = 1, uses_anonymous_args = 0
 2038 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 81


 2039              		.cfi_def_cfa_offset 8
 2040              		.cfi_offset 7, -8
 2041              		.cfi_offset 14, -4
 2042 0002 82B0     		sub	sp, sp, #8
 2043              		.cfi_def_cfa_offset 16
 2044 0004 00AF     		add	r7, sp, #0
 2045              		.cfi_def_cfa_register 7
2510:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:Generated_Source\PSoC4/CyLib.c **** 
2512:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2046              		.loc 1 2512 0
 2047 0006 0023     		movs	r3, #0
 2048 0008 7B60     		str	r3, [r7, #4]
 2049 000a 07E0     		b	.L125
 2050              	.L126:
2513:Generated_Source\PSoC4/CyLib.c ****     {
2514:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2051              		.loc 1 2514 0 discriminator 3
 2052 000c 134B     		ldr	r3, .L127
 2053 000e 7A68     		ldr	r2, [r7, #4]
 2054 0010 9200     		lsls	r2, r2, #2
 2055 0012 0021     		movs	r1, #0
 2056 0014 D150     		str	r1, [r2, r3]
2512:Generated_Source\PSoC4/CyLib.c ****     {
 2057              		.loc 1 2512 0 discriminator 3
 2058 0016 7B68     		ldr	r3, [r7, #4]
 2059 0018 0133     		adds	r3, r3, #1
 2060 001a 7B60     		str	r3, [r7, #4]
 2061              	.L125:
2512:Generated_Source\PSoC4/CyLib.c ****     {
 2062              		.loc 1 2512 0 is_stmt 0 discriminator 1
 2063 001c 7B68     		ldr	r3, [r7, #4]
 2064 001e 042B     		cmp	r3, #4
 2065 0020 F4D9     		bls	.L126
2515:Generated_Source\PSoC4/CyLib.c ****     }
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2066              		.loc 1 2517 0 is_stmt 1
 2067 0022 0F4B     		ldr	r3, .L127+4
 2068 0024 1900     		movs	r1, r3
 2069 0026 0F20     		movs	r0, #15
 2070 0028 FFF7FEFF 		bl	CyIntSetSysVector
2518:Generated_Source\PSoC4/CyLib.c **** 
2519:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2071              		.loc 1 2520 0
 2072 002c 0120     		movs	r0, #1
 2073 002e FFF7FEFF 		bl	CySysTickSetClockSource
2521:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:Generated_Source\PSoC4/CyLib.c **** 
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2074              		.loc 1 2523 0
 2075 0032 0C4B     		ldr	r3, .L127+8
 2076 0034 1A68     		ldr	r2, [r3]
 2077 0036 FA23     		movs	r3, #250
 2078 0038 9900     		lsls	r1, r3, #2
 2079 003a 1000     		movs	r0, r2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 82


 2080 003c FFF7FEFF 		bl	__aeabi_uidiv
 2081 0040 0300     		movs	r3, r0
 2082 0042 1800     		movs	r0, r3
 2083 0044 FFF7FEFF 		bl	CySysTickSetReload
2524:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2084              		.loc 1 2524 0
 2085 0048 FFF7FEFF 		bl	CySysTickClear
2525:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2086              		.loc 1 2525 0
 2087 004c 0F20     		movs	r0, #15
 2088 004e FFF7FEFF 		bl	CyIntEnable
2526:Generated_Source\PSoC4/CyLib.c **** }
 2089              		.loc 1 2526 0
 2090 0052 C046     		nop
 2091 0054 BD46     		mov	sp, r7
 2092 0056 02B0     		add	sp, sp, #8
 2093              		@ sp needed
 2094 0058 80BD     		pop	{r7, pc}
 2095              	.L128:
 2096 005a C046     		.align	2
 2097              	.L127:
 2098 005c 00000000 		.word	CySysTickCallbacks
 2099 0060 00000000 		.word	CySysTickServiceCallbacks
 2100 0064 00000000 		.word	cydelayFreqHz
 2101              		.cfi_endproc
 2102              	.LFE36:
 2103              		.size	CySysTickInit, .-CySysTickInit
 2104              		.section	.text.CySysTickEnable,"ax",%progbits
 2105              		.align	2
 2106              		.global	CySysTickEnable
 2107              		.code	16
 2108              		.thumb_func
 2109              		.type	CySysTickEnable, %function
 2110              	CySysTickEnable:
 2111              	.LFB37:
2527:Generated_Source\PSoC4/CyLib.c **** 
2528:Generated_Source\PSoC4/CyLib.c **** 
2529:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:Generated_Source\PSoC4/CyLib.c **** *
2533:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:Generated_Source\PSoC4/CyLib.c **** *
2535:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 2112              		.loc 1 2540 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 1, uses_anonymous_args = 0
 2116 0000 80B5     		push	{r7, lr}
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 7, -8
 2119              		.cfi_offset 14, -4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 83


 2120 0002 00AF     		add	r7, sp, #0
 2121              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2122              		.loc 1 2541 0
 2123 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2542:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2124              		.loc 1 2542 0
 2125 0008 044B     		ldr	r3, .L130
 2126 000a 044A     		ldr	r2, .L130
 2127 000c 1268     		ldr	r2, [r2]
 2128 000e 0121     		movs	r1, #1
 2129 0010 0A43     		orrs	r2, r1
 2130 0012 1A60     		str	r2, [r3]
2543:Generated_Source\PSoC4/CyLib.c **** }
 2131              		.loc 1 2543 0
 2132 0014 C046     		nop
 2133 0016 BD46     		mov	sp, r7
 2134              		@ sp needed
 2135 0018 80BD     		pop	{r7, pc}
 2136              	.L131:
 2137 001a C046     		.align	2
 2138              	.L130:
 2139 001c 10E000E0 		.word	-536813552
 2140              		.cfi_endproc
 2141              	.LFE37:
 2142              		.size	CySysTickEnable, .-CySysTickEnable
 2143              		.section	.text.CySysTickStop,"ax",%progbits
 2144              		.align	2
 2145              		.global	CySysTickStop
 2146              		.code	16
 2147              		.thumb_func
 2148              		.type	CySysTickStop, %function
 2149              	CySysTickStop:
 2150              	.LFB38:
2544:Generated_Source\PSoC4/CyLib.c **** 
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CyLib.c **** *
2550:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:Generated_Source\PSoC4/CyLib.c **** *
2552:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:Generated_Source\PSoC4/CyLib.c **** *
2555:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:Generated_Source\PSoC4/CyLib.c **** {
 2151              		.loc 1 2557 0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 0
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155 0000 80B5     		push	{r7, lr}
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 7, -8
 2158              		.cfi_offset 14, -4
 2159 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 84


 2160              		.cfi_def_cfa_register 7
2558:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2161              		.loc 1 2558 0
 2162 0004 044B     		ldr	r3, .L133
 2163 0006 044A     		ldr	r2, .L133
 2164 0008 1268     		ldr	r2, [r2]
 2165 000a 0121     		movs	r1, #1
 2166 000c 8A43     		bics	r2, r1
 2167 000e 1A60     		str	r2, [r3]
2559:Generated_Source\PSoC4/CyLib.c **** }
 2168              		.loc 1 2559 0
 2169 0010 C046     		nop
 2170 0012 BD46     		mov	sp, r7
 2171              		@ sp needed
 2172 0014 80BD     		pop	{r7, pc}
 2173              	.L134:
 2174 0016 C046     		.align	2
 2175              	.L133:
 2176 0018 10E000E0 		.word	-536813552
 2177              		.cfi_endproc
 2178              	.LFE38:
 2179              		.size	CySysTickStop, .-CySysTickStop
 2180              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2181              		.align	2
 2182              		.global	CySysTickEnableInterrupt
 2183              		.code	16
 2184              		.thumb_func
 2185              		.type	CySysTickEnableInterrupt, %function
 2186              	CySysTickEnableInterrupt:
 2187              	.LFB39:
2560:Generated_Source\PSoC4/CyLib.c **** 
2561:Generated_Source\PSoC4/CyLib.c **** 
2562:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:Generated_Source\PSoC4/CyLib.c **** *
2566:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:Generated_Source\PSoC4/CyLib.c **** *
2568:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:Generated_Source\PSoC4/CyLib.c **** {
 2188              		.loc 1 2573 0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 1, uses_anonymous_args = 0
 2192 0000 80B5     		push	{r7, lr}
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 2196 0002 00AF     		add	r7, sp, #0
 2197              		.cfi_def_cfa_register 7
2574:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2198              		.loc 1 2574 0
 2199 0004 044B     		ldr	r3, .L136
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 85


 2200 0006 044A     		ldr	r2, .L136
 2201 0008 1268     		ldr	r2, [r2]
 2202 000a 0221     		movs	r1, #2
 2203 000c 0A43     		orrs	r2, r1
 2204 000e 1A60     		str	r2, [r3]
2575:Generated_Source\PSoC4/CyLib.c **** }
 2205              		.loc 1 2575 0
 2206 0010 C046     		nop
 2207 0012 BD46     		mov	sp, r7
 2208              		@ sp needed
 2209 0014 80BD     		pop	{r7, pc}
 2210              	.L137:
 2211 0016 C046     		.align	2
 2212              	.L136:
 2213 0018 10E000E0 		.word	-536813552
 2214              		.cfi_endproc
 2215              	.LFE39:
 2216              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2217              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2218              		.align	2
 2219              		.global	CySysTickDisableInterrupt
 2220              		.code	16
 2221              		.thumb_func
 2222              		.type	CySysTickDisableInterrupt, %function
 2223              	CySysTickDisableInterrupt:
 2224              	.LFB40:
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** 
2578:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:Generated_Source\PSoC4/CyLib.c **** *
2587:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:Generated_Source\PSoC4/CyLib.c **** {
 2225              		.loc 1 2589 0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 0
 2228              		@ frame_needed = 1, uses_anonymous_args = 0
 2229 0000 80B5     		push	{r7, lr}
 2230              		.cfi_def_cfa_offset 8
 2231              		.cfi_offset 7, -8
 2232              		.cfi_offset 14, -4
 2233 0002 00AF     		add	r7, sp, #0
 2234              		.cfi_def_cfa_register 7
2590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2235              		.loc 1 2590 0
 2236 0004 044B     		ldr	r3, .L139
 2237 0006 044A     		ldr	r2, .L139
 2238 0008 1268     		ldr	r2, [r2]
 2239 000a 0221     		movs	r1, #2
 2240 000c 8A43     		bics	r2, r1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 86


 2241 000e 1A60     		str	r2, [r3]
2591:Generated_Source\PSoC4/CyLib.c **** }
 2242              		.loc 1 2591 0
 2243 0010 C046     		nop
 2244 0012 BD46     		mov	sp, r7
 2245              		@ sp needed
 2246 0014 80BD     		pop	{r7, pc}
 2247              	.L140:
 2248 0016 C046     		.align	2
 2249              	.L139:
 2250 0018 10E000E0 		.word	-536813552
 2251              		.cfi_endproc
 2252              	.LFE40:
 2253              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2254              		.section	.text.CySysTickSetReload,"ax",%progbits
 2255              		.align	2
 2256              		.global	CySysTickSetReload
 2257              		.code	16
 2258              		.thumb_func
 2259              		.type	CySysTickSetReload, %function
 2260              	CySysTickSetReload:
 2261              	.LFB41:
2592:Generated_Source\PSoC4/CyLib.c **** 
2593:Generated_Source\PSoC4/CyLib.c **** 
2594:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:Generated_Source\PSoC4/CyLib.c **** *
2598:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:Generated_Source\PSoC4/CyLib.c **** {
 2262              		.loc 1 2606 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 8
 2265              		@ frame_needed = 1, uses_anonymous_args = 0
 2266 0000 80B5     		push	{r7, lr}
 2267              		.cfi_def_cfa_offset 8
 2268              		.cfi_offset 7, -8
 2269              		.cfi_offset 14, -4
 2270 0002 82B0     		sub	sp, sp, #8
 2271              		.cfi_def_cfa_offset 16
 2272 0004 00AF     		add	r7, sp, #0
 2273              		.cfi_def_cfa_register 7
 2274 0006 7860     		str	r0, [r7, #4]
2607:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2275              		.loc 1 2607 0
 2276 0008 044B     		ldr	r3, .L142
 2277 000a 7A68     		ldr	r2, [r7, #4]
 2278 000c 1202     		lsls	r2, r2, #8
 2279 000e 120A     		lsrs	r2, r2, #8
 2280 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 87


2608:Generated_Source\PSoC4/CyLib.c **** }
 2281              		.loc 1 2608 0
 2282 0012 C046     		nop
 2283 0014 BD46     		mov	sp, r7
 2284 0016 02B0     		add	sp, sp, #8
 2285              		@ sp needed
 2286 0018 80BD     		pop	{r7, pc}
 2287              	.L143:
 2288 001a C046     		.align	2
 2289              	.L142:
 2290 001c 14E000E0 		.word	-536813548
 2291              		.cfi_endproc
 2292              	.LFE41:
 2293              		.size	CySysTickSetReload, .-CySysTickSetReload
 2294              		.section	.text.CySysTickGetReload,"ax",%progbits
 2295              		.align	2
 2296              		.global	CySysTickGetReload
 2297              		.code	16
 2298              		.thumb_func
 2299              		.type	CySysTickGetReload, %function
 2300              	CySysTickGetReload:
 2301              	.LFB42:
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** 
2611:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:Generated_Source\PSoC4/CyLib.c **** *
2615:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** * \return
2618:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:Generated_Source\PSoC4/CyLib.c **** {
 2302              		.loc 1 2622 0
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 0
 2305              		@ frame_needed = 1, uses_anonymous_args = 0
 2306 0000 80B5     		push	{r7, lr}
 2307              		.cfi_def_cfa_offset 8
 2308              		.cfi_offset 7, -8
 2309              		.cfi_offset 14, -4
 2310 0002 00AF     		add	r7, sp, #0
 2311              		.cfi_def_cfa_register 7
2623:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2312              		.loc 1 2623 0
 2313 0004 034B     		ldr	r3, .L146
 2314 0006 1B68     		ldr	r3, [r3]
 2315 0008 1B02     		lsls	r3, r3, #8
 2316 000a 1B0A     		lsrs	r3, r3, #8
2624:Generated_Source\PSoC4/CyLib.c **** }
 2317              		.loc 1 2624 0
 2318 000c 1800     		movs	r0, r3
 2319 000e BD46     		mov	sp, r7
 2320              		@ sp needed
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 88


 2321 0010 80BD     		pop	{r7, pc}
 2322              	.L147:
 2323 0012 C046     		.align	2
 2324              	.L146:
 2325 0014 14E000E0 		.word	-536813548
 2326              		.cfi_endproc
 2327              	.LFE42:
 2328              		.size	CySysTickGetReload, .-CySysTickGetReload
 2329              		.section	.text.CySysTickGetValue,"ax",%progbits
 2330              		.align	2
 2331              		.global	CySysTickGetValue
 2332              		.code	16
 2333              		.thumb_func
 2334              		.type	CySysTickGetValue, %function
 2335              	CySysTickGetValue:
 2336              	.LFB43:
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:Generated_Source\PSoC4/CyLib.c **** *
2631:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:Generated_Source\PSoC4/CyLib.c **** *
2633:Generated_Source\PSoC4/CyLib.c **** * \return
2634:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:Generated_Source\PSoC4/CyLib.c **** {
 2337              		.loc 1 2638 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 1, uses_anonymous_args = 0
 2341 0000 80B5     		push	{r7, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 7, -8
 2344              		.cfi_offset 14, -4
 2345 0002 00AF     		add	r7, sp, #0
 2346              		.cfi_def_cfa_register 7
2639:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2347              		.loc 1 2639 0
 2348 0004 034B     		ldr	r3, .L150
 2349 0006 1B68     		ldr	r3, [r3]
 2350 0008 1B02     		lsls	r3, r3, #8
 2351 000a 1B0A     		lsrs	r3, r3, #8
2640:Generated_Source\PSoC4/CyLib.c **** }
 2352              		.loc 1 2640 0
 2353 000c 1800     		movs	r0, r3
 2354 000e BD46     		mov	sp, r7
 2355              		@ sp needed
 2356 0010 80BD     		pop	{r7, pc}
 2357              	.L151:
 2358 0012 C046     		.align	2
 2359              	.L150:
 2360 0014 18E000E0 		.word	-536813544
 2361              		.cfi_endproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 89


 2362              	.LFE43:
 2363              		.size	CySysTickGetValue, .-CySysTickGetValue
 2364              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2365              		.align	2
 2366              		.global	CySysTickSetClockSource
 2367              		.code	16
 2368              		.thumb_func
 2369              		.type	CySysTickSetClockSource, %function
 2370              	CySysTickSetClockSource:
 2371              	.LFB44:
2641:Generated_Source\PSoC4/CyLib.c **** 
2642:Generated_Source\PSoC4/CyLib.c **** 
2643:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:Generated_Source\PSoC4/CyLib.c ****     *
2648:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:Generated_Source\PSoC4/CyLib.c ****     *
2650:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:Generated_Source\PSoC4/CyLib.c ****     *
2659:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:Generated_Source\PSoC4/CyLib.c ****     *
2662:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:Generated_Source\PSoC4/CyLib.c ****     {
 2372              		.loc 1 2670 0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 8
 2375              		@ frame_needed = 1, uses_anonymous_args = 0
 2376 0000 80B5     		push	{r7, lr}
 2377              		.cfi_def_cfa_offset 8
 2378              		.cfi_offset 7, -8
 2379              		.cfi_offset 14, -4
 2380 0002 82B0     		sub	sp, sp, #8
 2381              		.cfi_def_cfa_offset 16
 2382 0004 00AF     		add	r7, sp, #0
 2383              		.cfi_def_cfa_register 7
 2384 0006 7860     		str	r0, [r7, #4]
2671:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2385              		.loc 1 2671 0
 2386 0008 7B68     		ldr	r3, [r7, #4]
 2387 000a 012B     		cmp	r3, #1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 90


 2388 000c 06D1     		bne	.L153
2672:Generated_Source\PSoC4/CyLib.c ****         {
2673:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2389              		.loc 1 2673 0
 2390 000e 084B     		ldr	r3, .L156
 2391 0010 074A     		ldr	r2, .L156
 2392 0012 1268     		ldr	r2, [r2]
 2393 0014 0421     		movs	r1, #4
 2394 0016 0A43     		orrs	r2, r1
 2395 0018 1A60     		str	r2, [r3]
2674:Generated_Source\PSoC4/CyLib.c ****         }
2675:Generated_Source\PSoC4/CyLib.c ****         else
2676:Generated_Source\PSoC4/CyLib.c ****         {
2677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2678:Generated_Source\PSoC4/CyLib.c ****         }
2679:Generated_Source\PSoC4/CyLib.c ****     }
 2396              		.loc 1 2679 0
 2397 001a 05E0     		b	.L155
 2398              	.L153:
2677:Generated_Source\PSoC4/CyLib.c ****         }
 2399              		.loc 1 2677 0
 2400 001c 044B     		ldr	r3, .L156
 2401 001e 044A     		ldr	r2, .L156
 2402 0020 1268     		ldr	r2, [r2]
 2403 0022 0421     		movs	r1, #4
 2404 0024 8A43     		bics	r2, r1
 2405 0026 1A60     		str	r2, [r3]
 2406              	.L155:
 2407              		.loc 1 2679 0
 2408 0028 C046     		nop
 2409 002a BD46     		mov	sp, r7
 2410 002c 02B0     		add	sp, sp, #8
 2411              		@ sp needed
 2412 002e 80BD     		pop	{r7, pc}
 2413              	.L157:
 2414              		.align	2
 2415              	.L156:
 2416 0030 10E000E0 		.word	-536813552
 2417              		.cfi_endproc
 2418              	.LFE44:
 2419              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2420              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2421              		.align	2
 2422              		.global	CySysTickGetCountFlag
 2423              		.code	16
 2424              		.thumb_func
 2425              		.type	CySysTickGetCountFlag, %function
 2426              	CySysTickGetCountFlag:
 2427              	.LFB45:
2680:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:Generated_Source\PSoC4/CyLib.c **** 
2682:Generated_Source\PSoC4/CyLib.c **** 
2683:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 91


2688:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:Generated_Source\PSoC4/CyLib.c **** *
2690:Generated_Source\PSoC4/CyLib.c **** * \return
2691:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:Generated_Source\PSoC4/CyLib.c **** *
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:Generated_Source\PSoC4/CyLib.c **** {
 2428              		.loc 1 2699 0
 2429              		.cfi_startproc
 2430              		@ args = 0, pretend = 0, frame = 0
 2431              		@ frame_needed = 1, uses_anonymous_args = 0
 2432 0000 80B5     		push	{r7, lr}
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 7, -8
 2435              		.cfi_offset 14, -4
 2436 0002 00AF     		add	r7, sp, #0
 2437              		.cfi_def_cfa_register 7
2700:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2438              		.loc 1 2700 0
 2439 0004 034B     		ldr	r3, .L160
 2440 0006 1B68     		ldr	r3, [r3]
 2441 0008 1B0C     		lsrs	r3, r3, #16
 2442 000a 0122     		movs	r2, #1
 2443 000c 1340     		ands	r3, r2
2701:Generated_Source\PSoC4/CyLib.c **** }
 2444              		.loc 1 2701 0
 2445 000e 1800     		movs	r0, r3
 2446 0010 BD46     		mov	sp, r7
 2447              		@ sp needed
 2448 0012 80BD     		pop	{r7, pc}
 2449              	.L161:
 2450              		.align	2
 2451              	.L160:
 2452 0014 10E000E0 		.word	-536813552
 2453              		.cfi_endproc
 2454              	.LFE45:
 2455              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2456              		.section	.text.CySysTickClear,"ax",%progbits
 2457              		.align	2
 2458              		.global	CySysTickClear
 2459              		.code	16
 2460              		.thumb_func
 2461              		.type	CySysTickClear, %function
 2462              	CySysTickClear:
 2463              	.LFB46:
2702:Generated_Source\PSoC4/CyLib.c **** 
2703:Generated_Source\PSoC4/CyLib.c **** 
2704:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:Generated_Source\PSoC4/CyLib.c **** *
2708:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 92


2709:Generated_Source\PSoC4/CyLib.c **** *
2710:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:Generated_Source\PSoC4/CyLib.c **** {
 2464              		.loc 1 2712 0
 2465              		.cfi_startproc
 2466              		@ args = 0, pretend = 0, frame = 0
 2467              		@ frame_needed = 1, uses_anonymous_args = 0
 2468 0000 80B5     		push	{r7, lr}
 2469              		.cfi_def_cfa_offset 8
 2470              		.cfi_offset 7, -8
 2471              		.cfi_offset 14, -4
 2472 0002 00AF     		add	r7, sp, #0
 2473              		.cfi_def_cfa_register 7
2713:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2474              		.loc 1 2713 0
 2475 0004 024B     		ldr	r3, .L163
 2476 0006 0022     		movs	r2, #0
 2477 0008 1A60     		str	r2, [r3]
2714:Generated_Source\PSoC4/CyLib.c **** }
 2478              		.loc 1 2714 0
 2479 000a C046     		nop
 2480 000c BD46     		mov	sp, r7
 2481              		@ sp needed
 2482 000e 80BD     		pop	{r7, pc}
 2483              	.L164:
 2484              		.align	2
 2485              	.L163:
 2486 0010 18E000E0 		.word	-536813544
 2487              		.cfi_endproc
 2488              	.LFE46:
 2489              		.size	CySysTickClear, .-CySysTickClear
 2490              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2491              		.align	2
 2492              		.global	CySysTickSetCallback
 2493              		.code	16
 2494              		.thumb_func
 2495              		.type	CySysTickSetCallback, %function
 2496              	CySysTickSetCallback:
 2497              	.LFB47:
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c **** 
2717:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:Generated_Source\PSoC4/CyLib.c **** *
2721:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:Generated_Source\PSoC4/CyLib.c **** *
2725:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 93


2732:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:Generated_Source\PSoC4/CyLib.c **** *
2734:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** * \return
2739:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:Generated_Source\PSoC4/CyLib.c **** *
2745:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:Generated_Source\PSoC4/CyLib.c **** {
 2498              		.loc 1 2747 0
 2499              		.cfi_startproc
 2500              		@ args = 0, pretend = 0, frame = 16
 2501              		@ frame_needed = 1, uses_anonymous_args = 0
 2502 0000 80B5     		push	{r7, lr}
 2503              		.cfi_def_cfa_offset 8
 2504              		.cfi_offset 7, -8
 2505              		.cfi_offset 14, -4
 2506 0002 84B0     		sub	sp, sp, #16
 2507              		.cfi_def_cfa_offset 24
 2508 0004 00AF     		add	r7, sp, #0
 2509              		.cfi_def_cfa_register 7
 2510 0006 7860     		str	r0, [r7, #4]
 2511 0008 3960     		str	r1, [r7]
2748:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2512              		.loc 1 2750 0
 2513 000a 074B     		ldr	r3, .L167
 2514 000c 7A68     		ldr	r2, [r7, #4]
 2515 000e 9200     		lsls	r2, r2, #2
 2516 0010 D358     		ldr	r3, [r2, r3]
 2517 0012 FB60     		str	r3, [r7, #12]
2751:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2518              		.loc 1 2751 0
 2519 0014 044B     		ldr	r3, .L167
 2520 0016 7A68     		ldr	r2, [r7, #4]
 2521 0018 9200     		lsls	r2, r2, #2
 2522 001a 3968     		ldr	r1, [r7]
 2523 001c D150     		str	r1, [r2, r3]
2752:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2524              		.loc 1 2752 0
 2525 001e FB68     		ldr	r3, [r7, #12]
2753:Generated_Source\PSoC4/CyLib.c **** }
 2526              		.loc 1 2753 0
 2527 0020 1800     		movs	r0, r3
 2528 0022 BD46     		mov	sp, r7
 2529 0024 04B0     		add	sp, sp, #16
 2530              		@ sp needed
 2531 0026 80BD     		pop	{r7, pc}
 2532              	.L168:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 94


 2533              		.align	2
 2534              	.L167:
 2535 0028 00000000 		.word	CySysTickCallbacks
 2536              		.cfi_endproc
 2537              	.LFE47:
 2538              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2539              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2540              		.align	2
 2541              		.global	CySysTickGetCallback
 2542              		.code	16
 2543              		.thumb_func
 2544              		.type	CySysTickGetCallback, %function
 2545              	CySysTickGetCallback:
 2546              	.LFB48:
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:Generated_Source\PSoC4/CyLib.c **** *
2760:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:Generated_Source\PSoC4/CyLib.c **** *
2762:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:Generated_Source\PSoC4/CyLib.c **** {
 2547              		.loc 1 2771 0
 2548              		.cfi_startproc
 2549              		@ args = 0, pretend = 0, frame = 8
 2550              		@ frame_needed = 1, uses_anonymous_args = 0
 2551 0000 80B5     		push	{r7, lr}
 2552              		.cfi_def_cfa_offset 8
 2553              		.cfi_offset 7, -8
 2554              		.cfi_offset 14, -4
 2555 0002 82B0     		sub	sp, sp, #8
 2556              		.cfi_def_cfa_offset 16
 2557 0004 00AF     		add	r7, sp, #0
 2558              		.cfi_def_cfa_register 7
 2559 0006 7860     		str	r0, [r7, #4]
2772:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2560              		.loc 1 2772 0
 2561 0008 034B     		ldr	r3, .L171
 2562 000a 7A68     		ldr	r2, [r7, #4]
 2563 000c 9200     		lsls	r2, r2, #2
 2564 000e D358     		ldr	r3, [r2, r3]
2773:Generated_Source\PSoC4/CyLib.c **** }
 2565              		.loc 1 2773 0
 2566 0010 1800     		movs	r0, r3
 2567 0012 BD46     		mov	sp, r7
 2568 0014 02B0     		add	sp, sp, #8
 2569              		@ sp needed
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 95


 2570 0016 80BD     		pop	{r7, pc}
 2571              	.L172:
 2572              		.align	2
 2573              	.L171:
 2574 0018 00000000 		.word	CySysTickCallbacks
 2575              		.cfi_endproc
 2576              	.LFE48:
 2577              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2578              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2579              		.align	2
 2580              		.code	16
 2581              		.thumb_func
 2582              		.type	CySysTickServiceCallbacks, %function
 2583              	CySysTickServiceCallbacks:
 2584              	.LFB49:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:Generated_Source\PSoC4/CyLib.c **** {
 2585              		.loc 1 2784 0
 2586              		.cfi_startproc
 2587              		@ args = 0, pretend = 0, frame = 8
 2588              		@ frame_needed = 1, uses_anonymous_args = 0
 2589 0000 80B5     		push	{r7, lr}
 2590              		.cfi_def_cfa_offset 8
 2591              		.cfi_offset 7, -8
 2592              		.cfi_offset 14, -4
 2593 0002 82B0     		sub	sp, sp, #8
 2594              		.cfi_def_cfa_offset 16
 2595 0004 00AF     		add	r7, sp, #0
 2596              		.cfi_def_cfa_register 7
2785:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2597              		.loc 1 2788 0
 2598 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2599 000a 0300     		movs	r3, r0
 2600 000c 012B     		cmp	r3, #1
 2601 000e 13D1     		bne	.L178
2789:Generated_Source\PSoC4/CyLib.c ****     {
2790:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2602              		.loc 1 2790 0
 2603 0010 0023     		movs	r3, #0
 2604 0012 7B60     		str	r3, [r7, #4]
 2605 0014 0DE0     		b	.L175
 2606              	.L177:
2791:Generated_Source\PSoC4/CyLib.c ****         {
2792:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2607              		.loc 1 2792 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 96


 2608 0016 0A4B     		ldr	r3, .L179
 2609 0018 7A68     		ldr	r2, [r7, #4]
 2610 001a 9200     		lsls	r2, r2, #2
 2611 001c D358     		ldr	r3, [r2, r3]
 2612 001e 002B     		cmp	r3, #0
 2613 0020 04D0     		beq	.L176
2793:Generated_Source\PSoC4/CyLib.c ****             {
2794:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2614              		.loc 1 2794 0
 2615 0022 074B     		ldr	r3, .L179
 2616 0024 7A68     		ldr	r2, [r7, #4]
 2617 0026 9200     		lsls	r2, r2, #2
 2618 0028 D358     		ldr	r3, [r2, r3]
 2619 002a 9847     		blx	r3
 2620              	.L176:
2790:Generated_Source\PSoC4/CyLib.c ****         {
 2621              		.loc 1 2790 0 discriminator 2
 2622 002c 7B68     		ldr	r3, [r7, #4]
 2623 002e 0133     		adds	r3, r3, #1
 2624 0030 7B60     		str	r3, [r7, #4]
 2625              	.L175:
2790:Generated_Source\PSoC4/CyLib.c ****         {
 2626              		.loc 1 2790 0 is_stmt 0 discriminator 1
 2627 0032 7B68     		ldr	r3, [r7, #4]
 2628 0034 042B     		cmp	r3, #4
 2629 0036 EED9     		bls	.L177
 2630              	.L178:
2795:Generated_Source\PSoC4/CyLib.c ****             }
2796:Generated_Source\PSoC4/CyLib.c ****         }
2797:Generated_Source\PSoC4/CyLib.c ****     }
2798:Generated_Source\PSoC4/CyLib.c **** }
 2631              		.loc 1 2798 0 is_stmt 1
 2632 0038 C046     		nop
 2633 003a BD46     		mov	sp, r7
 2634 003c 02B0     		add	sp, sp, #8
 2635              		@ sp needed
 2636 003e 80BD     		pop	{r7, pc}
 2637              	.L180:
 2638              		.align	2
 2639              	.L179:
 2640 0040 00000000 		.word	CySysTickCallbacks
 2641              		.cfi_endproc
 2642              	.LFE49:
 2643              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2644              		.section	.text.CyGetUniqueId,"ax",%progbits
 2645              		.align	2
 2646              		.global	CyGetUniqueId
 2647              		.code	16
 2648              		.thumb_func
 2649              		.type	CyGetUniqueId, %function
 2650              	CyGetUniqueId:
 2651              	.LFB50:
2799:Generated_Source\PSoC4/CyLib.c **** 
2800:Generated_Source\PSoC4/CyLib.c **** 
2801:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 97


2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:Generated_Source\PSoC4/CyLib.c **** *
2810:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:Generated_Source\PSoC4/CyLib.c **** *
2814:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:Generated_Source\PSoC4/CyLib.c **** {
 2652              		.loc 1 2816 0
 2653              		.cfi_startproc
 2654              		@ args = 0, pretend = 0, frame = 8
 2655              		@ frame_needed = 1, uses_anonymous_args = 0
 2656 0000 80B5     		push	{r7, lr}
 2657              		.cfi_def_cfa_offset 8
 2658              		.cfi_offset 7, -8
 2659              		.cfi_offset 14, -4
 2660 0002 82B0     		sub	sp, sp, #8
 2661              		.cfi_def_cfa_offset 16
 2662 0004 00AF     		add	r7, sp, #0
 2663              		.cfi_def_cfa_register 7
 2664 0006 7860     		str	r0, [r7, #4]
2817:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2665              		.loc 1 2818 0
 2666 0008 254B     		ldr	r3, .L182
 2667 000a 1B78     		ldrb	r3, [r3]
 2668 000c DBB2     		uxtb	r3, r3
 2669 000e 1A00     		movs	r2, r3
 2670 0010 7B68     		ldr	r3, [r7, #4]
 2671 0012 1A60     		str	r2, [r3]
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2672              		.loc 1 2819 0
 2673 0014 234B     		ldr	r3, .L182+4
 2674 0016 1B78     		ldrb	r3, [r3]
 2675 0018 DBB2     		uxtb	r3, r3
 2676 001a 1A02     		lsls	r2, r3, #8
 2677 001c 7B68     		ldr	r3, [r7, #4]
 2678 001e 1B68     		ldr	r3, [r3]
 2679 0020 1A43     		orrs	r2, r3
 2680 0022 7B68     		ldr	r3, [r7, #4]
 2681 0024 1A60     		str	r2, [r3]
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2682              		.loc 1 2820 0
 2683 0026 204B     		ldr	r3, .L182+8
 2684 0028 1B78     		ldrb	r3, [r3]
 2685 002a DBB2     		uxtb	r3, r3
 2686 002c 1A04     		lsls	r2, r3, #16
 2687 002e 7B68     		ldr	r3, [r7, #4]
 2688 0030 1B68     		ldr	r3, [r3]
 2689 0032 1A43     		orrs	r2, r3
 2690 0034 7B68     		ldr	r3, [r7, #4]
 2691 0036 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 98


2821:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2692              		.loc 1 2821 0
 2693 0038 1C4B     		ldr	r3, .L182+12
 2694 003a 1B78     		ldrb	r3, [r3]
 2695 003c DBB2     		uxtb	r3, r3
 2696 003e 1A06     		lsls	r2, r3, #24
 2697 0040 7B68     		ldr	r3, [r7, #4]
 2698 0042 1B68     		ldr	r3, [r3]
 2699 0044 1A43     		orrs	r2, r3
 2700 0046 7B68     		ldr	r3, [r7, #4]
 2701 0048 1A60     		str	r2, [r3]
2822:Generated_Source\PSoC4/CyLib.c **** 
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2702              		.loc 1 2823 0
 2703 004a 7B68     		ldr	r3, [r7, #4]
 2704 004c 0433     		adds	r3, r3, #4
 2705 004e 184A     		ldr	r2, .L182+16
 2706 0050 1278     		ldrb	r2, [r2]
 2707 0052 D2B2     		uxtb	r2, r2
 2708 0054 1A60     		str	r2, [r3]
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2709              		.loc 1 2824 0
 2710 0056 174B     		ldr	r3, .L182+20
 2711 0058 1B78     		ldrb	r3, [r3]
 2712 005a DBB2     		uxtb	r3, r3
 2713 005c 1902     		lsls	r1, r3, #8
 2714 005e 7B68     		ldr	r3, [r7, #4]
 2715 0060 0433     		adds	r3, r3, #4
 2716 0062 7A68     		ldr	r2, [r7, #4]
 2717 0064 0432     		adds	r2, r2, #4
 2718 0066 1268     		ldr	r2, [r2]
 2719 0068 0A43     		orrs	r2, r1
 2720 006a 1A60     		str	r2, [r3]
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2721              		.loc 1 2825 0
 2722 006c 124B     		ldr	r3, .L182+24
 2723 006e 1B78     		ldrb	r3, [r3]
 2724 0070 DBB2     		uxtb	r3, r3
 2725 0072 1904     		lsls	r1, r3, #16
 2726 0074 7B68     		ldr	r3, [r7, #4]
 2727 0076 0433     		adds	r3, r3, #4
 2728 0078 7A68     		ldr	r2, [r7, #4]
 2729 007a 0432     		adds	r2, r2, #4
 2730 007c 1268     		ldr	r2, [r2]
 2731 007e 0A43     		orrs	r2, r1
 2732 0080 1A60     		str	r2, [r3]
2826:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2733              		.loc 1 2826 0
 2734 0082 0E4B     		ldr	r3, .L182+28
 2735 0084 1B78     		ldrb	r3, [r3]
 2736 0086 DBB2     		uxtb	r3, r3
 2737 0088 1906     		lsls	r1, r3, #24
 2738 008a 7B68     		ldr	r3, [r7, #4]
 2739 008c 0433     		adds	r3, r3, #4
 2740 008e 7A68     		ldr	r2, [r7, #4]
 2741 0090 0432     		adds	r2, r2, #4
 2742 0092 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 99


 2743 0094 0A43     		orrs	r2, r1
 2744 0096 1A60     		str	r2, [r3]
2827:Generated_Source\PSoC4/CyLib.c **** #else
2828:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:Generated_Source\PSoC4/CyLib.c **** }
 2745              		.loc 1 2838 0
 2746 0098 C046     		nop
 2747 009a BD46     		mov	sp, r7
 2748 009c 02B0     		add	sp, sp, #8
 2749              		@ sp needed
 2750 009e 80BD     		pop	{r7, pc}
 2751              	.L183:
 2752              		.align	2
 2753              	.L182:
 2754 00a0 78F1FF0F 		.word	268431736
 2755 00a4 79F1FF0F 		.word	268431737
 2756 00a8 7AF1FF0F 		.word	268431738
 2757 00ac 7BF1FF0F 		.word	268431739
 2758 00b0 7CF1FF0F 		.word	268431740
 2759 00b4 7DF1FF0F 		.word	268431741
 2760 00b8 7EF1FF0F 		.word	268431742
 2761 00bc 7FF1FF0F 		.word	268431743
 2762              		.cfi_endproc
 2763              	.LFE50:
 2764              		.size	CyGetUniqueId, .-CyGetUniqueId
 2765              		.text
 2766              	.Letext0:
 2767              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2768              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2769              		.section	.debug_info,"",%progbits
 2770              	.Ldebug_info0:
 2771 0000 8D090000 		.4byte	0x98d
 2772 0004 0400     		.2byte	0x4
 2773 0006 00000000 		.4byte	.Ldebug_abbrev0
 2774 000a 04       		.byte	0x4
 2775 000b 01       		.uleb128 0x1
 2776 000c 33030000 		.4byte	.LASF105
 2777 0010 0C       		.byte	0xc
 2778 0011 47060000 		.4byte	.LASF106
 2779 0015 22020000 		.4byte	.LASF107
 2780 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2781 001d 00000000 		.4byte	0
 2782 0021 00000000 		.4byte	.Ldebug_line0
 2783 0025 02       		.uleb128 0x2
 2784 0026 01       		.byte	0x1
 2785 0027 06       		.byte	0x6
 2786 0028 C8000000 		.4byte	.LASF0
 2787 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 100


 2788 002d 01       		.byte	0x1
 2789 002e 08       		.byte	0x8
 2790 002f E6040000 		.4byte	.LASF1
 2791 0033 02       		.uleb128 0x2
 2792 0034 02       		.byte	0x2
 2793 0035 05       		.byte	0x5
 2794 0036 F4040000 		.4byte	.LASF2
 2795 003a 02       		.uleb128 0x2
 2796 003b 02       		.byte	0x2
 2797 003c 07       		.byte	0x7
 2798 003d D4020000 		.4byte	.LASF3
 2799 0041 02       		.uleb128 0x2
 2800 0042 04       		.byte	0x4
 2801 0043 05       		.byte	0x5
 2802 0044 07010000 		.4byte	.LASF4
 2803 0048 02       		.uleb128 0x2
 2804 0049 04       		.byte	0x4
 2805 004a 07       		.byte	0x7
 2806 004b 5E020000 		.4byte	.LASF5
 2807 004f 02       		.uleb128 0x2
 2808 0050 08       		.byte	0x8
 2809 0051 05       		.byte	0x5
 2810 0052 BA000000 		.4byte	.LASF6
 2811 0056 02       		.uleb128 0x2
 2812 0057 08       		.byte	0x8
 2813 0058 07       		.byte	0x7
 2814 0059 54000000 		.4byte	.LASF7
 2815 005d 03       		.uleb128 0x3
 2816 005e 04       		.byte	0x4
 2817 005f 05       		.byte	0x5
 2818 0060 696E7400 		.ascii	"int\000"
 2819 0064 02       		.uleb128 0x2
 2820 0065 04       		.byte	0x4
 2821 0066 07       		.byte	0x7
 2822 0067 06020000 		.4byte	.LASF8
 2823 006b 04       		.uleb128 0x4
 2824 006c 27010000 		.4byte	.LASF9
 2825 0070 02       		.byte	0x2
 2826 0071 9801     		.2byte	0x198
 2827 0073 2C000000 		.4byte	0x2c
 2828 0077 04       		.uleb128 0x4
 2829 0078 0F000000 		.4byte	.LASF10
 2830 007c 02       		.byte	0x2
 2831 007d 9901     		.2byte	0x199
 2832 007f 3A000000 		.4byte	0x3a
 2833 0083 04       		.uleb128 0x4
 2834 0084 6A010000 		.4byte	.LASF11
 2835 0088 02       		.byte	0x2
 2836 0089 9A01     		.2byte	0x19a
 2837 008b 48000000 		.4byte	0x48
 2838 008f 02       		.uleb128 0x2
 2839 0090 04       		.byte	0x4
 2840 0091 04       		.byte	0x4
 2841 0092 8D040000 		.4byte	.LASF12
 2842 0096 02       		.uleb128 0x2
 2843 0097 08       		.byte	0x8
 2844 0098 04       		.byte	0x4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 101


 2845 0099 46010000 		.4byte	.LASF13
 2846 009d 02       		.uleb128 0x2
 2847 009e 01       		.byte	0x1
 2848 009f 08       		.byte	0x8
 2849 00a0 3E050000 		.4byte	.LASF14
 2850 00a4 04       		.uleb128 0x4
 2851 00a5 2D060000 		.4byte	.LASF15
 2852 00a9 02       		.byte	0x2
 2853 00aa 3A02     		.2byte	0x23a
 2854 00ac 48000000 		.4byte	0x48
 2855 00b0 04       		.uleb128 0x4
 2856 00b1 D0040000 		.4byte	.LASF16
 2857 00b5 02       		.byte	0x2
 2858 00b6 4202     		.2byte	0x242
 2859 00b8 BC000000 		.4byte	0xbc
 2860 00bc 05       		.uleb128 0x5
 2861 00bd 6B000000 		.4byte	0x6b
 2862 00c1 04       		.uleb128 0x4
 2863 00c2 D3030000 		.4byte	.LASF17
 2864 00c6 02       		.byte	0x2
 2865 00c7 4402     		.2byte	0x244
 2866 00c9 CD000000 		.4byte	0xcd
 2867 00cd 05       		.uleb128 0x5
 2868 00ce 83000000 		.4byte	0x83
 2869 00d2 04       		.uleb128 0x4
 2870 00d3 43050000 		.4byte	.LASF18
 2871 00d7 02       		.byte	0x2
 2872 00d8 5402     		.2byte	0x254
 2873 00da DE000000 		.4byte	0xde
 2874 00de 06       		.uleb128 0x6
 2875 00df 04       		.byte	0x4
 2876 00e0 E4000000 		.4byte	0xe4
 2877 00e4 07       		.uleb128 0x7
 2878 00e5 02       		.uleb128 0x2
 2879 00e6 08       		.byte	0x8
 2880 00e7 04       		.byte	0x4
 2881 00e8 21040000 		.4byte	.LASF19
 2882 00ec 02       		.uleb128 0x2
 2883 00ed 04       		.byte	0x4
 2884 00ee 07       		.byte	0x7
 2885 00ef F5030000 		.4byte	.LASF20
 2886 00f3 08       		.uleb128 0x8
 2887 00f4 A2040000 		.4byte	.LASF21
 2888 00f8 03       		.byte	0x3
 2889 00f9 F3       		.byte	0xf3
 2890 00fa DE000000 		.4byte	0xde
 2891 00fe 09       		.uleb128 0x9
 2892 00ff 36060000 		.4byte	.LASF22
 2893 0103 01       		.byte	0x1
 2894 0104 68       		.byte	0x68
 2895 0105 00000000 		.4byte	.LFB2
 2896 0109 1C000000 		.4byte	.LFE2-.LFB2
 2897 010d 01       		.uleb128 0x1
 2898 010e 9C       		.byte	0x9c
 2899 010f 09       		.uleb128 0x9
 2900 0110 8B020000 		.4byte	.LASF23
 2901 0114 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 102


 2902 0115 88       		.byte	0x88
 2903 0116 00000000 		.4byte	.LFB3
 2904 011a 1C000000 		.4byte	.LFE3-.LFB3
 2905 011e 01       		.uleb128 0x1
 2906 011f 9C       		.byte	0x9c
 2907 0120 0A       		.uleb128 0xa
 2908 0121 1F000000 		.4byte	.LASF27
 2909 0125 01       		.byte	0x1
 2910 0126 AA01     		.2byte	0x1aa
 2911 0128 00000000 		.4byte	.LFB4
 2912 012c 48000000 		.4byte	.LFE4-.LFB4
 2913 0130 01       		.uleb128 0x1
 2914 0131 9C       		.byte	0x9c
 2915 0132 64010000 		.4byte	0x164
 2916 0136 0B       		.uleb128 0xb
 2917 0137 1C050000 		.4byte	.LASF29
 2918 013b 01       		.byte	0x1
 2919 013c AA01     		.2byte	0x1aa
 2920 013e 83000000 		.4byte	0x83
 2921 0142 02       		.uleb128 0x2
 2922 0143 91       		.byte	0x91
 2923 0144 64       		.sleb128 -28
 2924 0145 0C       		.uleb128 0xc
 2925 0146 E5000000 		.4byte	.LASF24
 2926 014a 01       		.byte	0x1
 2927 014b AC01     		.2byte	0x1ac
 2928 014d 6B000000 		.4byte	0x6b
 2929 0151 02       		.uleb128 0x2
 2930 0152 91       		.byte	0x91
 2931 0153 6F       		.sleb128 -17
 2932 0154 0C       		.uleb128 0xc
 2933 0155 73060000 		.4byte	.LASF25
 2934 0159 01       		.byte	0x1
 2935 015a AD01     		.2byte	0x1ad
 2936 015c 83000000 		.4byte	0x83
 2937 0160 02       		.uleb128 0x2
 2938 0161 91       		.byte	0x91
 2939 0162 68       		.sleb128 -24
 2940 0163 00       		.byte	0
 2941 0164 0D       		.uleb128 0xd
 2942 0165 8C010000 		.4byte	.LASF35
 2943 0169 01       		.byte	0x1
 2944 016a CF01     		.2byte	0x1cf
 2945 016c 83000000 		.4byte	0x83
 2946 0170 00000000 		.4byte	.LFB5
 2947 0174 34000000 		.4byte	.LFE5-.LFB5
 2948 0178 01       		.uleb128 0x1
 2949 0179 9C       		.byte	0x9c
 2950 017a 9D010000 		.4byte	0x19d
 2951 017e 0C       		.uleb128 0xc
 2952 017f E5000000 		.4byte	.LASF24
 2953 0183 01       		.byte	0x1
 2954 0184 D101     		.2byte	0x1d1
 2955 0186 6B000000 		.4byte	0x6b
 2956 018a 02       		.uleb128 0x2
 2957 018b 91       		.byte	0x91
 2958 018c 6F       		.sleb128 -17
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 103


 2959 018d 0C       		.uleb128 0xc
 2960 018e 35040000 		.4byte	.LASF26
 2961 0192 01       		.byte	0x1
 2962 0193 D201     		.2byte	0x1d2
 2963 0195 83000000 		.4byte	0x83
 2964 0199 02       		.uleb128 0x2
 2965 019a 91       		.byte	0x91
 2966 019b 68       		.sleb128 -24
 2967 019c 00       		.byte	0
 2968 019d 0A       		.uleb128 0xa
 2969 019e 60050000 		.4byte	.LASF28
 2970 01a2 01       		.byte	0x1
 2971 01a3 0602     		.2byte	0x206
 2972 01a5 00000000 		.4byte	.LFB6
 2973 01a9 48000000 		.4byte	.LFE6-.LFB6
 2974 01ad 01       		.uleb128 0x1
 2975 01ae 9C       		.byte	0x9c
 2976 01af D2010000 		.4byte	0x1d2
 2977 01b3 0B       		.uleb128 0xb
 2978 01b4 11060000 		.4byte	.LASF30
 2979 01b8 01       		.byte	0x1
 2980 01b9 0602     		.2byte	0x206
 2981 01bb 83000000 		.4byte	0x83
 2982 01bf 02       		.uleb128 0x2
 2983 01c0 91       		.byte	0x91
 2984 01c1 64       		.sleb128 -28
 2985 01c2 0C       		.uleb128 0xc
 2986 01c3 E5000000 		.4byte	.LASF24
 2987 01c7 01       		.byte	0x1
 2988 01c8 0802     		.2byte	0x208
 2989 01ca 6B000000 		.4byte	0x6b
 2990 01ce 02       		.uleb128 0x2
 2991 01cf 91       		.byte	0x91
 2992 01d0 6F       		.sleb128 -17
 2993 01d1 00       		.byte	0
 2994 01d2 0A       		.uleb128 0xa
 2995 01d3 1E030000 		.4byte	.LASF31
 2996 01d7 01       		.byte	0x1
 2997 01d8 4002     		.2byte	0x240
 2998 01da 00000000 		.4byte	.LFB7
 2999 01de 9C000000 		.4byte	.LFE7-.LFB7
 3000 01e2 01       		.uleb128 0x1
 3001 01e3 9C       		.byte	0x9c
 3002 01e4 25020000 		.4byte	0x225
 3003 01e8 0B       		.uleb128 0xb
 3004 01e9 D4000000 		.4byte	.LASF32
 3005 01ed 01       		.byte	0x1
 3006 01ee 4002     		.2byte	0x240
 3007 01f0 83000000 		.4byte	0x83
 3008 01f4 02       		.uleb128 0x2
 3009 01f5 91       		.byte	0x91
 3010 01f6 4C       		.sleb128 -52
 3011 01f7 0C       		.uleb128 0xc
 3012 01f8 6B000000 		.4byte	.LASF33
 3013 01fc 01       		.byte	0x1
 3014 01fd 4302     		.2byte	0x243
 3015 01ff 35020000 		.4byte	0x235
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 104


 3016 0203 02       		.uleb128 0x2
 3017 0204 91       		.byte	0x91
 3018 0205 64       		.sleb128 -28
 3019 0206 0C       		.uleb128 0xc
 3020 0207 1D010000 		.4byte	.LASF34
 3021 020b 01       		.byte	0x1
 3022 020c 4402     		.2byte	0x244
 3023 020e 4A020000 		.4byte	0x24a
 3024 0212 02       		.uleb128 0x2
 3025 0213 91       		.byte	0x91
 3026 0214 54       		.sleb128 -44
 3027 0215 0C       		.uleb128 0xc
 3028 0216 E5000000 		.4byte	.LASF24
 3029 021a 01       		.byte	0x1
 3030 021b 5502     		.2byte	0x255
 3031 021d 6B000000 		.4byte	0x6b
 3032 0221 02       		.uleb128 0x2
 3033 0222 91       		.byte	0x91
 3034 0223 6F       		.sleb128 -17
 3035 0224 00       		.byte	0
 3036 0225 0E       		.uleb128 0xe
 3037 0226 CD000000 		.4byte	0xcd
 3038 022a 35020000 		.4byte	0x235
 3039 022e 0F       		.uleb128 0xf
 3040 022f EC000000 		.4byte	0xec
 3041 0233 01       		.byte	0x1
 3042 0234 00       		.byte	0
 3043 0235 05       		.uleb128 0x5
 3044 0236 25020000 		.4byte	0x225
 3045 023a 0E       		.uleb128 0xe
 3046 023b CD000000 		.4byte	0xcd
 3047 023f 4A020000 		.4byte	0x24a
 3048 0243 0F       		.uleb128 0xf
 3049 0244 EC000000 		.4byte	0xec
 3050 0248 03       		.byte	0x3
 3051 0249 00       		.byte	0
 3052 024a 05       		.uleb128 0x5
 3053 024b 3A020000 		.4byte	0x23a
 3054 024f 0D       		.uleb128 0xd
 3055 0250 26050000 		.4byte	.LASF36
 3056 0254 01       		.byte	0x1
 3057 0255 D203     		.2byte	0x3d2
 3058 0257 A4000000 		.4byte	0xa4
 3059 025b 00000000 		.4byte	.LFB8
 3060 025f 74000000 		.4byte	.LFE8-.LFB8
 3061 0263 01       		.uleb128 0x1
 3062 0264 9C       		.byte	0x9c
 3063 0265 88020000 		.4byte	0x288
 3064 0269 0B       		.uleb128 0xb
 3065 026a 07060000 		.4byte	.LASF37
 3066 026e 01       		.byte	0x1
 3067 026f D203     		.2byte	0x3d2
 3068 0271 83000000 		.4byte	0x83
 3069 0275 02       		.uleb128 0x2
 3070 0276 91       		.byte	0x91
 3071 0277 6C       		.sleb128 -20
 3072 0278 0C       		.uleb128 0xc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 105


 3073 0279 E8030000 		.4byte	.LASF38
 3074 027d 01       		.byte	0x1
 3075 027e D403     		.2byte	0x3d4
 3076 0280 A4000000 		.4byte	0xa4
 3077 0284 02       		.uleb128 0x2
 3078 0285 91       		.byte	0x91
 3079 0286 74       		.sleb128 -12
 3080 0287 00       		.byte	0
 3081 0288 10       		.uleb128 0x10
 3082 0289 E9050000 		.4byte	.LASF39
 3083 028d 01       		.byte	0x1
 3084 028e 0504     		.2byte	0x405
 3085 0290 00000000 		.4byte	.LFB9
 3086 0294 30000000 		.4byte	.LFE9-.LFB9
 3087 0298 01       		.uleb128 0x1
 3088 0299 9C       		.byte	0x9c
 3089 029a 11       		.uleb128 0x11
 3090 029b 71010000 		.4byte	.LASF40
 3091 029f 01       		.byte	0x1
 3092 02a0 2504     		.2byte	0x425
 3093 02a2 83000000 		.4byte	0x83
 3094 02a6 00000000 		.4byte	.LFB10
 3095 02aa 20000000 		.4byte	.LFE10-.LFB10
 3096 02ae 01       		.uleb128 0x1
 3097 02af 9C       		.byte	0x9c
 3098 02b0 C4020000 		.4byte	0x2c4
 3099 02b4 0C       		.uleb128 0xc
 3100 02b5 A7060000 		.4byte	.LASF41
 3101 02b9 01       		.byte	0x1
 3102 02ba 2704     		.2byte	0x427
 3103 02bc 83000000 		.4byte	0x83
 3104 02c0 02       		.uleb128 0x2
 3105 02c1 91       		.byte	0x91
 3106 02c2 74       		.sleb128 -12
 3107 02c3 00       		.byte	0
 3108 02c4 0A       		.uleb128 0xa
 3109 02c5 19060000 		.4byte	.LASF42
 3110 02c9 01       		.byte	0x1
 3111 02ca 4D04     		.2byte	0x44d
 3112 02cc 00000000 		.4byte	.LFB11
 3113 02d0 58000000 		.4byte	.LFE11-.LFB11
 3114 02d4 01       		.uleb128 0x1
 3115 02d5 9C       		.byte	0x9c
 3116 02d6 F9020000 		.4byte	0x2f9
 3117 02da 0B       		.uleb128 0xb
 3118 02db 11060000 		.4byte	.LASF30
 3119 02df 01       		.byte	0x1
 3120 02e0 4D04     		.2byte	0x44d
 3121 02e2 83000000 		.4byte	0x83
 3122 02e6 02       		.uleb128 0x2
 3123 02e7 91       		.byte	0x91
 3124 02e8 64       		.sleb128 -28
 3125 02e9 0C       		.uleb128 0xc
 3126 02ea E5000000 		.4byte	.LASF24
 3127 02ee 01       		.byte	0x1
 3128 02ef 4F04     		.2byte	0x44f
 3129 02f1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 106


 3130 02f5 02       		.uleb128 0x2
 3131 02f6 91       		.byte	0x91
 3132 02f7 6F       		.sleb128 -17
 3133 02f8 00       		.byte	0
 3134 02f9 0A       		.uleb128 0xa
 3135 02fa 93040000 		.4byte	.LASF43
 3136 02fe 01       		.byte	0x1
 3137 02ff B107     		.2byte	0x7b1
 3138 0301 00000000 		.4byte	.LFB12
 3139 0305 64000000 		.4byte	.LFE12-.LFB12
 3140 0309 01       		.uleb128 0x1
 3141 030a 9C       		.byte	0x9c
 3142 030b 1F030000 		.4byte	0x31f
 3143 030f 0B       		.uleb128 0xb
 3144 0310 D5040000 		.4byte	.LASF44
 3145 0314 01       		.byte	0x1
 3146 0315 B107     		.2byte	0x7b1
 3147 0317 83000000 		.4byte	0x83
 3148 031b 02       		.uleb128 0x2
 3149 031c 91       		.byte	0x91
 3150 031d 74       		.sleb128 -12
 3151 031e 00       		.byte	0
 3152 031f 10       		.uleb128 0x10
 3153 0320 CA050000 		.4byte	.LASF45
 3154 0324 01       		.byte	0x1
 3155 0325 CF07     		.2byte	0x7cf
 3156 0327 00000000 		.4byte	.LFB13
 3157 032b 2C000000 		.4byte	.LFE13-.LFB13
 3158 032f 01       		.uleb128 0x1
 3159 0330 9C       		.byte	0x9c
 3160 0331 12       		.uleb128 0x12
 3161 0332 70020000 		.4byte	.LASF85
 3162 0336 01       		.byte	0x1
 3163 0337 E107     		.2byte	0x7e1
 3164 0339 83000000 		.4byte	0x83
 3165 033d 00000000 		.4byte	.LFB14
 3166 0341 18000000 		.4byte	.LFE14-.LFB14
 3167 0345 01       		.uleb128 0x1
 3168 0346 9C       		.byte	0x9c
 3169 0347 10       		.uleb128 0x10
 3170 0348 53010000 		.4byte	.LASF46
 3171 034c 01       		.byte	0x1
 3172 034d F107     		.2byte	0x7f1
 3173 034f 00000000 		.4byte	.LFB15
 3174 0353 14000000 		.4byte	.LFE15-.LFB15
 3175 0357 01       		.uleb128 0x1
 3176 0358 9C       		.byte	0x9c
 3177 0359 11       		.uleb128 0x11
 3178 035a C0020000 		.4byte	.LASF47
 3179 035e 01       		.byte	0x1
 3180 035f 0B08     		.2byte	0x80b
 3181 0361 83000000 		.4byte	0x83
 3182 0365 00000000 		.4byte	.LFB16
 3183 0369 30000000 		.4byte	.LFE16-.LFB16
 3184 036d 01       		.uleb128 0x1
 3185 036e 9C       		.byte	0x9c
 3186 036f 92030000 		.4byte	0x392
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 107


 3187 0373 0B       		.uleb128 0xb
 3188 0374 37050000 		.4byte	.LASF48
 3189 0378 01       		.byte	0x1
 3190 0379 0B08     		.2byte	0x80b
 3191 037b 83000000 		.4byte	0x83
 3192 037f 02       		.uleb128 0x2
 3193 0380 91       		.byte	0x91
 3194 0381 6C       		.sleb128 -20
 3195 0382 0C       		.uleb128 0xc
 3196 0383 E8030000 		.4byte	.LASF38
 3197 0387 01       		.byte	0x1
 3198 0388 0D08     		.2byte	0x80d
 3199 038a 83000000 		.4byte	0x83
 3200 038e 02       		.uleb128 0x2
 3201 038f 91       		.byte	0x91
 3202 0390 74       		.sleb128 -12
 3203 0391 00       		.byte	0
 3204 0392 11       		.uleb128 0x11
 3205 0393 46000000 		.4byte	.LASF49
 3206 0397 01       		.byte	0x1
 3207 0398 2208     		.2byte	0x822
 3208 039a 83000000 		.4byte	0x83
 3209 039e 00000000 		.4byte	.LFB17
 3210 03a2 24000000 		.4byte	.LFE17-.LFB17
 3211 03a6 01       		.uleb128 0x1
 3212 03a7 9C       		.byte	0x9c
 3213 03a8 BC030000 		.4byte	0x3bc
 3214 03ac 0C       		.uleb128 0xc
 3215 03ad 16000000 		.4byte	.LASF50
 3216 03b1 01       		.byte	0x1
 3217 03b2 2408     		.2byte	0x824
 3218 03b4 83000000 		.4byte	0x83
 3219 03b8 02       		.uleb128 0x2
 3220 03b9 91       		.byte	0x91
 3221 03ba 74       		.sleb128 -12
 3222 03bb 00       		.byte	0
 3223 03bc 13       		.uleb128 0x13
 3224 03bd 76000000 		.4byte	.LASF51
 3225 03c1 01       		.byte	0x1
 3226 03c2 3908     		.2byte	0x839
 3227 03c4 00000000 		.4byte	.LFB18
 3228 03c8 1C000000 		.4byte	.LFE18-.LFB18
 3229 03cc 01       		.uleb128 0x1
 3230 03cd 9C       		.byte	0x9c
 3231 03ce E2030000 		.4byte	0x3e2
 3232 03d2 0B       		.uleb128 0xb
 3233 03d3 87010000 		.4byte	.LASF52
 3234 03d7 01       		.byte	0x1
 3235 03d8 3908     		.2byte	0x839
 3236 03da 83000000 		.4byte	0x83
 3237 03de 02       		.uleb128 0x2
 3238 03df 91       		.byte	0x91
 3239 03e0 74       		.sleb128 -12
 3240 03e1 00       		.byte	0
 3241 03e2 0D       		.uleb128 0xd
 3242 03e3 C1030000 		.4byte	.LASF53
 3243 03e7 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 108


 3244 03e8 5208     		.2byte	0x852
 3245 03ea D2000000 		.4byte	0xd2
 3246 03ee 00000000 		.4byte	.LFB19
 3247 03f2 48000000 		.4byte	.LFE19-.LFB19
 3248 03f6 01       		.uleb128 0x1
 3249 03f7 9C       		.byte	0x9c
 3250 03f8 39040000 		.4byte	0x439
 3251 03fc 0B       		.uleb128 0xb
 3252 03fd 0E030000 		.4byte	.LASF54
 3253 0401 01       		.byte	0x1
 3254 0402 5208     		.2byte	0x852
 3255 0404 6B000000 		.4byte	0x6b
 3256 0408 02       		.uleb128 0x2
 3257 0409 91       		.byte	0x91
 3258 040a 6F       		.sleb128 -17
 3259 040b 0B       		.uleb128 0xb
 3260 040c 2D040000 		.4byte	.LASF55
 3261 0410 01       		.byte	0x1
 3262 0411 5208     		.2byte	0x852
 3263 0413 D2000000 		.4byte	0xd2
 3264 0417 02       		.uleb128 0x2
 3265 0418 91       		.byte	0x91
 3266 0419 68       		.sleb128 -24
 3267 041a 0C       		.uleb128 0xc
 3268 041b 38000000 		.4byte	.LASF56
 3269 041f 01       		.byte	0x1
 3270 0420 5408     		.2byte	0x854
 3271 0422 D2000000 		.4byte	0xd2
 3272 0426 02       		.uleb128 0x2
 3273 0427 91       		.byte	0x91
 3274 0428 70       		.sleb128 -16
 3275 0429 0C       		.uleb128 0xc
 3276 042a 00000000 		.4byte	.LASF57
 3277 042e 01       		.byte	0x1
 3278 042f 5508     		.2byte	0x855
 3279 0431 39040000 		.4byte	0x439
 3280 0435 02       		.uleb128 0x2
 3281 0436 91       		.byte	0x91
 3282 0437 74       		.sleb128 -12
 3283 0438 00       		.byte	0
 3284 0439 06       		.uleb128 0x6
 3285 043a 04       		.byte	0x4
 3286 043b D2000000 		.4byte	0xd2
 3287 043f 0D       		.uleb128 0xd
 3288 0440 0A050000 		.4byte	.LASF58
 3289 0444 01       		.byte	0x1
 3290 0445 7408     		.2byte	0x874
 3291 0447 D2000000 		.4byte	0xd2
 3292 044b 00000000 		.4byte	.LFB20
 3293 044f 34000000 		.4byte	.LFE20-.LFB20
 3294 0453 01       		.uleb128 0x1
 3295 0454 9C       		.byte	0x9c
 3296 0455 78040000 		.4byte	0x478
 3297 0459 0B       		.uleb128 0xb
 3298 045a 0E030000 		.4byte	.LASF54
 3299 045e 01       		.byte	0x1
 3300 045f 7408     		.2byte	0x874
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 109


 3301 0461 6B000000 		.4byte	0x6b
 3302 0465 02       		.uleb128 0x2
 3303 0466 91       		.byte	0x91
 3304 0467 6F       		.sleb128 -17
 3305 0468 0C       		.uleb128 0xc
 3306 0469 00000000 		.4byte	.LASF57
 3307 046d 01       		.byte	0x1
 3308 046e 7608     		.2byte	0x876
 3309 0470 39040000 		.4byte	0x439
 3310 0474 02       		.uleb128 0x2
 3311 0475 91       		.byte	0x91
 3312 0476 74       		.sleb128 -12
 3313 0477 00       		.byte	0
 3314 0478 0D       		.uleb128 0xd
 3315 0479 FF020000 		.4byte	.LASF59
 3316 047d 01       		.byte	0x1
 3317 047e 8A08     		.2byte	0x88a
 3318 0480 D2000000 		.4byte	0xd2
 3319 0484 00000000 		.4byte	.LFB21
 3320 0488 4C000000 		.4byte	.LFE21-.LFB21
 3321 048c 01       		.uleb128 0x1
 3322 048d 9C       		.byte	0x9c
 3323 048e CF040000 		.4byte	0x4cf
 3324 0492 0B       		.uleb128 0xb
 3325 0493 0E030000 		.4byte	.LASF54
 3326 0497 01       		.byte	0x1
 3327 0498 8A08     		.2byte	0x88a
 3328 049a 6B000000 		.4byte	0x6b
 3329 049e 02       		.uleb128 0x2
 3330 049f 91       		.byte	0x91
 3331 04a0 6F       		.sleb128 -17
 3332 04a1 0B       		.uleb128 0xb
 3333 04a2 2D040000 		.4byte	.LASF55
 3334 04a6 01       		.byte	0x1
 3335 04a7 8A08     		.2byte	0x88a
 3336 04a9 D2000000 		.4byte	0xd2
 3337 04ad 02       		.uleb128 0x2
 3338 04ae 91       		.byte	0x91
 3339 04af 68       		.sleb128 -24
 3340 04b0 0C       		.uleb128 0xc
 3341 04b1 38000000 		.4byte	.LASF56
 3342 04b5 01       		.byte	0x1
 3343 04b6 8C08     		.2byte	0x88c
 3344 04b8 D2000000 		.4byte	0xd2
 3345 04bc 02       		.uleb128 0x2
 3346 04bd 91       		.byte	0x91
 3347 04be 70       		.sleb128 -16
 3348 04bf 0C       		.uleb128 0xc
 3349 04c0 00000000 		.4byte	.LASF57
 3350 04c4 01       		.byte	0x1
 3351 04c5 8D08     		.2byte	0x88d
 3352 04c7 39040000 		.4byte	0x439
 3353 04cb 02       		.uleb128 0x2
 3354 04cc 91       		.byte	0x91
 3355 04cd 74       		.sleb128 -12
 3356 04ce 00       		.byte	0
 3357 04cf 0D       		.uleb128 0xd
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 110


 3358 04d0 B4040000 		.4byte	.LASF60
 3359 04d4 01       		.byte	0x1
 3360 04d5 A608     		.2byte	0x8a6
 3361 04d7 D2000000 		.4byte	0xd2
 3362 04db 00000000 		.4byte	.LFB22
 3363 04df 36000000 		.4byte	.LFE22-.LFB22
 3364 04e3 01       		.uleb128 0x1
 3365 04e4 9C       		.byte	0x9c
 3366 04e5 08050000 		.4byte	0x508
 3367 04e9 0B       		.uleb128 0xb
 3368 04ea 0E030000 		.4byte	.LASF54
 3369 04ee 01       		.byte	0x1
 3370 04ef A608     		.2byte	0x8a6
 3371 04f1 6B000000 		.4byte	0x6b
 3372 04f5 02       		.uleb128 0x2
 3373 04f6 91       		.byte	0x91
 3374 04f7 6F       		.sleb128 -17
 3375 04f8 0C       		.uleb128 0xc
 3376 04f9 00000000 		.4byte	.LASF57
 3377 04fd 01       		.byte	0x1
 3378 04fe A808     		.2byte	0x8a8
 3379 0500 39040000 		.4byte	0x439
 3380 0504 02       		.uleb128 0x2
 3381 0505 91       		.byte	0x91
 3382 0506 74       		.sleb128 -12
 3383 0507 00       		.byte	0
 3384 0508 0A       		.uleb128 0xa
 3385 0509 7C040000 		.4byte	.LASF61
 3386 050d 01       		.byte	0x1
 3387 050e B908     		.2byte	0x8b9
 3388 0510 00000000 		.4byte	.LFB23
 3389 0514 A8000000 		.4byte	.LFE23-.LFB23
 3390 0518 01       		.uleb128 0x1
 3391 0519 9C       		.byte	0x9c
 3392 051a 6A050000 		.4byte	0x56a
 3393 051e 0B       		.uleb128 0xb
 3394 051f 0E030000 		.4byte	.LASF54
 3395 0523 01       		.byte	0x1
 3396 0524 B908     		.2byte	0x8b9
 3397 0526 6B000000 		.4byte	0x6b
 3398 052a 02       		.uleb128 0x2
 3399 052b 91       		.byte	0x91
 3400 052c 5F       		.sleb128 -33
 3401 052d 0B       		.uleb128 0xb
 3402 052e 15030000 		.4byte	.LASF62
 3403 0532 01       		.byte	0x1
 3404 0533 B908     		.2byte	0x8b9
 3405 0535 6B000000 		.4byte	0x6b
 3406 0539 02       		.uleb128 0x2
 3407 053a 91       		.byte	0x91
 3408 053b 5E       		.sleb128 -34
 3409 053c 0C       		.uleb128 0xc
 3410 053d E5000000 		.4byte	.LASF24
 3411 0541 01       		.byte	0x1
 3412 0542 BB08     		.2byte	0x8bb
 3413 0544 6B000000 		.4byte	0x6b
 3414 0548 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 111


 3415 0549 91       		.byte	0x91
 3416 054a 6B       		.sleb128 -21
 3417 054b 0C       		.uleb128 0xc
 3418 054c 4D010000 		.4byte	.LASF63
 3419 0550 01       		.byte	0x1
 3420 0551 BC08     		.2byte	0x8bc
 3421 0553 83000000 		.4byte	0x83
 3422 0557 02       		.uleb128 0x2
 3423 0558 91       		.byte	0x91
 3424 0559 6C       		.sleb128 -20
 3425 055a 0C       		.uleb128 0xc
 3426 055b D0010000 		.4byte	.LASF64
 3427 055f 01       		.byte	0x1
 3428 0560 BD08     		.2byte	0x8bd
 3429 0562 83000000 		.4byte	0x83
 3430 0566 02       		.uleb128 0x2
 3431 0567 91       		.byte	0x91
 3432 0568 64       		.sleb128 -28
 3433 0569 00       		.byte	0
 3434 056a 0D       		.uleb128 0xd
 3435 056b A4010000 		.4byte	.LASF65
 3436 056f 01       		.byte	0x1
 3437 0570 DB08     		.2byte	0x8db
 3438 0572 6B000000 		.4byte	0x6b
 3439 0576 00000000 		.4byte	.LFB24
 3440 057a 58000000 		.4byte	.LFE24-.LFB24
 3441 057e 01       		.uleb128 0x1
 3442 057f 9C       		.byte	0x9c
 3443 0580 A3050000 		.4byte	0x5a3
 3444 0584 0B       		.uleb128 0xb
 3445 0585 0E030000 		.4byte	.LASF54
 3446 0589 01       		.byte	0x1
 3447 058a DB08     		.2byte	0x8db
 3448 058c 6B000000 		.4byte	0x6b
 3449 0590 02       		.uleb128 0x2
 3450 0591 91       		.byte	0x91
 3451 0592 6F       		.sleb128 -17
 3452 0593 0C       		.uleb128 0xc
 3453 0594 15030000 		.4byte	.LASF62
 3454 0598 01       		.byte	0x1
 3455 0599 DD08     		.2byte	0x8dd
 3456 059b 6B000000 		.4byte	0x6b
 3457 059f 02       		.uleb128 0x2
 3458 05a0 91       		.byte	0x91
 3459 05a1 77       		.sleb128 -9
 3460 05a2 00       		.byte	0
 3461 05a3 13       		.uleb128 0x13
 3462 05a4 FE040000 		.4byte	.LASF66
 3463 05a8 01       		.byte	0x1
 3464 05a9 F008     		.2byte	0x8f0
 3465 05ab 00000000 		.4byte	.LFB25
 3466 05af 2C000000 		.4byte	.LFE25-.LFB25
 3467 05b3 01       		.uleb128 0x1
 3468 05b4 9C       		.byte	0x9c
 3469 05b5 C9050000 		.4byte	0x5c9
 3470 05b9 0B       		.uleb128 0xb
 3471 05ba 0E030000 		.4byte	.LASF54
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 112


 3472 05be 01       		.byte	0x1
 3473 05bf F008     		.2byte	0x8f0
 3474 05c1 6B000000 		.4byte	0x6b
 3475 05c5 02       		.uleb128 0x2
 3476 05c6 91       		.byte	0x91
 3477 05c7 77       		.sleb128 -9
 3478 05c8 00       		.byte	0
 3479 05c9 11       		.uleb128 0x11
 3480 05ca AC000000 		.4byte	.LASF67
 3481 05ce 01       		.byte	0x1
 3482 05cf 0209     		.2byte	0x902
 3483 05d1 6B000000 		.4byte	0x6b
 3484 05d5 00000000 		.4byte	.LFB26
 3485 05d9 30000000 		.4byte	.LFE26-.LFB26
 3486 05dd 01       		.uleb128 0x1
 3487 05de 9C       		.byte	0x9c
 3488 05df F3050000 		.4byte	0x5f3
 3489 05e3 0B       		.uleb128 0xb
 3490 05e4 0E030000 		.4byte	.LASF54
 3491 05e8 01       		.byte	0x1
 3492 05e9 0209     		.2byte	0x902
 3493 05eb 6B000000 		.4byte	0x6b
 3494 05ef 02       		.uleb128 0x2
 3495 05f0 91       		.byte	0x91
 3496 05f1 77       		.sleb128 -9
 3497 05f2 00       		.byte	0
 3498 05f3 13       		.uleb128 0x13
 3499 05f4 10010000 		.4byte	.LASF68
 3500 05f8 01       		.byte	0x1
 3501 05f9 1209     		.2byte	0x912
 3502 05fb 00000000 		.4byte	.LFB27
 3503 05ff 2C000000 		.4byte	.LFE27-.LFB27
 3504 0603 01       		.uleb128 0x1
 3505 0604 9C       		.byte	0x9c
 3506 0605 19060000 		.4byte	0x619
 3507 0609 0B       		.uleb128 0xb
 3508 060a 0E030000 		.4byte	.LASF54
 3509 060e 01       		.byte	0x1
 3510 060f 1209     		.2byte	0x912
 3511 0611 6B000000 		.4byte	0x6b
 3512 0615 02       		.uleb128 0x2
 3513 0616 91       		.byte	0x91
 3514 0617 77       		.sleb128 -9
 3515 0618 00       		.byte	0
 3516 0619 13       		.uleb128 0x13
 3517 061a 9B020000 		.4byte	.LASF69
 3518 061e 01       		.byte	0x1
 3519 061f 2009     		.2byte	0x920
 3520 0621 00000000 		.4byte	.LFB28
 3521 0625 2C000000 		.4byte	.LFE28-.LFB28
 3522 0629 01       		.uleb128 0x1
 3523 062a 9C       		.byte	0x9c
 3524 062b 3F060000 		.4byte	0x63f
 3525 062f 0B       		.uleb128 0xb
 3526 0630 0E030000 		.4byte	.LASF54
 3527 0634 01       		.byte	0x1
 3528 0635 2009     		.2byte	0x920
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 113


 3529 0637 6B000000 		.4byte	0x6b
 3530 063b 02       		.uleb128 0x2
 3531 063c 91       		.byte	0x91
 3532 063d 77       		.sleb128 -9
 3533 063e 00       		.byte	0
 3534 063f 13       		.uleb128 0x13
 3535 0640 0F040000 		.4byte	.LASF70
 3536 0644 01       		.byte	0x1
 3537 0645 2F09     		.2byte	0x92f
 3538 0647 00000000 		.4byte	.LFB29
 3539 064b 2C000000 		.4byte	.LFE29-.LFB29
 3540 064f 01       		.uleb128 0x1
 3541 0650 9C       		.byte	0x9c
 3542 0651 65060000 		.4byte	0x665
 3543 0655 0B       		.uleb128 0xb
 3544 0656 0E030000 		.4byte	.LASF54
 3545 065a 01       		.byte	0x1
 3546 065b 2F09     		.2byte	0x92f
 3547 065d 6B000000 		.4byte	0x6b
 3548 0661 02       		.uleb128 0x2
 3549 0662 91       		.byte	0x91
 3550 0663 77       		.sleb128 -9
 3551 0664 00       		.byte	0
 3552 0665 13       		.uleb128 0x13
 3553 0666 DF040000 		.4byte	.LASF71
 3554 066a 01       		.byte	0x1
 3555 066b 3E09     		.2byte	0x93e
 3556 066d 00000000 		.4byte	.LFB30
 3557 0671 16000000 		.4byte	.LFE30-.LFB30
 3558 0675 01       		.uleb128 0x1
 3559 0676 9C       		.byte	0x9c
 3560 0677 8B060000 		.4byte	0x68b
 3561 067b 0B       		.uleb128 0xb
 3562 067c 37050000 		.4byte	.LASF48
 3563 0680 01       		.byte	0x1
 3564 0681 3E09     		.2byte	0x93e
 3565 0683 6B000000 		.4byte	0x6b
 3566 0687 02       		.uleb128 0x2
 3567 0688 91       		.byte	0x91
 3568 0689 77       		.sleb128 -9
 3569 068a 00       		.byte	0
 3570 068b 10       		.uleb128 0x10
 3571 068c 83000000 		.4byte	.LASF72
 3572 0690 01       		.byte	0x1
 3573 0691 5609     		.2byte	0x956
 3574 0693 00000000 		.4byte	.LFB31
 3575 0697 24000000 		.4byte	.LFE31-.LFB31
 3576 069b 01       		.uleb128 0x1
 3577 069c 9C       		.byte	0x9c
 3578 069d 0A       		.uleb128 0xa
 3579 069e A8050000 		.4byte	.LASF73
 3580 06a2 01       		.byte	0x1
 3581 06a3 6A09     		.2byte	0x96a
 3582 06a5 00000000 		.4byte	.LFB32
 3583 06a9 4C000000 		.4byte	.LFE32-.LFB32
 3584 06ad 01       		.uleb128 0x1
 3585 06ae 9C       		.byte	0x9c
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 114


 3586 06af C3060000 		.4byte	0x6c3
 3587 06b3 0B       		.uleb128 0xb
 3588 06b4 C3040000 		.4byte	.LASF74
 3589 06b8 01       		.byte	0x1
 3590 06b9 6A09     		.2byte	0x96a
 3591 06bb 83000000 		.4byte	0x83
 3592 06bf 02       		.uleb128 0x2
 3593 06c0 91       		.byte	0x91
 3594 06c1 74       		.sleb128 -12
 3595 06c2 00       		.byte	0
 3596 06c3 0A       		.uleb128 0xa
 3597 06c4 3C010000 		.4byte	.LASF75
 3598 06c8 01       		.byte	0x1
 3599 06c9 8109     		.2byte	0x981
 3600 06cb 00000000 		.4byte	.LFB33
 3601 06cf 28000000 		.4byte	.LFE33-.LFB33
 3602 06d3 01       		.uleb128 0x1
 3603 06d4 9C       		.byte	0x9c
 3604 06d5 E9060000 		.4byte	0x6e9
 3605 06d9 0B       		.uleb128 0xb
 3606 06da 66060000 		.4byte	.LASF76
 3607 06de 01       		.byte	0x1
 3608 06df 8109     		.2byte	0x981
 3609 06e1 77000000 		.4byte	0x77
 3610 06e5 02       		.uleb128 0x2
 3611 06e6 91       		.byte	0x91
 3612 06e7 76       		.sleb128 -10
 3613 06e8 00       		.byte	0
 3614 06e9 0A       		.uleb128 0xa
 3615 06ea D9000000 		.4byte	.LASF77
 3616 06ee 01       		.byte	0x1
 3617 06ef 8F09     		.2byte	0x98f
 3618 06f1 00000000 		.4byte	.LFB34
 3619 06f5 84000000 		.4byte	.LFE34-.LFB34
 3620 06f9 01       		.uleb128 0x1
 3621 06fa 9C       		.byte	0x9c
 3622 06fb 0F070000 		.4byte	0x70f
 3623 06ff 0B       		.uleb128 0xb
 3624 0700 D4000000 		.4byte	.LASF32
 3625 0704 01       		.byte	0x1
 3626 0705 8F09     		.2byte	0x98f
 3627 0707 83000000 		.4byte	0x83
 3628 070b 02       		.uleb128 0x2
 3629 070c 91       		.byte	0x91
 3630 070d 74       		.sleb128 -12
 3631 070e 00       		.byte	0
 3632 070f 14       		.uleb128 0x14
 3633 0710 D9030000 		.4byte	.LASF78
 3634 0714 01       		.byte	0x1
 3635 0715 AF09     		.2byte	0x9af
 3636 0717 00000000 		.4byte	.LFB35
 3637 071b 24000000 		.4byte	.LFE35-.LFB35
 3638 071f 01       		.uleb128 0x1
 3639 0720 9C       		.byte	0x9c
 3640 0721 0A       		.uleb128 0xa
 3641 0722 C2010000 		.4byte	.LASF79
 3642 0726 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 115


 3643 0727 CC09     		.2byte	0x9cc
 3644 0729 00000000 		.4byte	.LFB36
 3645 072d 68000000 		.4byte	.LFE36-.LFB36
 3646 0731 01       		.uleb128 0x1
 3647 0732 9C       		.byte	0x9c
 3648 0733 45070000 		.4byte	0x745
 3649 0737 15       		.uleb128 0x15
 3650 0738 6900     		.ascii	"i\000"
 3651 073a 01       		.byte	0x1
 3652 073b CE09     		.2byte	0x9ce
 3653 073d 83000000 		.4byte	0x83
 3654 0741 02       		.uleb128 0x2
 3655 0742 91       		.byte	0x91
 3656 0743 74       		.sleb128 -12
 3657 0744 00       		.byte	0
 3658 0745 14       		.uleb128 0x14
 3659 0746 50050000 		.4byte	.LASF80
 3660 074a 01       		.byte	0x1
 3661 074b EB09     		.2byte	0x9eb
 3662 074d 00000000 		.4byte	.LFB37
 3663 0751 20000000 		.4byte	.LFE37-.LFB37
 3664 0755 01       		.uleb128 0x1
 3665 0756 9C       		.byte	0x9c
 3666 0757 10       		.uleb128 0x10
 3667 0758 F9050000 		.4byte	.LASF81
 3668 075c 01       		.byte	0x1
 3669 075d FC09     		.2byte	0x9fc
 3670 075f 00000000 		.4byte	.LFB38
 3671 0763 1C000000 		.4byte	.LFE38-.LFB38
 3672 0767 01       		.uleb128 0x1
 3673 0768 9C       		.byte	0x9c
 3674 0769 10       		.uleb128 0x10
 3675 076a 93000000 		.4byte	.LASF82
 3676 076e 01       		.byte	0x1
 3677 076f 0C0A     		.2byte	0xa0c
 3678 0771 00000000 		.4byte	.LFB39
 3679 0775 1C000000 		.4byte	.LFE39-.LFB39
 3680 0779 01       		.uleb128 0x1
 3681 077a 9C       		.byte	0x9c
 3682 077b 10       		.uleb128 0x10
 3683 077c B0050000 		.4byte	.LASF83
 3684 0780 01       		.byte	0x1
 3685 0781 1C0A     		.2byte	0xa1c
 3686 0783 00000000 		.4byte	.LFB40
 3687 0787 1C000000 		.4byte	.LFE40-.LFB40
 3688 078b 01       		.uleb128 0x1
 3689 078c 9C       		.byte	0x9c
 3690 078d 13       		.uleb128 0x13
 3691 078e 7A060000 		.4byte	.LASF84
 3692 0792 01       		.byte	0x1
 3693 0793 2D0A     		.2byte	0xa2d
 3694 0795 00000000 		.4byte	.LFB41
 3695 0799 20000000 		.4byte	.LFE41-.LFB41
 3696 079d 01       		.uleb128 0x1
 3697 079e 9C       		.byte	0x9c
 3698 079f B3070000 		.4byte	0x7b3
 3699 07a3 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 116


 3700 07a4 D0010000 		.4byte	.LASF64
 3701 07a8 01       		.byte	0x1
 3702 07a9 2D0A     		.2byte	0xa2d
 3703 07ab 83000000 		.4byte	0x83
 3704 07af 02       		.uleb128 0x2
 3705 07b0 91       		.byte	0x91
 3706 07b1 74       		.sleb128 -12
 3707 07b2 00       		.byte	0
 3708 07b3 12       		.uleb128 0x12
 3709 07b4 F4000000 		.4byte	.LASF86
 3710 07b8 01       		.byte	0x1
 3711 07b9 3D0A     		.2byte	0xa3d
 3712 07bb 83000000 		.4byte	0x83
 3713 07bf 00000000 		.4byte	.LFB42
 3714 07c3 18000000 		.4byte	.LFE42-.LFB42
 3715 07c7 01       		.uleb128 0x1
 3716 07c8 9C       		.byte	0x9c
 3717 07c9 12       		.uleb128 0x12
 3718 07ca 5C040000 		.4byte	.LASF87
 3719 07ce 01       		.byte	0x1
 3720 07cf 4D0A     		.2byte	0xa4d
 3721 07d1 83000000 		.4byte	0x83
 3722 07d5 00000000 		.4byte	.LFB43
 3723 07d9 18000000 		.4byte	.LFE43-.LFB43
 3724 07dd 01       		.uleb128 0x1
 3725 07de 9C       		.byte	0x9c
 3726 07df 13       		.uleb128 0x13
 3727 07e0 E7020000 		.4byte	.LASF88
 3728 07e4 01       		.byte	0x1
 3729 07e5 6D0A     		.2byte	0xa6d
 3730 07e7 00000000 		.4byte	.LFB44
 3731 07eb 34000000 		.4byte	.LFE44-.LFB44
 3732 07ef 01       		.uleb128 0x1
 3733 07f0 9C       		.byte	0x9c
 3734 07f1 05080000 		.4byte	0x805
 3735 07f5 0B       		.uleb128 0xb
 3736 07f6 D6010000 		.4byte	.LASF89
 3737 07fa 01       		.byte	0x1
 3738 07fb 6D0A     		.2byte	0xa6d
 3739 07fd 83000000 		.4byte	0x83
 3740 0801 02       		.uleb128 0x2
 3741 0802 91       		.byte	0x91
 3742 0803 74       		.sleb128 -12
 3743 0804 00       		.byte	0
 3744 0805 12       		.uleb128 0x12
 3745 0806 F0010000 		.4byte	.LASF90
 3746 080a 01       		.byte	0x1
 3747 080b 8A0A     		.2byte	0xa8a
 3748 080d 83000000 		.4byte	0x83
 3749 0811 00000000 		.4byte	.LFB45
 3750 0815 18000000 		.4byte	.LFE45-.LFB45
 3751 0819 01       		.uleb128 0x1
 3752 081a 9C       		.byte	0x9c
 3753 081b 10       		.uleb128 0x10
 3754 081c 13020000 		.4byte	.LASF91
 3755 0820 01       		.byte	0x1
 3756 0821 970A     		.2byte	0xa97
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 117


 3757 0823 00000000 		.4byte	.LFB46
 3758 0827 14000000 		.4byte	.LFE46-.LFB46
 3759 082b 01       		.uleb128 0x1
 3760 082c 9C       		.byte	0x9c
 3761 082d 11       		.uleb128 0x11
 3762 082e 77050000 		.4byte	.LASF92
 3763 0832 01       		.byte	0x1
 3764 0833 BA0A     		.2byte	0xaba
 3765 0835 F3000000 		.4byte	0xf3
 3766 0839 00000000 		.4byte	.LFB47
 3767 083d 2C000000 		.4byte	.LFE47-.LFB47
 3768 0841 01       		.uleb128 0x1
 3769 0842 9C       		.byte	0x9c
 3770 0843 75080000 		.4byte	0x875
 3771 0847 0B       		.uleb128 0xb
 3772 0848 0E030000 		.4byte	.LASF54
 3773 084c 01       		.byte	0x1
 3774 084d BA0A     		.2byte	0xaba
 3775 084f 83000000 		.4byte	0x83
 3776 0853 02       		.uleb128 0x2
 3777 0854 91       		.byte	0x91
 3778 0855 6C       		.sleb128 -20
 3779 0856 0B       		.uleb128 0xb
 3780 0857 42040000 		.4byte	.LASF93
 3781 085b 01       		.byte	0x1
 3782 085c BA0A     		.2byte	0xaba
 3783 085e F3000000 		.4byte	0xf3
 3784 0862 02       		.uleb128 0x2
 3785 0863 91       		.byte	0x91
 3786 0864 68       		.sleb128 -24
 3787 0865 0C       		.uleb128 0xc
 3788 0866 3F000000 		.4byte	.LASF94
 3789 086a 01       		.byte	0x1
 3790 086b BC0A     		.2byte	0xabc
 3791 086d F3000000 		.4byte	0xf3
 3792 0871 02       		.uleb128 0x2
 3793 0872 91       		.byte	0x91
 3794 0873 74       		.sleb128 -12
 3795 0874 00       		.byte	0
 3796 0875 11       		.uleb128 0x11
 3797 0876 AB020000 		.4byte	.LASF95
 3798 087a 01       		.byte	0x1
 3799 087b D20A     		.2byte	0xad2
 3800 087d F3000000 		.4byte	0xf3
 3801 0881 00000000 		.4byte	.LFB48
 3802 0885 1C000000 		.4byte	.LFE48-.LFB48
 3803 0889 01       		.uleb128 0x1
 3804 088a 9C       		.byte	0x9c
 3805 088b 9F080000 		.4byte	0x89f
 3806 088f 0B       		.uleb128 0xb
 3807 0890 0E030000 		.4byte	.LASF54
 3808 0894 01       		.byte	0x1
 3809 0895 D20A     		.2byte	0xad2
 3810 0897 83000000 		.4byte	0x83
 3811 089b 02       		.uleb128 0x2
 3812 089c 91       		.byte	0x91
 3813 089d 74       		.sleb128 -12
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 118


 3814 089e 00       		.byte	0
 3815 089f 16       		.uleb128 0x16
 3816 08a0 8D060000 		.4byte	.LASF108
 3817 08a4 01       		.byte	0x1
 3818 08a5 DF0A     		.2byte	0xadf
 3819 08a7 00000000 		.4byte	.LFB49
 3820 08ab 44000000 		.4byte	.LFE49-.LFB49
 3821 08af 01       		.uleb128 0x1
 3822 08b0 9C       		.byte	0x9c
 3823 08b1 C3080000 		.4byte	0x8c3
 3824 08b5 15       		.uleb128 0x15
 3825 08b6 6900     		.ascii	"i\000"
 3826 08b8 01       		.byte	0x1
 3827 08b9 E10A     		.2byte	0xae1
 3828 08bb 83000000 		.4byte	0x83
 3829 08bf 02       		.uleb128 0x2
 3830 08c0 91       		.byte	0x91
 3831 08c1 74       		.sleb128 -12
 3832 08c2 00       		.byte	0
 3833 08c3 13       		.uleb128 0x13
 3834 08c4 E2010000 		.4byte	.LASF96
 3835 08c8 01       		.byte	0x1
 3836 08c9 FF0A     		.2byte	0xaff
 3837 08cb 00000000 		.4byte	.LFB50
 3838 08cf C0000000 		.4byte	.LFE50-.LFB50
 3839 08d3 01       		.uleb128 0x1
 3840 08d4 9C       		.byte	0x9c
 3841 08d5 E9080000 		.4byte	0x8e9
 3842 08d9 0B       		.uleb128 0xb
 3843 08da 9F050000 		.4byte	.LASF97
 3844 08de 01       		.byte	0x1
 3845 08df FF0A     		.2byte	0xaff
 3846 08e1 E9080000 		.4byte	0x8e9
 3847 08e5 02       		.uleb128 0x2
 3848 08e6 91       		.byte	0x91
 3849 08e7 74       		.sleb128 -12
 3850 08e8 00       		.byte	0
 3851 08e9 06       		.uleb128 0x6
 3852 08ea 04       		.byte	0x4
 3853 08eb 83000000 		.4byte	0x83
 3854 08ef 0E       		.uleb128 0xe
 3855 08f0 F3000000 		.4byte	0xf3
 3856 08f4 FF080000 		.4byte	0x8ff
 3857 08f8 0F       		.uleb128 0xf
 3858 08f9 EC000000 		.4byte	0xec
 3859 08fd 04       		.byte	0x4
 3860 08fe 00       		.byte	0
 3861 08ff 17       		.uleb128 0x17
 3862 0900 8C050000 		.4byte	.LASF98
 3863 0904 01       		.byte	0x1
 3864 0905 22       		.byte	0x22
 3865 0906 EF080000 		.4byte	0x8ef
 3866 090a 05       		.uleb128 0x5
 3867 090b 03       		.byte	0x3
 3868 090c 00000000 		.4byte	CySysTickCallbacks
 3869 0910 18       		.uleb128 0x18
 3870 0911 6E040000 		.4byte	.LASF99
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 119


 3871 0915 01       		.byte	0x1
 3872 0916 1B       		.byte	0x1b
 3873 0917 83000000 		.4byte	0x83
 3874 091b 05       		.uleb128 0x5
 3875 091c 03       		.byte	0x3
 3876 091d 00000000 		.4byte	cydelayFreqHz
 3877 0921 18       		.uleb128 0x18
 3878 0922 2D010000 		.4byte	.LASF100
 3879 0926 01       		.byte	0x1
 3880 0927 1C       		.byte	0x1c
 3881 0928 83000000 		.4byte	0x83
 3882 092c 05       		.uleb128 0x5
 3883 092d 03       		.byte	0x3
 3884 092e 00000000 		.4byte	cydelayFreqKhz
 3885 0932 18       		.uleb128 0x18
 3886 0933 DA050000 		.4byte	.LASF101
 3887 0937 01       		.byte	0x1
 3888 0938 1D       		.byte	0x1d
 3889 0939 6B000000 		.4byte	0x6b
 3890 093d 05       		.uleb128 0x5
 3891 093e 03       		.byte	0x3
 3892 093f 00000000 		.4byte	cydelayFreqMhz
 3893 0943 18       		.uleb128 0x18
 3894 0944 B5010000 		.4byte	.LASF102
 3895 0948 01       		.byte	0x1
 3896 0949 1E       		.byte	0x1e
 3897 094a 83000000 		.4byte	0x83
 3898 094e 05       		.uleb128 0x5
 3899 094f 03       		.byte	0x3
 3900 0950 00000000 		.4byte	cydelay32kMs
 3901 0954 18       		.uleb128 0x18
 3902 0955 FE030000 		.4byte	.LASF103
 3903 0959 01       		.byte	0x1
 3904 095a 35       		.byte	0x35
 3905 095b 83000000 		.4byte	0x83
 3906 095f 05       		.uleb128 0x5
 3907 0960 03       		.byte	0x3
 3908 0961 00000000 		.4byte	CySysTickInitVar
 3909 0965 0E       		.uleb128 0xe
 3910 0966 75090000 		.4byte	0x975
 3911 096a 75090000 		.4byte	0x975
 3912 096e 0F       		.uleb128 0xf
 3913 096f EC000000 		.4byte	0xec
 3914 0973 2D       		.byte	0x2d
 3915 0974 00       		.byte	0
 3916 0975 19       		.uleb128 0x19
 3917 0976 6B000000 		.4byte	0x6b
 3918 097a 18       		.uleb128 0x18
 3919 097b 4B040000 		.4byte	.LASF104
 3920 097f 01       		.byte	0x1
 3921 0980 3A       		.byte	0x3a
 3922 0981 8B090000 		.4byte	0x98b
 3923 0985 05       		.uleb128 0x5
 3924 0986 03       		.byte	0x3
 3925 0987 00000000 		.4byte	cyImoFreqMhz2Reg
 3926 098b 19       		.uleb128 0x19
 3927 098c 65090000 		.4byte	0x965
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 120


 3928 0990 00       		.byte	0
 3929              		.section	.debug_abbrev,"",%progbits
 3930              	.Ldebug_abbrev0:
 3931 0000 01       		.uleb128 0x1
 3932 0001 11       		.uleb128 0x11
 3933 0002 01       		.byte	0x1
 3934 0003 25       		.uleb128 0x25
 3935 0004 0E       		.uleb128 0xe
 3936 0005 13       		.uleb128 0x13
 3937 0006 0B       		.uleb128 0xb
 3938 0007 03       		.uleb128 0x3
 3939 0008 0E       		.uleb128 0xe
 3940 0009 1B       		.uleb128 0x1b
 3941 000a 0E       		.uleb128 0xe
 3942 000b 55       		.uleb128 0x55
 3943 000c 17       		.uleb128 0x17
 3944 000d 11       		.uleb128 0x11
 3945 000e 01       		.uleb128 0x1
 3946 000f 10       		.uleb128 0x10
 3947 0010 17       		.uleb128 0x17
 3948 0011 00       		.byte	0
 3949 0012 00       		.byte	0
 3950 0013 02       		.uleb128 0x2
 3951 0014 24       		.uleb128 0x24
 3952 0015 00       		.byte	0
 3953 0016 0B       		.uleb128 0xb
 3954 0017 0B       		.uleb128 0xb
 3955 0018 3E       		.uleb128 0x3e
 3956 0019 0B       		.uleb128 0xb
 3957 001a 03       		.uleb128 0x3
 3958 001b 0E       		.uleb128 0xe
 3959 001c 00       		.byte	0
 3960 001d 00       		.byte	0
 3961 001e 03       		.uleb128 0x3
 3962 001f 24       		.uleb128 0x24
 3963 0020 00       		.byte	0
 3964 0021 0B       		.uleb128 0xb
 3965 0022 0B       		.uleb128 0xb
 3966 0023 3E       		.uleb128 0x3e
 3967 0024 0B       		.uleb128 0xb
 3968 0025 03       		.uleb128 0x3
 3969 0026 08       		.uleb128 0x8
 3970 0027 00       		.byte	0
 3971 0028 00       		.byte	0
 3972 0029 04       		.uleb128 0x4
 3973 002a 16       		.uleb128 0x16
 3974 002b 00       		.byte	0
 3975 002c 03       		.uleb128 0x3
 3976 002d 0E       		.uleb128 0xe
 3977 002e 3A       		.uleb128 0x3a
 3978 002f 0B       		.uleb128 0xb
 3979 0030 3B       		.uleb128 0x3b
 3980 0031 05       		.uleb128 0x5
 3981 0032 49       		.uleb128 0x49
 3982 0033 13       		.uleb128 0x13
 3983 0034 00       		.byte	0
 3984 0035 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 121


 3985 0036 05       		.uleb128 0x5
 3986 0037 35       		.uleb128 0x35
 3987 0038 00       		.byte	0
 3988 0039 49       		.uleb128 0x49
 3989 003a 13       		.uleb128 0x13
 3990 003b 00       		.byte	0
 3991 003c 00       		.byte	0
 3992 003d 06       		.uleb128 0x6
 3993 003e 0F       		.uleb128 0xf
 3994 003f 00       		.byte	0
 3995 0040 0B       		.uleb128 0xb
 3996 0041 0B       		.uleb128 0xb
 3997 0042 49       		.uleb128 0x49
 3998 0043 13       		.uleb128 0x13
 3999 0044 00       		.byte	0
 4000 0045 00       		.byte	0
 4001 0046 07       		.uleb128 0x7
 4002 0047 15       		.uleb128 0x15
 4003 0048 00       		.byte	0
 4004 0049 27       		.uleb128 0x27
 4005 004a 19       		.uleb128 0x19
 4006 004b 00       		.byte	0
 4007 004c 00       		.byte	0
 4008 004d 08       		.uleb128 0x8
 4009 004e 16       		.uleb128 0x16
 4010 004f 00       		.byte	0
 4011 0050 03       		.uleb128 0x3
 4012 0051 0E       		.uleb128 0xe
 4013 0052 3A       		.uleb128 0x3a
 4014 0053 0B       		.uleb128 0xb
 4015 0054 3B       		.uleb128 0x3b
 4016 0055 0B       		.uleb128 0xb
 4017 0056 49       		.uleb128 0x49
 4018 0057 13       		.uleb128 0x13
 4019 0058 00       		.byte	0
 4020 0059 00       		.byte	0
 4021 005a 09       		.uleb128 0x9
 4022 005b 2E       		.uleb128 0x2e
 4023 005c 00       		.byte	0
 4024 005d 3F       		.uleb128 0x3f
 4025 005e 19       		.uleb128 0x19
 4026 005f 03       		.uleb128 0x3
 4027 0060 0E       		.uleb128 0xe
 4028 0061 3A       		.uleb128 0x3a
 4029 0062 0B       		.uleb128 0xb
 4030 0063 3B       		.uleb128 0x3b
 4031 0064 0B       		.uleb128 0xb
 4032 0065 27       		.uleb128 0x27
 4033 0066 19       		.uleb128 0x19
 4034 0067 11       		.uleb128 0x11
 4035 0068 01       		.uleb128 0x1
 4036 0069 12       		.uleb128 0x12
 4037 006a 06       		.uleb128 0x6
 4038 006b 40       		.uleb128 0x40
 4039 006c 18       		.uleb128 0x18
 4040 006d 9742     		.uleb128 0x2117
 4041 006f 19       		.uleb128 0x19
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 122


 4042 0070 00       		.byte	0
 4043 0071 00       		.byte	0
 4044 0072 0A       		.uleb128 0xa
 4045 0073 2E       		.uleb128 0x2e
 4046 0074 01       		.byte	0x1
 4047 0075 3F       		.uleb128 0x3f
 4048 0076 19       		.uleb128 0x19
 4049 0077 03       		.uleb128 0x3
 4050 0078 0E       		.uleb128 0xe
 4051 0079 3A       		.uleb128 0x3a
 4052 007a 0B       		.uleb128 0xb
 4053 007b 3B       		.uleb128 0x3b
 4054 007c 05       		.uleb128 0x5
 4055 007d 27       		.uleb128 0x27
 4056 007e 19       		.uleb128 0x19
 4057 007f 11       		.uleb128 0x11
 4058 0080 01       		.uleb128 0x1
 4059 0081 12       		.uleb128 0x12
 4060 0082 06       		.uleb128 0x6
 4061 0083 40       		.uleb128 0x40
 4062 0084 18       		.uleb128 0x18
 4063 0085 9642     		.uleb128 0x2116
 4064 0087 19       		.uleb128 0x19
 4065 0088 01       		.uleb128 0x1
 4066 0089 13       		.uleb128 0x13
 4067 008a 00       		.byte	0
 4068 008b 00       		.byte	0
 4069 008c 0B       		.uleb128 0xb
 4070 008d 05       		.uleb128 0x5
 4071 008e 00       		.byte	0
 4072 008f 03       		.uleb128 0x3
 4073 0090 0E       		.uleb128 0xe
 4074 0091 3A       		.uleb128 0x3a
 4075 0092 0B       		.uleb128 0xb
 4076 0093 3B       		.uleb128 0x3b
 4077 0094 05       		.uleb128 0x5
 4078 0095 49       		.uleb128 0x49
 4079 0096 13       		.uleb128 0x13
 4080 0097 02       		.uleb128 0x2
 4081 0098 18       		.uleb128 0x18
 4082 0099 00       		.byte	0
 4083 009a 00       		.byte	0
 4084 009b 0C       		.uleb128 0xc
 4085 009c 34       		.uleb128 0x34
 4086 009d 00       		.byte	0
 4087 009e 03       		.uleb128 0x3
 4088 009f 0E       		.uleb128 0xe
 4089 00a0 3A       		.uleb128 0x3a
 4090 00a1 0B       		.uleb128 0xb
 4091 00a2 3B       		.uleb128 0x3b
 4092 00a3 05       		.uleb128 0x5
 4093 00a4 49       		.uleb128 0x49
 4094 00a5 13       		.uleb128 0x13
 4095 00a6 02       		.uleb128 0x2
 4096 00a7 18       		.uleb128 0x18
 4097 00a8 00       		.byte	0
 4098 00a9 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 123


 4099 00aa 0D       		.uleb128 0xd
 4100 00ab 2E       		.uleb128 0x2e
 4101 00ac 01       		.byte	0x1
 4102 00ad 3F       		.uleb128 0x3f
 4103 00ae 19       		.uleb128 0x19
 4104 00af 03       		.uleb128 0x3
 4105 00b0 0E       		.uleb128 0xe
 4106 00b1 3A       		.uleb128 0x3a
 4107 00b2 0B       		.uleb128 0xb
 4108 00b3 3B       		.uleb128 0x3b
 4109 00b4 05       		.uleb128 0x5
 4110 00b5 27       		.uleb128 0x27
 4111 00b6 19       		.uleb128 0x19
 4112 00b7 49       		.uleb128 0x49
 4113 00b8 13       		.uleb128 0x13
 4114 00b9 11       		.uleb128 0x11
 4115 00ba 01       		.uleb128 0x1
 4116 00bb 12       		.uleb128 0x12
 4117 00bc 06       		.uleb128 0x6
 4118 00bd 40       		.uleb128 0x40
 4119 00be 18       		.uleb128 0x18
 4120 00bf 9642     		.uleb128 0x2116
 4121 00c1 19       		.uleb128 0x19
 4122 00c2 01       		.uleb128 0x1
 4123 00c3 13       		.uleb128 0x13
 4124 00c4 00       		.byte	0
 4125 00c5 00       		.byte	0
 4126 00c6 0E       		.uleb128 0xe
 4127 00c7 01       		.uleb128 0x1
 4128 00c8 01       		.byte	0x1
 4129 00c9 49       		.uleb128 0x49
 4130 00ca 13       		.uleb128 0x13
 4131 00cb 01       		.uleb128 0x1
 4132 00cc 13       		.uleb128 0x13
 4133 00cd 00       		.byte	0
 4134 00ce 00       		.byte	0
 4135 00cf 0F       		.uleb128 0xf
 4136 00d0 21       		.uleb128 0x21
 4137 00d1 00       		.byte	0
 4138 00d2 49       		.uleb128 0x49
 4139 00d3 13       		.uleb128 0x13
 4140 00d4 2F       		.uleb128 0x2f
 4141 00d5 0B       		.uleb128 0xb
 4142 00d6 00       		.byte	0
 4143 00d7 00       		.byte	0
 4144 00d8 10       		.uleb128 0x10
 4145 00d9 2E       		.uleb128 0x2e
 4146 00da 00       		.byte	0
 4147 00db 3F       		.uleb128 0x3f
 4148 00dc 19       		.uleb128 0x19
 4149 00dd 03       		.uleb128 0x3
 4150 00de 0E       		.uleb128 0xe
 4151 00df 3A       		.uleb128 0x3a
 4152 00e0 0B       		.uleb128 0xb
 4153 00e1 3B       		.uleb128 0x3b
 4154 00e2 05       		.uleb128 0x5
 4155 00e3 27       		.uleb128 0x27
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 124


 4156 00e4 19       		.uleb128 0x19
 4157 00e5 11       		.uleb128 0x11
 4158 00e6 01       		.uleb128 0x1
 4159 00e7 12       		.uleb128 0x12
 4160 00e8 06       		.uleb128 0x6
 4161 00e9 40       		.uleb128 0x40
 4162 00ea 18       		.uleb128 0x18
 4163 00eb 9742     		.uleb128 0x2117
 4164 00ed 19       		.uleb128 0x19
 4165 00ee 00       		.byte	0
 4166 00ef 00       		.byte	0
 4167 00f0 11       		.uleb128 0x11
 4168 00f1 2E       		.uleb128 0x2e
 4169 00f2 01       		.byte	0x1
 4170 00f3 3F       		.uleb128 0x3f
 4171 00f4 19       		.uleb128 0x19
 4172 00f5 03       		.uleb128 0x3
 4173 00f6 0E       		.uleb128 0xe
 4174 00f7 3A       		.uleb128 0x3a
 4175 00f8 0B       		.uleb128 0xb
 4176 00f9 3B       		.uleb128 0x3b
 4177 00fa 05       		.uleb128 0x5
 4178 00fb 27       		.uleb128 0x27
 4179 00fc 19       		.uleb128 0x19
 4180 00fd 49       		.uleb128 0x49
 4181 00fe 13       		.uleb128 0x13
 4182 00ff 11       		.uleb128 0x11
 4183 0100 01       		.uleb128 0x1
 4184 0101 12       		.uleb128 0x12
 4185 0102 06       		.uleb128 0x6
 4186 0103 40       		.uleb128 0x40
 4187 0104 18       		.uleb128 0x18
 4188 0105 9742     		.uleb128 0x2117
 4189 0107 19       		.uleb128 0x19
 4190 0108 01       		.uleb128 0x1
 4191 0109 13       		.uleb128 0x13
 4192 010a 00       		.byte	0
 4193 010b 00       		.byte	0
 4194 010c 12       		.uleb128 0x12
 4195 010d 2E       		.uleb128 0x2e
 4196 010e 00       		.byte	0
 4197 010f 3F       		.uleb128 0x3f
 4198 0110 19       		.uleb128 0x19
 4199 0111 03       		.uleb128 0x3
 4200 0112 0E       		.uleb128 0xe
 4201 0113 3A       		.uleb128 0x3a
 4202 0114 0B       		.uleb128 0xb
 4203 0115 3B       		.uleb128 0x3b
 4204 0116 05       		.uleb128 0x5
 4205 0117 27       		.uleb128 0x27
 4206 0118 19       		.uleb128 0x19
 4207 0119 49       		.uleb128 0x49
 4208 011a 13       		.uleb128 0x13
 4209 011b 11       		.uleb128 0x11
 4210 011c 01       		.uleb128 0x1
 4211 011d 12       		.uleb128 0x12
 4212 011e 06       		.uleb128 0x6
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 125


 4213 011f 40       		.uleb128 0x40
 4214 0120 18       		.uleb128 0x18
 4215 0121 9742     		.uleb128 0x2117
 4216 0123 19       		.uleb128 0x19
 4217 0124 00       		.byte	0
 4218 0125 00       		.byte	0
 4219 0126 13       		.uleb128 0x13
 4220 0127 2E       		.uleb128 0x2e
 4221 0128 01       		.byte	0x1
 4222 0129 3F       		.uleb128 0x3f
 4223 012a 19       		.uleb128 0x19
 4224 012b 03       		.uleb128 0x3
 4225 012c 0E       		.uleb128 0xe
 4226 012d 3A       		.uleb128 0x3a
 4227 012e 0B       		.uleb128 0xb
 4228 012f 3B       		.uleb128 0x3b
 4229 0130 05       		.uleb128 0x5
 4230 0131 27       		.uleb128 0x27
 4231 0132 19       		.uleb128 0x19
 4232 0133 11       		.uleb128 0x11
 4233 0134 01       		.uleb128 0x1
 4234 0135 12       		.uleb128 0x12
 4235 0136 06       		.uleb128 0x6
 4236 0137 40       		.uleb128 0x40
 4237 0138 18       		.uleb128 0x18
 4238 0139 9742     		.uleb128 0x2117
 4239 013b 19       		.uleb128 0x19
 4240 013c 01       		.uleb128 0x1
 4241 013d 13       		.uleb128 0x13
 4242 013e 00       		.byte	0
 4243 013f 00       		.byte	0
 4244 0140 14       		.uleb128 0x14
 4245 0141 2E       		.uleb128 0x2e
 4246 0142 00       		.byte	0
 4247 0143 3F       		.uleb128 0x3f
 4248 0144 19       		.uleb128 0x19
 4249 0145 03       		.uleb128 0x3
 4250 0146 0E       		.uleb128 0xe
 4251 0147 3A       		.uleb128 0x3a
 4252 0148 0B       		.uleb128 0xb
 4253 0149 3B       		.uleb128 0x3b
 4254 014a 05       		.uleb128 0x5
 4255 014b 27       		.uleb128 0x27
 4256 014c 19       		.uleb128 0x19
 4257 014d 11       		.uleb128 0x11
 4258 014e 01       		.uleb128 0x1
 4259 014f 12       		.uleb128 0x12
 4260 0150 06       		.uleb128 0x6
 4261 0151 40       		.uleb128 0x40
 4262 0152 18       		.uleb128 0x18
 4263 0153 9642     		.uleb128 0x2116
 4264 0155 19       		.uleb128 0x19
 4265 0156 00       		.byte	0
 4266 0157 00       		.byte	0
 4267 0158 15       		.uleb128 0x15
 4268 0159 34       		.uleb128 0x34
 4269 015a 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 126


 4270 015b 03       		.uleb128 0x3
 4271 015c 08       		.uleb128 0x8
 4272 015d 3A       		.uleb128 0x3a
 4273 015e 0B       		.uleb128 0xb
 4274 015f 3B       		.uleb128 0x3b
 4275 0160 05       		.uleb128 0x5
 4276 0161 49       		.uleb128 0x49
 4277 0162 13       		.uleb128 0x13
 4278 0163 02       		.uleb128 0x2
 4279 0164 18       		.uleb128 0x18
 4280 0165 00       		.byte	0
 4281 0166 00       		.byte	0
 4282 0167 16       		.uleb128 0x16
 4283 0168 2E       		.uleb128 0x2e
 4284 0169 01       		.byte	0x1
 4285 016a 03       		.uleb128 0x3
 4286 016b 0E       		.uleb128 0xe
 4287 016c 3A       		.uleb128 0x3a
 4288 016d 0B       		.uleb128 0xb
 4289 016e 3B       		.uleb128 0x3b
 4290 016f 05       		.uleb128 0x5
 4291 0170 27       		.uleb128 0x27
 4292 0171 19       		.uleb128 0x19
 4293 0172 11       		.uleb128 0x11
 4294 0173 01       		.uleb128 0x1
 4295 0174 12       		.uleb128 0x12
 4296 0175 06       		.uleb128 0x6
 4297 0176 40       		.uleb128 0x40
 4298 0177 18       		.uleb128 0x18
 4299 0178 9642     		.uleb128 0x2116
 4300 017a 19       		.uleb128 0x19
 4301 017b 01       		.uleb128 0x1
 4302 017c 13       		.uleb128 0x13
 4303 017d 00       		.byte	0
 4304 017e 00       		.byte	0
 4305 017f 17       		.uleb128 0x17
 4306 0180 34       		.uleb128 0x34
 4307 0181 00       		.byte	0
 4308 0182 03       		.uleb128 0x3
 4309 0183 0E       		.uleb128 0xe
 4310 0184 3A       		.uleb128 0x3a
 4311 0185 0B       		.uleb128 0xb
 4312 0186 3B       		.uleb128 0x3b
 4313 0187 0B       		.uleb128 0xb
 4314 0188 49       		.uleb128 0x49
 4315 0189 13       		.uleb128 0x13
 4316 018a 02       		.uleb128 0x2
 4317 018b 18       		.uleb128 0x18
 4318 018c 00       		.byte	0
 4319 018d 00       		.byte	0
 4320 018e 18       		.uleb128 0x18
 4321 018f 34       		.uleb128 0x34
 4322 0190 00       		.byte	0
 4323 0191 03       		.uleb128 0x3
 4324 0192 0E       		.uleb128 0xe
 4325 0193 3A       		.uleb128 0x3a
 4326 0194 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 127


 4327 0195 3B       		.uleb128 0x3b
 4328 0196 0B       		.uleb128 0xb
 4329 0197 49       		.uleb128 0x49
 4330 0198 13       		.uleb128 0x13
 4331 0199 3F       		.uleb128 0x3f
 4332 019a 19       		.uleb128 0x19
 4333 019b 02       		.uleb128 0x2
 4334 019c 18       		.uleb128 0x18
 4335 019d 00       		.byte	0
 4336 019e 00       		.byte	0
 4337 019f 19       		.uleb128 0x19
 4338 01a0 26       		.uleb128 0x26
 4339 01a1 00       		.byte	0
 4340 01a2 49       		.uleb128 0x49
 4341 01a3 13       		.uleb128 0x13
 4342 01a4 00       		.byte	0
 4343 01a5 00       		.byte	0
 4344 01a6 00       		.byte	0
 4345              		.section	.debug_aranges,"",%progbits
 4346 0000 9C010000 		.4byte	0x19c
 4347 0004 0200     		.2byte	0x2
 4348 0006 00000000 		.4byte	.Ldebug_info0
 4349 000a 04       		.byte	0x4
 4350 000b 00       		.byte	0
 4351 000c 0000     		.2byte	0
 4352 000e 0000     		.2byte	0
 4353 0010 00000000 		.4byte	.LFB2
 4354 0014 1C000000 		.4byte	.LFE2-.LFB2
 4355 0018 00000000 		.4byte	.LFB3
 4356 001c 1C000000 		.4byte	.LFE3-.LFB3
 4357 0020 00000000 		.4byte	.LFB4
 4358 0024 48000000 		.4byte	.LFE4-.LFB4
 4359 0028 00000000 		.4byte	.LFB5
 4360 002c 34000000 		.4byte	.LFE5-.LFB5
 4361 0030 00000000 		.4byte	.LFB6
 4362 0034 48000000 		.4byte	.LFE6-.LFB6
 4363 0038 00000000 		.4byte	.LFB7
 4364 003c 9C000000 		.4byte	.LFE7-.LFB7
 4365 0040 00000000 		.4byte	.LFB8
 4366 0044 74000000 		.4byte	.LFE8-.LFB8
 4367 0048 00000000 		.4byte	.LFB9
 4368 004c 30000000 		.4byte	.LFE9-.LFB9
 4369 0050 00000000 		.4byte	.LFB10
 4370 0054 20000000 		.4byte	.LFE10-.LFB10
 4371 0058 00000000 		.4byte	.LFB11
 4372 005c 58000000 		.4byte	.LFE11-.LFB11
 4373 0060 00000000 		.4byte	.LFB12
 4374 0064 64000000 		.4byte	.LFE12-.LFB12
 4375 0068 00000000 		.4byte	.LFB13
 4376 006c 2C000000 		.4byte	.LFE13-.LFB13
 4377 0070 00000000 		.4byte	.LFB14
 4378 0074 18000000 		.4byte	.LFE14-.LFB14
 4379 0078 00000000 		.4byte	.LFB15
 4380 007c 14000000 		.4byte	.LFE15-.LFB15
 4381 0080 00000000 		.4byte	.LFB16
 4382 0084 30000000 		.4byte	.LFE16-.LFB16
 4383 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 128


 4384 008c 24000000 		.4byte	.LFE17-.LFB17
 4385 0090 00000000 		.4byte	.LFB18
 4386 0094 1C000000 		.4byte	.LFE18-.LFB18
 4387 0098 00000000 		.4byte	.LFB19
 4388 009c 48000000 		.4byte	.LFE19-.LFB19
 4389 00a0 00000000 		.4byte	.LFB20
 4390 00a4 34000000 		.4byte	.LFE20-.LFB20
 4391 00a8 00000000 		.4byte	.LFB21
 4392 00ac 4C000000 		.4byte	.LFE21-.LFB21
 4393 00b0 00000000 		.4byte	.LFB22
 4394 00b4 36000000 		.4byte	.LFE22-.LFB22
 4395 00b8 00000000 		.4byte	.LFB23
 4396 00bc A8000000 		.4byte	.LFE23-.LFB23
 4397 00c0 00000000 		.4byte	.LFB24
 4398 00c4 58000000 		.4byte	.LFE24-.LFB24
 4399 00c8 00000000 		.4byte	.LFB25
 4400 00cc 2C000000 		.4byte	.LFE25-.LFB25
 4401 00d0 00000000 		.4byte	.LFB26
 4402 00d4 30000000 		.4byte	.LFE26-.LFB26
 4403 00d8 00000000 		.4byte	.LFB27
 4404 00dc 2C000000 		.4byte	.LFE27-.LFB27
 4405 00e0 00000000 		.4byte	.LFB28
 4406 00e4 2C000000 		.4byte	.LFE28-.LFB28
 4407 00e8 00000000 		.4byte	.LFB29
 4408 00ec 2C000000 		.4byte	.LFE29-.LFB29
 4409 00f0 00000000 		.4byte	.LFB30
 4410 00f4 16000000 		.4byte	.LFE30-.LFB30
 4411 00f8 00000000 		.4byte	.LFB31
 4412 00fc 24000000 		.4byte	.LFE31-.LFB31
 4413 0100 00000000 		.4byte	.LFB32
 4414 0104 4C000000 		.4byte	.LFE32-.LFB32
 4415 0108 00000000 		.4byte	.LFB33
 4416 010c 28000000 		.4byte	.LFE33-.LFB33
 4417 0110 00000000 		.4byte	.LFB34
 4418 0114 84000000 		.4byte	.LFE34-.LFB34
 4419 0118 00000000 		.4byte	.LFB35
 4420 011c 24000000 		.4byte	.LFE35-.LFB35
 4421 0120 00000000 		.4byte	.LFB36
 4422 0124 68000000 		.4byte	.LFE36-.LFB36
 4423 0128 00000000 		.4byte	.LFB37
 4424 012c 20000000 		.4byte	.LFE37-.LFB37
 4425 0130 00000000 		.4byte	.LFB38
 4426 0134 1C000000 		.4byte	.LFE38-.LFB38
 4427 0138 00000000 		.4byte	.LFB39
 4428 013c 1C000000 		.4byte	.LFE39-.LFB39
 4429 0140 00000000 		.4byte	.LFB40
 4430 0144 1C000000 		.4byte	.LFE40-.LFB40
 4431 0148 00000000 		.4byte	.LFB41
 4432 014c 20000000 		.4byte	.LFE41-.LFB41
 4433 0150 00000000 		.4byte	.LFB42
 4434 0154 18000000 		.4byte	.LFE42-.LFB42
 4435 0158 00000000 		.4byte	.LFB43
 4436 015c 18000000 		.4byte	.LFE43-.LFB43
 4437 0160 00000000 		.4byte	.LFB44
 4438 0164 34000000 		.4byte	.LFE44-.LFB44
 4439 0168 00000000 		.4byte	.LFB45
 4440 016c 18000000 		.4byte	.LFE45-.LFB45
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 129


 4441 0170 00000000 		.4byte	.LFB46
 4442 0174 14000000 		.4byte	.LFE46-.LFB46
 4443 0178 00000000 		.4byte	.LFB47
 4444 017c 2C000000 		.4byte	.LFE47-.LFB47
 4445 0180 00000000 		.4byte	.LFB48
 4446 0184 1C000000 		.4byte	.LFE48-.LFB48
 4447 0188 00000000 		.4byte	.LFB49
 4448 018c 44000000 		.4byte	.LFE49-.LFB49
 4449 0190 00000000 		.4byte	.LFB50
 4450 0194 C0000000 		.4byte	.LFE50-.LFB50
 4451 0198 00000000 		.4byte	0
 4452 019c 00000000 		.4byte	0
 4453              		.section	.debug_ranges,"",%progbits
 4454              	.Ldebug_ranges0:
 4455 0000 00000000 		.4byte	.LFB2
 4456 0004 1C000000 		.4byte	.LFE2
 4457 0008 00000000 		.4byte	.LFB3
 4458 000c 1C000000 		.4byte	.LFE3
 4459 0010 00000000 		.4byte	.LFB4
 4460 0014 48000000 		.4byte	.LFE4
 4461 0018 00000000 		.4byte	.LFB5
 4462 001c 34000000 		.4byte	.LFE5
 4463 0020 00000000 		.4byte	.LFB6
 4464 0024 48000000 		.4byte	.LFE6
 4465 0028 00000000 		.4byte	.LFB7
 4466 002c 9C000000 		.4byte	.LFE7
 4467 0030 00000000 		.4byte	.LFB8
 4468 0034 74000000 		.4byte	.LFE8
 4469 0038 00000000 		.4byte	.LFB9
 4470 003c 30000000 		.4byte	.LFE9
 4471 0040 00000000 		.4byte	.LFB10
 4472 0044 20000000 		.4byte	.LFE10
 4473 0048 00000000 		.4byte	.LFB11
 4474 004c 58000000 		.4byte	.LFE11
 4475 0050 00000000 		.4byte	.LFB12
 4476 0054 64000000 		.4byte	.LFE12
 4477 0058 00000000 		.4byte	.LFB13
 4478 005c 2C000000 		.4byte	.LFE13
 4479 0060 00000000 		.4byte	.LFB14
 4480 0064 18000000 		.4byte	.LFE14
 4481 0068 00000000 		.4byte	.LFB15
 4482 006c 14000000 		.4byte	.LFE15
 4483 0070 00000000 		.4byte	.LFB16
 4484 0074 30000000 		.4byte	.LFE16
 4485 0078 00000000 		.4byte	.LFB17
 4486 007c 24000000 		.4byte	.LFE17
 4487 0080 00000000 		.4byte	.LFB18
 4488 0084 1C000000 		.4byte	.LFE18
 4489 0088 00000000 		.4byte	.LFB19
 4490 008c 48000000 		.4byte	.LFE19
 4491 0090 00000000 		.4byte	.LFB20
 4492 0094 34000000 		.4byte	.LFE20
 4493 0098 00000000 		.4byte	.LFB21
 4494 009c 4C000000 		.4byte	.LFE21
 4495 00a0 00000000 		.4byte	.LFB22
 4496 00a4 36000000 		.4byte	.LFE22
 4497 00a8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 130


 4498 00ac A8000000 		.4byte	.LFE23
 4499 00b0 00000000 		.4byte	.LFB24
 4500 00b4 58000000 		.4byte	.LFE24
 4501 00b8 00000000 		.4byte	.LFB25
 4502 00bc 2C000000 		.4byte	.LFE25
 4503 00c0 00000000 		.4byte	.LFB26
 4504 00c4 30000000 		.4byte	.LFE26
 4505 00c8 00000000 		.4byte	.LFB27
 4506 00cc 2C000000 		.4byte	.LFE27
 4507 00d0 00000000 		.4byte	.LFB28
 4508 00d4 2C000000 		.4byte	.LFE28
 4509 00d8 00000000 		.4byte	.LFB29
 4510 00dc 2C000000 		.4byte	.LFE29
 4511 00e0 00000000 		.4byte	.LFB30
 4512 00e4 16000000 		.4byte	.LFE30
 4513 00e8 00000000 		.4byte	.LFB31
 4514 00ec 24000000 		.4byte	.LFE31
 4515 00f0 00000000 		.4byte	.LFB32
 4516 00f4 4C000000 		.4byte	.LFE32
 4517 00f8 00000000 		.4byte	.LFB33
 4518 00fc 28000000 		.4byte	.LFE33
 4519 0100 00000000 		.4byte	.LFB34
 4520 0104 84000000 		.4byte	.LFE34
 4521 0108 00000000 		.4byte	.LFB35
 4522 010c 24000000 		.4byte	.LFE35
 4523 0110 00000000 		.4byte	.LFB36
 4524 0114 68000000 		.4byte	.LFE36
 4525 0118 00000000 		.4byte	.LFB37
 4526 011c 20000000 		.4byte	.LFE37
 4527 0120 00000000 		.4byte	.LFB38
 4528 0124 1C000000 		.4byte	.LFE38
 4529 0128 00000000 		.4byte	.LFB39
 4530 012c 1C000000 		.4byte	.LFE39
 4531 0130 00000000 		.4byte	.LFB40
 4532 0134 1C000000 		.4byte	.LFE40
 4533 0138 00000000 		.4byte	.LFB41
 4534 013c 20000000 		.4byte	.LFE41
 4535 0140 00000000 		.4byte	.LFB42
 4536 0144 18000000 		.4byte	.LFE42
 4537 0148 00000000 		.4byte	.LFB43
 4538 014c 18000000 		.4byte	.LFE43
 4539 0150 00000000 		.4byte	.LFB44
 4540 0154 34000000 		.4byte	.LFE44
 4541 0158 00000000 		.4byte	.LFB45
 4542 015c 18000000 		.4byte	.LFE45
 4543 0160 00000000 		.4byte	.LFB46
 4544 0164 14000000 		.4byte	.LFE46
 4545 0168 00000000 		.4byte	.LFB47
 4546 016c 2C000000 		.4byte	.LFE47
 4547 0170 00000000 		.4byte	.LFB48
 4548 0174 1C000000 		.4byte	.LFE48
 4549 0178 00000000 		.4byte	.LFB49
 4550 017c 44000000 		.4byte	.LFE49
 4551 0180 00000000 		.4byte	.LFB50
 4552 0184 C0000000 		.4byte	.LFE50
 4553 0188 00000000 		.4byte	0
 4554 018c 00000000 		.4byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 131


 4555              		.section	.debug_line,"",%progbits
 4556              	.Ldebug_line0:
 4557 0000 AB040000 		.section	.debug_str,"MS",%progbits,1
 4557      02004D00 
 4557      00000201 
 4557      FB0E0D00 
 4557      01010101 
 4558              	.LASF57:
 4559 0000 72616D56 		.ascii	"ramVectorTable\000"
 4559      6563746F 
 4559      72546162 
 4559      6C6500
 4560              	.LASF10:
 4561 000f 75696E74 		.ascii	"uint16\000"
 4561      313600
 4562              	.LASF50:
 4563 0016 696E7453 		.ascii	"intState\000"
 4563      74617465 
 4563      00
 4564              	.LASF27:
 4565 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4565      73436C6B 
 4565      57726974 
 4565      65486663 
 4565      6C6B4469 
 4566              	.LASF56:
 4567 0038 6F6C6449 		.ascii	"oldIsr\000"
 4567      737200
 4568              	.LASF94:
 4569 003f 72657456 		.ascii	"retVal\000"
 4569      616C00
 4570              	.LASF49:
 4571 0046 43794469 		.ascii	"CyDisableInts\000"
 4571      7361626C 
 4571      65496E74 
 4571      7300
 4572              	.LASF7:
 4573 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 4573      206C6F6E 
 4573      6720756E 
 4573      7369676E 
 4573      65642069 
 4574              	.LASF33:
 4575 006b 70617261 		.ascii	"parameters\000"
 4575      6D657465 
 4575      727300
 4576              	.LASF51:
 4577 0076 4379456E 		.ascii	"CyEnableInts\000"
 4577      61626C65 
 4577      496E7473 
 4577      00
 4578              	.LASF72:
 4579 0083 4379536F 		.ascii	"CySoftwareReset\000"
 4579      66747761 
 4579      72655265 
 4579      73657400 
 4580              	.LASF82:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 132


 4581 0093 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4581      73546963 
 4581      6B456E61 
 4581      626C6549 
 4581      6E746572 
 4582              	.LASF67:
 4583 00ac 4379496E 		.ascii	"CyIntGetState\000"
 4583      74476574 
 4583      53746174 
 4583      6500
 4584              	.LASF6:
 4585 00ba 6C6F6E67 		.ascii	"long long int\000"
 4585      206C6F6E 
 4585      6720696E 
 4585      7400
 4586              	.LASF0:
 4587 00c8 7369676E 		.ascii	"signed char\000"
 4587      65642063 
 4587      68617200 
 4588              	.LASF32:
 4589 00d4 66726571 		.ascii	"freq\000"
 4589      00
 4590              	.LASF77:
 4591 00d9 43794465 		.ascii	"CyDelayFreq\000"
 4591      6C617946 
 4591      72657100 
 4592              	.LASF24:
 4593 00e5 696E7465 		.ascii	"interruptState\000"
 4593      72727570 
 4593      74537461 
 4593      746500
 4594              	.LASF86:
 4595 00f4 43795379 		.ascii	"CySysTickGetReload\000"
 4595      73546963 
 4595      6B476574 
 4595      52656C6F 
 4595      616400
 4596              	.LASF4:
 4597 0107 6C6F6E67 		.ascii	"long int\000"
 4597      20696E74 
 4597      00
 4598              	.LASF68:
 4599 0110 4379496E 		.ascii	"CyIntDisable\000"
 4599      74446973 
 4599      61626C65 
 4599      00
 4600              	.LASF34:
 4601 011d 72656756 		.ascii	"regValues\000"
 4601      616C7565 
 4601      7300
 4602              	.LASF9:
 4603 0127 75696E74 		.ascii	"uint8\000"
 4603      3800
 4604              	.LASF100:
 4605 012d 63796465 		.ascii	"cydelayFreqKhz\000"
 4605      6C617946 
 4605      7265714B 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 133


 4605      687A00
 4606              	.LASF75:
 4607 013c 43794465 		.ascii	"CyDelayUs\000"
 4607      6C617955 
 4607      7300
 4608              	.LASF13:
 4609 0146 646F7562 		.ascii	"double\000"
 4609      6C6500
 4610              	.LASF63:
 4611 014d 73686966 		.ascii	"shift\000"
 4611      7400
 4612              	.LASF46:
 4613 0153 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4613      734C7664 
 4613      436C6561 
 4613      72496E74 
 4613      65727275 
 4614              	.LASF11:
 4615 016a 75696E74 		.ascii	"uint32\000"
 4615      333200
 4616              	.LASF40:
 4617 0171 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4617      73436C6B 
 4617      45636F52 
 4617      65616453 
 4617      74617475 
 4618              	.LASF52:
 4619 0187 6D61736B 		.ascii	"mask\000"
 4619      00
 4620              	.LASF35:
 4621 018c 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4621      73436C6B 
 4621      47657453 
 4621      7973636C 
 4621      6B536F75 
 4622              	.LASF65:
 4623 01a4 4379496E 		.ascii	"CyIntGetPriority\000"
 4623      74476574 
 4623      5072696F 
 4623      72697479 
 4623      00
 4624              	.LASF102:
 4625 01b5 63796465 		.ascii	"cydelay32kMs\000"
 4625      6C617933 
 4625      326B4D73 
 4625      00
 4626              	.LASF79:
 4627 01c2 43795379 		.ascii	"CySysTickInit\000"
 4627      73546963 
 4627      6B496E69 
 4627      7400
 4628              	.LASF64:
 4629 01d0 76616C75 		.ascii	"value\000"
 4629      6500
 4630              	.LASF89:
 4631 01d6 636C6F63 		.ascii	"clockSource\000"
 4631      6B536F75 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 134


 4631      72636500 
 4632              	.LASF96:
 4633 01e2 43794765 		.ascii	"CyGetUniqueId\000"
 4633      74556E69 
 4633      71756549 
 4633      6400
 4634              	.LASF90:
 4635 01f0 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4635      73546963 
 4635      6B476574 
 4635      436F756E 
 4635      74466C61 
 4636              	.LASF8:
 4637 0206 756E7369 		.ascii	"unsigned int\000"
 4637      676E6564 
 4637      20696E74 
 4637      00
 4638              	.LASF91:
 4639 0213 43795379 		.ascii	"CySysTickClear\000"
 4639      73546963 
 4639      6B436C65 
 4639      617200
 4640              	.LASF107:
 4641 0222 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\dev\\FW\\start\\s"
 4641      79707265 
 4641      73735C73 
 4641      79737465 
 4641      6D2D7374 
 4642 024f 74617274 		.ascii	"tart_v11.cydsn\000"
 4642      5F763131 
 4642      2E637964 
 4642      736E00
 4643              	.LASF5:
 4644 025e 6C6F6E67 		.ascii	"long unsigned int\000"
 4644      20756E73 
 4644      69676E65 
 4644      6420696E 
 4644      7400
 4645              	.LASF85:
 4646 0270 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4646      734C7664 
 4646      47657449 
 4646      6E746572 
 4646      72757074 
 4647              	.LASF23:
 4648 028b 43795379 		.ascii	"CySysClkImoStop\000"
 4648      73436C6B 
 4648      496D6F53 
 4648      746F7000 
 4649              	.LASF69:
 4650 029b 4379496E 		.ascii	"CyIntSetPending\000"
 4650      74536574 
 4650      50656E64 
 4650      696E6700 
 4651              	.LASF95:
 4652 02ab 43795379 		.ascii	"CySysTickGetCallback\000"
 4652      73546963 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 135


 4652      6B476574 
 4652      43616C6C 
 4652      6261636B 
 4653              	.LASF47:
 4654 02c0 43795379 		.ascii	"CySysGetResetReason\000"
 4654      73476574 
 4654      52657365 
 4654      74526561 
 4654      736F6E00 
 4655              	.LASF3:
 4656 02d4 73686F72 		.ascii	"short unsigned int\000"
 4656      7420756E 
 4656      7369676E 
 4656      65642069 
 4656      6E7400
 4657              	.LASF88:
 4658 02e7 43795379 		.ascii	"CySysTickSetClockSource\000"
 4658      73546963 
 4658      6B536574 
 4658      436C6F63 
 4658      6B536F75 
 4659              	.LASF59:
 4660 02ff 4379496E 		.ascii	"CyIntSetVector\000"
 4660      74536574 
 4660      56656374 
 4660      6F7200
 4661              	.LASF54:
 4662 030e 6E756D62 		.ascii	"number\000"
 4662      657200
 4663              	.LASF62:
 4664 0315 7072696F 		.ascii	"priority\000"
 4664      72697479 
 4664      00
 4665              	.LASF31:
 4666 031e 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4666      73436C6B 
 4666      57726974 
 4666      65496D6F 
 4666      46726571 
 4667              	.LASF105:
 4668 0333 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4668      43313120 
 4668      352E342E 
 4668      31203230 
 4668      31363036 
 4669 0366 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4669      20726576 
 4669      6973696F 
 4669      6E203233 
 4669      37373135 
 4670 0399 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4670      66756E63 
 4670      74696F6E 
 4670      2D736563 
 4670      74696F6E 
 4671              	.LASF53:
 4672 03c1 4379496E 		.ascii	"CyIntSetSysVector\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 136


 4672      74536574 
 4672      53797356 
 4672      6563746F 
 4672      7200
 4673              	.LASF17:
 4674 03d3 72656733 		.ascii	"reg32\000"
 4674      3200
 4675              	.LASF78:
 4676 03d9 43795379 		.ascii	"CySysTickStart\000"
 4676      73546963 
 4676      6B537461 
 4676      727400
 4677              	.LASF38:
 4678 03e8 72657475 		.ascii	"returnStatus\000"
 4678      726E5374 
 4678      61747573 
 4678      00
 4679              	.LASF20:
 4680 03f5 73697A65 		.ascii	"sizetype\000"
 4680      74797065 
 4680      00
 4681              	.LASF103:
 4682 03fe 43795379 		.ascii	"CySysTickInitVar\000"
 4682      73546963 
 4682      6B496E69 
 4682      74566172 
 4682      00
 4683              	.LASF70:
 4684 040f 4379496E 		.ascii	"CyIntClearPending\000"
 4684      74436C65 
 4684      61725065 
 4684      6E64696E 
 4684      6700
 4685              	.LASF19:
 4686 0421 6C6F6E67 		.ascii	"long double\000"
 4686      20646F75 
 4686      626C6500 
 4687              	.LASF55:
 4688 042d 61646472 		.ascii	"address\000"
 4688      65737300 
 4689              	.LASF26:
 4690 0435 73797363 		.ascii	"sysclkSource\000"
 4690      6C6B536F 
 4690      75726365 
 4690      00
 4691              	.LASF93:
 4692 0442 66756E63 		.ascii	"function\000"
 4692      74696F6E 
 4692      00
 4693              	.LASF104:
 4694 044b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4694      6F467265 
 4694      714D687A 
 4694      32526567 
 4694      00
 4695              	.LASF87:
 4696 045c 43795379 		.ascii	"CySysTickGetValue\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 137


 4696      73546963 
 4696      6B476574 
 4696      56616C75 
 4696      6500
 4697              	.LASF99:
 4698 046e 63796465 		.ascii	"cydelayFreqHz\000"
 4698      6C617946 
 4698      72657148 
 4698      7A00
 4699              	.LASF61:
 4700 047c 4379496E 		.ascii	"CyIntSetPriority\000"
 4700      74536574 
 4700      5072696F 
 4700      72697479 
 4700      00
 4701              	.LASF12:
 4702 048d 666C6F61 		.ascii	"float\000"
 4702      7400
 4703              	.LASF43:
 4704 0493 43795379 		.ascii	"CySysLvdEnable\000"
 4704      734C7664 
 4704      456E6162 
 4704      6C6500
 4705              	.LASF21:
 4706 04a2 63795379 		.ascii	"cySysTickCallback\000"
 4706      73546963 
 4706      6B43616C 
 4706      6C626163 
 4706      6B00
 4707              	.LASF60:
 4708 04b4 4379496E 		.ascii	"CyIntGetVector\000"
 4708      74476574 
 4708      56656374 
 4708      6F7200
 4709              	.LASF74:
 4710 04c3 6D696C6C 		.ascii	"milliseconds\000"
 4710      69736563 
 4710      6F6E6473 
 4710      00
 4711              	.LASF16:
 4712 04d0 72656738 		.ascii	"reg8\000"
 4712      00
 4713              	.LASF44:
 4714 04d5 74687265 		.ascii	"threshold\000"
 4714      73686F6C 
 4714      6400
 4715              	.LASF71:
 4716 04df 43794861 		.ascii	"CyHalt\000"
 4716      6C7400
 4717              	.LASF1:
 4718 04e6 756E7369 		.ascii	"unsigned char\000"
 4718      676E6564 
 4718      20636861 
 4718      7200
 4719              	.LASF2:
 4720 04f4 73686F72 		.ascii	"short int\000"
 4720      7420696E 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 138


 4720      7400
 4721              	.LASF66:
 4722 04fe 4379496E 		.ascii	"CyIntEnable\000"
 4722      74456E61 
 4722      626C6500 
 4723              	.LASF58:
 4724 050a 4379496E 		.ascii	"CyIntGetSysVector\000"
 4724      74476574 
 4724      53797356 
 4724      6563746F 
 4724      7200
 4725              	.LASF29:
 4726 051c 636C6B53 		.ascii	"clkSelect\000"
 4726      656C6563 
 4726      7400
 4727              	.LASF36:
 4728 0526 43795379 		.ascii	"CySysClkEcoStart\000"
 4728      73436C6B 
 4728      45636F53 
 4728      74617274 
 4728      00
 4729              	.LASF48:
 4730 0537 72656173 		.ascii	"reason\000"
 4730      6F6E00
 4731              	.LASF14:
 4732 053e 63686172 		.ascii	"char\000"
 4732      00
 4733              	.LASF18:
 4734 0543 63796973 		.ascii	"cyisraddress\000"
 4734      72616464 
 4734      72657373 
 4734      00
 4735              	.LASF80:
 4736 0550 43795379 		.ascii	"CySysTickEnable\000"
 4736      73546963 
 4736      6B456E61 
 4736      626C6500 
 4737              	.LASF28:
 4738 0560 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4738      73436C6B 
 4738      57726974 
 4738      65537973 
 4738      636C6B44 
 4739              	.LASF92:
 4740 0577 43795379 		.ascii	"CySysTickSetCallback\000"
 4740      73546963 
 4740      6B536574 
 4740      43616C6C 
 4740      6261636B 
 4741              	.LASF98:
 4742 058c 43795379 		.ascii	"CySysTickCallbacks\000"
 4742      73546963 
 4742      6B43616C 
 4742      6C626163 
 4742      6B7300
 4743              	.LASF97:
 4744 059f 756E6971 		.ascii	"uniqueId\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 139


 4744      75654964 
 4744      00
 4745              	.LASF73:
 4746 05a8 43794465 		.ascii	"CyDelay\000"
 4746      6C617900 
 4747              	.LASF83:
 4748 05b0 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4748      73546963 
 4748      6B446973 
 4748      61626C65 
 4748      496E7465 
 4749              	.LASF45:
 4750 05ca 43795379 		.ascii	"CySysLvdDisable\000"
 4750      734C7664 
 4750      44697361 
 4750      626C6500 
 4751              	.LASF101:
 4752 05da 63796465 		.ascii	"cydelayFreqMhz\000"
 4752      6C617946 
 4752      7265714D 
 4752      687A00
 4753              	.LASF39:
 4754 05e9 43795379 		.ascii	"CySysClkEcoStop\000"
 4754      73436C6B 
 4754      45636F53 
 4754      746F7000 
 4755              	.LASF81:
 4756 05f9 43795379 		.ascii	"CySysTickStop\000"
 4756      73546963 
 4756      6B53746F 
 4756      7000
 4757              	.LASF37:
 4758 0607 74696D65 		.ascii	"timeoutUs\000"
 4758      6F757455 
 4758      7300
 4759              	.LASF30:
 4760 0611 64697669 		.ascii	"divider\000"
 4760      64657200 
 4761              	.LASF42:
 4762 0619 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 4762      73436C6B 
 4762      57726974 
 4762      6545636F 
 4762      44697600 
 4763              	.LASF15:
 4764 062d 63797374 		.ascii	"cystatus\000"
 4764      61747573 
 4764      00
 4765              	.LASF22:
 4766 0636 43795379 		.ascii	"CySysClkImoStart\000"
 4766      73436C6B 
 4766      496D6F53 
 4766      74617274 
 4766      00
 4767              	.LASF106:
 4768 0647 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4768      72617465 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cczhv7Ef.s 			page 140


 4768      645F536F 
 4768      75726365 
 4768      5C50536F 
 4769              	.LASF76:
 4770 0666 6D696372 		.ascii	"microseconds\000"
 4770      6F736563 
 4770      6F6E6473 
 4770      00
 4771              	.LASF25:
 4772 0673 746D7052 		.ascii	"tmpReg\000"
 4772      656700
 4773              	.LASF84:
 4774 067a 43795379 		.ascii	"CySysTickSetReload\000"
 4774      73546963 
 4774      6B536574 
 4774      52656C6F 
 4774      616400
 4775              	.LASF108:
 4776 068d 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4776      73546963 
 4776      6B536572 
 4776      76696365 
 4776      43616C6C 
 4777              	.LASF41:
 4778 06a7 72657475 		.ascii	"returnValue\000"
 4778      726E5661 
 4778      6C756500 
 4779              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
