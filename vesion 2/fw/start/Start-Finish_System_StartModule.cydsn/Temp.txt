    /*
        GateState = Gate_Start_Read();
        if (GateState)
        {
            LedBlink(FREQ_INIT_BLINK);
        }
        else
        {
            LedBlink(FREQ_ERR_BLINK);
        }     
        
        InChar = UART_PC_UartGetChar();
        
        if (0u != InChar){
            UART_PC_UartPutString("You enter : ");
            UART_PC_UartPutChar(InChar);
            UART_PC_UartPutString("\r\n");
            UART_PC_UartPutString("You state Gate : ");
            UART_PC_UartPutString((GateState)? "No Pressed" : "Pressed" );
            UART_PC_UartPutString("\r\n");

        }
        
        UTime = RTC_1_GetUnixTime();
        (void) localtime_r(&UTime, &lt); 
        strftime(ResTime, sizeof(ResTime), default_format, &lt); 
        sprintf(buff, "Time --> %s:%d \r\n", ResTime, RTCgetMs()); 
        UART_PC_UartPutString(buff);
        CyDelay(10);
        */
!!!!!!!!!!!!!!!!!!!!!!!!
        while((Ticks < 50) && (!OkResponse)){
            RecvData = (UART_PC_UartGetChar() & 0xFF);
                #ifdef DEBUG_W_UART
                //UART_PC_UartPutString("Ticks:\r\n");
                //UART_PC_UartPutChar((Ticks | 0x30));
                //UART_PC_UartPutString("\r\n");    
                #endif    
                
            if (RecvData == 'q') 
            {
                OkResponse = 1;
            }
            CyDelay(400);
            Ticks++;
        }
@@

uint32_t UnpackAndCheckData(uint64_t* Resp)
{
    uint32_t Stat = 0U, EndResp = 0U, Ticks = 0U;
    uint32_t _ST = 0U;
    uint32_t SQ;
    
    while((Ticks < 50) && (!EndResp))
    {
        char RecvD; 
        RecvD = UART_PC_UartGetChar();
        
        Ticks++;
    }
    return Stat;
}