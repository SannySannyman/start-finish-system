ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"svt.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	PROTO_STATE,1,1
  18              		.comm	LenD1,1,1
  19              		.comm	LenD2,1,1
  20              		.comm	LenSeq,1,1
  21              		.comm	LenChS,1,1
  22              		.comm	LenC,1,1
  23              		.section	.text.UnpackData,"ax",%progbits
  24              		.align	2
  25              		.global	UnpackData
  26              		.code	16
  27              		.thumb_func
  28              		.type	UnpackData, %function
  29              	UnpackData:
  30              	.LFB2:
  31              		.file 1 ".\\svt.c"
   1:.\svt.c       **** #include "svt.h"
   2:.\svt.c       **** 
   3:.\svt.c       **** 
   4:.\svt.c       **** uint8_t UnpackData(struct Resp *Data, uint8_t InByte)
   5:.\svt.c       **** {
  32              		.loc 1 5 0
  33              		.cfi_startproc
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 89B0     		sub	sp, sp, #36
  42              		.cfi_def_cfa_offset 56
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 7861     		str	r0, [r7, #20]
  46 0008 0A1C     		mov	r2, r1
  47 000a 1323     		mov	r3, #19
  48 000c FB18     		add	r3, r7, r3
  49 000e 1A70     		strb	r2, [r3]
   6:.\svt.c       **** 	uint32_t ERR_CODE = 0;
  50              		.loc 1 6 0
  51 0010 0023     		mov	r3, #0
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 2


  52 0012 FB61     		str	r3, [r7, #28]
   7:.\svt.c       **** 	InByte = DecodeByte(InByte);
  53              		.loc 1 7 0
  54 0014 1323     		mov	r3, #19
  55 0016 FE18     		add	r6, r7, r3
  56 0018 1323     		mov	r3, #19
  57 001a FB18     		add	r3, r7, r3
  58 001c 1B78     		ldrb	r3, [r3]
  59 001e 181C     		mov	r0, r3
  60 0020 FFF7FEFF 		bl	DecodeByte
  61 0024 031C     		mov	r3, r0
  62 0026 3370     		strb	r3, [r6]
   8:.\svt.c       ****     if (InByte == STX)
  63              		.loc 1 8 0
  64 0028 1323     		mov	r3, #19
  65 002a FB18     		add	r3, r7, r3
  66 002c 1B78     		ldrb	r3, [r3]
  67 002e 3C2B     		cmp	r3, #60
  68 0030 16D1     		bne	.L2
   9:.\svt.c       **** 	{
  10:.\svt.c       **** 	    PROTO_STATE = READ_SQ;
  69              		.loc 1 10 0
  70 0032 B94B     		ldr	r3, .L44
  71 0034 0122     		mov	r2, #1
  72 0036 1A70     		strb	r2, [r3]
  11:.\svt.c       **** 		ResetPacket(Data);
  73              		.loc 1 11 0
  74 0038 7B69     		ldr	r3, [r7, #20]
  75 003a 181C     		mov	r0, r3
  76 003c FFF7FEFF 		bl	ResetPacket
  12:.\svt.c       **** 		LenSeq = 0;
  77              		.loc 1 12 0
  78 0040 B64B     		ldr	r3, .L44+4
  79 0042 0022     		mov	r2, #0
  80 0044 1A70     		strb	r2, [r3]
  13:.\svt.c       **** 		LenC = 0;
  81              		.loc 1 13 0
  82 0046 B64B     		ldr	r3, .L44+8
  83 0048 0022     		mov	r2, #0
  84 004a 1A70     		strb	r2, [r3]
  14:.\svt.c       **** 		LenChS = 0;
  85              		.loc 1 14 0
  86 004c B54B     		ldr	r3, .L44+12
  87 004e 0022     		mov	r2, #0
  88 0050 1A70     		strb	r2, [r3]
  15:.\svt.c       **** 		LenD1 = 0;
  89              		.loc 1 15 0
  90 0052 B54B     		ldr	r3, .L44+16
  91 0054 0022     		mov	r2, #0
  92 0056 1A70     		strb	r2, [r3]
  16:.\svt.c       **** 		LenD2 = 0;
  93              		.loc 1 16 0
  94 0058 B44B     		ldr	r3, .L44+20
  95 005a 0022     		mov	r2, #0
  96 005c 1A70     		strb	r2, [r3]
  97 005e 54E1     		b	.L3
  98              	.L2:
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 3


  17:.\svt.c       ****     }
  18:.\svt.c       ****     else
  19:.\svt.c       ****     {
  20:.\svt.c       ****     	switch(PROTO_STATE){
  99              		.loc 1 20 0
 100 0060 AD4B     		ldr	r3, .L44
 101 0062 1B78     		ldrb	r3, [r3]
 102 0064 092B     		cmp	r3, #9
 103 0066 00D9     		bls	.LCB64
 104 0068 4BE1     		b	.L4	@long jump
 105              	.LCB64:
 106 006a 9A00     		lsl	r2, r3, #2
 107 006c B04B     		ldr	r3, .L44+24
 108 006e D318     		add	r3, r2, r3
 109 0070 1B68     		ldr	r3, [r3]
 110 0072 9F46     		mov	pc, r3
 111              		.section	.rodata
 112              		.align	2
 113              	.L6:
 114 0000 02030000 		.word	.L4
 115 0004 74000000 		.word	.L5
 116 0008 CE000000 		.word	.L7
 117 000c F4000000 		.word	.L8
 118 0010 50010000 		.word	.L9
 119 0014 76010000 		.word	.L10
 120 0018 F6010000 		.word	.L11
 121 001c 56020000 		.word	.L12
 122 0020 7C020000 		.word	.L13
 123 0024 D8020000 		.word	.L14
 124              		.section	.text.UnpackData
 125              	.L5:
  21:.\svt.c       ****     		case READ_SQ:
  22:.\svt.c       ****     		{
  23:.\svt.c       ****     			if(CheckSymb(InByte))
 126              		.loc 1 23 0
 127 0074 1323     		mov	r3, #19
 128 0076 FB18     		add	r3, r7, r3
 129 0078 1B78     		ldrb	r3, [r3]
 130 007a 181C     		mov	r0, r3
 131 007c FFF7FEFF 		bl	CheckSymb
 132 0080 031E     		sub	r3, r0, #0
 133 0082 1ED0     		beq	.L15
  24:.\svt.c       ****     			{
  25:.\svt.c       ****     				Data->Seq |= InByte;
 134              		.loc 1 25 0
 135 0084 7B69     		ldr	r3, [r7, #20]
 136 0086 1A88     		ldrh	r2, [r3]
 137 0088 1323     		mov	r3, #19
 138 008a FB18     		add	r3, r7, r3
 139 008c 1B78     		ldrb	r3, [r3]
 140 008e 9BB2     		uxth	r3, r3
 141 0090 1343     		orr	r3, r2
 142 0092 9AB2     		uxth	r2, r3
 143 0094 7B69     		ldr	r3, [r7, #20]
 144 0096 1A80     		strh	r2, [r3]
  26:.\svt.c       ****     				LenSeq++;
 145              		.loc 1 26 0
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 4


 146 0098 A04B     		ldr	r3, .L44+4
 147 009a 1B78     		ldrb	r3, [r3]
 148 009c 0133     		add	r3, r3, #1
 149 009e DAB2     		uxtb	r2, r3
 150 00a0 9E4B     		ldr	r3, .L44+4
 151 00a2 1A70     		strb	r2, [r3]
  27:.\svt.c       ****     				if (LenSeq == LEN_SEQ)
 152              		.loc 1 27 0
 153 00a4 9D4B     		ldr	r3, .L44+4
 154 00a6 1B78     		ldrb	r3, [r3]
 155 00a8 042B     		cmp	r3, #4
 156 00aa 03D1     		bne	.L16
  28:.\svt.c       ****     				{
  29:.\svt.c       ****     					PROTO_STATE = READ_FR1;
 157              		.loc 1 29 0
 158 00ac 9A4B     		ldr	r3, .L44
 159 00ae 0222     		mov	r2, #2
 160 00b0 1A70     		strb	r2, [r3]
  30:.\svt.c       ****     				}
  31:.\svt.c       ****     				else
  32:.\svt.c       ****     				{
  33:.\svt.c       ****     					Data->Seq = Data->Seq << HALF_BYTE;
  34:.\svt.c       ****     				}
  35:.\svt.c       ****     			}
  36:.\svt.c       ****     			else{
  37:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
  38:.\svt.c       ****     				ERR_CODE = BAD_SEQ;
  39:.\svt.c       ****     			}
  40:.\svt.c       ****     			break;
 161              		.loc 1 40 0
 162 00b2 2AE1     		b	.L3
 163              	.L16:
  33:.\svt.c       ****     				}
 164              		.loc 1 33 0
 165 00b4 7B69     		ldr	r3, [r7, #20]
 166 00b6 1B88     		ldrh	r3, [r3]
 167 00b8 1B01     		lsl	r3, r3, #4
 168 00ba 9AB2     		uxth	r2, r3
 169 00bc 7B69     		ldr	r3, [r7, #20]
 170 00be 1A80     		strh	r2, [r3]
 171              		.loc 1 40 0
 172 00c0 23E1     		b	.L3
 173              	.L15:
  37:.\svt.c       ****     				ERR_CODE = BAD_SEQ;
 174              		.loc 1 37 0
 175 00c2 954B     		ldr	r3, .L44
 176 00c4 0022     		mov	r2, #0
 177 00c6 1A70     		strb	r2, [r3]
  38:.\svt.c       ****     			}
 178              		.loc 1 38 0
 179 00c8 0123     		mov	r3, #1
 180 00ca FB61     		str	r3, [r7, #28]
 181              		.loc 1 40 0
 182 00cc 1DE1     		b	.L3
 183              	.L7:
  41:.\svt.c       ****     		}
  42:.\svt.c       ****     		
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 5


  43:.\svt.c       ****     		case READ_FR1:
  44:.\svt.c       ****     		{
  45:.\svt.c       ****     			if (InByte == FR1)
 184              		.loc 1 45 0
 185 00ce 1323     		mov	r3, #19
 186 00d0 FB18     		add	r3, r7, r3
 187 00d2 1B78     		ldrb	r3, [r3]
 188 00d4 212B     		cmp	r3, #33
 189 00d6 03D1     		bne	.L19
  46:.\svt.c       ****     			{
  47:.\svt.c       ****     				PROTO_STATE = READ_COM;
 190              		.loc 1 47 0
 191 00d8 8F4B     		ldr	r3, .L44
 192 00da 0322     		mov	r2, #3
 193 00dc 1A70     		strb	r2, [r3]
  48:.\svt.c       ****     			}
  49:.\svt.c       ****     			else
  50:.\svt.c       ****     			{
  51:.\svt.c       ****     				ResetPacket(Data);
  52:.\svt.c       ****     				ERR_CODE = NO_FR1;
  53:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
  54:.\svt.c       ****     			}
  55:.\svt.c       ****     			break;
 194              		.loc 1 55 0
 195 00de 14E1     		b	.L3
 196              	.L19:
  51:.\svt.c       ****     				ERR_CODE = NO_FR1;
 197              		.loc 1 51 0
 198 00e0 7B69     		ldr	r3, [r7, #20]
 199 00e2 181C     		mov	r0, r3
 200 00e4 FFF7FEFF 		bl	ResetPacket
  52:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 201              		.loc 1 52 0
 202 00e8 0223     		mov	r3, #2
 203 00ea FB61     		str	r3, [r7, #28]
  53:.\svt.c       ****     			}
 204              		.loc 1 53 0
 205 00ec 8A4B     		ldr	r3, .L44
 206 00ee 0022     		mov	r2, #0
 207 00f0 1A70     		strb	r2, [r3]
 208              		.loc 1 55 0
 209 00f2 0AE1     		b	.L3
 210              	.L8:
  56:.\svt.c       ****     		}
  57:.\svt.c       **** 
  58:.\svt.c       ****     		case READ_COM:
  59:.\svt.c       ****     		{
  60:.\svt.c       ****     			//printf("InByte Command: %02X\n", InByte);
  61:.\svt.c       ****     			if(CheckSymb(InByte))
 211              		.loc 1 61 0
 212 00f4 1323     		mov	r3, #19
 213 00f6 FB18     		add	r3, r7, r3
 214 00f8 1B78     		ldrb	r3, [r3]
 215 00fa 181C     		mov	r0, r3
 216 00fc FFF7FEFF 		bl	CheckSymb
 217 0100 031E     		sub	r3, r0, #0
 218 0102 1BD0     		beq	.L21
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 6


  62:.\svt.c       ****     			{
  63:.\svt.c       ****     				Data->Command |= InByte;
 219              		.loc 1 63 0
 220 0104 7B69     		ldr	r3, [r7, #20]
 221 0106 5A68     		ldr	r2, [r3, #4]
 222 0108 1323     		mov	r3, #19
 223 010a FB18     		add	r3, r7, r3
 224 010c 1B78     		ldrb	r3, [r3]
 225 010e 1A43     		orr	r2, r3
 226 0110 7B69     		ldr	r3, [r7, #20]
 227 0112 5A60     		str	r2, [r3, #4]
  64:.\svt.c       ****     				LenC ++;
 228              		.loc 1 64 0
 229 0114 824B     		ldr	r3, .L44+8
 230 0116 1B78     		ldrb	r3, [r3]
 231 0118 0133     		add	r3, r3, #1
 232 011a DAB2     		uxtb	r2, r3
 233 011c 804B     		ldr	r3, .L44+8
 234 011e 1A70     		strb	r2, [r3]
  65:.\svt.c       ****     				//printf("LenC Command: %d\n", LenC);
  66:.\svt.c       ****     				if (LenC == LEN_COM)
 235              		.loc 1 66 0
 236 0120 7F4B     		ldr	r3, .L44+8
 237 0122 1B78     		ldrb	r3, [r3]
 238 0124 022B     		cmp	r3, #2
 239 0126 03D1     		bne	.L22
  67:.\svt.c       ****     				{
  68:.\svt.c       ****     					PROTO_STATE = READ_FR2;
 240              		.loc 1 68 0
 241 0128 7B4B     		ldr	r3, .L44
 242 012a 0422     		mov	r2, #4
 243 012c 1A70     		strb	r2, [r3]
  69:.\svt.c       ****     				}
  70:.\svt.c       ****     				else
  71:.\svt.c       ****     				{
  72:.\svt.c       ****     					Data->Command = Data->Command << HALF_BYTE;
  73:.\svt.c       ****     				}
  74:.\svt.c       ****     			}
  75:.\svt.c       ****     			else
  76:.\svt.c       ****     			{
  77:.\svt.c       ****     				ResetPacket(Data);
  78:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
  79:.\svt.c       ****     				ERR_CODE = INV_COMM;
  80:.\svt.c       ****     			}
  81:.\svt.c       ****     			break;
 244              		.loc 1 81 0
 245 012e ECE0     		b	.L3
 246              	.L22:
  72:.\svt.c       ****     				}
 247              		.loc 1 72 0
 248 0130 7B69     		ldr	r3, [r7, #20]
 249 0132 5B68     		ldr	r3, [r3, #4]
 250 0134 1A01     		lsl	r2, r3, #4
 251 0136 7B69     		ldr	r3, [r7, #20]
 252 0138 5A60     		str	r2, [r3, #4]
 253              		.loc 1 81 0
 254 013a E6E0     		b	.L3
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 7


 255              	.L21:
  77:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 256              		.loc 1 77 0
 257 013c 7B69     		ldr	r3, [r7, #20]
 258 013e 181C     		mov	r0, r3
 259 0140 FFF7FEFF 		bl	ResetPacket
  78:.\svt.c       ****     				ERR_CODE = INV_COMM;
 260              		.loc 1 78 0
 261 0144 744B     		ldr	r3, .L44
 262 0146 0022     		mov	r2, #0
 263 0148 1A70     		strb	r2, [r3]
  79:.\svt.c       ****     			}
 264              		.loc 1 79 0
 265 014a 0323     		mov	r3, #3
 266 014c FB61     		str	r3, [r7, #28]
 267              		.loc 1 81 0
 268 014e DCE0     		b	.L3
 269              	.L9:
  82:.\svt.c       ****     		}
  83:.\svt.c       ****     		case READ_FR2:
  84:.\svt.c       ****     		{
  85:.\svt.c       ****     			if (InByte == FR2)
 270              		.loc 1 85 0
 271 0150 1323     		mov	r3, #19
 272 0152 FB18     		add	r3, r7, r3
 273 0154 1B78     		ldrb	r3, [r3]
 274 0156 3A2B     		cmp	r3, #58
 275 0158 03D1     		bne	.L25
  86:.\svt.c       ****     			{
  87:.\svt.c       ****     				PROTO_STATE = READ_DA1;
 276              		.loc 1 87 0
 277 015a 6F4B     		ldr	r3, .L44
 278 015c 0522     		mov	r2, #5
 279 015e 1A70     		strb	r2, [r3]
  88:.\svt.c       ****     			}
  89:.\svt.c       ****     			else
  90:.\svt.c       ****     			{
  91:.\svt.c       ****     				ResetPacket(Data);
  92:.\svt.c       ****     				ERR_CODE = NO_FR2;
  93:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
  94:.\svt.c       ****     			}
  95:.\svt.c       ****     			break;
 280              		.loc 1 95 0
 281 0160 D3E0     		b	.L3
 282              	.L25:
  91:.\svt.c       ****     				ERR_CODE = NO_FR2;
 283              		.loc 1 91 0
 284 0162 7B69     		ldr	r3, [r7, #20]
 285 0164 181C     		mov	r0, r3
 286 0166 FFF7FEFF 		bl	ResetPacket
  92:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 287              		.loc 1 92 0
 288 016a 0423     		mov	r3, #4
 289 016c FB61     		str	r3, [r7, #28]
  93:.\svt.c       ****     			}
 290              		.loc 1 93 0
 291 016e 6A4B     		ldr	r3, .L44
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 8


 292 0170 0022     		mov	r2, #0
 293 0172 1A70     		strb	r2, [r3]
 294              		.loc 1 95 0
 295 0174 C9E0     		b	.L3
 296              	.L10:
  96:.\svt.c       ****     		}
  97:.\svt.c       ****     		case READ_DA1:
  98:.\svt.c       ****     		{
  99:.\svt.c       **** 
 100:.\svt.c       ****     			if(CheckSymb(InByte))
 297              		.loc 1 100 0
 298 0176 1323     		mov	r3, #19
 299 0178 FB18     		add	r3, r7, r3
 300 017a 1B78     		ldrb	r3, [r3]
 301 017c 181C     		mov	r0, r3
 302 017e FFF7FEFF 		bl	CheckSymb
 303 0182 031E     		sub	r3, r0, #0
 304 0184 2DD0     		beq	.L27
 101:.\svt.c       ****     			{
 102:.\svt.c       ****     				Data->Data1 |= InByte;
 305              		.loc 1 102 0
 306 0186 7B69     		ldr	r3, [r7, #20]
 307 0188 9A68     		ldr	r2, [r3, #8]
 308 018a DB68     		ldr	r3, [r3, #12]
 309 018c 1321     		mov	r1, #19
 310 018e 7918     		add	r1, r7, r1
 311 0190 0978     		ldrb	r1, [r1]
 312 0192 C9B2     		uxtb	r1, r1
 313 0194 B960     		str	r1, [r7, #8]
 314 0196 0021     		mov	r1, #0
 315 0198 F960     		str	r1, [r7, #12]
 316 019a B968     		ldr	r1, [r7, #8]
 317 019c 1143     		orr	r1, r2
 318 019e 3960     		str	r1, [r7]
 319 01a0 F968     		ldr	r1, [r7, #12]
 320 01a2 1943     		orr	r1, r3
 321 01a4 7960     		str	r1, [r7, #4]
 322 01a6 7B69     		ldr	r3, [r7, #20]
 323 01a8 3968     		ldr	r1, [r7]
 324 01aa 7A68     		ldr	r2, [r7, #4]
 325 01ac 9960     		str	r1, [r3, #8]
 326 01ae DA60     		str	r2, [r3, #12]
 103:.\svt.c       ****     				LenD1++;
 327              		.loc 1 103 0
 328 01b0 5D4B     		ldr	r3, .L44+16
 329 01b2 1B78     		ldrb	r3, [r3]
 330 01b4 0133     		add	r3, r3, #1
 331 01b6 DAB2     		uxtb	r2, r3
 332 01b8 5B4B     		ldr	r3, .L44+16
 333 01ba 1A70     		strb	r2, [r3]
 104:.\svt.c       ****     				if (LenD1 == LEN_DA1)
 334              		.loc 1 104 0
 335 01bc 5A4B     		ldr	r3, .L44+16
 336 01be 1B78     		ldrb	r3, [r3]
 337 01c0 102B     		cmp	r3, #16
 338 01c2 03D1     		bne	.L28
 105:.\svt.c       ****     				{
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 9


 106:.\svt.c       ****     					PROTO_STATE = READ_DA2;
 339              		.loc 1 106 0
 340 01c4 544B     		ldr	r3, .L44
 341 01c6 0622     		mov	r2, #6
 342 01c8 1A70     		strb	r2, [r3]
 107:.\svt.c       ****     				}
 108:.\svt.c       ****     				else
 109:.\svt.c       ****     				{
 110:.\svt.c       ****     					Data->Data1 = Data->Data1 << HALF_BYTE;
 111:.\svt.c       ****     				}
 112:.\svt.c       ****     			}
 113:.\svt.c       ****     			else{
 114:.\svt.c       ****     				ResetPacket(Data);
 115:.\svt.c       ****     				ERR_CODE = INV_DA1;
 116:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 117:.\svt.c       ****     			}
 118:.\svt.c       ****     			break;
 343              		.loc 1 118 0
 344 01ca 9EE0     		b	.L3
 345              	.L28:
 110:.\svt.c       ****     				}
 346              		.loc 1 110 0
 347 01cc 7B69     		ldr	r3, [r7, #20]
 348 01ce 9A68     		ldr	r2, [r3, #8]
 349 01d0 DB68     		ldr	r3, [r3, #12]
 350 01d2 110F     		lsr	r1, r2, #28
 351 01d4 1D01     		lsl	r5, r3, #4
 352 01d6 0D43     		orr	r5, r1
 353 01d8 1401     		lsl	r4, r2, #4
 354 01da 7B69     		ldr	r3, [r7, #20]
 355 01dc 9C60     		str	r4, [r3, #8]
 356 01de DD60     		str	r5, [r3, #12]
 357              		.loc 1 118 0
 358 01e0 93E0     		b	.L3
 359              	.L27:
 114:.\svt.c       ****     				ERR_CODE = INV_DA1;
 360              		.loc 1 114 0
 361 01e2 7B69     		ldr	r3, [r7, #20]
 362 01e4 181C     		mov	r0, r3
 363 01e6 FFF7FEFF 		bl	ResetPacket
 115:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 364              		.loc 1 115 0
 365 01ea 0523     		mov	r3, #5
 366 01ec FB61     		str	r3, [r7, #28]
 116:.\svt.c       ****     			}
 367              		.loc 1 116 0
 368 01ee 4A4B     		ldr	r3, .L44
 369 01f0 0022     		mov	r2, #0
 370 01f2 1A70     		strb	r2, [r3]
 371              		.loc 1 118 0
 372 01f4 89E0     		b	.L3
 373              	.L11:
 119:.\svt.c       ****     		}
 120:.\svt.c       ****     		case READ_DA2:
 121:.\svt.c       ****     		{
 122:.\svt.c       ****     			
 123:.\svt.c       **** 
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 10


 124:.\svt.c       ****     			if(CheckSymb(InByte))
 374              		.loc 1 124 0
 375 01f6 1323     		mov	r3, #19
 376 01f8 FB18     		add	r3, r7, r3
 377 01fa 1B78     		ldrb	r3, [r3]
 378 01fc 181C     		mov	r0, r3
 379 01fe FFF7FEFF 		bl	CheckSymb
 380 0202 031E     		sub	r3, r0, #0
 381 0204 1DD0     		beq	.L31
 125:.\svt.c       ****     			{
 126:.\svt.c       ****     				Data->Data2 |= InByte;
 382              		.loc 1 126 0
 383 0206 7B69     		ldr	r3, [r7, #20]
 384 0208 1A7C     		ldrb	r2, [r3, #16]
 385 020a 1323     		mov	r3, #19
 386 020c FB18     		add	r3, r7, r3
 387 020e 1B78     		ldrb	r3, [r3]
 388 0210 1343     		orr	r3, r2
 389 0212 DAB2     		uxtb	r2, r3
 390 0214 7B69     		ldr	r3, [r7, #20]
 391 0216 1A74     		strb	r2, [r3, #16]
 127:.\svt.c       ****     				LenD2++;
 392              		.loc 1 127 0
 393 0218 444B     		ldr	r3, .L44+20
 394 021a 1B78     		ldrb	r3, [r3]
 395 021c 0133     		add	r3, r3, #1
 396 021e DAB2     		uxtb	r2, r3
 397 0220 424B     		ldr	r3, .L44+20
 398 0222 1A70     		strb	r2, [r3]
 128:.\svt.c       ****     				if (LenD2 == LEN_DA2)
 399              		.loc 1 128 0
 400 0224 414B     		ldr	r3, .L44+20
 401 0226 1B78     		ldrb	r3, [r3]
 402 0228 042B     		cmp	r3, #4
 403 022a 03D1     		bne	.L32
 129:.\svt.c       ****     				{
 130:.\svt.c       ****     					PROTO_STATE = READ_FR3;
 404              		.loc 1 130 0
 405 022c 3A4B     		ldr	r3, .L44
 406 022e 0722     		mov	r2, #7
 407 0230 1A70     		strb	r2, [r3]
 131:.\svt.c       ****     				}
 132:.\svt.c       ****     				else
 133:.\svt.c       ****     				{
 134:.\svt.c       ****     					Data->Data2 = Data->Data2 << HALF_BYTE;
 135:.\svt.c       ****     				}
 136:.\svt.c       ****     			}
 137:.\svt.c       ****     			else{
 138:.\svt.c       ****     				ResetPacket(Data);
 139:.\svt.c       ****     				ERR_CODE = INV_DA2;
 140:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 141:.\svt.c       ****     			}
 142:.\svt.c       ****     			break;
 408              		.loc 1 142 0
 409 0232 6AE0     		b	.L3
 410              	.L32:
 134:.\svt.c       ****     				}
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 11


 411              		.loc 1 134 0
 412 0234 7B69     		ldr	r3, [r7, #20]
 413 0236 1B7C     		ldrb	r3, [r3, #16]
 414 0238 1B01     		lsl	r3, r3, #4
 415 023a DAB2     		uxtb	r2, r3
 416 023c 7B69     		ldr	r3, [r7, #20]
 417 023e 1A74     		strb	r2, [r3, #16]
 418              		.loc 1 142 0
 419 0240 63E0     		b	.L3
 420              	.L31:
 138:.\svt.c       ****     				ERR_CODE = INV_DA2;
 421              		.loc 1 138 0
 422 0242 7B69     		ldr	r3, [r7, #20]
 423 0244 181C     		mov	r0, r3
 424 0246 FFF7FEFF 		bl	ResetPacket
 139:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 425              		.loc 1 139 0
 426 024a 0623     		mov	r3, #6
 427 024c FB61     		str	r3, [r7, #28]
 140:.\svt.c       ****     			}
 428              		.loc 1 140 0
 429 024e 324B     		ldr	r3, .L44
 430 0250 0022     		mov	r2, #0
 431 0252 1A70     		strb	r2, [r3]
 432              		.loc 1 142 0
 433 0254 59E0     		b	.L3
 434              	.L12:
 143:.\svt.c       ****     		}
 144:.\svt.c       **** 
 145:.\svt.c       ****     		case READ_FR3:
 146:.\svt.c       ****     		{
 147:.\svt.c       ****     			if (InByte == FR3)
 435              		.loc 1 147 0
 436 0256 1323     		mov	r3, #19
 437 0258 FB18     		add	r3, r7, r3
 438 025a 1B78     		ldrb	r3, [r3]
 439 025c 402B     		cmp	r3, #64
 440 025e 03D1     		bne	.L35
 148:.\svt.c       ****     			{
 149:.\svt.c       ****     				PROTO_STATE = READ_CHS;
 441              		.loc 1 149 0
 442 0260 2D4B     		ldr	r3, .L44
 443 0262 0822     		mov	r2, #8
 444 0264 1A70     		strb	r2, [r3]
 150:.\svt.c       ****     			}
 151:.\svt.c       ****     			else
 152:.\svt.c       ****     			{
 153:.\svt.c       ****     				ResetPacket(Data);
 154:.\svt.c       ****     				ERR_CODE = NO_FR3;
 155:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 156:.\svt.c       ****     			}
 157:.\svt.c       ****     			break;
 445              		.loc 1 157 0
 446 0266 50E0     		b	.L3
 447              	.L35:
 153:.\svt.c       ****     				ERR_CODE = NO_FR3;
 448              		.loc 1 153 0
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 12


 449 0268 7B69     		ldr	r3, [r7, #20]
 450 026a 181C     		mov	r0, r3
 451 026c FFF7FEFF 		bl	ResetPacket
 154:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 452              		.loc 1 154 0
 453 0270 0723     		mov	r3, #7
 454 0272 FB61     		str	r3, [r7, #28]
 155:.\svt.c       ****     			}
 455              		.loc 1 155 0
 456 0274 284B     		ldr	r3, .L44
 457 0276 0022     		mov	r2, #0
 458 0278 1A70     		strb	r2, [r3]
 459              		.loc 1 157 0
 460 027a 46E0     		b	.L3
 461              	.L13:
 158:.\svt.c       ****     		}
 159:.\svt.c       **** 
 160:.\svt.c       ****     		case READ_CHS:
 161:.\svt.c       ****     		{
 162:.\svt.c       ****     			if(CheckSymb(InByte))
 462              		.loc 1 162 0
 463 027c 1323     		mov	r3, #19
 464 027e FB18     		add	r3, r7, r3
 465 0280 1B78     		ldrb	r3, [r3]
 466 0282 181C     		mov	r0, r3
 467 0284 FFF7FEFF 		bl	CheckSymb
 468 0288 031E     		sub	r3, r0, #0
 469 028a 1BD0     		beq	.L37
 163:.\svt.c       ****     			{
 164:.\svt.c       ****     				Data->CheckSum |= InByte;
 470              		.loc 1 164 0
 471 028c 7B69     		ldr	r3, [r7, #20]
 472 028e 5A69     		ldr	r2, [r3, #20]
 473 0290 1323     		mov	r3, #19
 474 0292 FB18     		add	r3, r7, r3
 475 0294 1B78     		ldrb	r3, [r3]
 476 0296 1A43     		orr	r2, r3
 477 0298 7B69     		ldr	r3, [r7, #20]
 478 029a 5A61     		str	r2, [r3, #20]
 165:.\svt.c       ****     				LenChS++;
 479              		.loc 1 165 0
 480 029c 214B     		ldr	r3, .L44+12
 481 029e 1B78     		ldrb	r3, [r3]
 482 02a0 0133     		add	r3, r3, #1
 483 02a2 DAB2     		uxtb	r2, r3
 484 02a4 1F4B     		ldr	r3, .L44+12
 485 02a6 1A70     		strb	r2, [r3]
 166:.\svt.c       ****     				if (LenChS == LEN_CHS)
 486              		.loc 1 166 0
 487 02a8 1E4B     		ldr	r3, .L44+12
 488 02aa 1B78     		ldrb	r3, [r3]
 489 02ac 082B     		cmp	r3, #8
 490 02ae 03D1     		bne	.L38
 167:.\svt.c       ****     				{
 168:.\svt.c       ****     					PROTO_STATE = READ_ETX;
 491              		.loc 1 168 0
 492 02b0 194B     		ldr	r3, .L44
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 13


 493 02b2 0922     		mov	r2, #9
 494 02b4 1A70     		strb	r2, [r3]
 169:.\svt.c       ****     				}
 170:.\svt.c       ****     				else
 171:.\svt.c       ****     				{
 172:.\svt.c       ****     					Data->CheckSum = Data->CheckSum << HALF_BYTE;
 173:.\svt.c       ****     				}
 174:.\svt.c       ****     			}
 175:.\svt.c       ****     			else
 176:.\svt.c       ****     			{
 177:.\svt.c       ****     				ResetPacket(Data);
 178:.\svt.c       ****     				ERR_CODE = INV_CKECKSUM;
 179:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 180:.\svt.c       ****     			}
 181:.\svt.c       ****     			break;
 495              		.loc 1 181 0
 496 02b6 28E0     		b	.L3
 497              	.L38:
 172:.\svt.c       ****     				}
 498              		.loc 1 172 0
 499 02b8 7B69     		ldr	r3, [r7, #20]
 500 02ba 5B69     		ldr	r3, [r3, #20]
 501 02bc 1A01     		lsl	r2, r3, #4
 502 02be 7B69     		ldr	r3, [r7, #20]
 503 02c0 5A61     		str	r2, [r3, #20]
 504              		.loc 1 181 0
 505 02c2 22E0     		b	.L3
 506              	.L37:
 177:.\svt.c       ****     				ERR_CODE = INV_CKECKSUM;
 507              		.loc 1 177 0
 508 02c4 7B69     		ldr	r3, [r7, #20]
 509 02c6 181C     		mov	r0, r3
 510 02c8 FFF7FEFF 		bl	ResetPacket
 178:.\svt.c       ****     				PROTO_STATE = WAIT_STX;
 511              		.loc 1 178 0
 512 02cc 0823     		mov	r3, #8
 513 02ce FB61     		str	r3, [r7, #28]
 179:.\svt.c       ****     			}
 514              		.loc 1 179 0
 515 02d0 114B     		ldr	r3, .L44
 516 02d2 0022     		mov	r2, #0
 517 02d4 1A70     		strb	r2, [r3]
 518              		.loc 1 181 0
 519 02d6 18E0     		b	.L3
 520              	.L14:
 182:.\svt.c       ****     		}
 183:.\svt.c       ****     		case READ_ETX:
 184:.\svt.c       ****     		{
 185:.\svt.c       ****     			if (InByte == ETX)
 521              		.loc 1 185 0
 522 02d8 1323     		mov	r3, #19
 523 02da FB18     		add	r3, r7, r3
 524 02dc 1B78     		ldrb	r3, [r3]
 525 02de 3E2B     		cmp	r3, #62
 526 02e0 05D1     		bne	.L41
 186:.\svt.c       ****     			{
 187:.\svt.c       ****     				Data->EndPacket = 1;
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 14


 527              		.loc 1 187 0
 528 02e2 7B69     		ldr	r3, [r7, #20]
 529 02e4 0122     		mov	r2, #1
 530 02e6 1A76     		strb	r2, [r3, #24]
 188:.\svt.c       ****     				ERR_CODE = PARSED_OK;
 531              		.loc 1 188 0
 532 02e8 0023     		mov	r3, #0
 533 02ea FB61     		str	r3, [r7, #28]
 534 02ec 05E0     		b	.L42
 535              	.L41:
 189:.\svt.c       **** 
 190:.\svt.c       ****     			}
 191:.\svt.c       ****     			else{
 192:.\svt.c       ****     				ERR_CODE = NO_ETX;
 536              		.loc 1 192 0
 537 02ee 0923     		mov	r3, #9
 538 02f0 FB61     		str	r3, [r7, #28]
 193:.\svt.c       ****     				ResetPacket(Data);
 539              		.loc 1 193 0
 540 02f2 7B69     		ldr	r3, [r7, #20]
 541 02f4 181C     		mov	r0, r3
 542 02f6 FFF7FEFF 		bl	ResetPacket
 543              	.L42:
 194:.\svt.c       ****     			}
 195:.\svt.c       ****     			PROTO_STATE = WAIT_STX;
 544              		.loc 1 195 0
 545 02fa 074B     		ldr	r3, .L44
 546 02fc 0022     		mov	r2, #0
 547 02fe 1A70     		strb	r2, [r3]
 196:.\svt.c       ****     			break;
 548              		.loc 1 196 0
 549 0300 03E0     		b	.L3
 550              	.L4:
 197:.\svt.c       ****     		}
 198:.\svt.c       ****             default: 
 199:.\svt.c       ****             {
 200:.\svt.c       ****                 ResetPacket(Data);
 551              		.loc 1 200 0
 552 0302 7B69     		ldr	r3, [r7, #20]
 553 0304 181C     		mov	r0, r3
 554 0306 FFF7FEFF 		bl	ResetPacket
 555              	.L3:
 201:.\svt.c       ****             }
 202:.\svt.c       ****     	}
 203:.\svt.c       ****     }
 204:.\svt.c       ****     
 205:.\svt.c       ****     return ERR_CODE;
 556              		.loc 1 205 0
 557 030a FB69     		ldr	r3, [r7, #28]
 558 030c DBB2     		uxtb	r3, r3
 206:.\svt.c       **** 
 207:.\svt.c       **** }
 559              		.loc 1 207 0
 560 030e 181C     		mov	r0, r3
 561 0310 BD46     		mov	sp, r7
 562 0312 09B0     		add	sp, sp, #36
 563              		@ sp needed
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 15


 564 0314 F0BD     		pop	{r4, r5, r6, r7, pc}
 565              	.L45:
 566 0316 C046     		.align	2
 567              	.L44:
 568 0318 00000000 		.word	PROTO_STATE
 569 031c 00000000 		.word	LenSeq
 570 0320 00000000 		.word	LenC
 571 0324 00000000 		.word	LenChS
 572 0328 00000000 		.word	LenD1
 573 032c 00000000 		.word	LenD2
 574 0330 00000000 		.word	.L6
 575              		.cfi_endproc
 576              	.LFE2:
 577              		.size	UnpackData, .-UnpackData
 578              		.section	.text.DecodeByte,"ax",%progbits
 579              		.align	2
 580              		.global	DecodeByte
 581              		.code	16
 582              		.thumb_func
 583              		.type	DecodeByte, %function
 584              	DecodeByte:
 585              	.LFB3:
 208:.\svt.c       **** 
 209:.\svt.c       **** uint8_t DecodeByte(uint8_t Inp)
 210:.\svt.c       **** {
 586              		.loc 1 210 0
 587              		.cfi_startproc
 588 0000 80B5     		push	{r7, lr}
 589              		.cfi_def_cfa_offset 8
 590              		.cfi_offset 7, -8
 591              		.cfi_offset 14, -4
 592 0002 82B0     		sub	sp, sp, #8
 593              		.cfi_def_cfa_offset 16
 594 0004 00AF     		add	r7, sp, #0
 595              		.cfi_def_cfa_register 7
 596 0006 021C     		mov	r2, r0
 597 0008 FB1D     		add	r3, r7, #7
 598 000a 1A70     		strb	r2, [r3]
 211:.\svt.c       **** 	if ((Inp >= 'A') && (Inp <= 'F'))
 599              		.loc 1 211 0
 600 000c FB1D     		add	r3, r7, #7
 601 000e 1B78     		ldrb	r3, [r3]
 602 0010 402B     		cmp	r3, #64
 603 0012 09D9     		bls	.L47
 604              		.loc 1 211 0 is_stmt 0 discriminator 1
 605 0014 FB1D     		add	r3, r7, #7
 606 0016 1B78     		ldrb	r3, [r3]
 607 0018 462B     		cmp	r3, #70
 608 001a 05D8     		bhi	.L47
 212:.\svt.c       **** 	{
 213:.\svt.c       **** 		Inp -= 0x37;
 609              		.loc 1 213 0 is_stmt 1
 610 001c FB1D     		add	r3, r7, #7
 611 001e FA1D     		add	r2, r7, #7
 612 0020 1278     		ldrb	r2, [r2]
 613 0022 373A     		sub	r2, r2, #55
 614 0024 1A70     		strb	r2, [r3]
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 16


 615 0026 0CE0     		b	.L48
 616              	.L47:
 214:.\svt.c       **** 	}
 215:.\svt.c       **** 	else if ((Inp >= '0') && (Inp <= '9')){
 617              		.loc 1 215 0
 618 0028 FB1D     		add	r3, r7, #7
 619 002a 1B78     		ldrb	r3, [r3]
 620 002c 2F2B     		cmp	r3, #47
 621 002e 08D9     		bls	.L48
 622              		.loc 1 215 0 is_stmt 0 discriminator 1
 623 0030 FB1D     		add	r3, r7, #7
 624 0032 1B78     		ldrb	r3, [r3]
 625 0034 392B     		cmp	r3, #57
 626 0036 04D8     		bhi	.L48
 216:.\svt.c       **** 		Inp -= 0x30;
 627              		.loc 1 216 0 is_stmt 1
 628 0038 FB1D     		add	r3, r7, #7
 629 003a FA1D     		add	r2, r7, #7
 630 003c 1278     		ldrb	r2, [r2]
 631 003e 303A     		sub	r2, r2, #48
 632 0040 1A70     		strb	r2, [r3]
 633              	.L48:
 217:.\svt.c       **** 	}
 218:.\svt.c       **** 	return Inp;
 634              		.loc 1 218 0
 635 0042 FB1D     		add	r3, r7, #7
 636 0044 1B78     		ldrb	r3, [r3]
 219:.\svt.c       **** }
 637              		.loc 1 219 0
 638 0046 181C     		mov	r0, r3
 639 0048 BD46     		mov	sp, r7
 640 004a 02B0     		add	sp, sp, #8
 641              		@ sp needed
 642 004c 80BD     		pop	{r7, pc}
 643              		.cfi_endproc
 644              	.LFE3:
 645              		.size	DecodeByte, .-DecodeByte
 646 004e C046     		.section	.text.CheckSymb,"ax",%progbits
 647              		.align	2
 648              		.global	CheckSymb
 649              		.code	16
 650              		.thumb_func
 651              		.type	CheckSymb, %function
 652              	CheckSymb:
 653              	.LFB4:
 220:.\svt.c       **** 
 221:.\svt.c       **** uint8_t CheckSymb(uint8_t Inp)
 222:.\svt.c       **** {
 654              		.loc 1 222 0
 655              		.cfi_startproc
 656 0000 80B5     		push	{r7, lr}
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 84B0     		sub	sp, sp, #16
 661              		.cfi_def_cfa_offset 24
 662 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 17


 663              		.cfi_def_cfa_register 7
 664 0006 021C     		mov	r2, r0
 665 0008 FB1D     		add	r3, r7, #7
 666 000a 1A70     		strb	r2, [r3]
 223:.\svt.c       **** 	uint8_t Val = 1;
 667              		.loc 1 223 0
 668 000c 0F23     		mov	r3, #15
 669 000e FB18     		add	r3, r7, r3
 670 0010 0122     		mov	r2, #1
 671 0012 1A70     		strb	r2, [r3]
 224:.\svt.c       **** 
 225:.\svt.c       **** 	if ((Inp > 0xF) || (Inp < 0x0))
 672              		.loc 1 225 0
 673 0014 FB1D     		add	r3, r7, #7
 674 0016 1B78     		ldrb	r3, [r3]
 675 0018 0F2B     		cmp	r3, #15
 676 001a 03D9     		bls	.L51
 226:.\svt.c       **** 	{
 227:.\svt.c       **** 		Val = 0;
 677              		.loc 1 227 0
 678 001c 0F23     		mov	r3, #15
 679 001e FB18     		add	r3, r7, r3
 680 0020 0022     		mov	r2, #0
 681 0022 1A70     		strb	r2, [r3]
 682              	.L51:
 228:.\svt.c       **** 	}
 229:.\svt.c       **** 	return Val;
 683              		.loc 1 229 0
 684 0024 0F23     		mov	r3, #15
 685 0026 FB18     		add	r3, r7, r3
 686 0028 1B78     		ldrb	r3, [r3]
 230:.\svt.c       **** }
 687              		.loc 1 230 0
 688 002a 181C     		mov	r0, r3
 689 002c BD46     		mov	sp, r7
 690 002e 04B0     		add	sp, sp, #16
 691              		@ sp needed
 692 0030 80BD     		pop	{r7, pc}
 693              		.cfi_endproc
 694              	.LFE4:
 695              		.size	CheckSymb, .-CheckSymb
 696 0032 C046     		.section	.text.ResetPacket,"ax",%progbits
 697              		.align	2
 698              		.global	ResetPacket
 699              		.code	16
 700              		.thumb_func
 701              		.type	ResetPacket, %function
 702              	ResetPacket:
 703              	.LFB5:
 231:.\svt.c       **** 
 232:.\svt.c       **** void ResetPacket(struct Resp *Data)
 233:.\svt.c       **** {
 704              		.loc 1 233 0
 705              		.cfi_startproc
 706 0000 90B5     		push	{r4, r7, lr}
 707              		.cfi_def_cfa_offset 12
 708              		.cfi_offset 4, -12
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 18


 709              		.cfi_offset 7, -8
 710              		.cfi_offset 14, -4
 711 0002 83B0     		sub	sp, sp, #12
 712              		.cfi_def_cfa_offset 24
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 234:.\svt.c       **** 	Data->Seq = 0;
 716              		.loc 1 234 0
 717 0008 7B68     		ldr	r3, [r7, #4]
 718 000a 0022     		mov	r2, #0
 719 000c 1A80     		strh	r2, [r3]
 235:.\svt.c       **** 	Data->Command = 0;
 720              		.loc 1 235 0
 721 000e 7B68     		ldr	r3, [r7, #4]
 722 0010 0022     		mov	r2, #0
 723 0012 5A60     		str	r2, [r3, #4]
 236:.\svt.c       **** 	Data->Data1 = 0;
 724              		.loc 1 236 0
 725 0014 7A68     		ldr	r2, [r7, #4]
 726 0016 0023     		mov	r3, #0
 727 0018 0024     		mov	r4, #0
 728 001a 9360     		str	r3, [r2, #8]
 729 001c D460     		str	r4, [r2, #12]
 237:.\svt.c       **** 	Data->Data2 = 0;
 730              		.loc 1 237 0
 731 001e 7B68     		ldr	r3, [r7, #4]
 732 0020 0022     		mov	r2, #0
 733 0022 1A74     		strb	r2, [r3, #16]
 238:.\svt.c       **** 	Data->CheckSum = 0;
 734              		.loc 1 238 0
 735 0024 7B68     		ldr	r3, [r7, #4]
 736 0026 0022     		mov	r2, #0
 737 0028 5A61     		str	r2, [r3, #20]
 239:.\svt.c       **** 	Data->EndPacket = 0;
 738              		.loc 1 239 0
 739 002a 7B68     		ldr	r3, [r7, #4]
 740 002c 0022     		mov	r2, #0
 741 002e 1A76     		strb	r2, [r3, #24]
 240:.\svt.c       **** }
 742              		.loc 1 240 0
 743 0030 BD46     		mov	sp, r7
 744 0032 03B0     		add	sp, sp, #12
 745              		@ sp needed
 746 0034 90BD     		pop	{r4, r7, pc}
 747              		.cfi_endproc
 748              	.LFE5:
 749              		.size	ResetPacket, .-ResetPacket
 750 0036 C046     		.section	.rodata
 751              		.align	2
 752              	.LC7:
 753 0028 5061636B 		.ascii	"Packet Recieved\015\012\000"
 753      65742052 
 753      65636965 
 753      7665640D 
 753      0A00
 754 003a 0000     		.align	2
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 19


 755              	.LC9:
 756 003c 5061636B 		.ascii	"Packet Ok Sended\015\012\000"
 756      6574204F 
 756      6B205365 
 756      6E646564 
 756      0D0A00
 757 004f 00       		.align	2
 758              	.LC11:
 759 0050 25303258 		.ascii	"%02X:%016X%04X\000"
 759      3A253031 
 759      36582530 
 759      345800
 760 005f 00       		.align	2
 761              	.LC13:
 762 0060 44617461 		.ascii	"Data Sended: \000"
 762      2053656E 
 762      6465643A 
 762      2000
 763 006e 0000     		.align	2
 764              	.LC15:
 765 0070 0D0A00   		.ascii	"\015\012\000"
 766 0073 00       		.align	2
 767              	.LC17:
 768 0074 5061636B 		.ascii	"Packet Ok Recieved\015\012\000"
 768      6574204F 
 768      6B205265 
 768      63696576 
 768      65640D0A 
 769 0089 000000   		.section	.text.ProcPacket,"ax",%progbits
 770              		.align	2
 771              		.global	ProcPacket
 772              		.code	16
 773              		.thumb_func
 774              		.type	ProcPacket, %function
 775              	ProcPacket:
 776              	.LFB6:
 241:.\svt.c       **** 
 242:.\svt.c       **** uint32_t ProcPacket(struct Resp *Data, uint8_t *RX, uint8_t *buff)
 243:.\svt.c       **** {
 777              		.loc 1 243 0
 778              		.cfi_startproc
 779 0000 80B5     		push	{r7, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783 0002 88B0     		sub	sp, sp, #32
 784              		.cfi_def_cfa_offset 40
 785 0004 02AF     		add	r7, sp, #8
 786              		.cfi_def_cfa 7, 32
 787 0006 F860     		str	r0, [r7, #12]
 788 0008 B960     		str	r1, [r7, #8]
 789 000a 7A60     		str	r2, [r7, #4]
 244:.\svt.c       **** 	uint8_t Res;
 245:.\svt.c       **** 	if (Data->EndPacket)
 790              		.loc 1 245 0
 791 000c FB68     		ldr	r3, [r7, #12]
 792 000e 1B7E     		ldrb	r3, [r3, #24]
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 20


 793 0010 002B     		cmp	r3, #0
 794 0012 39D0     		beq	.L55
 246:.\svt.c       **** 	{
 247:.\svt.c       **** 		UART_PC_UartPutString("Packet Recieved\r\n");
 795              		.loc 1 247 0
 796 0014 224B     		ldr	r3, .L61
 797 0016 181C     		mov	r0, r3
 798 0018 FFF7FEFF 		bl	UART_PC_UartPutString
 248:.\svt.c       **** 		switch (Data->Command)
 799              		.loc 1 248 0
 800 001c FB68     		ldr	r3, [r7, #12]
 801 001e 5B68     		ldr	r3, [r3, #4]
 802 0020 1A2B     		cmp	r3, #26
 803 0022 02D0     		beq	.L57
 804 0024 202B     		cmp	r3, #32
 805 0026 22D0     		beq	.L58
 806 0028 32E0     		b	.L59
 807              	.L57:
 249:.\svt.c       **** 		{
 250:.\svt.c       **** 			case 0x1A:
 251:.\svt.c       **** 			{
 252:.\svt.c       **** 				UART_PC_UartPutString("Packet Ok Sended\r\n");
 808              		.loc 1 252 0
 809 002a 1E4B     		ldr	r3, .L61+4
 810 002c 181C     		mov	r0, r3
 811 002e FFF7FEFF 		bl	UART_PC_UartPutString
 253:.\svt.c       **** 				sprintf(buff, "%02X:%016X%04X", (0x20), 0x0, 0x0);
 812              		.loc 1 253 0
 813 0032 7968     		ldr	r1, [r7, #4]
 814 0034 1C4A     		ldr	r2, .L61+8
 815 0036 0023     		mov	r3, #0
 816 0038 0093     		str	r3, [sp]
 817 003a 081C     		mov	r0, r1
 818 003c 111C     		mov	r1, r2
 819 003e 2022     		mov	r2, #32
 820 0040 0023     		mov	r3, #0
 821 0042 FFF7FEFF 		bl	sprintf
 254:.\svt.c       **** 				UART_PC_UartPutString("Data Sended: ");
 822              		.loc 1 254 0
 823 0046 194B     		ldr	r3, .L61+12
 824 0048 181C     		mov	r0, r3
 825 004a FFF7FEFF 		bl	UART_PC_UartPutString
 255:.\svt.c       ****                 UART_PC_UartPutString(buff);
 826              		.loc 1 255 0
 827 004e 7B68     		ldr	r3, [r7, #4]
 828 0050 181C     		mov	r0, r3
 829 0052 FFF7FEFF 		bl	UART_PC_UartPutString
 256:.\svt.c       ****                 UART_PC_UartPutString("\r\n");
 830              		.loc 1 256 0
 831 0056 164B     		ldr	r3, .L61+16
 832 0058 181C     		mov	r0, r3
 833 005a FFF7FEFF 		bl	UART_PC_UartPutString
 257:.\svt.c       **** 				*RX = 10U;
 834              		.loc 1 257 0
 835 005e BB68     		ldr	r3, [r7, #8]
 836 0060 0A22     		mov	r2, #10
 837 0062 1A70     		strb	r2, [r3]
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 21


 258:.\svt.c       **** 				Res = 1;
 838              		.loc 1 258 0
 839 0064 1723     		mov	r3, #23
 840 0066 FB18     		add	r3, r7, r3
 841 0068 0122     		mov	r2, #1
 842 006a 1A70     		strb	r2, [r3]
 259:.\svt.c       **** 				break;
 843              		.loc 1 259 0
 844 006c 0BE0     		b	.L56
 845              	.L58:
 260:.\svt.c       **** 			}
 261:.\svt.c       **** 			case 0x20:
 262:.\svt.c       **** 			{
 263:.\svt.c       **** 				UART_PC_UartPutString("Packet Ok Recieved\r\n");
 846              		.loc 1 263 0
 847 006e 114B     		ldr	r3, .L61+20
 848 0070 181C     		mov	r0, r3
 849 0072 FFF7FEFF 		bl	UART_PC_UartPutString
 264:.\svt.c       **** 				*RX = 20U;
 850              		.loc 1 264 0
 851 0076 BB68     		ldr	r3, [r7, #8]
 852 0078 1422     		mov	r2, #20
 853 007a 1A70     		strb	r2, [r3]
 265:.\svt.c       **** 				Res = 1;
 854              		.loc 1 265 0
 855 007c 1723     		mov	r3, #23
 856 007e FB18     		add	r3, r7, r3
 857 0080 0122     		mov	r2, #1
 858 0082 1A70     		strb	r2, [r3]
 266:.\svt.c       **** 				break;
 859              		.loc 1 266 0
 860 0084 C046     		mov	r8, r8
 861              	.L56:
 862 0086 03E0     		b	.L59
 863              	.L55:
 267:.\svt.c       **** 			}
 268:.\svt.c       **** 		}
 269:.\svt.c       **** 	}
 270:.\svt.c       **** 	else{
 271:.\svt.c       **** 		Res = 0;
 864              		.loc 1 271 0
 865 0088 1723     		mov	r3, #23
 866 008a FB18     		add	r3, r7, r3
 867 008c 0022     		mov	r2, #0
 868 008e 1A70     		strb	r2, [r3]
 869              	.L59:
 272:.\svt.c       **** 	}
 273:.\svt.c       **** 	return Res;
 870              		.loc 1 273 0
 871 0090 1723     		mov	r3, #23
 872 0092 FB18     		add	r3, r7, r3
 873 0094 1B78     		ldrb	r3, [r3]
 274:.\svt.c       **** }...
 874              		.loc 1 274 0
 875 0096 181C     		mov	r0, r3
 876 0098 BD46     		mov	sp, r7
 877 009a 06B0     		add	sp, sp, #24
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 22


 878              		@ sp needed
 879 009c 80BD     		pop	{r7, pc}
 880              	.L62:
 881 009e C046     		.align	2
 882              	.L61:
 883 00a0 28000000 		.word	.LC7
 884 00a4 3C000000 		.word	.LC9
 885 00a8 50000000 		.word	.LC11
 886 00ac 60000000 		.word	.LC13
 887 00b0 70000000 		.word	.LC15
 888 00b4 74000000 		.word	.LC17
 889              		.cfi_endproc
 890              	.LFE6:
 891              		.size	ProcPacket, .-ProcPacket
 892              		.text
 893              	.Letext0:
 894              		.file 2 "c:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 895              		.file 3 "c:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 896              		.file 4 ".\\svt.h"
 897              		.section	.debug_info,"",%progbits
 898              	.Ldebug_info0:
 899 0000 4C030000 		.4byte	0x34c
 900 0004 0400     		.2byte	0x4
 901 0006 00000000 		.4byte	.Ldebug_abbrev0
 902 000a 04       		.byte	0x4
 903 000b 01       		.uleb128 0x1
 904 000c 89020000 		.4byte	.LASF62
 905 0010 01       		.byte	0x1
 906 0011 17030000 		.4byte	.LASF63
 907 0015 81010000 		.4byte	.LASF64
 908 0019 00000000 		.4byte	.Ldebug_ranges0+0
 909 001d 00000000 		.4byte	0
 910 0021 00000000 		.4byte	.Ldebug_line0
 911 0025 02       		.uleb128 0x2
 912 0026 01       		.byte	0x1
 913 0027 06       		.byte	0x6
 914 0028 55000000 		.4byte	.LASF0
 915 002c 03       		.uleb128 0x3
 916 002d 26000000 		.4byte	.LASF3
 917 0031 02       		.byte	0x2
 918 0032 1D       		.byte	0x1d
 919 0033 37000000 		.4byte	0x37
 920 0037 02       		.uleb128 0x2
 921 0038 01       		.byte	0x1
 922 0039 08       		.byte	0x8
 923 003a EF010000 		.4byte	.LASF1
 924 003e 02       		.uleb128 0x2
 925 003f 02       		.byte	0x2
 926 0040 05       		.byte	0x5
 927 0041 FD010000 		.4byte	.LASF2
 928 0045 03       		.uleb128 0x3
 929 0046 3B020000 		.4byte	.LASF4
 930 004a 02       		.byte	0x2
 931 004b 2B       		.byte	0x2b
 932 004c 50000000 		.4byte	0x50
 933 0050 02       		.uleb128 0x2
 934 0051 02       		.byte	0x2
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 23


 935 0052 07       		.byte	0x7
 936 0053 FD000000 		.4byte	.LASF5
 937 0057 02       		.uleb128 0x2
 938 0058 04       		.byte	0x4
 939 0059 05       		.byte	0x5
 940 005a 72000000 		.4byte	.LASF6
 941 005e 03       		.uleb128 0x3
 942 005f AE000000 		.4byte	.LASF7
 943 0063 02       		.byte	0x2
 944 0064 41       		.byte	0x41
 945 0065 69000000 		.4byte	0x69
 946 0069 02       		.uleb128 0x2
 947 006a 04       		.byte	0x4
 948 006b 07       		.byte	0x7
 949 006c E1000000 		.4byte	.LASF8
 950 0070 02       		.uleb128 0x2
 951 0071 08       		.byte	0x8
 952 0072 05       		.byte	0x5
 953 0073 47000000 		.4byte	.LASF9
 954 0077 03       		.uleb128 0x3
 955 0078 C3010000 		.4byte	.LASF10
 956 007c 02       		.byte	0x2
 957 007d 5B       		.byte	0x5b
 958 007e 82000000 		.4byte	0x82
 959 0082 02       		.uleb128 0x2
 960 0083 08       		.byte	0x8
 961 0084 07       		.byte	0x7
 962 0085 30000000 		.4byte	.LASF11
 963 0089 04       		.uleb128 0x4
 964 008a 04       		.byte	0x4
 965 008b 05       		.byte	0x5
 966 008c 696E7400 		.ascii	"int\000"
 967 0090 02       		.uleb128 0x2
 968 0091 04       		.byte	0x4
 969 0092 07       		.byte	0x7
 970 0093 D4000000 		.4byte	.LASF12
 971 0097 03       		.uleb128 0x3
 972 0098 74020000 		.4byte	.LASF13
 973 009c 03       		.byte	0x3
 974 009d 15       		.byte	0x15
 975 009e 2C000000 		.4byte	0x2c
 976 00a2 03       		.uleb128 0x3
 977 00a3 7B000000 		.4byte	.LASF14
 978 00a7 03       		.byte	0x3
 979 00a8 21       		.byte	0x21
 980 00a9 45000000 		.4byte	0x45
 981 00ad 03       		.uleb128 0x3
 982 00ae 2D020000 		.4byte	.LASF15
 983 00b2 03       		.byte	0x3
 984 00b3 2D       		.byte	0x2d
 985 00b4 5E000000 		.4byte	0x5e
 986 00b8 03       		.uleb128 0x3
 987 00b9 1D000000 		.4byte	.LASF16
 988 00bd 03       		.byte	0x3
 989 00be 39       		.byte	0x39
 990 00bf 77000000 		.4byte	0x77
 991 00c3 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 24


 992 00c4 04       		.byte	0x4
 993 00c5 07       		.byte	0x7
 994 00c6 69010000 		.4byte	.LASF17
 995 00ca 02       		.uleb128 0x2
 996 00cb 01       		.byte	0x1
 997 00cc 08       		.byte	0x8
 998 00cd 36020000 		.4byte	.LASF18
 999 00d1 02       		.uleb128 0x2
 1000 00d2 04       		.byte	0x4
 1001 00d3 04       		.byte	0x4
 1002 00d4 CE010000 		.4byte	.LASF19
 1003 00d8 02       		.uleb128 0x2
 1004 00d9 08       		.byte	0x8
 1005 00da 04       		.byte	0x4
 1006 00db 84000000 		.4byte	.LASF20
 1007 00df 05       		.uleb128 0x5
 1008 00e0 7C010000 		.4byte	.LASF65
 1009 00e4 20       		.byte	0x20
 1010 00e5 04       		.byte	0x4
 1011 00e6 09       		.byte	0x9
 1012 00e7 34010000 		.4byte	0x134
 1013 00eb 06       		.uleb128 0x6
 1014 00ec 53657100 		.ascii	"Seq\000"
 1015 00f0 04       		.byte	0x4
 1016 00f1 0B       		.byte	0xb
 1017 00f2 A2000000 		.4byte	0xa2
 1018 00f6 00       		.byte	0
 1019 00f7 07       		.uleb128 0x7
 1020 00f8 97000000 		.4byte	.LASF21
 1021 00fc 04       		.byte	0x4
 1022 00fd 0C       		.byte	0xc
 1023 00fe 89000000 		.4byte	0x89
 1024 0102 04       		.byte	0x4
 1025 0103 07       		.uleb128 0x7
 1026 0104 10010000 		.4byte	.LASF22
 1027 0108 04       		.byte	0x4
 1028 0109 0D       		.byte	0xd
 1029 010a B8000000 		.4byte	0xb8
 1030 010e 08       		.byte	0x8
 1031 010f 07       		.uleb128 0x7
 1032 0110 16010000 		.4byte	.LASF23
 1033 0114 04       		.byte	0x4
 1034 0115 0E       		.byte	0xe
 1035 0116 97000000 		.4byte	0x97
 1036 011a 10       		.byte	0x10
 1037 011b 07       		.uleb128 0x7
 1038 011c D4010000 		.4byte	.LASF24
 1039 0120 04       		.byte	0x4
 1040 0121 0F       		.byte	0xf
 1041 0122 AD000000 		.4byte	0xad
 1042 0126 14       		.byte	0x14
 1043 0127 07       		.uleb128 0x7
 1044 0128 26030000 		.4byte	.LASF25
 1045 012c 04       		.byte	0x4
 1046 012d 10       		.byte	0x10
 1047 012e 97000000 		.4byte	0x97
 1048 0132 18       		.byte	0x18
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 25


 1049 0133 00       		.byte	0
 1050 0134 08       		.uleb128 0x8
 1051 0135 23010000 		.4byte	.LASF36
 1052 0139 01       		.byte	0x1
 1053 013a 04       		.byte	0x4
 1054 013b 13       		.byte	0x13
 1055 013c 7D010000 		.4byte	0x17d
 1056 0140 09       		.uleb128 0x9
 1057 0141 4D020000 		.4byte	.LASF26
 1058 0145 00       		.sleb128 0
 1059 0146 09       		.uleb128 0x9
 1060 0147 5F020000 		.4byte	.LASF27
 1061 014b 01       		.sleb128 1
 1062 014c 09       		.uleb128 0x9
 1063 014d 47010000 		.4byte	.LASF28
 1064 0151 02       		.sleb128 2
 1065 0152 09       		.uleb128 0x9
 1066 0153 12020000 		.4byte	.LASF29
 1067 0157 03       		.sleb128 3
 1068 0158 09       		.uleb128 0x9
 1069 0159 50010000 		.4byte	.LASF30
 1070 015d 04       		.sleb128 4
 1071 015e 09       		.uleb128 0x9
 1072 015f DD010000 		.4byte	.LASF31
 1073 0163 05       		.sleb128 5
 1074 0164 09       		.uleb128 0x9
 1075 0165 E6010000 		.4byte	.LASF32
 1076 0169 06       		.sleb128 6
 1077 016a 09       		.uleb128 0x9
 1078 016b 59010000 		.4byte	.LASF33
 1079 016f 07       		.sleb128 7
 1080 0170 09       		.uleb128 0x9
 1081 0171 56020000 		.4byte	.LASF34
 1082 0175 08       		.sleb128 8
 1083 0176 09       		.uleb128 0x9
 1084 0177 00000000 		.4byte	.LASF35
 1085 017b 09       		.sleb128 9
 1086 017c 00       		.byte	0
 1087 017d 08       		.uleb128 0x8
 1088 017e 1B020000 		.4byte	.LASF37
 1089 0182 01       		.byte	0x1
 1090 0183 04       		.byte	0x4
 1091 0184 21       		.byte	0x21
 1092 0185 C6010000 		.4byte	0x1c6
 1093 0189 09       		.uleb128 0x9
 1094 018a 72010000 		.4byte	.LASF38
 1095 018e 00       		.sleb128 0
 1096 018f 09       		.uleb128 0x9
 1097 0190 3F010000 		.4byte	.LASF39
 1098 0194 01       		.sleb128 1
 1099 0195 09       		.uleb128 0x9
 1100 0196 A7000000 		.4byte	.LASF40
 1101 019a 02       		.sleb128 2
 1102 019b 09       		.uleb128 0x9
 1103 019c 14000000 		.4byte	.LASF41
 1104 01a0 03       		.sleb128 3
 1105 01a1 09       		.uleb128 0x9
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 26


 1106 01a2 1F030000 		.4byte	.LASF42
 1107 01a6 04       		.sleb128 4
 1108 01a7 09       		.uleb128 0x9
 1109 01a8 81020000 		.4byte	.LASF43
 1110 01ac 05       		.sleb128 5
 1111 01ad 09       		.uleb128 0x9
 1112 01ae 9F000000 		.4byte	.LASF44
 1113 01b2 06       		.sleb128 6
 1114 01b3 09       		.uleb128 0x9
 1115 01b4 B9000000 		.4byte	.LASF45
 1116 01b8 07       		.sleb128 7
 1117 01b9 09       		.uleb128 0x9
 1118 01ba 67020000 		.4byte	.LASF46
 1119 01be 08       		.sleb128 8
 1120 01bf 09       		.uleb128 0x9
 1121 01c0 46020000 		.4byte	.LASF47
 1122 01c4 09       		.sleb128 9
 1123 01c5 00       		.byte	0
 1124 01c6 0A       		.uleb128 0xa
 1125 01c7 09000000 		.4byte	.LASF50
 1126 01cb 01       		.byte	0x1
 1127 01cc 04       		.byte	0x4
 1128 01cd 97000000 		.4byte	0x97
 1129 01d1 00000000 		.4byte	.LFB2
 1130 01d5 34030000 		.4byte	.LFE2-.LFB2
 1131 01d9 01       		.uleb128 0x1
 1132 01da 9C       		.byte	0x9c
 1133 01db 0A020000 		.4byte	0x20a
 1134 01df 0B       		.uleb128 0xb
 1135 01e0 7C020000 		.4byte	.LASF48
 1136 01e4 01       		.byte	0x1
 1137 01e5 04       		.byte	0x4
 1138 01e6 0A020000 		.4byte	0x20a
 1139 01ea 02       		.uleb128 0x2
 1140 01eb 91       		.byte	0x91
 1141 01ec 5C       		.sleb128 -36
 1142 01ed 0B       		.uleb128 0xb
 1143 01ee 1C010000 		.4byte	.LASF49
 1144 01f2 01       		.byte	0x1
 1145 01f3 04       		.byte	0x4
 1146 01f4 97000000 		.4byte	0x97
 1147 01f8 02       		.uleb128 0x2
 1148 01f9 91       		.byte	0x91
 1149 01fa 5B       		.sleb128 -37
 1150 01fb 0C       		.uleb128 0xc
 1151 01fc CB000000 		.4byte	.LASF53
 1152 0200 01       		.byte	0x1
 1153 0201 06       		.byte	0x6
 1154 0202 AD000000 		.4byte	0xad
 1155 0206 02       		.uleb128 0x2
 1156 0207 91       		.byte	0x91
 1157 0208 64       		.sleb128 -28
 1158 0209 00       		.byte	0
 1159 020a 0D       		.uleb128 0xd
 1160 020b 04       		.byte	0x4
 1161 020c DF000000 		.4byte	0xdf
 1162 0210 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 27


 1163 0211 C0000000 		.4byte	.LASF51
 1164 0215 01       		.byte	0x1
 1165 0216 D1       		.byte	0xd1
 1166 0217 97000000 		.4byte	0x97
 1167 021b 00000000 		.4byte	.LFB3
 1168 021f 4E000000 		.4byte	.LFE3-.LFB3
 1169 0223 01       		.uleb128 0x1
 1170 0224 9C       		.byte	0x9c
 1171 0225 38020000 		.4byte	0x238
 1172 0229 0F       		.uleb128 0xf
 1173 022a 496E7000 		.ascii	"Inp\000"
 1174 022e 01       		.byte	0x1
 1175 022f D1       		.byte	0xd1
 1176 0230 97000000 		.4byte	0x97
 1177 0234 02       		.uleb128 0x2
 1178 0235 91       		.byte	0x91
 1179 0236 77       		.sleb128 -9
 1180 0237 00       		.byte	0
 1181 0238 0E       		.uleb128 0xe
 1182 0239 F3000000 		.4byte	.LASF52
 1183 023d 01       		.byte	0x1
 1184 023e DD       		.byte	0xdd
 1185 023f 97000000 		.4byte	0x97
 1186 0243 00000000 		.4byte	.LFB4
 1187 0247 32000000 		.4byte	.LFE4-.LFB4
 1188 024b 01       		.uleb128 0x1
 1189 024c 9C       		.byte	0x9c
 1190 024d 6E020000 		.4byte	0x26e
 1191 0251 0F       		.uleb128 0xf
 1192 0252 496E7000 		.ascii	"Inp\000"
 1193 0256 01       		.byte	0x1
 1194 0257 DD       		.byte	0xdd
 1195 0258 97000000 		.4byte	0x97
 1196 025c 02       		.uleb128 0x2
 1197 025d 91       		.byte	0x91
 1198 025e 6F       		.sleb128 -17
 1199 025f 10       		.uleb128 0x10
 1200 0260 56616C00 		.ascii	"Val\000"
 1201 0264 01       		.byte	0x1
 1202 0265 DF       		.byte	0xdf
 1203 0266 97000000 		.4byte	0x97
 1204 026a 02       		.uleb128 0x2
 1205 026b 91       		.byte	0x91
 1206 026c 77       		.sleb128 -9
 1207 026d 00       		.byte	0
 1208 026e 11       		.uleb128 0x11
 1209 026f 66000000 		.4byte	.LASF66
 1210 0273 01       		.byte	0x1
 1211 0274 E8       		.byte	0xe8
 1212 0275 00000000 		.4byte	.LFB5
 1213 0279 36000000 		.4byte	.LFE5-.LFB5
 1214 027d 01       		.uleb128 0x1
 1215 027e 9C       		.byte	0x9c
 1216 027f 92020000 		.4byte	0x292
 1217 0283 0B       		.uleb128 0xb
 1218 0284 7C020000 		.4byte	.LASF48
 1219 0288 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 28


 1220 0289 E8       		.byte	0xe8
 1221 028a 0A020000 		.4byte	0x20a
 1222 028e 02       		.uleb128 0x2
 1223 028f 91       		.byte	0x91
 1224 0290 6C       		.sleb128 -20
 1225 0291 00       		.byte	0
 1226 0292 0A       		.uleb128 0xa
 1227 0293 07020000 		.4byte	.LASF54
 1228 0297 01       		.byte	0x1
 1229 0298 F2       		.byte	0xf2
 1230 0299 AD000000 		.4byte	0xad
 1231 029d 00000000 		.4byte	.LFB6
 1232 02a1 B8000000 		.4byte	.LFE6-.LFB6
 1233 02a5 01       		.uleb128 0x1
 1234 02a6 9C       		.byte	0x9c
 1235 02a7 E3020000 		.4byte	0x2e3
 1236 02ab 0B       		.uleb128 0xb
 1237 02ac 7C020000 		.4byte	.LASF48
 1238 02b0 01       		.byte	0x1
 1239 02b1 F2       		.byte	0xf2
 1240 02b2 0A020000 		.4byte	0x20a
 1241 02b6 02       		.uleb128 0x2
 1242 02b7 91       		.byte	0x91
 1243 02b8 6C       		.sleb128 -20
 1244 02b9 0F       		.uleb128 0xf
 1245 02ba 525800   		.ascii	"RX\000"
 1246 02bd 01       		.byte	0x1
 1247 02be F2       		.byte	0xf2
 1248 02bf E3020000 		.4byte	0x2e3
 1249 02c3 02       		.uleb128 0x2
 1250 02c4 91       		.byte	0x91
 1251 02c5 68       		.sleb128 -24
 1252 02c6 0B       		.uleb128 0xb
 1253 02c7 61000000 		.4byte	.LASF55
 1254 02cb 01       		.byte	0x1
 1255 02cc F2       		.byte	0xf2
 1256 02cd E3020000 		.4byte	0x2e3
 1257 02d1 02       		.uleb128 0x2
 1258 02d2 91       		.byte	0x91
 1259 02d3 64       		.sleb128 -28
 1260 02d4 10       		.uleb128 0x10
 1261 02d5 52657300 		.ascii	"Res\000"
 1262 02d9 01       		.byte	0x1
 1263 02da F4       		.byte	0xf4
 1264 02db 97000000 		.4byte	0x97
 1265 02df 02       		.uleb128 0x2
 1266 02e0 91       		.byte	0x91
 1267 02e1 77       		.sleb128 -9
 1268 02e2 00       		.byte	0
 1269 02e3 0D       		.uleb128 0xd
 1270 02e4 04       		.byte	0x4
 1271 02e5 97000000 		.4byte	0x97
 1272 02e9 12       		.uleb128 0x12
 1273 02ea 33010000 		.4byte	.LASF56
 1274 02ee 04       		.byte	0x4
 1275 02ef 3F       		.byte	0x3f
 1276 02f0 97000000 		.4byte	0x97
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 29


 1277 02f4 05       		.uleb128 0x5
 1278 02f5 03       		.byte	0x3
 1279 02f6 00000000 		.4byte	PROTO_STATE
 1280 02fa 12       		.uleb128 0x12
 1281 02fb 8B000000 		.4byte	.LASF57
 1282 02ff 04       		.byte	0x4
 1283 0300 3F       		.byte	0x3f
 1284 0301 97000000 		.4byte	0x97
 1285 0305 05       		.uleb128 0x5
 1286 0306 03       		.byte	0x3
 1287 0307 00000000 		.4byte	LenD1
 1288 030b 12       		.uleb128 0x12
 1289 030c 91000000 		.4byte	.LASF58
 1290 0310 04       		.byte	0x4
 1291 0311 3F       		.byte	0x3f
 1292 0312 97000000 		.4byte	0x97
 1293 0316 05       		.uleb128 0x5
 1294 0317 03       		.byte	0x3
 1295 0318 00000000 		.4byte	LenD2
 1296 031c 12       		.uleb128 0x12
 1297 031d 62010000 		.4byte	.LASF59
 1298 0321 04       		.byte	0x4
 1299 0322 3F       		.byte	0x3f
 1300 0323 97000000 		.4byte	0x97
 1301 0327 05       		.uleb128 0x5
 1302 0328 03       		.byte	0x3
 1303 0329 00000000 		.4byte	LenSeq
 1304 032d 12       		.uleb128 0x12
 1305 032e 26020000 		.4byte	.LASF60
 1306 0332 04       		.byte	0x4
 1307 0333 3F       		.byte	0x3f
 1308 0334 97000000 		.4byte	0x97
 1309 0338 05       		.uleb128 0x5
 1310 0339 03       		.byte	0x3
 1311 033a 00000000 		.4byte	LenChS
 1312 033e 12       		.uleb128 0x12
 1313 033f 2E010000 		.4byte	.LASF61
 1314 0343 04       		.byte	0x4
 1315 0344 3F       		.byte	0x3f
 1316 0345 97000000 		.4byte	0x97
 1317 0349 05       		.uleb128 0x5
 1318 034a 03       		.byte	0x3
 1319 034b 00000000 		.4byte	LenC
 1320 034f 00       		.byte	0
 1321              		.section	.debug_abbrev,"",%progbits
 1322              	.Ldebug_abbrev0:
 1323 0000 01       		.uleb128 0x1
 1324 0001 11       		.uleb128 0x11
 1325 0002 01       		.byte	0x1
 1326 0003 25       		.uleb128 0x25
 1327 0004 0E       		.uleb128 0xe
 1328 0005 13       		.uleb128 0x13
 1329 0006 0B       		.uleb128 0xb
 1330 0007 03       		.uleb128 0x3
 1331 0008 0E       		.uleb128 0xe
 1332 0009 1B       		.uleb128 0x1b
 1333 000a 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 30


 1334 000b 55       		.uleb128 0x55
 1335 000c 17       		.uleb128 0x17
 1336 000d 11       		.uleb128 0x11
 1337 000e 01       		.uleb128 0x1
 1338 000f 10       		.uleb128 0x10
 1339 0010 17       		.uleb128 0x17
 1340 0011 00       		.byte	0
 1341 0012 00       		.byte	0
 1342 0013 02       		.uleb128 0x2
 1343 0014 24       		.uleb128 0x24
 1344 0015 00       		.byte	0
 1345 0016 0B       		.uleb128 0xb
 1346 0017 0B       		.uleb128 0xb
 1347 0018 3E       		.uleb128 0x3e
 1348 0019 0B       		.uleb128 0xb
 1349 001a 03       		.uleb128 0x3
 1350 001b 0E       		.uleb128 0xe
 1351 001c 00       		.byte	0
 1352 001d 00       		.byte	0
 1353 001e 03       		.uleb128 0x3
 1354 001f 16       		.uleb128 0x16
 1355 0020 00       		.byte	0
 1356 0021 03       		.uleb128 0x3
 1357 0022 0E       		.uleb128 0xe
 1358 0023 3A       		.uleb128 0x3a
 1359 0024 0B       		.uleb128 0xb
 1360 0025 3B       		.uleb128 0x3b
 1361 0026 0B       		.uleb128 0xb
 1362 0027 49       		.uleb128 0x49
 1363 0028 13       		.uleb128 0x13
 1364 0029 00       		.byte	0
 1365 002a 00       		.byte	0
 1366 002b 04       		.uleb128 0x4
 1367 002c 24       		.uleb128 0x24
 1368 002d 00       		.byte	0
 1369 002e 0B       		.uleb128 0xb
 1370 002f 0B       		.uleb128 0xb
 1371 0030 3E       		.uleb128 0x3e
 1372 0031 0B       		.uleb128 0xb
 1373 0032 03       		.uleb128 0x3
 1374 0033 08       		.uleb128 0x8
 1375 0034 00       		.byte	0
 1376 0035 00       		.byte	0
 1377 0036 05       		.uleb128 0x5
 1378 0037 13       		.uleb128 0x13
 1379 0038 01       		.byte	0x1
 1380 0039 03       		.uleb128 0x3
 1381 003a 0E       		.uleb128 0xe
 1382 003b 0B       		.uleb128 0xb
 1383 003c 0B       		.uleb128 0xb
 1384 003d 3A       		.uleb128 0x3a
 1385 003e 0B       		.uleb128 0xb
 1386 003f 3B       		.uleb128 0x3b
 1387 0040 0B       		.uleb128 0xb
 1388 0041 01       		.uleb128 0x1
 1389 0042 13       		.uleb128 0x13
 1390 0043 00       		.byte	0
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 31


 1391 0044 00       		.byte	0
 1392 0045 06       		.uleb128 0x6
 1393 0046 0D       		.uleb128 0xd
 1394 0047 00       		.byte	0
 1395 0048 03       		.uleb128 0x3
 1396 0049 08       		.uleb128 0x8
 1397 004a 3A       		.uleb128 0x3a
 1398 004b 0B       		.uleb128 0xb
 1399 004c 3B       		.uleb128 0x3b
 1400 004d 0B       		.uleb128 0xb
 1401 004e 49       		.uleb128 0x49
 1402 004f 13       		.uleb128 0x13
 1403 0050 38       		.uleb128 0x38
 1404 0051 0B       		.uleb128 0xb
 1405 0052 00       		.byte	0
 1406 0053 00       		.byte	0
 1407 0054 07       		.uleb128 0x7
 1408 0055 0D       		.uleb128 0xd
 1409 0056 00       		.byte	0
 1410 0057 03       		.uleb128 0x3
 1411 0058 0E       		.uleb128 0xe
 1412 0059 3A       		.uleb128 0x3a
 1413 005a 0B       		.uleb128 0xb
 1414 005b 3B       		.uleb128 0x3b
 1415 005c 0B       		.uleb128 0xb
 1416 005d 49       		.uleb128 0x49
 1417 005e 13       		.uleb128 0x13
 1418 005f 38       		.uleb128 0x38
 1419 0060 0B       		.uleb128 0xb
 1420 0061 00       		.byte	0
 1421 0062 00       		.byte	0
 1422 0063 08       		.uleb128 0x8
 1423 0064 04       		.uleb128 0x4
 1424 0065 01       		.byte	0x1
 1425 0066 03       		.uleb128 0x3
 1426 0067 0E       		.uleb128 0xe
 1427 0068 0B       		.uleb128 0xb
 1428 0069 0B       		.uleb128 0xb
 1429 006a 3A       		.uleb128 0x3a
 1430 006b 0B       		.uleb128 0xb
 1431 006c 3B       		.uleb128 0x3b
 1432 006d 0B       		.uleb128 0xb
 1433 006e 01       		.uleb128 0x1
 1434 006f 13       		.uleb128 0x13
 1435 0070 00       		.byte	0
 1436 0071 00       		.byte	0
 1437 0072 09       		.uleb128 0x9
 1438 0073 28       		.uleb128 0x28
 1439 0074 00       		.byte	0
 1440 0075 03       		.uleb128 0x3
 1441 0076 0E       		.uleb128 0xe
 1442 0077 1C       		.uleb128 0x1c
 1443 0078 0D       		.uleb128 0xd
 1444 0079 00       		.byte	0
 1445 007a 00       		.byte	0
 1446 007b 0A       		.uleb128 0xa
 1447 007c 2E       		.uleb128 0x2e
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 32


 1448 007d 01       		.byte	0x1
 1449 007e 3F       		.uleb128 0x3f
 1450 007f 19       		.uleb128 0x19
 1451 0080 03       		.uleb128 0x3
 1452 0081 0E       		.uleb128 0xe
 1453 0082 3A       		.uleb128 0x3a
 1454 0083 0B       		.uleb128 0xb
 1455 0084 3B       		.uleb128 0x3b
 1456 0085 0B       		.uleb128 0xb
 1457 0086 27       		.uleb128 0x27
 1458 0087 19       		.uleb128 0x19
 1459 0088 49       		.uleb128 0x49
 1460 0089 13       		.uleb128 0x13
 1461 008a 11       		.uleb128 0x11
 1462 008b 01       		.uleb128 0x1
 1463 008c 12       		.uleb128 0x12
 1464 008d 06       		.uleb128 0x6
 1465 008e 40       		.uleb128 0x40
 1466 008f 18       		.uleb128 0x18
 1467 0090 9642     		.uleb128 0x2116
 1468 0092 19       		.uleb128 0x19
 1469 0093 01       		.uleb128 0x1
 1470 0094 13       		.uleb128 0x13
 1471 0095 00       		.byte	0
 1472 0096 00       		.byte	0
 1473 0097 0B       		.uleb128 0xb
 1474 0098 05       		.uleb128 0x5
 1475 0099 00       		.byte	0
 1476 009a 03       		.uleb128 0x3
 1477 009b 0E       		.uleb128 0xe
 1478 009c 3A       		.uleb128 0x3a
 1479 009d 0B       		.uleb128 0xb
 1480 009e 3B       		.uleb128 0x3b
 1481 009f 0B       		.uleb128 0xb
 1482 00a0 49       		.uleb128 0x49
 1483 00a1 13       		.uleb128 0x13
 1484 00a2 02       		.uleb128 0x2
 1485 00a3 18       		.uleb128 0x18
 1486 00a4 00       		.byte	0
 1487 00a5 00       		.byte	0
 1488 00a6 0C       		.uleb128 0xc
 1489 00a7 34       		.uleb128 0x34
 1490 00a8 00       		.byte	0
 1491 00a9 03       		.uleb128 0x3
 1492 00aa 0E       		.uleb128 0xe
 1493 00ab 3A       		.uleb128 0x3a
 1494 00ac 0B       		.uleb128 0xb
 1495 00ad 3B       		.uleb128 0x3b
 1496 00ae 0B       		.uleb128 0xb
 1497 00af 49       		.uleb128 0x49
 1498 00b0 13       		.uleb128 0x13
 1499 00b1 02       		.uleb128 0x2
 1500 00b2 18       		.uleb128 0x18
 1501 00b3 00       		.byte	0
 1502 00b4 00       		.byte	0
 1503 00b5 0D       		.uleb128 0xd
 1504 00b6 0F       		.uleb128 0xf
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 33


 1505 00b7 00       		.byte	0
 1506 00b8 0B       		.uleb128 0xb
 1507 00b9 0B       		.uleb128 0xb
 1508 00ba 49       		.uleb128 0x49
 1509 00bb 13       		.uleb128 0x13
 1510 00bc 00       		.byte	0
 1511 00bd 00       		.byte	0
 1512 00be 0E       		.uleb128 0xe
 1513 00bf 2E       		.uleb128 0x2e
 1514 00c0 01       		.byte	0x1
 1515 00c1 3F       		.uleb128 0x3f
 1516 00c2 19       		.uleb128 0x19
 1517 00c3 03       		.uleb128 0x3
 1518 00c4 0E       		.uleb128 0xe
 1519 00c5 3A       		.uleb128 0x3a
 1520 00c6 0B       		.uleb128 0xb
 1521 00c7 3B       		.uleb128 0x3b
 1522 00c8 0B       		.uleb128 0xb
 1523 00c9 27       		.uleb128 0x27
 1524 00ca 19       		.uleb128 0x19
 1525 00cb 49       		.uleb128 0x49
 1526 00cc 13       		.uleb128 0x13
 1527 00cd 11       		.uleb128 0x11
 1528 00ce 01       		.uleb128 0x1
 1529 00cf 12       		.uleb128 0x12
 1530 00d0 06       		.uleb128 0x6
 1531 00d1 40       		.uleb128 0x40
 1532 00d2 18       		.uleb128 0x18
 1533 00d3 9742     		.uleb128 0x2117
 1534 00d5 19       		.uleb128 0x19
 1535 00d6 01       		.uleb128 0x1
 1536 00d7 13       		.uleb128 0x13
 1537 00d8 00       		.byte	0
 1538 00d9 00       		.byte	0
 1539 00da 0F       		.uleb128 0xf
 1540 00db 05       		.uleb128 0x5
 1541 00dc 00       		.byte	0
 1542 00dd 03       		.uleb128 0x3
 1543 00de 08       		.uleb128 0x8
 1544 00df 3A       		.uleb128 0x3a
 1545 00e0 0B       		.uleb128 0xb
 1546 00e1 3B       		.uleb128 0x3b
 1547 00e2 0B       		.uleb128 0xb
 1548 00e3 49       		.uleb128 0x49
 1549 00e4 13       		.uleb128 0x13
 1550 00e5 02       		.uleb128 0x2
 1551 00e6 18       		.uleb128 0x18
 1552 00e7 00       		.byte	0
 1553 00e8 00       		.byte	0
 1554 00e9 10       		.uleb128 0x10
 1555 00ea 34       		.uleb128 0x34
 1556 00eb 00       		.byte	0
 1557 00ec 03       		.uleb128 0x3
 1558 00ed 08       		.uleb128 0x8
 1559 00ee 3A       		.uleb128 0x3a
 1560 00ef 0B       		.uleb128 0xb
 1561 00f0 3B       		.uleb128 0x3b
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 34


 1562 00f1 0B       		.uleb128 0xb
 1563 00f2 49       		.uleb128 0x49
 1564 00f3 13       		.uleb128 0x13
 1565 00f4 02       		.uleb128 0x2
 1566 00f5 18       		.uleb128 0x18
 1567 00f6 00       		.byte	0
 1568 00f7 00       		.byte	0
 1569 00f8 11       		.uleb128 0x11
 1570 00f9 2E       		.uleb128 0x2e
 1571 00fa 01       		.byte	0x1
 1572 00fb 3F       		.uleb128 0x3f
 1573 00fc 19       		.uleb128 0x19
 1574 00fd 03       		.uleb128 0x3
 1575 00fe 0E       		.uleb128 0xe
 1576 00ff 3A       		.uleb128 0x3a
 1577 0100 0B       		.uleb128 0xb
 1578 0101 3B       		.uleb128 0x3b
 1579 0102 0B       		.uleb128 0xb
 1580 0103 27       		.uleb128 0x27
 1581 0104 19       		.uleb128 0x19
 1582 0105 11       		.uleb128 0x11
 1583 0106 01       		.uleb128 0x1
 1584 0107 12       		.uleb128 0x12
 1585 0108 06       		.uleb128 0x6
 1586 0109 40       		.uleb128 0x40
 1587 010a 18       		.uleb128 0x18
 1588 010b 9742     		.uleb128 0x2117
 1589 010d 19       		.uleb128 0x19
 1590 010e 01       		.uleb128 0x1
 1591 010f 13       		.uleb128 0x13
 1592 0110 00       		.byte	0
 1593 0111 00       		.byte	0
 1594 0112 12       		.uleb128 0x12
 1595 0113 34       		.uleb128 0x34
 1596 0114 00       		.byte	0
 1597 0115 03       		.uleb128 0x3
 1598 0116 0E       		.uleb128 0xe
 1599 0117 3A       		.uleb128 0x3a
 1600 0118 0B       		.uleb128 0xb
 1601 0119 3B       		.uleb128 0x3b
 1602 011a 0B       		.uleb128 0xb
 1603 011b 49       		.uleb128 0x49
 1604 011c 13       		.uleb128 0x13
 1605 011d 3F       		.uleb128 0x3f
 1606 011e 19       		.uleb128 0x19
 1607 011f 02       		.uleb128 0x2
 1608 0120 18       		.uleb128 0x18
 1609 0121 00       		.byte	0
 1610 0122 00       		.byte	0
 1611 0123 00       		.byte	0
 1612              		.section	.debug_aranges,"",%progbits
 1613 0000 3C000000 		.4byte	0x3c
 1614 0004 0200     		.2byte	0x2
 1615 0006 00000000 		.4byte	.Ldebug_info0
 1616 000a 04       		.byte	0x4
 1617 000b 00       		.byte	0
 1618 000c 0000     		.2byte	0
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 35


 1619 000e 0000     		.2byte	0
 1620 0010 00000000 		.4byte	.LFB2
 1621 0014 34030000 		.4byte	.LFE2-.LFB2
 1622 0018 00000000 		.4byte	.LFB3
 1623 001c 4E000000 		.4byte	.LFE3-.LFB3
 1624 0020 00000000 		.4byte	.LFB4
 1625 0024 32000000 		.4byte	.LFE4-.LFB4
 1626 0028 00000000 		.4byte	.LFB5
 1627 002c 36000000 		.4byte	.LFE5-.LFB5
 1628 0030 00000000 		.4byte	.LFB6
 1629 0034 B8000000 		.4byte	.LFE6-.LFB6
 1630 0038 00000000 		.4byte	0
 1631 003c 00000000 		.4byte	0
 1632              		.section	.debug_ranges,"",%progbits
 1633              	.Ldebug_ranges0:
 1634 0000 00000000 		.4byte	.LFB2
 1635 0004 34030000 		.4byte	.LFE2
 1636 0008 00000000 		.4byte	.LFB3
 1637 000c 4E000000 		.4byte	.LFE3
 1638 0010 00000000 		.4byte	.LFB4
 1639 0014 32000000 		.4byte	.LFE4
 1640 0018 00000000 		.4byte	.LFB5
 1641 001c 36000000 		.4byte	.LFE5
 1642 0020 00000000 		.4byte	.LFB6
 1643 0024 B8000000 		.4byte	.LFE6
 1644 0028 00000000 		.4byte	0
 1645 002c 00000000 		.4byte	0
 1646              		.section	.debug_line,"",%progbits
 1647              	.Ldebug_line0:
 1648 0000 17020000 		.section	.debug_str,"MS",%progbits,1
 1648      02001501 
 1648      00000201 
 1648      FB0E0D00 
 1648      01010101 
 1649              	.LASF35:
 1650 0000 52454144 		.ascii	"READ_ETX\000"
 1650      5F455458 
 1650      00
 1651              	.LASF50:
 1652 0009 556E7061 		.ascii	"UnpackData\000"
 1652      636B4461 
 1652      746100
 1653              	.LASF41:
 1654 0014 494E565F 		.ascii	"INV_COMM\000"
 1654      434F4D4D 
 1654      00
 1655              	.LASF16:
 1656 001d 75696E74 		.ascii	"uint64_t\000"
 1656      36345F74 
 1656      00
 1657              	.LASF3:
 1658 0026 5F5F7569 		.ascii	"__uint8_t\000"
 1658      6E74385F 
 1658      7400
 1659              	.LASF11:
 1660 0030 6C6F6E67 		.ascii	"long long unsigned int\000"
 1660      206C6F6E 
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 36


 1660      6720756E 
 1660      7369676E 
 1660      65642069 
 1661              	.LASF9:
 1662 0047 6C6F6E67 		.ascii	"long long int\000"
 1662      206C6F6E 
 1662      6720696E 
 1662      7400
 1663              	.LASF0:
 1664 0055 7369676E 		.ascii	"signed char\000"
 1664      65642063 
 1664      68617200 
 1665              	.LASF55:
 1666 0061 62756666 		.ascii	"buff\000"
 1666      00
 1667              	.LASF66:
 1668 0066 52657365 		.ascii	"ResetPacket\000"
 1668      74506163 
 1668      6B657400 
 1669              	.LASF6:
 1670 0072 6C6F6E67 		.ascii	"long int\000"
 1670      20696E74 
 1670      00
 1671              	.LASF14:
 1672 007b 75696E74 		.ascii	"uint16_t\000"
 1672      31365F74 
 1672      00
 1673              	.LASF20:
 1674 0084 646F7562 		.ascii	"double\000"
 1674      6C6500
 1675              	.LASF57:
 1676 008b 4C656E44 		.ascii	"LenD1\000"
 1676      3100
 1677              	.LASF58:
 1678 0091 4C656E44 		.ascii	"LenD2\000"
 1678      3200
 1679              	.LASF21:
 1680 0097 436F6D6D 		.ascii	"Command\000"
 1680      616E6400 
 1681              	.LASF44:
 1682 009f 494E565F 		.ascii	"INV_DA2\000"
 1682      44413200 
 1683              	.LASF40:
 1684 00a7 4E4F5F46 		.ascii	"NO_FR1\000"
 1684      523100
 1685              	.LASF7:
 1686 00ae 5F5F7569 		.ascii	"__uint32_t\000"
 1686      6E743332 
 1686      5F7400
 1687              	.LASF45:
 1688 00b9 4E4F5F46 		.ascii	"NO_FR3\000"
 1688      523300
 1689              	.LASF51:
 1690 00c0 4465636F 		.ascii	"DecodeByte\000"
 1690      64654279 
 1690      746500
 1691              	.LASF53:
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 37


 1692 00cb 4552525F 		.ascii	"ERR_CODE\000"
 1692      434F4445 
 1692      00
 1693              	.LASF12:
 1694 00d4 756E7369 		.ascii	"unsigned int\000"
 1694      676E6564 
 1694      20696E74 
 1694      00
 1695              	.LASF8:
 1696 00e1 6C6F6E67 		.ascii	"long unsigned int\000"
 1696      20756E73 
 1696      69676E65 
 1696      6420696E 
 1696      7400
 1697              	.LASF52:
 1698 00f3 43686563 		.ascii	"CheckSymb\000"
 1698      6B53796D 
 1698      6200
 1699              	.LASF5:
 1700 00fd 73686F72 		.ascii	"short unsigned int\000"
 1700      7420756E 
 1700      7369676E 
 1700      65642069 
 1700      6E7400
 1701              	.LASF22:
 1702 0110 44617461 		.ascii	"Data1\000"
 1702      3100
 1703              	.LASF23:
 1704 0116 44617461 		.ascii	"Data2\000"
 1704      3200
 1705              	.LASF49:
 1706 011c 496E4279 		.ascii	"InByte\000"
 1706      746500
 1707              	.LASF36:
 1708 0123 50524F5F 		.ascii	"PRO_STATES\000"
 1708      53544154 
 1708      455300
 1709              	.LASF61:
 1710 012e 4C656E43 		.ascii	"LenC\000"
 1710      00
 1711              	.LASF56:
 1712 0133 50524F54 		.ascii	"PROTO_STATE\000"
 1712      4F5F5354 
 1712      41544500 
 1713              	.LASF39:
 1714 013f 4241445F 		.ascii	"BAD_SEQ\000"
 1714      53455100 
 1715              	.LASF28:
 1716 0147 52454144 		.ascii	"READ_FR1\000"
 1716      5F465231 
 1716      00
 1717              	.LASF30:
 1718 0150 52454144 		.ascii	"READ_FR2\000"
 1718      5F465232 
 1718      00
 1719              	.LASF33:
 1720 0159 52454144 		.ascii	"READ_FR3\000"
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 38


 1720      5F465233 
 1720      00
 1721              	.LASF59:
 1722 0162 4C656E53 		.ascii	"LenSeq\000"
 1722      657100
 1723              	.LASF17:
 1724 0169 73697A65 		.ascii	"sizetype\000"
 1724      74797065 
 1724      00
 1725              	.LASF38:
 1726 0172 50415253 		.ascii	"PARSED_OK\000"
 1726      45445F4F 
 1726      4B00
 1727              	.LASF65:
 1728 017c 52657370 		.ascii	"Resp\000"
 1728      00
 1729              	.LASF64:
 1730 0181 433A5C43 		.ascii	"C:\\Cypress\\Cypress_Projects\\Start-Finish_System_"
 1730      79707265 
 1730      73735C43 
 1730      79707265 
 1730      73735F50 
 1731 01b1 53746172 		.ascii	"StartModule.cydsn\000"
 1731      744D6F64 
 1731      756C652E 
 1731      63796473 
 1731      6E00
 1732              	.LASF10:
 1733 01c3 5F5F7569 		.ascii	"__uint64_t\000"
 1733      6E743634 
 1733      5F7400
 1734              	.LASF19:
 1735 01ce 666C6F61 		.ascii	"float\000"
 1735      7400
 1736              	.LASF24:
 1737 01d4 43686563 		.ascii	"CheckSum\000"
 1737      6B53756D 
 1737      00
 1738              	.LASF31:
 1739 01dd 52454144 		.ascii	"READ_DA1\000"
 1739      5F444131 
 1739      00
 1740              	.LASF32:
 1741 01e6 52454144 		.ascii	"READ_DA2\000"
 1741      5F444132 
 1741      00
 1742              	.LASF1:
 1743 01ef 756E7369 		.ascii	"unsigned char\000"
 1743      676E6564 
 1743      20636861 
 1743      7200
 1744              	.LASF2:
 1745 01fd 73686F72 		.ascii	"short int\000"
 1745      7420696E 
 1745      7400
 1746              	.LASF54:
 1747 0207 50726F63 		.ascii	"ProcPacket\000"
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 39


 1747      5061636B 
 1747      657400
 1748              	.LASF29:
 1749 0212 52454144 		.ascii	"READ_COM\000"
 1749      5F434F4D 
 1749      00
 1750              	.LASF37:
 1751 021b 50524F5F 		.ascii	"PRO_ERRORS\000"
 1751      4552524F 
 1751      525300
 1752              	.LASF60:
 1753 0226 4C656E43 		.ascii	"LenChS\000"
 1753      685300
 1754              	.LASF15:
 1755 022d 75696E74 		.ascii	"uint32_t\000"
 1755      33325F74 
 1755      00
 1756              	.LASF18:
 1757 0236 63686172 		.ascii	"char\000"
 1757      00
 1758              	.LASF4:
 1759 023b 5F5F7569 		.ascii	"__uint16_t\000"
 1759      6E743136 
 1759      5F7400
 1760              	.LASF47:
 1761 0246 4E4F5F45 		.ascii	"NO_ETX\000"
 1761      545800
 1762              	.LASF26:
 1763 024d 57414954 		.ascii	"WAIT_STX\000"
 1763      5F535458 
 1763      00
 1764              	.LASF34:
 1765 0256 52454144 		.ascii	"READ_CHS\000"
 1765      5F434853 
 1765      00
 1766              	.LASF27:
 1767 025f 52454144 		.ascii	"READ_SQ\000"
 1767      5F535100 
 1768              	.LASF46:
 1769 0267 494E565F 		.ascii	"INV_CKECKSUM\000"
 1769      434B4543 
 1769      4B53554D 
 1769      00
 1770              	.LASF13:
 1771 0274 75696E74 		.ascii	"uint8_t\000"
 1771      385F7400 
 1772              	.LASF48:
 1773 027c 44617461 		.ascii	"Data\000"
 1773      00
 1774              	.LASF43:
 1775 0281 494E565F 		.ascii	"INV_DA1\000"
 1775      44413100 
 1776              	.LASF62:
 1777 0289 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1777      4320342E 
 1777      392E3320 
 1777      32303135 
ARM GAS  C:\DOCUME~1\9335~1\LOCALS~1\Temp\ccLmRPPi.s 			page 40


 1777      30333033 
 1778 02bc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1778      20726576 
 1778      6973696F 
 1778      6E203232 
 1778      31323230 
 1779 02ef 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1779      66756E63 
 1779      74696F6E 
 1779      2D736563 
 1779      74696F6E 
 1780              	.LASF63:
 1781 0317 2E5C7376 		.ascii	".\\svt.c\000"
 1781      742E6300 
 1782              	.LASF42:
 1783 031f 4E4F5F46 		.ascii	"NO_FR2\000"
 1783      523200
 1784              	.LASF25:
 1785 0326 456E6450 		.ascii	"EndPacket\000"
 1785      61636B65 
 1785      7400
 1786              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
