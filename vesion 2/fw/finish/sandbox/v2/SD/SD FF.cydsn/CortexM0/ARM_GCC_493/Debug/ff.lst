ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.bss
  18              		.align	2
  19              	FatFs:
  20 0000 00000000 		.space	4
  21              		.align	1
  22              	Fsid:
  23 0004 0000     		.space	2
  24 0006 0000     		.section	.text.mem_cpy,"ax",%progbits
  25              		.align	2
  26              		.code	16
  27              		.thumb_func
  28              		.type	mem_cpy, %function
  29              	mem_cpy:
  30              	.LFB2:
  31              		.file 1 ".\\ff\\ff.c"
   1:.\ff/ff.c     **** /*----------------------------------------------------------------------------/
   2:.\ff/ff.c     **** /  FatFs - FAT file system module  R0.08b                 (C)ChaN, 2011
   3:.\ff/ff.c     **** /-----------------------------------------------------------------------------/
   4:.\ff/ff.c     **** / FatFs module is a generic FAT file system module for small embedded systems.
   5:.\ff/ff.c     **** / This is a free software that opened for education, research and commercial
   6:.\ff/ff.c     **** / developments under license policy of following terms.
   7:.\ff/ff.c     **** /
   8:.\ff/ff.c     **** /  Copyright (C) 2011, ChaN, all right reserved.
   9:.\ff/ff.c     **** /
  10:.\ff/ff.c     **** / * The FatFs module is a free software and there is NO WARRANTY.
  11:.\ff/ff.c     **** / * No restriction on use. You can use, modify and redistribute it for
  12:.\ff/ff.c     **** /   personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
  13:.\ff/ff.c     **** / * Redistributions of source code must retain the above copyright notice.
  14:.\ff/ff.c     **** /
  15:.\ff/ff.c     **** /-----------------------------------------------------------------------------/
  16:.\ff/ff.c     **** / Feb 26,'06 R0.00  Prototype.
  17:.\ff/ff.c     **** /
  18:.\ff/ff.c     **** / Apr 29,'06 R0.01  First stable version.
  19:.\ff/ff.c     **** /
  20:.\ff/ff.c     **** / Jun 01,'06 R0.02  Added FAT12 support.
  21:.\ff/ff.c     **** /                   Removed unbuffered mode.
  22:.\ff/ff.c     **** /                   Fixed a problem on small (<32M) partition.
  23:.\ff/ff.c     **** / Jun 10,'06 R0.02a Added a configuration option (_FS_MINIMUM).
  24:.\ff/ff.c     **** /
  25:.\ff/ff.c     **** / Sep 22,'06 R0.03  Added f_rename().
  26:.\ff/ff.c     **** /                   Changed option _FS_MINIMUM to _FS_MINIMIZE.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 2


  27:.\ff/ff.c     **** / Dec 11,'06 R0.03a Improved cluster scan algorithm to write files fast.
  28:.\ff/ff.c     **** /                   Fixed f_mkdir() creates incorrect directory on FAT32.
  29:.\ff/ff.c     **** /
  30:.\ff/ff.c     **** / Feb 04,'07 R0.04  Supported multiple drive system.
  31:.\ff/ff.c     **** /                   Changed some interfaces for multiple drive system.
  32:.\ff/ff.c     **** /                   Changed f_mountdrv() to f_mount().
  33:.\ff/ff.c     **** /                   Added f_mkfs().
  34:.\ff/ff.c     **** / Apr 01,'07 R0.04a Supported multiple partitions on a physical drive.
  35:.\ff/ff.c     **** /                   Added a capability of extending file size to f_lseek().
  36:.\ff/ff.c     **** /                   Added minimization level 3.
  37:.\ff/ff.c     **** /                   Fixed an endian sensitive code in f_mkfs().
  38:.\ff/ff.c     **** / May 05,'07 R0.04b Added a configuration option _USE_NTFLAG.
  39:.\ff/ff.c     **** /                   Added FSInfo support.
  40:.\ff/ff.c     **** /                   Fixed DBCS name can result FR_INVALID_NAME.
  41:.\ff/ff.c     **** /                   Fixed short seek (<= csize) collapses the file object.
  42:.\ff/ff.c     **** /
  43:.\ff/ff.c     **** / Aug 25,'07 R0.05  Changed arguments of f_read(), f_write() and f_mkfs().
  44:.\ff/ff.c     **** /                   Fixed f_mkfs() on FAT32 creates incorrect FSInfo.
  45:.\ff/ff.c     **** /                   Fixed f_mkdir() on FAT32 creates incorrect directory.
  46:.\ff/ff.c     **** / Feb 03,'08 R0.05a Added f_truncate() and f_utime().
  47:.\ff/ff.c     **** /                   Fixed off by one error at FAT sub-type determination.
  48:.\ff/ff.c     **** /                   Fixed btr in f_read() can be mistruncated.
  49:.\ff/ff.c     **** /                   Fixed cached sector is not flushed when create and close without write.
  50:.\ff/ff.c     **** /
  51:.\ff/ff.c     **** / Apr 01,'08 R0.06  Added fputc(), fputs(), fprintf() and fgets().
  52:.\ff/ff.c     **** /                   Improved performance of f_lseek() on moving to the same or following cluster.
  53:.\ff/ff.c     **** /
  54:.\ff/ff.c     **** / Apr 01,'09 R0.07  Merged Tiny-FatFs as a configuration option. (_FS_TINY)
  55:.\ff/ff.c     **** /                   Added long file name feature.
  56:.\ff/ff.c     **** /                   Added multiple code page feature.
  57:.\ff/ff.c     **** /                   Added re-entrancy for multitask operation.
  58:.\ff/ff.c     **** /                   Added auto cluster size selection to f_mkfs().
  59:.\ff/ff.c     **** /                   Added rewind option to f_readdir().
  60:.\ff/ff.c     **** /                   Changed result code of critical errors.
  61:.\ff/ff.c     **** /                   Renamed string functions to avoid name collision.
  62:.\ff/ff.c     **** / Apr 14,'09 R0.07a Separated out OS dependent code on reentrant cfg.
  63:.\ff/ff.c     **** /                   Added multiple sector size feature.
  64:.\ff/ff.c     **** / Jun 21,'09 R0.07c Fixed f_unlink() can return FR_OK on error.
  65:.\ff/ff.c     **** /                   Fixed wrong cache control in f_lseek().
  66:.\ff/ff.c     **** /                   Added relative path feature.
  67:.\ff/ff.c     **** /                   Added f_chdir() and f_chdrive().
  68:.\ff/ff.c     **** /                   Added proper case conversion to extended char.
  69:.\ff/ff.c     **** / Nov 03,'09 R0.07e Separated out configuration options from ff.h to ffconf.h.
  70:.\ff/ff.c     **** /                   Fixed f_unlink() fails to remove a sub-dir on _FS_RPATH.
  71:.\ff/ff.c     **** /                   Fixed name matching error on the 13 char boundary.
  72:.\ff/ff.c     **** /                   Added a configuration option, _LFN_UNICODE.
  73:.\ff/ff.c     **** /                   Changed f_readdir() to return the SFN with always upper case on non-LFN cfg.
  74:.\ff/ff.c     **** /
  75:.\ff/ff.c     **** / May 15,'10 R0.08  Added a memory configuration option. (_USE_LFN = 3)
  76:.\ff/ff.c     **** /                   Added file lock feature. (_FS_SHARE)
  77:.\ff/ff.c     **** /                   Added fast seek feature. (_USE_FASTSEEK)
  78:.\ff/ff.c     **** /                   Changed some types on the API, XCHAR->TCHAR.
  79:.\ff/ff.c     **** /                   Changed fname member in the FILINFO structure on Unicode cfg.
  80:.\ff/ff.c     **** /                   String functions support UTF-8 encoding files on Unicode cfg.
  81:.\ff/ff.c     **** / Aug 16,'10 R0.08a Added f_getcwd(). (_FS_RPATH = 2)
  82:.\ff/ff.c     **** /                   Added sector erase feature. (_USE_ERASE)
  83:.\ff/ff.c     **** /                   Moved file lock semaphore table from fs object to the bss.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 3


  84:.\ff/ff.c     **** /                   Fixed a wrong directory entry is created on non-LFN cfg when the given name con
  85:.\ff/ff.c     **** /                   Fixed f_mkfs() creates wrong FAT32 volume.
  86:.\ff/ff.c     **** / Jan 15,'11 R0.08b Fast seek feature is also applied to f_read() and f_write().
  87:.\ff/ff.c     **** /                   f_lseek() reports required table size on creating CLMP.
  88:.\ff/ff.c     **** /                   Extended format syntax of f_printf function.
  89:.\ff/ff.c     **** /                   Ignores duplicated directory separators in given path names.
  90:.\ff/ff.c     **** /---------------------------------------------------------------------------*/
  91:.\ff/ff.c     **** 
  92:.\ff/ff.c     **** #include "ff.h"			/* FatFs configurations and declarations */
  93:.\ff/ff.c     **** #include "diskio.h"		/* Declarations of low level disk I/O functions */
  94:.\ff/ff.c     **** #include <CyLib.h>
  95:.\ff/ff.c     **** 
  96:.\ff/ff.c     **** /*--------------------------------------------------------------------------
  97:.\ff/ff.c     **** 
  98:.\ff/ff.c     ****    Module Private Definitions
  99:.\ff/ff.c     **** 
 100:.\ff/ff.c     **** ---------------------------------------------------------------------------*/
 101:.\ff/ff.c     **** 
 102:.\ff/ff.c     **** #if _FATFS != 8237
 103:.\ff/ff.c     **** #error Wrong include file (ff.h).
 104:.\ff/ff.c     **** #endif
 105:.\ff/ff.c     **** 
 106:.\ff/ff.c     **** 
 107:.\ff/ff.c     **** /* Definitions on sector size */
 108:.\ff/ff.c     **** #if _MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 109:.\ff/ff.c     **** #error Wrong sector size.
 110:.\ff/ff.c     **** #endif
 111:.\ff/ff.c     **** #if _MAX_SS != 512
 112:.\ff/ff.c     **** #define	SS(fs)	((fs)->ssize)	/* Multiple sector size */
 113:.\ff/ff.c     **** #else
 114:.\ff/ff.c     **** #define	SS(fs)	512U			/* Fixed sector size */
 115:.\ff/ff.c     **** #endif
 116:.\ff/ff.c     **** 
 117:.\ff/ff.c     **** 
 118:.\ff/ff.c     **** /* Reentrancy related */
 119:.\ff/ff.c     **** #if _FS_REENTRANT
 120:.\ff/ff.c     **** #if _USE_LFN == 1
 121:.\ff/ff.c     **** #error Static LFN work area must not be used in re-entrant configuration.
 122:.\ff/ff.c     **** #endif
 123:.\ff/ff.c     **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 124:.\ff/ff.c     **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 125:.\ff/ff.c     **** #else
 126:.\ff/ff.c     **** #define	ENTER_FF(fs)
 127:.\ff/ff.c     **** #define LEAVE_FF(fs, res)	return res
 128:.\ff/ff.c     **** #endif
 129:.\ff/ff.c     **** 
 130:.\ff/ff.c     **** #define	ABORT(fs, res)		{ fp->flag |= FA__ERROR; LEAVE_FF(fs, res); }
 131:.\ff/ff.c     **** 
 132:.\ff/ff.c     **** 
 133:.\ff/ff.c     **** /* File shareing feature */
 134:.\ff/ff.c     **** #if _FS_SHARE
 135:.\ff/ff.c     **** #if _FS_READONLY
 136:.\ff/ff.c     **** #error _FS_SHARE must be 0 on read-only cfg.
 137:.\ff/ff.c     **** #endif
 138:.\ff/ff.c     **** typedef struct {
 139:.\ff/ff.c     **** 	FATFS *fs;				/* File ID 1, volume (NULL:blank entry) */
 140:.\ff/ff.c     **** 	DWORD clu;				/* File ID 2, directory */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 4


 141:.\ff/ff.c     **** 	WORD idx;				/* File ID 3, directory index */
 142:.\ff/ff.c     **** 	WORD ctr;				/* File open counter, 0:none, 0x01..0xFF:read open count, 0x100:write mode */
 143:.\ff/ff.c     **** } FILESEM;
 144:.\ff/ff.c     **** #endif
 145:.\ff/ff.c     **** 
 146:.\ff/ff.c     **** 
 147:.\ff/ff.c     **** /* Misc definitions */
 148:.\ff/ff.c     **** #define LD_CLUST(dir)	(((DWORD)LD_WORD(dir+DIR_FstClusHI)<<16) | LD_WORD(dir+DIR_FstClusLO))
 149:.\ff/ff.c     **** #define ST_CLUST(dir,cl) {ST_WORD(dir+DIR_FstClusLO, cl); ST_WORD(dir+DIR_FstClusHI, (DWORD)cl>>16)
 150:.\ff/ff.c     **** 
 151:.\ff/ff.c     **** 
 152:.\ff/ff.c     **** /* DBCS code ranges and SBCS extend char conversion table */
 153:.\ff/ff.c     **** 
 154:.\ff/ff.c     **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
 155:.\ff/ff.c     **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
 156:.\ff/ff.c     **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
 157:.\ff/ff.c     **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
 158:.\ff/ff.c     **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
 159:.\ff/ff.c     **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
 160:.\ff/ff.c     **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
 161:.\ff/ff.c     **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
 162:.\ff/ff.c     **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
 163:.\ff/ff.c     **** 
 164:.\ff/ff.c     **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
 165:.\ff/ff.c     **** #define _DF1S	0x81
 166:.\ff/ff.c     **** #define _DF1E	0xFE
 167:.\ff/ff.c     **** #define _DS1S	0x40
 168:.\ff/ff.c     **** #define _DS1E	0x7E
 169:.\ff/ff.c     **** #define _DS2S	0x80
 170:.\ff/ff.c     **** #define _DS2E	0xFE
 171:.\ff/ff.c     **** 
 172:.\ff/ff.c     **** #elif _CODE_PAGE == 949	/* Korean */
 173:.\ff/ff.c     **** #define _DF1S	0x81
 174:.\ff/ff.c     **** #define _DF1E	0xFE
 175:.\ff/ff.c     **** #define _DS1S	0x41
 176:.\ff/ff.c     **** #define _DS1E	0x5A
 177:.\ff/ff.c     **** #define _DS2S	0x61
 178:.\ff/ff.c     **** #define _DS2E	0x7A
 179:.\ff/ff.c     **** #define _DS3S	0x81
 180:.\ff/ff.c     **** #define _DS3E	0xFE
 181:.\ff/ff.c     **** 
 182:.\ff/ff.c     **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
 183:.\ff/ff.c     **** #define _DF1S	0x81
 184:.\ff/ff.c     **** #define _DF1E	0xFE
 185:.\ff/ff.c     **** #define _DS1S	0x40
 186:.\ff/ff.c     **** #define _DS1E	0x7E
 187:.\ff/ff.c     **** #define _DS2S	0xA1
 188:.\ff/ff.c     **** #define _DS2E	0xFE
 189:.\ff/ff.c     **** 
 190:.\ff/ff.c     **** #elif _CODE_PAGE == 437	/* U.S. (OEM) */
 191:.\ff/ff.c     **** #define _DF1S	0
 192:.\ff/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x9
 193:.\ff/ff.c     **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 194:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 195:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 196:.\ff/ff.c     **** 
 197:.\ff/ff.c     **** #elif _CODE_PAGE == 720	/* Arabic (OEM) */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 5


 198:.\ff/ff.c     **** #define _DF1S	0
 199:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x9
 200:.\ff/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 201:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 202:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 203:.\ff/ff.c     **** 
 204:.\ff/ff.c     **** #elif _CODE_PAGE == 737	/* Greek (OEM) */
 205:.\ff/ff.c     **** #define _DF1S	0
 206:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 207:.\ff/ff.c     **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96,0xB0,0xB1,0xB2,
 208:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 209:.\ff/ff.c     **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 210:.\ff/ff.c     **** 
 211:.\ff/ff.c     **** #elif _CODE_PAGE == 775	/* Baltic (OEM) */
 212:.\ff/ff.c     **** #define _DF1S	0
 213:.\ff/ff.c     **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x9
 214:.\ff/ff.c     **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 215:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xB5,0xB6,0xB7,
 216:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 217:.\ff/ff.c     **** 
 218:.\ff/ff.c     **** #elif _CODE_PAGE == 850	/* Multilingual Latin 1 (OEM) */
 219:.\ff/ff.c     **** #define _DF1S	0
 220:.\ff/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 221:.\ff/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 222:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 223:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 224:.\ff/ff.c     **** 
 225:.\ff/ff.c     **** #elif _CODE_PAGE == 852	/* Latin 2 (OEM) */
 226:.\ff/ff.c     **** #define _DF1S	0
 227:.\ff/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x9
 228:.\ff/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF,0xB0,0xB1,0xB2,
 229:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 230:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,
 231:.\ff/ff.c     **** 
 232:.\ff/ff.c     **** #elif _CODE_PAGE == 855	/* Cyrillic (OEM) */
 233:.\ff/ff.c     **** #define _DF1S	0
 234:.\ff/ff.c     **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x9
 235:.\ff/ff.c     **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 236:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD3,
 237:.\ff/ff.c     **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,
 238:.\ff/ff.c     **** 
 239:.\ff/ff.c     **** #elif _CODE_PAGE == 857	/* Turkish (OEM) */
 240:.\ff/ff.c     **** #define _DF1S	0
 241:.\ff/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x9
 242:.\ff/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 243:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 244:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,
 245:.\ff/ff.c     **** 
 246:.\ff/ff.c     **** #elif _CODE_PAGE == 858	/* Multilingual Latin 1 + Euro (OEM) */
 247:.\ff/ff.c     **** #define _DF1S	0
 248:.\ff/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 249:.\ff/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 250:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 251:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 252:.\ff/ff.c     **** 
 253:.\ff/ff.c     **** #elif _CODE_PAGE == 862	/* Hebrew (OEM) */
 254:.\ff/ff.c     **** #define _DF1S	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 6


 255:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 256:.\ff/ff.c     **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 257:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 258:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 259:.\ff/ff.c     **** 
 260:.\ff/ff.c     **** #elif _CODE_PAGE == 866	/* Russian (OEM) */
 261:.\ff/ff.c     **** #define _DF1S	0
 262:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 263:.\ff/ff.c     **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0xB0,0xB1,0xB2,
 264:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 265:.\ff/ff.c     **** 				0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,
 266:.\ff/ff.c     **** 
 267:.\ff/ff.c     **** #elif _CODE_PAGE == 874	/* Thai (OEM, Windows) */
 268:.\ff/ff.c     **** #define _DF1S	0
 269:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 270:.\ff/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 271:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 272:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 273:.\ff/ff.c     **** 
 274:.\ff/ff.c     **** #elif _CODE_PAGE == 1250 /* Central Europe (Windows) */
 275:.\ff/ff.c     **** #define _DF1S	0
 276:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 277:.\ff/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 278:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 279:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 280:.\ff/ff.c     **** 
 281:.\ff/ff.c     **** #elif _CODE_PAGE == 1251 /* Cyrillic (Windows) */
 282:.\ff/ff.c     **** #define _DF1S	0
 283:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x8
 284:.\ff/ff.c     **** 				0xA0,0xA2,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 285:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 286:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 287:.\ff/ff.c     **** 
 288:.\ff/ff.c     **** #elif _CODE_PAGE == 1252 /* Latin 1 (Windows) */
 289:.\ff/ff.c     **** #define _DF1S	0
 290:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 291:.\ff/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 292:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 293:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 294:.\ff/ff.c     **** 
 295:.\ff/ff.c     **** #elif _CODE_PAGE == 1253 /* Greek (Windows) */
 296:.\ff/ff.c     **** #define _DF1S	0
 297:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 298:.\ff/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 299:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 300:.\ff/ff.c     **** 				0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 301:.\ff/ff.c     **** 
 302:.\ff/ff.c     **** #elif _CODE_PAGE == 1254 /* Turkish (Windows) */
 303:.\ff/ff.c     **** #define _DF1S	0
 304:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 305:.\ff/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 306:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 307:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 308:.\ff/ff.c     **** 
 309:.\ff/ff.c     **** #elif _CODE_PAGE == 1255 /* Hebrew (Windows) */
 310:.\ff/ff.c     **** #define _DF1S	0
 311:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 7


 312:.\ff/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 313:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 314:.\ff/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 315:.\ff/ff.c     **** 
 316:.\ff/ff.c     **** #elif _CODE_PAGE == 1256 /* Arabic (Windows) */
 317:.\ff/ff.c     **** #define _DF1S	0
 318:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 319:.\ff/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 320:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 321:.\ff/ff.c     **** 				0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,
 322:.\ff/ff.c     **** 
 323:.\ff/ff.c     **** #elif _CODE_PAGE == 1257 /* Baltic (Windows) */
 324:.\ff/ff.c     **** #define _DF1S	0
 325:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 326:.\ff/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 327:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 328:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 329:.\ff/ff.c     **** 
 330:.\ff/ff.c     **** #elif _CODE_PAGE == 1258 /* Vietnam (OEM, Windows) */
 331:.\ff/ff.c     **** #define _DF1S	0
 332:.\ff/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 333:.\ff/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 334:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 335:.\ff/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 336:.\ff/ff.c     **** 
 337:.\ff/ff.c     **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 338:.\ff/ff.c     **** #if _USE_LFN
 339:.\ff/ff.c     **** #error Cannot use LFN feature without valid code page.
 340:.\ff/ff.c     **** #endif
 341:.\ff/ff.c     **** #define _DF1S	0
 342:.\ff/ff.c     **** 
 343:.\ff/ff.c     **** #else
 344:.\ff/ff.c     **** #error Unknown code page
 345:.\ff/ff.c     **** 
 346:.\ff/ff.c     **** #endif
 347:.\ff/ff.c     **** 
 348:.\ff/ff.c     **** 
 349:.\ff/ff.c     **** /* Character code support macros */
 350:.\ff/ff.c     **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 351:.\ff/ff.c     **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 352:.\ff/ff.c     **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 353:.\ff/ff.c     **** 
 354:.\ff/ff.c     **** #if _DF1S		/* Code page is DBCS */
 355:.\ff/ff.c     **** 
 356:.\ff/ff.c     **** #ifdef _DF2S	/* Two 1st byte areas */
 357:.\ff/ff.c     **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 358:.\ff/ff.c     **** #else			/* One 1st byte area */
 359:.\ff/ff.c     **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 360:.\ff/ff.c     **** #endif
 361:.\ff/ff.c     **** 
 362:.\ff/ff.c     **** #ifdef _DS3S	/* Three 2nd byte areas */
 363:.\ff/ff.c     **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 364:.\ff/ff.c     **** #else			/* Two 2nd byte areas */
 365:.\ff/ff.c     **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 366:.\ff/ff.c     **** #endif
 367:.\ff/ff.c     **** 
 368:.\ff/ff.c     **** #else			/* Code page is SBCS */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 8


 369:.\ff/ff.c     **** 
 370:.\ff/ff.c     **** #define IsDBCS1(c)	0
 371:.\ff/ff.c     **** #define IsDBCS2(c)	0
 372:.\ff/ff.c     **** 
 373:.\ff/ff.c     **** #endif /* _DF1S */
 374:.\ff/ff.c     **** 
 375:.\ff/ff.c     **** 
 376:.\ff/ff.c     **** /* Name status flags */
 377:.\ff/ff.c     **** #define NS			11		/* Index of name status byte in fn[] */
 378:.\ff/ff.c     **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 379:.\ff/ff.c     **** #define NS_LFN		0x02	/* Force to create LFN entry */
 380:.\ff/ff.c     **** #define NS_LAST		0x04	/* Last segment */
 381:.\ff/ff.c     **** #define NS_BODY		0x08	/* Lower case flag (body) */
 382:.\ff/ff.c     **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 383:.\ff/ff.c     **** #define NS_DOT		0x20	/* Dot entry */
 384:.\ff/ff.c     **** 
 385:.\ff/ff.c     **** 
 386:.\ff/ff.c     **** /* FAT sub-type boundaries */
 387:.\ff/ff.c     **** /* Note that the FAT spec by Microsoft says 4085 but Windows works with 4087! */
 388:.\ff/ff.c     **** #define MIN_FAT16	4086	/* Minimum number of clusters for FAT16 */
 389:.\ff/ff.c     **** #define	MIN_FAT32	65526	/* Minimum number of clusters for FAT32 */
 390:.\ff/ff.c     **** 
 391:.\ff/ff.c     **** 
 392:.\ff/ff.c     **** /* FatFs refers the members in the FAT structures as byte array instead of
 393:.\ff/ff.c     **** / structure member because the structure is not binary compatible between
 394:.\ff/ff.c     **** / different platforms */
 395:.\ff/ff.c     **** 
 396:.\ff/ff.c     **** #define BS_jmpBoot			0	/* Jump instruction (3) */
 397:.\ff/ff.c     **** #define BS_OEMName			3	/* OEM name (8) */
 398:.\ff/ff.c     **** #define BPB_BytsPerSec		11	/* Sector size [byte] (2) */
 399:.\ff/ff.c     **** #define BPB_SecPerClus		13	/* Cluster size [sector] (1) */
 400:.\ff/ff.c     **** #define BPB_RsvdSecCnt		14	/* Size of reserved area [sector] (2) */
 401:.\ff/ff.c     **** #define BPB_NumFATs			16	/* Number of FAT copies (1) */
 402:.\ff/ff.c     **** #define BPB_RootEntCnt		17	/* Number of root dir entries for FAT12/16 (2) */
 403:.\ff/ff.c     **** #define BPB_TotSec16		19	/* Volume size [sector] (2) */
 404:.\ff/ff.c     **** #define BPB_Media			21	/* Media descriptor (1) */
 405:.\ff/ff.c     **** #define BPB_FATSz16			22	/* FAT size [sector] (2) */
 406:.\ff/ff.c     **** #define BPB_SecPerTrk		24	/* Track size [sector] (2) */
 407:.\ff/ff.c     **** #define BPB_NumHeads		26	/* Number of heads (2) */
 408:.\ff/ff.c     **** #define BPB_HiddSec			28	/* Number of special hidden sectors (4) */
 409:.\ff/ff.c     **** #define BPB_TotSec32		32	/* Volume size [sector] (4) */
 410:.\ff/ff.c     **** #define BS_DrvNum			36	/* Physical drive number (2) */
 411:.\ff/ff.c     **** #define BS_BootSig			38	/* Extended boot signature (1) */
 412:.\ff/ff.c     **** #define BS_VolID			39	/* Volume serial number (4) */
 413:.\ff/ff.c     **** #define BS_VolLab			43	/* Volume label (8) */
 414:.\ff/ff.c     **** #define BS_FilSysType		54	/* File system type (1) */
 415:.\ff/ff.c     **** #define BPB_FATSz32			36	/* FAT size [sector] (4) */
 416:.\ff/ff.c     **** #define BPB_ExtFlags		40	/* Extended flags (2) */
 417:.\ff/ff.c     **** #define BPB_FSVer			42	/* File system version (2) */
 418:.\ff/ff.c     **** #define BPB_RootClus		44	/* Root dir first cluster (4) */
 419:.\ff/ff.c     **** #define BPB_FSInfo			48	/* Offset of FSInfo sector (2) */
 420:.\ff/ff.c     **** #define BPB_BkBootSec		50	/* Offset of backup boot sectot (2) */
 421:.\ff/ff.c     **** #define BS_DrvNum32			64	/* Physical drive number (2) */
 422:.\ff/ff.c     **** #define BS_BootSig32		66	/* Extended boot signature (1) */
 423:.\ff/ff.c     **** #define BS_VolID32			67	/* Volume serial number (4) */
 424:.\ff/ff.c     **** #define BS_VolLab32			71	/* Volume label (8) */
 425:.\ff/ff.c     **** #define BS_FilSysType32		82	/* File system type (1) */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 9


 426:.\ff/ff.c     **** #define	FSI_LeadSig			0	/* FSI: Leading signature (4) */
 427:.\ff/ff.c     **** #define	FSI_StrucSig		484	/* FSI: Structure signature (4) */
 428:.\ff/ff.c     **** #define	FSI_Free_Count		488	/* FSI: Number of free clusters (4) */
 429:.\ff/ff.c     **** #define	FSI_Nxt_Free		492	/* FSI: Last allocated cluster (4) */
 430:.\ff/ff.c     **** #define MBR_Table			446	/* MBR: Partition table offset (2) */
 431:.\ff/ff.c     **** #define	SZ_PTE				16	/* MBR: Size of a partition table entry */
 432:.\ff/ff.c     **** #define BS_55AA				510	/* Boot sector signature (2) */
 433:.\ff/ff.c     **** 
 434:.\ff/ff.c     **** #define	DIR_Name			0	/* Short file name (11) */
 435:.\ff/ff.c     **** #define	DIR_Attr			11	/* Attribute (1) */
 436:.\ff/ff.c     **** #define	DIR_NTres			12	/* NT flag (1) */
 437:.\ff/ff.c     **** #define	DIR_CrtTime			14	/* Created time (2) */
 438:.\ff/ff.c     **** #define	DIR_CrtDate			16	/* Created date (2) */
 439:.\ff/ff.c     **** #define	DIR_FstClusHI		20	/* Higher 16-bit of first cluster (2) */
 440:.\ff/ff.c     **** #define	DIR_WrtTime			22	/* Modified time (2) */
 441:.\ff/ff.c     **** #define	DIR_WrtDate			24	/* Modified date (2) */
 442:.\ff/ff.c     **** #define	DIR_FstClusLO		26	/* Lower 16-bit of first cluster (2) */
 443:.\ff/ff.c     **** #define	DIR_FileSize		28	/* File size (4) */
 444:.\ff/ff.c     **** #define	LDIR_Ord			0	/* LFN entry order and LLE flag (1) */
 445:.\ff/ff.c     **** #define	LDIR_Attr			11	/* LFN attribute (1) */
 446:.\ff/ff.c     **** #define	LDIR_Type			12	/* LFN type (1) */
 447:.\ff/ff.c     **** #define	LDIR_Chksum			13	/* Sum of corresponding SFN entry */
 448:.\ff/ff.c     **** #define	LDIR_FstClusLO		26	/* Filled by zero (0) */
 449:.\ff/ff.c     **** #define	SZ_DIR				32		/* Size of a directory entry */
 450:.\ff/ff.c     **** #define	LLE					0x40	/* Last long entry flag in LDIR_Ord */
 451:.\ff/ff.c     **** #define	DDE					0xE5	/* Deleted directory enrty mark in DIR_Name[0] */
 452:.\ff/ff.c     **** #define	NDDE				0x05	/* Replacement of a character collides with DDE */
 453:.\ff/ff.c     **** 
 454:.\ff/ff.c     **** 
 455:.\ff/ff.c     **** /*------------------------------------------------------------*/
 456:.\ff/ff.c     **** /* Work area                                                  */
 457:.\ff/ff.c     **** 
 458:.\ff/ff.c     **** #if _VOLUMES
 459:.\ff/ff.c     **** static
 460:.\ff/ff.c     **** FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 461:.\ff/ff.c     **** #else
 462:.\ff/ff.c     **** #error Number of drives must not be 0.
 463:.\ff/ff.c     **** #endif
 464:.\ff/ff.c     **** 
 465:.\ff/ff.c     **** static
 466:.\ff/ff.c     **** WORD Fsid;				/* File system mount ID */
 467:.\ff/ff.c     **** 
 468:.\ff/ff.c     **** #if _FS_RPATH
 469:.\ff/ff.c     **** static
 470:.\ff/ff.c     **** BYTE CurrVol;			/* Current drive */
 471:.\ff/ff.c     **** #endif
 472:.\ff/ff.c     **** 
 473:.\ff/ff.c     **** #if _FS_SHARE
 474:.\ff/ff.c     **** static
 475:.\ff/ff.c     **** FILESEM	Files[_FS_SHARE];	/* File lock semaphores */
 476:.\ff/ff.c     **** #endif
 477:.\ff/ff.c     **** 
 478:.\ff/ff.c     **** #if _USE_LFN == 0			/* No LFN */
 479:.\ff/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]
 480:.\ff/ff.c     **** #define INIT_BUF(dobj)		(dobj).fn = sfn
 481:.\ff/ff.c     **** #define	FREE_BUF()
 482:.\ff/ff.c     **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 10


 483:.\ff/ff.c     **** #elif _USE_LFN == 1			/* LFN with static LFN working buffer */
 484:.\ff/ff.c     **** static WCHAR LfnBuf[_MAX_LFN+1];
 485:.\ff/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]
 486:.\ff/ff.c     **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = LfnBuf; }
 487:.\ff/ff.c     **** #define	FREE_BUF()
 488:.\ff/ff.c     **** 
 489:.\ff/ff.c     **** #elif _USE_LFN == 2 		/* LFN with dynamic LFN working buffer on the stack */
 490:.\ff/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]; WCHAR lbuf[_MAX_LFN+1]
 491:.\ff/ff.c     **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = lbuf; }
 492:.\ff/ff.c     **** #define	FREE_BUF()
 493:.\ff/ff.c     **** 
 494:.\ff/ff.c     **** #elif _USE_LFN == 3 		/* LFN with dynamic LFN working buffer on the heap */
 495:.\ff/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]; WCHAR *lfn
 496:.\ff/ff.c     **** #define INIT_BUF(dobj)		{ lfn = ff_memalloc((_MAX_LFN + 1) * 2); \
 497:.\ff/ff.c     **** 							  if (!lfn) LEAVE_FF((dobj).fs, FR_NOT_ENOUGH_CORE); \
 498:.\ff/ff.c     **** 							  (dobj).lfn = lfn;	(dobj).fn = sfn; }
 499:.\ff/ff.c     **** #define	FREE_BUF()			ff_memfree(lfn)
 500:.\ff/ff.c     **** 
 501:.\ff/ff.c     **** #else
 502:.\ff/ff.c     **** #error Wrong LFN configuration.
 503:.\ff/ff.c     **** #endif
 504:.\ff/ff.c     **** 
 505:.\ff/ff.c     **** 
 506:.\ff/ff.c     **** 
 507:.\ff/ff.c     **** 
 508:.\ff/ff.c     **** /*--------------------------------------------------------------------------
 509:.\ff/ff.c     **** 
 510:.\ff/ff.c     ****    Module Private Functions
 511:.\ff/ff.c     **** 
 512:.\ff/ff.c     **** ---------------------------------------------------------------------------*/
 513:.\ff/ff.c     **** 
 514:.\ff/ff.c     **** 
 515:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 516:.\ff/ff.c     **** /* String functions                                                      */
 517:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 518:.\ff/ff.c     **** 
 519:.\ff/ff.c     **** /* Copy memory to memory */
 520:.\ff/ff.c     **** static
 521:.\ff/ff.c     **** void mem_cpy (void* dst, const void* src, UINT cnt) {
  32              		.loc 1 521 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  42 0006 F860     		str	r0, [r7, #12]
  43 0008 B960     		str	r1, [r7, #8]
  44 000a 7A60     		str	r2, [r7, #4]
 522:.\ff/ff.c     **** 	BYTE *d = (BYTE*)dst;
  45              		.loc 1 522 0
  46 000c FB68     		ldr	r3, [r7, #12]
  47 000e 7B61     		str	r3, [r7, #20]
 523:.\ff/ff.c     **** 	const BYTE *s = (const BYTE*)src;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 11


  48              		.loc 1 523 0
  49 0010 BB68     		ldr	r3, [r7, #8]
  50 0012 3B61     		str	r3, [r7, #16]
 524:.\ff/ff.c     **** 
 525:.\ff/ff.c     **** #if _WORD_ACCESS == 1
 526:.\ff/ff.c     **** 	while (cnt >= sizeof(int)) {
 527:.\ff/ff.c     **** 		*(int*)d = *(int*)s;
 528:.\ff/ff.c     **** 		d += sizeof(int); s += sizeof(int);
 529:.\ff/ff.c     **** 		cnt -= sizeof(int);
 530:.\ff/ff.c     **** 	}
 531:.\ff/ff.c     **** #endif
 532:.\ff/ff.c     **** 	while (cnt--)
  51              		.loc 1 532 0
  52 0014 07E0     		b	.L2
  53              	.L3:
 533:.\ff/ff.c     **** 		*d++ = *s++;
  54              		.loc 1 533 0
  55 0016 7B69     		ldr	r3, [r7, #20]
  56 0018 5A1C     		add	r2, r3, #1
  57 001a 7A61     		str	r2, [r7, #20]
  58 001c 3A69     		ldr	r2, [r7, #16]
  59 001e 511C     		add	r1, r2, #1
  60 0020 3961     		str	r1, [r7, #16]
  61 0022 1278     		ldrb	r2, [r2]
  62 0024 1A70     		strb	r2, [r3]
  63              	.L2:
 532:.\ff/ff.c     **** 		*d++ = *s++;
  64              		.loc 1 532 0
  65 0026 7B68     		ldr	r3, [r7, #4]
  66 0028 5A1E     		sub	r2, r3, #1
  67 002a 7A60     		str	r2, [r7, #4]
  68 002c 002B     		cmp	r3, #0
  69 002e F2D1     		bne	.L3
 534:.\ff/ff.c     **** }
  70              		.loc 1 534 0
  71 0030 BD46     		mov	sp, r7
  72 0032 06B0     		add	sp, sp, #24
  73              		@ sp needed
  74 0034 80BD     		pop	{r7, pc}
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	mem_cpy, .-mem_cpy
  78 0036 C046     		.section	.text.mem_set,"ax",%progbits
  79              		.align	2
  80              		.code	16
  81              		.thumb_func
  82              		.type	mem_set, %function
  83              	mem_set:
  84              	.LFB3:
 535:.\ff/ff.c     **** 
 536:.\ff/ff.c     **** /* Fill memory */
 537:.\ff/ff.c     **** static
 538:.\ff/ff.c     **** void mem_set (void* dst, int val, UINT cnt) {
  85              		.loc 1 538 0
  86              		.cfi_startproc
  87 0000 80B5     		push	{r7, lr}
  88              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 12


  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 86B0     		sub	sp, sp, #24
  92              		.cfi_def_cfa_offset 32
  93 0004 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
  95 0006 F860     		str	r0, [r7, #12]
  96 0008 B960     		str	r1, [r7, #8]
  97 000a 7A60     		str	r2, [r7, #4]
 539:.\ff/ff.c     **** 	BYTE *d = (BYTE*)dst;
  98              		.loc 1 539 0
  99 000c FB68     		ldr	r3, [r7, #12]
 100 000e 7B61     		str	r3, [r7, #20]
 540:.\ff/ff.c     **** 
 541:.\ff/ff.c     **** 	while (cnt--)
 101              		.loc 1 541 0
 102 0010 05E0     		b	.L5
 103              	.L6:
 542:.\ff/ff.c     **** 		*d++ = (BYTE)val;
 104              		.loc 1 542 0
 105 0012 7B69     		ldr	r3, [r7, #20]
 106 0014 5A1C     		add	r2, r3, #1
 107 0016 7A61     		str	r2, [r7, #20]
 108 0018 BA68     		ldr	r2, [r7, #8]
 109 001a D2B2     		uxtb	r2, r2
 110 001c 1A70     		strb	r2, [r3]
 111              	.L5:
 541:.\ff/ff.c     **** 		*d++ = (BYTE)val;
 112              		.loc 1 541 0
 113 001e 7B68     		ldr	r3, [r7, #4]
 114 0020 5A1E     		sub	r2, r3, #1
 115 0022 7A60     		str	r2, [r7, #4]
 116 0024 002B     		cmp	r3, #0
 117 0026 F4D1     		bne	.L6
 543:.\ff/ff.c     **** }
 118              		.loc 1 543 0
 119 0028 BD46     		mov	sp, r7
 120 002a 06B0     		add	sp, sp, #24
 121              		@ sp needed
 122 002c 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE3:
 125              		.size	mem_set, .-mem_set
 126 002e C046     		.section	.text.mem_cmp,"ax",%progbits
 127              		.align	2
 128              		.code	16
 129              		.thumb_func
 130              		.type	mem_cmp, %function
 131              	mem_cmp:
 132              	.LFB4:
 544:.\ff/ff.c     **** 
 545:.\ff/ff.c     **** /* Compare memory to memory */
 546:.\ff/ff.c     **** static
 547:.\ff/ff.c     **** int mem_cmp (const void* dst, const void* src, UINT cnt) {
 133              		.loc 1 547 0
 134              		.cfi_startproc
 135 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 13


 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 88B0     		sub	sp, sp, #32
 140              		.cfi_def_cfa_offset 40
 141 0004 00AF     		add	r7, sp, #0
 142              		.cfi_def_cfa_register 7
 143 0006 F860     		str	r0, [r7, #12]
 144 0008 B960     		str	r1, [r7, #8]
 145 000a 7A60     		str	r2, [r7, #4]
 548:.\ff/ff.c     **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 146              		.loc 1 548 0
 147 000c FB68     		ldr	r3, [r7, #12]
 148 000e FB61     		str	r3, [r7, #28]
 149 0010 BB68     		ldr	r3, [r7, #8]
 150 0012 BB61     		str	r3, [r7, #24]
 549:.\ff/ff.c     **** 	int r = 0;
 151              		.loc 1 549 0
 152 0014 0023     		mov	r3, #0
 153 0016 7B61     		str	r3, [r7, #20]
 550:.\ff/ff.c     **** 
 551:.\ff/ff.c     **** 	while (cnt-- && (r = *d++ - *s++) == 0) ;
 154              		.loc 1 551 0
 155 0018 C046     		mov	r8, r8
 156              	.L9:
 157              		.loc 1 551 0 is_stmt 0 discriminator 2
 158 001a 7B68     		ldr	r3, [r7, #4]
 159 001c 5A1E     		sub	r2, r3, #1
 160 001e 7A60     		str	r2, [r7, #4]
 161 0020 002B     		cmp	r3, #0
 162 0022 0DD0     		beq	.L8
 163              		.loc 1 551 0 discriminator 1
 164 0024 FB69     		ldr	r3, [r7, #28]
 165 0026 5A1C     		add	r2, r3, #1
 166 0028 FA61     		str	r2, [r7, #28]
 167 002a 1B78     		ldrb	r3, [r3]
 168 002c 191C     		mov	r1, r3
 169 002e BB69     		ldr	r3, [r7, #24]
 170 0030 5A1C     		add	r2, r3, #1
 171 0032 BA61     		str	r2, [r7, #24]
 172 0034 1B78     		ldrb	r3, [r3]
 173 0036 CB1A     		sub	r3, r1, r3
 174 0038 7B61     		str	r3, [r7, #20]
 175 003a 7B69     		ldr	r3, [r7, #20]
 176 003c 002B     		cmp	r3, #0
 177 003e ECD0     		beq	.L9
 178              	.L8:
 552:.\ff/ff.c     **** 	return r;
 179              		.loc 1 552 0 is_stmt 1
 180 0040 7B69     		ldr	r3, [r7, #20]
 553:.\ff/ff.c     **** }
 181              		.loc 1 553 0
 182 0042 181C     		mov	r0, r3
 183 0044 BD46     		mov	sp, r7
 184 0046 08B0     		add	sp, sp, #32
 185              		@ sp needed
 186 0048 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 14


 187              		.cfi_endproc
 188              	.LFE4:
 189              		.size	mem_cmp, .-mem_cmp
 190 004a C046     		.section	.text.chk_chr,"ax",%progbits
 191              		.align	2
 192              		.code	16
 193              		.thumb_func
 194              		.type	chk_chr, %function
 195              	chk_chr:
 196              	.LFB5:
 554:.\ff/ff.c     **** 
 555:.\ff/ff.c     **** /* Check if chr is contained in the string */
 556:.\ff/ff.c     **** static
 557:.\ff/ff.c     **** int chk_chr (const char* str, int chr) {
 197              		.loc 1 557 0
 198              		.cfi_startproc
 199 0000 80B5     		push	{r7, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 82B0     		sub	sp, sp, #8
 204              		.cfi_def_cfa_offset 16
 205 0004 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
 208 0008 3960     		str	r1, [r7]
 558:.\ff/ff.c     **** 	while (*str && *str != chr) str++;
 209              		.loc 1 558 0
 210 000a 02E0     		b	.L12
 211              	.L14:
 212              		.loc 1 558 0 is_stmt 0 discriminator 3
 213 000c 7B68     		ldr	r3, [r7, #4]
 214 000e 0133     		add	r3, r3, #1
 215 0010 7B60     		str	r3, [r7, #4]
 216              	.L12:
 217              		.loc 1 558 0 discriminator 1
 218 0012 7B68     		ldr	r3, [r7, #4]
 219 0014 1B78     		ldrb	r3, [r3]
 220 0016 002B     		cmp	r3, #0
 221 0018 05D0     		beq	.L13
 222              		.loc 1 558 0 discriminator 2
 223 001a 7B68     		ldr	r3, [r7, #4]
 224 001c 1B78     		ldrb	r3, [r3]
 225 001e 1A1E     		sub	r2, r3, #0
 226 0020 3B68     		ldr	r3, [r7]
 227 0022 9A42     		cmp	r2, r3
 228 0024 F2D1     		bne	.L14
 229              	.L13:
 559:.\ff/ff.c     **** 	return *str;
 230              		.loc 1 559 0 is_stmt 1
 231 0026 7B68     		ldr	r3, [r7, #4]
 232 0028 1B78     		ldrb	r3, [r3]
 560:.\ff/ff.c     **** }
 233              		.loc 1 560 0
 234 002a 181C     		mov	r0, r3
 235 002c BD46     		mov	sp, r7
 236 002e 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 15


 237              		@ sp needed
 238 0030 80BD     		pop	{r7, pc}
 239              		.cfi_endproc
 240              	.LFE5:
 241              		.size	chk_chr, .-chk_chr
 242 0032 C046     		.section	.text.move_window,"ax",%progbits
 243              		.align	2
 244              		.code	16
 245              		.thumb_func
 246              		.type	move_window, %function
 247              	move_window:
 248              	.LFB6:
 561:.\ff/ff.c     **** 
 562:.\ff/ff.c     **** 
 563:.\ff/ff.c     **** 
 564:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 565:.\ff/ff.c     **** /* Request/Release grant to access the volume                            */
 566:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 567:.\ff/ff.c     **** #if _FS_REENTRANT
 568:.\ff/ff.c     **** 
 569:.\ff/ff.c     **** static
 570:.\ff/ff.c     **** int lock_fs (
 571:.\ff/ff.c     **** 	FATFS *fs		/* File system object */
 572:.\ff/ff.c     **** )
 573:.\ff/ff.c     **** {
 574:.\ff/ff.c     **** 	return ff_req_grant(fs->sobj);
 575:.\ff/ff.c     **** }
 576:.\ff/ff.c     **** 
 577:.\ff/ff.c     **** 
 578:.\ff/ff.c     **** static
 579:.\ff/ff.c     **** void unlock_fs (
 580:.\ff/ff.c     **** 	FATFS *fs,		/* File system object */
 581:.\ff/ff.c     **** 	FRESULT res		/* Result code to be returned */
 582:.\ff/ff.c     **** )
 583:.\ff/ff.c     **** {
 584:.\ff/ff.c     **** 	if (res != FR_NOT_ENABLED &&
 585:.\ff/ff.c     **** 		res != FR_INVALID_DRIVE &&
 586:.\ff/ff.c     **** 		res != FR_INVALID_OBJECT &&
 587:.\ff/ff.c     **** 		res != FR_TIMEOUT) {
 588:.\ff/ff.c     **** 		ff_rel_grant(fs->sobj);
 589:.\ff/ff.c     **** 	}
 590:.\ff/ff.c     **** }
 591:.\ff/ff.c     **** #endif
 592:.\ff/ff.c     **** 
 593:.\ff/ff.c     **** 
 594:.\ff/ff.c     **** 
 595:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 596:.\ff/ff.c     **** /* File shareing control functions                                       */
 597:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 598:.\ff/ff.c     **** #if _FS_SHARE
 599:.\ff/ff.c     **** 
 600:.\ff/ff.c     **** static
 601:.\ff/ff.c     **** FRESULT chk_lock (	/* Check if the file can be accessed */
 602:.\ff/ff.c     **** 	DIR* dj,		/* Directory object pointing the file to be checked */
 603:.\ff/ff.c     **** 	int acc			/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 604:.\ff/ff.c     **** )
 605:.\ff/ff.c     **** {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 16


 606:.\ff/ff.c     **** 	UINT i, be;
 607:.\ff/ff.c     **** 
 608:.\ff/ff.c     **** 	/* Search file semaphore table */
 609:.\ff/ff.c     **** 	for (i = be = 0; i < _FS_SHARE; i++) {
 610:.\ff/ff.c     **** 		if (Files[i].fs) {	/* Existing entry */
 611:.\ff/ff.c     **** 			if (Files[i].fs == dj->fs &&	 	/* Check if the file matched with an open file */
 612:.\ff/ff.c     **** 				Files[i].clu == dj->sclust &&
 613:.\ff/ff.c     **** 				Files[i].idx == dj->index) break;
 614:.\ff/ff.c     **** 		} else {			/* Blank entry */
 615:.\ff/ff.c     **** 			be++;
 616:.\ff/ff.c     **** 		}
 617:.\ff/ff.c     **** 	}
 618:.\ff/ff.c     **** 	if (i == _FS_SHARE)	/* The file is not opened */
 619:.\ff/ff.c     **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new file?
 620:.\ff/ff.c     **** 
 621:.\ff/ff.c     **** 	/* The file has been opened. Reject any open against writing file and all write mode open */
 622:.\ff/ff.c     **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 623:.\ff/ff.c     **** }
 624:.\ff/ff.c     **** 
 625:.\ff/ff.c     **** 
 626:.\ff/ff.c     **** static
 627:.\ff/ff.c     **** int enq_lock (	/* Check if an entry is available for a new file */
 628:.\ff/ff.c     **** 	FATFS* fs	/* File system object */
 629:.\ff/ff.c     **** )
 630:.\ff/ff.c     **** {
 631:.\ff/ff.c     **** 	UINT i;
 632:.\ff/ff.c     **** 
 633:.\ff/ff.c     **** 	for (i = 0; i < _FS_SHARE && Files[i].fs; i++) ;
 634:.\ff/ff.c     **** 	return (i == _FS_SHARE) ? 0 : 1;
 635:.\ff/ff.c     **** }
 636:.\ff/ff.c     **** 
 637:.\ff/ff.c     **** 
 638:.\ff/ff.c     **** static
 639:.\ff/ff.c     **** UINT inc_lock (	/* Increment file open counter and returns its index (0:int error) */
 640:.\ff/ff.c     **** 	DIR* dj,	/* Directory object pointing the file to register or increment */
 641:.\ff/ff.c     **** 	int acc		/* Desired access mode (0:Read, !0:Write) */
 642:.\ff/ff.c     **** )
 643:.\ff/ff.c     **** {
 644:.\ff/ff.c     **** 	UINT i;
 645:.\ff/ff.c     **** 
 646:.\ff/ff.c     **** 
 647:.\ff/ff.c     **** 	for (i = 0; i < _FS_SHARE; i++) {	/* Find the file */
 648:.\ff/ff.c     **** 		if (Files[i].fs == dj->fs &&
 649:.\ff/ff.c     **** 			Files[i].clu == dj->sclust &&
 650:.\ff/ff.c     **** 			Files[i].idx == dj->index) break;
 651:.\ff/ff.c     **** 	}
 652:.\ff/ff.c     **** 
 653:.\ff/ff.c     **** 	if (i == _FS_SHARE) {				/* Not opened. Register it as new. */
 654:.\ff/ff.c     **** 		for (i = 0; i < _FS_SHARE && Files[i].fs; i++) ;
 655:.\ff/ff.c     **** 		if (i == _FS_SHARE) return 0;	/* No space to register (int err) */
 656:.\ff/ff.c     **** 		Files[i].fs = dj->fs;
 657:.\ff/ff.c     **** 		Files[i].clu = dj->sclust;
 658:.\ff/ff.c     **** 		Files[i].idx = dj->index;
 659:.\ff/ff.c     **** 		Files[i].ctr = 0;
 660:.\ff/ff.c     **** 	}
 661:.\ff/ff.c     **** 
 662:.\ff/ff.c     **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 17


 663:.\ff/ff.c     **** 
 664:.\ff/ff.c     **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 665:.\ff/ff.c     **** 
 666:.\ff/ff.c     **** 	return i + 1;
 667:.\ff/ff.c     **** }
 668:.\ff/ff.c     **** 
 669:.\ff/ff.c     **** 
 670:.\ff/ff.c     **** static
 671:.\ff/ff.c     **** FRESULT dec_lock (	/* Decrement file open counter */
 672:.\ff/ff.c     **** 	UINT i			/* Semaphore index */
 673:.\ff/ff.c     **** )
 674:.\ff/ff.c     **** {
 675:.\ff/ff.c     **** 	WORD n;
 676:.\ff/ff.c     **** 	FRESULT res;
 677:.\ff/ff.c     **** 
 678:.\ff/ff.c     **** 
 679:.\ff/ff.c     **** 	if (--i < _FS_SHARE) {
 680:.\ff/ff.c     **** 		n = Files[i].ctr;
 681:.\ff/ff.c     **** 		if (n == 0x100) n = 0;
 682:.\ff/ff.c     **** 		if (n) n--;
 683:.\ff/ff.c     **** 		Files[i].ctr = n;
 684:.\ff/ff.c     **** 		if (!n) Files[i].fs = 0;
 685:.\ff/ff.c     **** 		res = FR_OK;
 686:.\ff/ff.c     **** 	} else {
 687:.\ff/ff.c     **** 		res = FR_INT_ERR;
 688:.\ff/ff.c     **** 	}
 689:.\ff/ff.c     **** 	return res;
 690:.\ff/ff.c     **** }
 691:.\ff/ff.c     **** 
 692:.\ff/ff.c     **** 
 693:.\ff/ff.c     **** static
 694:.\ff/ff.c     **** void clear_lock (	/* Clear lock entries of the volume */
 695:.\ff/ff.c     **** 	FATFS *fs
 696:.\ff/ff.c     **** )
 697:.\ff/ff.c     **** {
 698:.\ff/ff.c     **** 	UINT i;
 699:.\ff/ff.c     **** 
 700:.\ff/ff.c     **** 	for (i = 0; i < _FS_SHARE; i++) {
 701:.\ff/ff.c     **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 702:.\ff/ff.c     **** 	}
 703:.\ff/ff.c     **** }
 704:.\ff/ff.c     **** #endif
 705:.\ff/ff.c     **** 
 706:.\ff/ff.c     **** 
 707:.\ff/ff.c     **** 
 708:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 709:.\ff/ff.c     **** /* Change window offset                                                  */
 710:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 711:.\ff/ff.c     **** 
 712:.\ff/ff.c     **** static
 713:.\ff/ff.c     **** FRESULT move_window (
 714:.\ff/ff.c     **** 	FATFS *fs,		/* File system object */
 715:.\ff/ff.c     **** 	DWORD sector	/* Sector number to make appearance in the fs->win[] */
 716:.\ff/ff.c     **** )					/* Move to zero only writes back dirty window */
 717:.\ff/ff.c     **** {
 249              		.loc 1 717 0
 250              		.cfi_startproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 18


 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 84B0     		sub	sp, sp, #16
 256              		.cfi_def_cfa_offset 24
 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 260 0008 3960     		str	r1, [r7]
 718:.\ff/ff.c     **** 	DWORD wsect;
 719:.\ff/ff.c     **** 
 720:.\ff/ff.c     **** 
 721:.\ff/ff.c     **** 	wsect = fs->winsect;
 261              		.loc 1 721 0
 262 000a 7B68     		ldr	r3, [r7, #4]
 263 000c DB6A     		ldr	r3, [r3, #44]
 264 000e FB60     		str	r3, [r7, #12]
 722:.\ff/ff.c     **** 	if (wsect != sector) {	/* Changed current window */
 265              		.loc 1 722 0
 266 0010 FA68     		ldr	r2, [r7, #12]
 267 0012 3B68     		ldr	r3, [r7]
 268 0014 9A42     		cmp	r2, r3
 269 0016 5AD0     		beq	.L17
 723:.\ff/ff.c     **** #if !_FS_READONLY
 724:.\ff/ff.c     **** 		if (fs->wflag) {	/* Write back dirty window if needed */
 270              		.loc 1 724 0
 271 0018 7B68     		ldr	r3, [r7, #4]
 272 001a 1B79     		ldrb	r3, [r3, #4]
 273 001c 002B     		cmp	r3, #0
 274 001e 3DD0     		beq	.L18
 725:.\ff/ff.c     **** 			if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK)
 275              		.loc 1 725 0
 276 0020 7B68     		ldr	r3, [r7, #4]
 277 0022 5978     		ldrb	r1, [r3, #1]
 278 0024 7B68     		ldr	r3, [r7, #4]
 279 0026 3033     		add	r3, r3, #48
 280 0028 1A1C     		mov	r2, r3
 281 002a FB68     		ldr	r3, [r7, #12]
 282 002c 081C     		mov	r0, r1
 283 002e 111C     		mov	r1, r2
 284 0030 1A1C     		mov	r2, r3
 285 0032 0123     		mov	r3, #1
 286 0034 FFF7FEFF 		bl	disk_write
 287 0038 031E     		sub	r3, r0, #0
 288 003a 01D0     		beq	.L19
 726:.\ff/ff.c     **** 				return FR_DISK_ERR;
 289              		.loc 1 726 0
 290 003c 0123     		mov	r3, #1
 291 003e 47E0     		b	.L20
 292              	.L19:
 727:.\ff/ff.c     **** 			fs->wflag = 0;
 293              		.loc 1 727 0
 294 0040 7B68     		ldr	r3, [r7, #4]
 295 0042 0022     		mov	r2, #0
 296 0044 1A71     		strb	r2, [r3, #4]
 728:.\ff/ff.c     **** 			if (wsect < (fs->fatbase + fs->fsize)) {	/* In FAT area */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 19


 297              		.loc 1 728 0
 298 0046 7B68     		ldr	r3, [r7, #4]
 299 0048 1A6A     		ldr	r2, [r3, #32]
 300 004a 7B68     		ldr	r3, [r7, #4]
 301 004c DB69     		ldr	r3, [r3, #28]
 302 004e D218     		add	r2, r2, r3
 303 0050 FB68     		ldr	r3, [r7, #12]
 304 0052 9A42     		cmp	r2, r3
 305 0054 22D9     		bls	.L18
 306              	.LBB2:
 729:.\ff/ff.c     **** 				BYTE nf;
 730:.\ff/ff.c     **** 				for (nf = fs->n_fats; nf > 1; nf--) {	/* Reflect the change to all FAT copies */
 307              		.loc 1 730 0
 308 0056 0B23     		mov	r3, #11
 309 0058 FB18     		add	r3, r7, r3
 310 005a 7A68     		ldr	r2, [r7, #4]
 311 005c D278     		ldrb	r2, [r2, #3]
 312 005e 1A70     		strb	r2, [r3]
 313 0060 17E0     		b	.L21
 314              	.L22:
 731:.\ff/ff.c     **** 					wsect += fs->fsize;
 315              		.loc 1 731 0 discriminator 3
 316 0062 7B68     		ldr	r3, [r7, #4]
 317 0064 DB69     		ldr	r3, [r3, #28]
 318 0066 FA68     		ldr	r2, [r7, #12]
 319 0068 D318     		add	r3, r2, r3
 320 006a FB60     		str	r3, [r7, #12]
 732:.\ff/ff.c     **** 					disk_write(fs->drv, fs->win, wsect, 1);
 321              		.loc 1 732 0 discriminator 3
 322 006c 7B68     		ldr	r3, [r7, #4]
 323 006e 5978     		ldrb	r1, [r3, #1]
 324 0070 7B68     		ldr	r3, [r7, #4]
 325 0072 3033     		add	r3, r3, #48
 326 0074 1A1C     		mov	r2, r3
 327 0076 FB68     		ldr	r3, [r7, #12]
 328 0078 081C     		mov	r0, r1
 329 007a 111C     		mov	r1, r2
 330 007c 1A1C     		mov	r2, r3
 331 007e 0123     		mov	r3, #1
 332 0080 FFF7FEFF 		bl	disk_write
 730:.\ff/ff.c     **** 					wsect += fs->fsize;
 333              		.loc 1 730 0 discriminator 3
 334 0084 0B23     		mov	r3, #11
 335 0086 FB18     		add	r3, r7, r3
 336 0088 1A78     		ldrb	r2, [r3]
 337 008a 0B23     		mov	r3, #11
 338 008c FB18     		add	r3, r7, r3
 339 008e 013A     		sub	r2, r2, #1
 340 0090 1A70     		strb	r2, [r3]
 341              	.L21:
 730:.\ff/ff.c     **** 					wsect += fs->fsize;
 342              		.loc 1 730 0 is_stmt 0 discriminator 1
 343 0092 0B23     		mov	r3, #11
 344 0094 FB18     		add	r3, r7, r3
 345 0096 1B78     		ldrb	r3, [r3]
 346 0098 012B     		cmp	r3, #1
 347 009a E2D8     		bhi	.L22
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 20


 348              	.L18:
 349              	.LBE2:
 733:.\ff/ff.c     **** 				}
 734:.\ff/ff.c     **** 			}
 735:.\ff/ff.c     **** 		}
 736:.\ff/ff.c     **** #endif
 737:.\ff/ff.c     **** 		if (sector) {
 350              		.loc 1 737 0 is_stmt 1
 351 009c 3B68     		ldr	r3, [r7]
 352 009e 002B     		cmp	r3, #0
 353 00a0 15D0     		beq	.L17
 738:.\ff/ff.c     ****             CyDelay(15);
 354              		.loc 1 738 0
 355 00a2 0F20     		mov	r0, #15
 356 00a4 FFF7FEFF 		bl	CyDelay
 739:.\ff/ff.c     **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK)
 357              		.loc 1 739 0
 358 00a8 7B68     		ldr	r3, [r7, #4]
 359 00aa 5978     		ldrb	r1, [r3, #1]
 360 00ac 7B68     		ldr	r3, [r7, #4]
 361 00ae 3033     		add	r3, r3, #48
 362 00b0 1A1C     		mov	r2, r3
 363 00b2 3B68     		ldr	r3, [r7]
 364 00b4 081C     		mov	r0, r1
 365 00b6 111C     		mov	r1, r2
 366 00b8 1A1C     		mov	r2, r3
 367 00ba 0123     		mov	r3, #1
 368 00bc FFF7FEFF 		bl	disk_read
 369 00c0 031E     		sub	r3, r0, #0
 370 00c2 01D0     		beq	.L23
 740:.\ff/ff.c     **** 				return FR_DISK_ERR;
 371              		.loc 1 740 0
 372 00c4 0123     		mov	r3, #1
 373 00c6 03E0     		b	.L20
 374              	.L23:
 741:.\ff/ff.c     **** 			fs->winsect = sector;
 375              		.loc 1 741 0
 376 00c8 7B68     		ldr	r3, [r7, #4]
 377 00ca 3A68     		ldr	r2, [r7]
 378 00cc DA62     		str	r2, [r3, #44]
 379              	.L17:
 742:.\ff/ff.c     **** 		}
 743:.\ff/ff.c     **** 	}
 744:.\ff/ff.c     **** 
 745:.\ff/ff.c     **** 	return FR_OK;
 380              		.loc 1 745 0
 381 00ce 0023     		mov	r3, #0
 382              	.L20:
 746:.\ff/ff.c     **** }
 383              		.loc 1 746 0
 384 00d0 181C     		mov	r0, r3
 385 00d2 BD46     		mov	sp, r7
 386 00d4 04B0     		add	sp, sp, #16
 387              		@ sp needed
 388 00d6 80BD     		pop	{r7, pc}
 389              		.cfi_endproc
 390              	.LFE6:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 21


 391              		.size	move_window, .-move_window
 392              		.section	.text.sync,"ax",%progbits
 393              		.align	2
 394              		.code	16
 395              		.thumb_func
 396              		.type	sync, %function
 397              	sync:
 398              	.LFB7:
 747:.\ff/ff.c     **** 
 748:.\ff/ff.c     **** 
 749:.\ff/ff.c     **** 
 750:.\ff/ff.c     **** 
 751:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 752:.\ff/ff.c     **** /* Clean-up cached data                                                  */
 753:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 754:.\ff/ff.c     **** #if !_FS_READONLY
 755:.\ff/ff.c     **** static
 756:.\ff/ff.c     **** FRESULT sync (	/* FR_OK: successful, FR_DISK_ERR: failed */
 757:.\ff/ff.c     **** 	FATFS *fs	/* File system object */
 758:.\ff/ff.c     **** )
 759:.\ff/ff.c     **** {
 399              		.loc 1 759 0
 400              		.cfi_startproc
 401 0000 90B5     		push	{r4, r7, lr}
 402              		.cfi_def_cfa_offset 12
 403              		.cfi_offset 4, -12
 404              		.cfi_offset 7, -8
 405              		.cfi_offset 14, -4
 406 0002 85B0     		sub	sp, sp, #20
 407              		.cfi_def_cfa_offset 32
 408 0004 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 760:.\ff/ff.c     **** 	FRESULT res;
 761:.\ff/ff.c     **** 
 762:.\ff/ff.c     **** 
 763:.\ff/ff.c     **** 	res = move_window(fs, 0);
 411              		.loc 1 763 0
 412 0008 0F23     		mov	r3, #15
 413 000a FC18     		add	r4, r7, r3
 414 000c 7B68     		ldr	r3, [r7, #4]
 415 000e 181C     		mov	r0, r3
 416 0010 0021     		mov	r1, #0
 417 0012 FFF7FEFF 		bl	move_window
 418 0016 031C     		mov	r3, r0
 419 0018 2370     		strb	r3, [r4]
 764:.\ff/ff.c     **** 	if (res == FR_OK) {
 420              		.loc 1 764 0
 421 001a 0F23     		mov	r3, #15
 422 001c FB18     		add	r3, r7, r3
 423 001e 1B78     		ldrb	r3, [r3]
 424 0020 002B     		cmp	r3, #0
 425 0022 00D0     		beq	.LCB363
 426 0024 9BE0     		b	.L25	@long jump
 427              	.LCB363:
 765:.\ff/ff.c     **** 		/* Update FSInfo sector if needed */
 766:.\ff/ff.c     **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag) {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 22


 428              		.loc 1 766 0
 429 0026 7B68     		ldr	r3, [r7, #4]
 430 0028 1B78     		ldrb	r3, [r3]
 431 002a 032B     		cmp	r3, #3
 432 002c 00D0     		beq	.LCB367
 433 002e 89E0     		b	.L26	@long jump
 434              	.LCB367:
 435              		.loc 1 766 0 is_stmt 0 discriminator 1
 436 0030 7B68     		ldr	r3, [r7, #4]
 437 0032 5B79     		ldrb	r3, [r3, #5]
 438 0034 002B     		cmp	r3, #0
 439 0036 00D1     		bne	.LCB371
 440 0038 84E0     		b	.L26	@long jump
 441              	.LCB371:
 767:.\ff/ff.c     **** 			fs->winsect = 0;
 442              		.loc 1 767 0 is_stmt 1
 443 003a 7B68     		ldr	r3, [r7, #4]
 444 003c 0022     		mov	r2, #0
 445 003e DA62     		str	r2, [r3, #44]
 768:.\ff/ff.c     **** 			/* Create FSInfo structure */
 769:.\ff/ff.c     **** 			mem_set(fs->win, 0, 512);
 446              		.loc 1 769 0
 447 0040 7B68     		ldr	r3, [r7, #4]
 448 0042 3033     		add	r3, r3, #48
 449 0044 1A1C     		mov	r2, r3
 450 0046 8023     		mov	r3, #128
 451 0048 9B00     		lsl	r3, r3, #2
 452 004a 101C     		mov	r0, r2
 453 004c 0021     		mov	r1, #0
 454 004e 1A1C     		mov	r2, r3
 455 0050 FFF7FEFF 		bl	mem_set
 770:.\ff/ff.c     **** 			ST_WORD(fs->win+BS_55AA, 0xAA55);
 456              		.loc 1 770 0
 457 0054 7B68     		ldr	r3, [r7, #4]
 458 0056 454A     		ldr	r2, .L28
 459 0058 5521     		mov	r1, #85
 460 005a 9954     		strb	r1, [r3, r2]
 461 005c 7B68     		ldr	r3, [r7, #4]
 462 005e 444A     		ldr	r2, .L28+4
 463 0060 AA21     		mov	r1, #170
 464 0062 9954     		strb	r1, [r3, r2]
 771:.\ff/ff.c     **** 			ST_DWORD(fs->win+FSI_LeadSig, 0x41615252);
 465              		.loc 1 771 0
 466 0064 7B68     		ldr	r3, [r7, #4]
 467 0066 3022     		mov	r2, #48
 468 0068 5221     		mov	r1, #82
 469 006a 9954     		strb	r1, [r3, r2]
 470 006c 7B68     		ldr	r3, [r7, #4]
 471 006e 3122     		mov	r2, #49
 472 0070 5221     		mov	r1, #82
 473 0072 9954     		strb	r1, [r3, r2]
 474 0074 7B68     		ldr	r3, [r7, #4]
 475 0076 3222     		mov	r2, #50
 476 0078 6121     		mov	r1, #97
 477 007a 9954     		strb	r1, [r3, r2]
 478 007c 7B68     		ldr	r3, [r7, #4]
 479 007e 3322     		mov	r2, #51
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 23


 480 0080 4121     		mov	r1, #65
 481 0082 9954     		strb	r1, [r3, r2]
 772:.\ff/ff.c     **** 			ST_DWORD(fs->win+FSI_StrucSig, 0x61417272);
 482              		.loc 1 772 0
 483 0084 7A68     		ldr	r2, [r7, #4]
 484 0086 8523     		mov	r3, #133
 485 0088 9B00     		lsl	r3, r3, #2
 486 008a 7221     		mov	r1, #114
 487 008c D154     		strb	r1, [r2, r3]
 488 008e 7B68     		ldr	r3, [r7, #4]
 489 0090 384A     		ldr	r2, .L28+8
 490 0092 7221     		mov	r1, #114
 491 0094 9954     		strb	r1, [r3, r2]
 492 0096 7B68     		ldr	r3, [r7, #4]
 493 0098 374A     		ldr	r2, .L28+12
 494 009a 4121     		mov	r1, #65
 495 009c 9954     		strb	r1, [r3, r2]
 496 009e 7B68     		ldr	r3, [r7, #4]
 497 00a0 364A     		ldr	r2, .L28+16
 498 00a2 6121     		mov	r1, #97
 499 00a4 9954     		strb	r1, [r3, r2]
 773:.\ff/ff.c     **** 			ST_DWORD(fs->win+FSI_Free_Count, fs->free_clust);
 500              		.loc 1 773 0
 501 00a6 7B68     		ldr	r3, [r7, #4]
 502 00a8 1B69     		ldr	r3, [r3, #16]
 503 00aa D9B2     		uxtb	r1, r3
 504 00ac 7A68     		ldr	r2, [r7, #4]
 505 00ae 8623     		mov	r3, #134
 506 00b0 9B00     		lsl	r3, r3, #2
 507 00b2 D154     		strb	r1, [r2, r3]
 508 00b4 7B68     		ldr	r3, [r7, #4]
 509 00b6 1B69     		ldr	r3, [r3, #16]
 510 00b8 9BB2     		uxth	r3, r3
 511 00ba 1B0A     		lsr	r3, r3, #8
 512 00bc 9BB2     		uxth	r3, r3
 513 00be D9B2     		uxtb	r1, r3
 514 00c0 7B68     		ldr	r3, [r7, #4]
 515 00c2 2F4A     		ldr	r2, .L28+20
 516 00c4 9954     		strb	r1, [r3, r2]
 517 00c6 7B68     		ldr	r3, [r7, #4]
 518 00c8 1B69     		ldr	r3, [r3, #16]
 519 00ca 1B0C     		lsr	r3, r3, #16
 520 00cc D9B2     		uxtb	r1, r3
 521 00ce 7B68     		ldr	r3, [r7, #4]
 522 00d0 2C4A     		ldr	r2, .L28+24
 523 00d2 9954     		strb	r1, [r3, r2]
 524 00d4 7B68     		ldr	r3, [r7, #4]
 525 00d6 1B69     		ldr	r3, [r3, #16]
 526 00d8 1B0E     		lsr	r3, r3, #24
 527 00da D9B2     		uxtb	r1, r3
 528 00dc 7B68     		ldr	r3, [r7, #4]
 529 00de 2A4A     		ldr	r2, .L28+28
 530 00e0 9954     		strb	r1, [r3, r2]
 774:.\ff/ff.c     **** 			ST_DWORD(fs->win+FSI_Nxt_Free, fs->last_clust);
 531              		.loc 1 774 0
 532 00e2 7B68     		ldr	r3, [r7, #4]
 533 00e4 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 24


 534 00e6 D9B2     		uxtb	r1, r3
 535 00e8 7A68     		ldr	r2, [r7, #4]
 536 00ea 8723     		mov	r3, #135
 537 00ec 9B00     		lsl	r3, r3, #2
 538 00ee D154     		strb	r1, [r2, r3]
 539 00f0 7B68     		ldr	r3, [r7, #4]
 540 00f2 DB68     		ldr	r3, [r3, #12]
 541 00f4 9BB2     		uxth	r3, r3
 542 00f6 1B0A     		lsr	r3, r3, #8
 543 00f8 9BB2     		uxth	r3, r3
 544 00fa D9B2     		uxtb	r1, r3
 545 00fc 7B68     		ldr	r3, [r7, #4]
 546 00fe 234A     		ldr	r2, .L28+32
 547 0100 9954     		strb	r1, [r3, r2]
 548 0102 7B68     		ldr	r3, [r7, #4]
 549 0104 DB68     		ldr	r3, [r3, #12]
 550 0106 1B0C     		lsr	r3, r3, #16
 551 0108 D9B2     		uxtb	r1, r3
 552 010a 7B68     		ldr	r3, [r7, #4]
 553 010c 204A     		ldr	r2, .L28+36
 554 010e 9954     		strb	r1, [r3, r2]
 555 0110 7B68     		ldr	r3, [r7, #4]
 556 0112 DB68     		ldr	r3, [r3, #12]
 557 0114 1B0E     		lsr	r3, r3, #24
 558 0116 D9B2     		uxtb	r1, r3
 559 0118 7B68     		ldr	r3, [r7, #4]
 560 011a 1E4A     		ldr	r2, .L28+40
 561 011c 9954     		strb	r1, [r3, r2]
 775:.\ff/ff.c     **** 			/* Write it into the FSInfo sector */
 776:.\ff/ff.c     ****             CyDelay(15);
 562              		.loc 1 776 0
 563 011e 0F20     		mov	r0, #15
 564 0120 FFF7FEFF 		bl	CyDelay
 777:.\ff/ff.c     **** 			disk_write(fs->drv, fs->win, fs->fsi_sector, 1);
 565              		.loc 1 777 0
 566 0124 7B68     		ldr	r3, [r7, #4]
 567 0126 5978     		ldrb	r1, [r3, #1]
 568 0128 7B68     		ldr	r3, [r7, #4]
 569 012a 3033     		add	r3, r3, #48
 570 012c 1A1C     		mov	r2, r3
 571 012e 7B68     		ldr	r3, [r7, #4]
 572 0130 5B69     		ldr	r3, [r3, #20]
 573 0132 081C     		mov	r0, r1
 574 0134 111C     		mov	r1, r2
 575 0136 1A1C     		mov	r2, r3
 576 0138 0123     		mov	r3, #1
 577 013a FFF7FEFF 		bl	disk_write
 778:.\ff/ff.c     **** 			fs->fsi_flag = 0;
 578              		.loc 1 778 0
 579 013e 7B68     		ldr	r3, [r7, #4]
 580 0140 0022     		mov	r2, #0
 581 0142 5A71     		strb	r2, [r3, #5]
 582              	.L26:
 779:.\ff/ff.c     **** 		}
 780:.\ff/ff.c     **** 		/* Make sure that no pending write process in the physical drive */
 781:.\ff/ff.c     **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, (void*)0) != RES_OK)
 583              		.loc 1 781 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 25


 584 0144 7B68     		ldr	r3, [r7, #4]
 585 0146 5B78     		ldrb	r3, [r3, #1]
 586 0148 181C     		mov	r0, r3
 587 014a 0021     		mov	r1, #0
 588 014c 0022     		mov	r2, #0
 589 014e FFF7FEFF 		bl	disk_ioctl
 590 0152 031E     		sub	r3, r0, #0
 591 0154 03D0     		beq	.L25
 782:.\ff/ff.c     **** 			res = FR_DISK_ERR;
 592              		.loc 1 782 0
 593 0156 0F23     		mov	r3, #15
 594 0158 FB18     		add	r3, r7, r3
 595 015a 0122     		mov	r2, #1
 596 015c 1A70     		strb	r2, [r3]
 597              	.L25:
 783:.\ff/ff.c     **** 	}
 784:.\ff/ff.c     **** 
 785:.\ff/ff.c     **** 	return res;
 598              		.loc 1 785 0
 599 015e 0F23     		mov	r3, #15
 600 0160 FB18     		add	r3, r7, r3
 601 0162 1B78     		ldrb	r3, [r3]
 786:.\ff/ff.c     **** }
 602              		.loc 1 786 0
 603 0164 181C     		mov	r0, r3
 604 0166 BD46     		mov	sp, r7
 605 0168 05B0     		add	sp, sp, #20
 606              		@ sp needed
 607 016a 90BD     		pop	{r4, r7, pc}
 608              	.L29:
 609              		.align	2
 610              	.L28:
 611 016c 2E020000 		.word	558
 612 0170 2F020000 		.word	559
 613 0174 15020000 		.word	533
 614 0178 16020000 		.word	534
 615 017c 17020000 		.word	535
 616 0180 19020000 		.word	537
 617 0184 1A020000 		.word	538
 618 0188 1B020000 		.word	539
 619 018c 1D020000 		.word	541
 620 0190 1E020000 		.word	542
 621 0194 1F020000 		.word	543
 622              		.cfi_endproc
 623              	.LFE7:
 624              		.size	sync, .-sync
 625              		.section	.text.clust2sect,"ax",%progbits
 626              		.align	2
 627              		.global	clust2sect
 628              		.code	16
 629              		.thumb_func
 630              		.type	clust2sect, %function
 631              	clust2sect:
 632              	.LFB8:
 787:.\ff/ff.c     **** #endif
 788:.\ff/ff.c     **** 
 789:.\ff/ff.c     **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 26


 790:.\ff/ff.c     **** 
 791:.\ff/ff.c     **** 
 792:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 793:.\ff/ff.c     **** /* Get sector# from cluster#                                             */
 794:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 795:.\ff/ff.c     **** 
 796:.\ff/ff.c     **** 
 797:.\ff/ff.c     **** DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
 798:.\ff/ff.c     **** 	FATFS *fs,		/* File system object */
 799:.\ff/ff.c     **** 	DWORD clst		/* Cluster# to be converted */
 800:.\ff/ff.c     **** )
 801:.\ff/ff.c     **** {
 633              		.loc 1 801 0
 634              		.cfi_startproc
 635 0000 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              		.cfi_def_cfa_offset 16
 641 0004 00AF     		add	r7, sp, #0
 642              		.cfi_def_cfa_register 7
 643 0006 7860     		str	r0, [r7, #4]
 644 0008 3960     		str	r1, [r7]
 802:.\ff/ff.c     **** 	clst -= 2;
 645              		.loc 1 802 0
 646 000a 3B68     		ldr	r3, [r7]
 647 000c 023B     		sub	r3, r3, #2
 648 000e 3B60     		str	r3, [r7]
 803:.\ff/ff.c     **** 	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
 649              		.loc 1 803 0
 650 0010 7B68     		ldr	r3, [r7, #4]
 651 0012 9B69     		ldr	r3, [r3, #24]
 652 0014 9A1E     		sub	r2, r3, #2
 653 0016 3B68     		ldr	r3, [r7]
 654 0018 9A42     		cmp	r2, r3
 655 001a 01D8     		bhi	.L31
 656              		.loc 1 803 0 is_stmt 0 discriminator 1
 657 001c 0023     		mov	r3, #0
 658 001e 07E0     		b	.L32
 659              	.L31:
 804:.\ff/ff.c     **** 	return clst * fs->csize + fs->database;
 660              		.loc 1 804 0 is_stmt 1
 661 0020 7B68     		ldr	r3, [r7, #4]
 662 0022 9B78     		ldrb	r3, [r3, #2]
 663 0024 1A1C     		mov	r2, r3
 664 0026 3B68     		ldr	r3, [r7]
 665 0028 5A43     		mul	r2, r3
 666 002a 7B68     		ldr	r3, [r7, #4]
 667 002c 9B6A     		ldr	r3, [r3, #40]
 668 002e D318     		add	r3, r2, r3
 669              	.L32:
 805:.\ff/ff.c     **** }
 670              		.loc 1 805 0
 671 0030 181C     		mov	r0, r3
 672 0032 BD46     		mov	sp, r7
 673 0034 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 27


 674              		@ sp needed
 675 0036 80BD     		pop	{r7, pc}
 676              		.cfi_endproc
 677              	.LFE8:
 678              		.size	clust2sect, .-clust2sect
 679              		.section	.text.get_fat,"ax",%progbits
 680              		.align	2
 681              		.global	get_fat
 682              		.code	16
 683              		.thumb_func
 684              		.type	get_fat, %function
 685              	get_fat:
 686              	.LFB9:
 806:.\ff/ff.c     **** 
 807:.\ff/ff.c     **** 
 808:.\ff/ff.c     **** 
 809:.\ff/ff.c     **** 
 810:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 811:.\ff/ff.c     **** /* FAT access - Read value of a FAT entry                                */
 812:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 813:.\ff/ff.c     **** 
 814:.\ff/ff.c     **** 
 815:.\ff/ff.c     **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, Else:Cluster status */
 816:.\ff/ff.c     **** 	FATFS *fs,	/* File system object */
 817:.\ff/ff.c     **** 	DWORD clst	/* Cluster# to get the link information */
 818:.\ff/ff.c     **** )
 819:.\ff/ff.c     **** {
 687              		.loc 1 819 0
 688              		.cfi_startproc
 689 0000 80B5     		push	{r7, lr}
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 86B0     		sub	sp, sp, #24
 694              		.cfi_def_cfa_offset 32
 695 0004 00AF     		add	r7, sp, #0
 696              		.cfi_def_cfa_register 7
 697 0006 7860     		str	r0, [r7, #4]
 698 0008 3960     		str	r1, [r7]
 820:.\ff/ff.c     **** 	UINT wc, bc;
 821:.\ff/ff.c     **** 	BYTE *p;
 822:.\ff/ff.c     **** 
 823:.\ff/ff.c     **** 
 824:.\ff/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent)	/* Chack range */
 699              		.loc 1 824 0
 700 000a 3B68     		ldr	r3, [r7]
 701 000c 012B     		cmp	r3, #1
 702 000e 04D9     		bls	.L34
 703              		.loc 1 824 0 is_stmt 0 discriminator 1
 704 0010 7B68     		ldr	r3, [r7, #4]
 705 0012 9A69     		ldr	r2, [r3, #24]
 706 0014 3B68     		ldr	r3, [r7]
 707 0016 9A42     		cmp	r2, r3
 708 0018 01D8     		bhi	.L35
 709              	.L34:
 825:.\ff/ff.c     **** 		return 1;
 710              		.loc 1 825 0 is_stmt 1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 28


 711 001a 0123     		mov	r3, #1
 712 001c 9BE0     		b	.L36
 713              	.L35:
 826:.\ff/ff.c     **** 
 827:.\ff/ff.c     **** 	switch (fs->fs_type) {
 714              		.loc 1 827 0
 715 001e 7B68     		ldr	r3, [r7, #4]
 716 0020 1B78     		ldrb	r3, [r3]
 717 0022 022B     		cmp	r3, #2
 718 0024 49D0     		beq	.L38
 719 0026 032B     		cmp	r3, #3
 720 0028 69D0     		beq	.L39
 721 002a 012B     		cmp	r3, #1
 722 002c 00D0     		beq	.LCB635
 723 002e 90E0     		b	.L37	@long jump
 724              	.LCB635:
 828:.\ff/ff.c     **** 	case FS_FAT12 :
 829:.\ff/ff.c     **** 		bc = (UINT)clst; bc += bc / 2;
 725              		.loc 1 829 0
 726 0030 3B68     		ldr	r3, [r7]
 727 0032 7B61     		str	r3, [r7, #20]
 728 0034 7B69     		ldr	r3, [r7, #20]
 729 0036 5B08     		lsr	r3, r3, #1
 730 0038 7A69     		ldr	r2, [r7, #20]
 731 003a D318     		add	r3, r2, r3
 732 003c 7B61     		str	r3, [r7, #20]
 830:.\ff/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 733              		.loc 1 830 0
 734 003e 7B68     		ldr	r3, [r7, #4]
 735 0040 1A6A     		ldr	r2, [r3, #32]
 736 0042 7B69     		ldr	r3, [r7, #20]
 737 0044 5B0A     		lsr	r3, r3, #9
 738 0046 D318     		add	r3, r2, r3
 739 0048 7A68     		ldr	r2, [r7, #4]
 740 004a 101C     		mov	r0, r2
 741 004c 191C     		mov	r1, r3
 742 004e FFF7FEFF 		bl	move_window
 743 0052 031E     		sub	r3, r0, #0
 744 0054 00D0     		beq	.L41
 745 0056 7CE0     		b	.L37
 746              	.L41:
 831:.\ff/ff.c     **** 		wc = fs->win[bc % SS(fs)]; bc++;
 747              		.loc 1 831 0
 748 0058 7B69     		ldr	r3, [r7, #20]
 749 005a DB05     		lsl	r3, r3, #23
 750 005c DB0D     		lsr	r3, r3, #23
 751 005e 7A68     		ldr	r2, [r7, #4]
 752 0060 3021     		mov	r1, #48
 753 0062 D318     		add	r3, r2, r3
 754 0064 5B18     		add	r3, r3, r1
 755 0066 1B78     		ldrb	r3, [r3]
 756 0068 3B61     		str	r3, [r7, #16]
 757 006a 7B69     		ldr	r3, [r7, #20]
 758 006c 0133     		add	r3, r3, #1
 759 006e 7B61     		str	r3, [r7, #20]
 832:.\ff/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 760              		.loc 1 832 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 29


 761 0070 7B68     		ldr	r3, [r7, #4]
 762 0072 1A6A     		ldr	r2, [r3, #32]
 763 0074 7B69     		ldr	r3, [r7, #20]
 764 0076 5B0A     		lsr	r3, r3, #9
 765 0078 D318     		add	r3, r2, r3
 766 007a 7A68     		ldr	r2, [r7, #4]
 767 007c 101C     		mov	r0, r2
 768 007e 191C     		mov	r1, r3
 769 0080 FFF7FEFF 		bl	move_window
 770 0084 031E     		sub	r3, r0, #0
 771 0086 00D0     		beq	.L42
 772 0088 63E0     		b	.L37
 773              	.L42:
 833:.\ff/ff.c     **** 		wc |= fs->win[bc % SS(fs)] << 8;
 774              		.loc 1 833 0
 775 008a 7B69     		ldr	r3, [r7, #20]
 776 008c DB05     		lsl	r3, r3, #23
 777 008e DB0D     		lsr	r3, r3, #23
 778 0090 7A68     		ldr	r2, [r7, #4]
 779 0092 3021     		mov	r1, #48
 780 0094 D318     		add	r3, r2, r3
 781 0096 5B18     		add	r3, r3, r1
 782 0098 1B78     		ldrb	r3, [r3]
 783 009a 1B02     		lsl	r3, r3, #8
 784 009c 1A1C     		mov	r2, r3
 785 009e 3B69     		ldr	r3, [r7, #16]
 786 00a0 1343     		orr	r3, r2
 787 00a2 3B61     		str	r3, [r7, #16]
 834:.\ff/ff.c     **** 		return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 788              		.loc 1 834 0
 789 00a4 3B68     		ldr	r3, [r7]
 790 00a6 0122     		mov	r2, #1
 791 00a8 1340     		and	r3, r2
 792 00aa 02D0     		beq	.L43
 793              		.loc 1 834 0 is_stmt 0 discriminator 1
 794 00ac 3B69     		ldr	r3, [r7, #16]
 795 00ae 1B09     		lsr	r3, r3, #4
 796 00b0 51E0     		b	.L36
 797              	.L43:
 798              		.loc 1 834 0 discriminator 2
 799 00b2 3B69     		ldr	r3, [r7, #16]
 800 00b4 1B05     		lsl	r3, r3, #20
 801 00b6 1B0D     		lsr	r3, r3, #20
 802 00b8 4DE0     		b	.L36
 803              	.L38:
 835:.\ff/ff.c     **** 
 836:.\ff/ff.c     **** 	case FS_FAT16 :
 837:.\ff/ff.c     **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
 804              		.loc 1 837 0 is_stmt 1
 805 00ba 7B68     		ldr	r3, [r7, #4]
 806 00bc 1A6A     		ldr	r2, [r3, #32]
 807 00be 3B68     		ldr	r3, [r7]
 808 00c0 1B0A     		lsr	r3, r3, #8
 809 00c2 D318     		add	r3, r2, r3
 810 00c4 7A68     		ldr	r2, [r7, #4]
 811 00c6 101C     		mov	r0, r2
 812 00c8 191C     		mov	r1, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 30


 813 00ca FFF7FEFF 		bl	move_window
 814 00ce 031E     		sub	r3, r0, #0
 815 00d0 00D0     		beq	.L45
 816 00d2 3EE0     		b	.L37
 817              	.L45:
 838:.\ff/ff.c     **** 		p = &fs->win[clst * 2 % SS(fs)];
 818              		.loc 1 838 0
 819 00d4 3B68     		ldr	r3, [r7]
 820 00d6 5A00     		lsl	r2, r3, #1
 821 00d8 FF23     		mov	r3, #255
 822 00da 5B00     		lsl	r3, r3, #1
 823 00dc 1340     		and	r3, r2
 824 00de 3033     		add	r3, r3, #48
 825 00e0 7A68     		ldr	r2, [r7, #4]
 826 00e2 D318     		add	r3, r2, r3
 827 00e4 FB60     		str	r3, [r7, #12]
 839:.\ff/ff.c     **** 		return LD_WORD(p);
 828              		.loc 1 839 0
 829 00e6 FB68     		ldr	r3, [r7, #12]
 830 00e8 0133     		add	r3, r3, #1
 831 00ea 1B78     		ldrb	r3, [r3]
 832 00ec 1B02     		lsl	r3, r3, #8
 833 00ee 9AB2     		uxth	r2, r3
 834 00f0 FB68     		ldr	r3, [r7, #12]
 835 00f2 1B78     		ldrb	r3, [r3]
 836 00f4 9BB2     		uxth	r3, r3
 837 00f6 1343     		orr	r3, r2
 838 00f8 9BB2     		uxth	r3, r3
 839 00fa 9BB2     		uxth	r3, r3
 840 00fc 2BE0     		b	.L36
 841              	.L39:
 840:.\ff/ff.c     **** 
 841:.\ff/ff.c     **** 	case FS_FAT32 :
 842:.\ff/ff.c     **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
 842              		.loc 1 842 0
 843 00fe 7B68     		ldr	r3, [r7, #4]
 844 0100 1A6A     		ldr	r2, [r3, #32]
 845 0102 3B68     		ldr	r3, [r7]
 846 0104 DB09     		lsr	r3, r3, #7
 847 0106 D318     		add	r3, r2, r3
 848 0108 7A68     		ldr	r2, [r7, #4]
 849 010a 101C     		mov	r0, r2
 850 010c 191C     		mov	r1, r3
 851 010e FFF7FEFF 		bl	move_window
 852 0112 031E     		sub	r3, r0, #0
 853 0114 00D0     		beq	.L46
 854 0116 1CE0     		b	.L37
 855              	.L46:
 843:.\ff/ff.c     **** 		p = &fs->win[clst * 4 % SS(fs)];
 856              		.loc 1 843 0
 857 0118 3B68     		ldr	r3, [r7]
 858 011a 9A00     		lsl	r2, r3, #2
 859 011c FE23     		mov	r3, #254
 860 011e 5B00     		lsl	r3, r3, #1
 861 0120 1340     		and	r3, r2
 862 0122 3033     		add	r3, r3, #48
 863 0124 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 31


 864 0126 D318     		add	r3, r2, r3
 865 0128 FB60     		str	r3, [r7, #12]
 844:.\ff/ff.c     **** 		return LD_DWORD(p) & 0x0FFFFFFF;
 866              		.loc 1 844 0
 867 012a FB68     		ldr	r3, [r7, #12]
 868 012c 0333     		add	r3, r3, #3
 869 012e 1B78     		ldrb	r3, [r3]
 870 0130 1A06     		lsl	r2, r3, #24
 871 0132 FB68     		ldr	r3, [r7, #12]
 872 0134 0233     		add	r3, r3, #2
 873 0136 1B78     		ldrb	r3, [r3]
 874 0138 1B04     		lsl	r3, r3, #16
 875 013a 1343     		orr	r3, r2
 876 013c FA68     		ldr	r2, [r7, #12]
 877 013e 0132     		add	r2, r2, #1
 878 0140 1278     		ldrb	r2, [r2]
 879 0142 1202     		lsl	r2, r2, #8
 880 0144 1343     		orr	r3, r2
 881 0146 FA68     		ldr	r2, [r7, #12]
 882 0148 1278     		ldrb	r2, [r2]
 883 014a 1343     		orr	r3, r2
 884 014c 1B01     		lsl	r3, r3, #4
 885 014e 1B09     		lsr	r3, r3, #4
 886 0150 01E0     		b	.L36
 887              	.L37:
 845:.\ff/ff.c     **** 	}
 846:.\ff/ff.c     **** 
 847:.\ff/ff.c     **** 	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
 888              		.loc 1 847 0
 889 0152 0123     		mov	r3, #1
 890 0154 5B42     		neg	r3, r3
 891              	.L36:
 848:.\ff/ff.c     **** }
 892              		.loc 1 848 0
 893 0156 181C     		mov	r0, r3
 894 0158 BD46     		mov	sp, r7
 895 015a 06B0     		add	sp, sp, #24
 896              		@ sp needed
 897 015c 80BD     		pop	{r7, pc}
 898              		.cfi_endproc
 899              	.LFE9:
 900              		.size	get_fat, .-get_fat
 901 015e C046     		.section	.text.put_fat,"ax",%progbits
 902              		.align	2
 903              		.global	put_fat
 904              		.code	16
 905              		.thumb_func
 906              		.type	put_fat, %function
 907              	put_fat:
 908              	.LFB10:
 849:.\ff/ff.c     **** 
 850:.\ff/ff.c     **** 
 851:.\ff/ff.c     **** 
 852:.\ff/ff.c     **** 
 853:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 854:.\ff/ff.c     **** /* FAT access - Change value of a FAT entry                              */
 855:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 32


 856:.\ff/ff.c     **** #if !_FS_READONLY
 857:.\ff/ff.c     **** 
 858:.\ff/ff.c     **** FRESULT put_fat (
 859:.\ff/ff.c     **** 	FATFS *fs,	/* File system object */
 860:.\ff/ff.c     **** 	DWORD clst,	/* Cluster# to be changed in range of 2 to fs->n_fatent - 1 */
 861:.\ff/ff.c     **** 	DWORD val	/* New value to mark the cluster */
 862:.\ff/ff.c     **** )
 863:.\ff/ff.c     **** {
 909              		.loc 1 863 0
 910              		.cfi_startproc
 911 0000 90B5     		push	{r4, r7, lr}
 912              		.cfi_def_cfa_offset 12
 913              		.cfi_offset 4, -12
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 89B0     		sub	sp, sp, #36
 917              		.cfi_def_cfa_offset 48
 918 0004 00AF     		add	r7, sp, #0
 919              		.cfi_def_cfa_register 7
 920 0006 F860     		str	r0, [r7, #12]
 921 0008 B960     		str	r1, [r7, #8]
 922 000a 7A60     		str	r2, [r7, #4]
 864:.\ff/ff.c     **** 	UINT bc;
 865:.\ff/ff.c     **** 	BYTE *p;
 866:.\ff/ff.c     **** 	FRESULT res;
 867:.\ff/ff.c     **** 
 868:.\ff/ff.c     **** 
 869:.\ff/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 923              		.loc 1 869 0
 924 000c BB68     		ldr	r3, [r7, #8]
 925 000e 012B     		cmp	r3, #1
 926 0010 04D9     		bls	.L48
 927              		.loc 1 869 0 is_stmt 0 discriminator 1
 928 0012 FB68     		ldr	r3, [r7, #12]
 929 0014 9A69     		ldr	r2, [r3, #24]
 930 0016 BB68     		ldr	r3, [r7, #8]
 931 0018 9A42     		cmp	r2, r3
 932 001a 04D8     		bhi	.L49
 933              	.L48:
 870:.\ff/ff.c     **** 		res = FR_INT_ERR;
 934              		.loc 1 870 0 is_stmt 1
 935 001c 1F23     		mov	r3, #31
 936 001e FB18     		add	r3, r7, r3
 937 0020 0222     		mov	r2, #2
 938 0022 1A70     		strb	r2, [r3]
 939 0024 FEE0     		b	.L50
 940              	.L49:
 871:.\ff/ff.c     **** 
 872:.\ff/ff.c     **** 	} else {
 873:.\ff/ff.c     **** 		switch (fs->fs_type) {
 941              		.loc 1 873 0
 942 0026 FB68     		ldr	r3, [r7, #12]
 943 0028 1B78     		ldrb	r3, [r3]
 944 002a 022B     		cmp	r3, #2
 945 002c 00D1     		bne	.LCB857
 946 002e 7CE0     		b	.L52	@long jump
 947              	.LCB857:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 33


 948 0030 032B     		cmp	r3, #3
 949 0032 00D1     		bne	.LCB859
 950 0034 A3E0     		b	.L53	@long jump
 951              	.LCB859:
 952 0036 012B     		cmp	r3, #1
 953 0038 00D0     		beq	.LCB861
 954 003a ECE0     		b	.L65	@long jump
 955              	.LCB861:
 874:.\ff/ff.c     **** 		case FS_FAT12 :
 875:.\ff/ff.c     **** 			bc = clst; bc += bc / 2;
 956              		.loc 1 875 0
 957 003c BB68     		ldr	r3, [r7, #8]
 958 003e BB61     		str	r3, [r7, #24]
 959 0040 BB69     		ldr	r3, [r7, #24]
 960 0042 5B08     		lsr	r3, r3, #1
 961 0044 BA69     		ldr	r2, [r7, #24]
 962 0046 D318     		add	r3, r2, r3
 963 0048 BB61     		str	r3, [r7, #24]
 876:.\ff/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 964              		.loc 1 876 0
 965 004a FB68     		ldr	r3, [r7, #12]
 966 004c 1A6A     		ldr	r2, [r3, #32]
 967 004e BB69     		ldr	r3, [r7, #24]
 968 0050 5B0A     		lsr	r3, r3, #9
 969 0052 D318     		add	r3, r2, r3
 970 0054 1F22     		mov	r2, #31
 971 0056 BC18     		add	r4, r7, r2
 972 0058 FA68     		ldr	r2, [r7, #12]
 973 005a 101C     		mov	r0, r2
 974 005c 191C     		mov	r1, r3
 975 005e FFF7FEFF 		bl	move_window
 976 0062 031C     		mov	r3, r0
 977 0064 2370     		strb	r3, [r4]
 877:.\ff/ff.c     **** 			if (res != FR_OK) break;
 978              		.loc 1 877 0
 979 0066 1F23     		mov	r3, #31
 980 0068 FB18     		add	r3, r7, r3
 981 006a 1B78     		ldrb	r3, [r3]
 982 006c 002B     		cmp	r3, #0
 983 006e 00D0     		beq	.L55
 984 0070 D5E0     		b	.L56
 985              	.L55:
 878:.\ff/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 986              		.loc 1 878 0
 987 0072 BB69     		ldr	r3, [r7, #24]
 988 0074 DB05     		lsl	r3, r3, #23
 989 0076 DB0D     		lsr	r3, r3, #23
 990 0078 3033     		add	r3, r3, #48
 991 007a FA68     		ldr	r2, [r7, #12]
 992 007c D318     		add	r3, r2, r3
 993 007e 7B61     		str	r3, [r7, #20]
 879:.\ff/ff.c     **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 994              		.loc 1 879 0
 995 0080 BB68     		ldr	r3, [r7, #8]
 996 0082 0122     		mov	r2, #1
 997 0084 1340     		and	r3, r2
 998 0086 0ED0     		beq	.L57
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 34


 999              		.loc 1 879 0 is_stmt 0 discriminator 1
 1000 0088 7B69     		ldr	r3, [r7, #20]
 1001 008a 1B78     		ldrb	r3, [r3]
 1002 008c DBB2     		uxtb	r3, r3
 1003 008e 1A1C     		add	r2, r3, #0
 1004 0090 0F23     		mov	r3, #15
 1005 0092 1340     		and	r3, r2
 1006 0094 DAB2     		uxtb	r2, r3
 1007 0096 7B68     		ldr	r3, [r7, #4]
 1008 0098 DBB2     		uxtb	r3, r3
 1009 009a 1B01     		lsl	r3, r3, #4
 1010 009c DBB2     		uxtb	r3, r3
 1011 009e 1343     		orr	r3, r2
 1012 00a0 DBB2     		uxtb	r3, r3
 1013 00a2 DBB2     		uxtb	r3, r3
 1014 00a4 01E0     		b	.L58
 1015              	.L57:
 1016              		.loc 1 879 0 discriminator 2
 1017 00a6 7B68     		ldr	r3, [r7, #4]
 1018 00a8 DBB2     		uxtb	r3, r3
 1019              	.L58:
 1020              		.loc 1 879 0 discriminator 4
 1021 00aa 7A69     		ldr	r2, [r7, #20]
 1022 00ac 1370     		strb	r3, [r2]
 880:.\ff/ff.c     **** 			bc++;
 1023              		.loc 1 880 0 is_stmt 1 discriminator 4
 1024 00ae BB69     		ldr	r3, [r7, #24]
 1025 00b0 0133     		add	r3, r3, #1
 1026 00b2 BB61     		str	r3, [r7, #24]
 881:.\ff/ff.c     **** 			fs->wflag = 1;
 1027              		.loc 1 881 0 discriminator 4
 1028 00b4 FB68     		ldr	r3, [r7, #12]
 1029 00b6 0122     		mov	r2, #1
 1030 00b8 1A71     		strb	r2, [r3, #4]
 882:.\ff/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1031              		.loc 1 882 0 discriminator 4
 1032 00ba FB68     		ldr	r3, [r7, #12]
 1033 00bc 1A6A     		ldr	r2, [r3, #32]
 1034 00be BB69     		ldr	r3, [r7, #24]
 1035 00c0 5B0A     		lsr	r3, r3, #9
 1036 00c2 D318     		add	r3, r2, r3
 1037 00c4 1F22     		mov	r2, #31
 1038 00c6 BC18     		add	r4, r7, r2
 1039 00c8 FA68     		ldr	r2, [r7, #12]
 1040 00ca 101C     		mov	r0, r2
 1041 00cc 191C     		mov	r1, r3
 1042 00ce FFF7FEFF 		bl	move_window
 1043 00d2 031C     		mov	r3, r0
 1044 00d4 2370     		strb	r3, [r4]
 883:.\ff/ff.c     **** 			if (res != FR_OK) break;
 1045              		.loc 1 883 0 discriminator 4
 1046 00d6 1F23     		mov	r3, #31
 1047 00d8 FB18     		add	r3, r7, r3
 1048 00da 1B78     		ldrb	r3, [r3]
 1049 00dc 002B     		cmp	r3, #0
 1050 00de 00D0     		beq	.L59
 1051              		.loc 1 883 0 is_stmt 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 35


 1052 00e0 9DE0     		b	.L56
 1053              	.L59:
 884:.\ff/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 1054              		.loc 1 884 0 is_stmt 1
 1055 00e2 BB69     		ldr	r3, [r7, #24]
 1056 00e4 DB05     		lsl	r3, r3, #23
 1057 00e6 DB0D     		lsr	r3, r3, #23
 1058 00e8 3033     		add	r3, r3, #48
 1059 00ea FA68     		ldr	r2, [r7, #12]
 1060 00ec D318     		add	r3, r2, r3
 1061 00ee 7B61     		str	r3, [r7, #20]
 885:.\ff/ff.c     **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 1062              		.loc 1 885 0
 1063 00f0 BB68     		ldr	r3, [r7, #8]
 1064 00f2 0122     		mov	r2, #1
 1065 00f4 1340     		and	r3, r2
 1066 00f6 03D0     		beq	.L60
 1067              		.loc 1 885 0 is_stmt 0 discriminator 1
 1068 00f8 7B68     		ldr	r3, [r7, #4]
 1069 00fa 1B09     		lsr	r3, r3, #4
 1070 00fc DBB2     		uxtb	r3, r3
 1071 00fe 11E0     		b	.L61
 1072              	.L60:
 1073              		.loc 1 885 0 discriminator 2
 1074 0100 7B69     		ldr	r3, [r7, #20]
 1075 0102 1B78     		ldrb	r3, [r3]
 1076 0104 DBB2     		uxtb	r3, r3
 1077 0106 1A1C     		add	r2, r3, #0
 1078 0108 0F23     		mov	r3, #15
 1079 010a 9A43     		bic	r2, r3
 1080 010c 131C     		mov	r3, r2
 1081 010e DAB2     		uxtb	r2, r3
 1082 0110 7B68     		ldr	r3, [r7, #4]
 1083 0112 1B0A     		lsr	r3, r3, #8
 1084 0114 DBB2     		uxtb	r3, r3
 1085 0116 191C     		add	r1, r3, #0
 1086 0118 0F23     		mov	r3, #15
 1087 011a 0B40     		and	r3, r1
 1088 011c DBB2     		uxtb	r3, r3
 1089 011e 1343     		orr	r3, r2
 1090 0120 DBB2     		uxtb	r3, r3
 1091 0122 DBB2     		uxtb	r3, r3
 1092              	.L61:
 1093              		.loc 1 885 0 discriminator 4
 1094 0124 7A69     		ldr	r2, [r7, #20]
 1095 0126 1370     		strb	r3, [r2]
 886:.\ff/ff.c     **** 			break;
 1096              		.loc 1 886 0 is_stmt 1 discriminator 4
 1097 0128 79E0     		b	.L56
 1098              	.L52:
 887:.\ff/ff.c     **** 
 888:.\ff/ff.c     **** 		case FS_FAT16 :
 889:.\ff/ff.c     **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 1099              		.loc 1 889 0
 1100 012a FB68     		ldr	r3, [r7, #12]
 1101 012c 1A6A     		ldr	r2, [r3, #32]
 1102 012e BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 36


 1103 0130 1B0A     		lsr	r3, r3, #8
 1104 0132 D318     		add	r3, r2, r3
 1105 0134 1F22     		mov	r2, #31
 1106 0136 BC18     		add	r4, r7, r2
 1107 0138 FA68     		ldr	r2, [r7, #12]
 1108 013a 101C     		mov	r0, r2
 1109 013c 191C     		mov	r1, r3
 1110 013e FFF7FEFF 		bl	move_window
 1111 0142 031C     		mov	r3, r0
 1112 0144 2370     		strb	r3, [r4]
 890:.\ff/ff.c     **** 			if (res != FR_OK) break;
 1113              		.loc 1 890 0
 1114 0146 1F23     		mov	r3, #31
 1115 0148 FB18     		add	r3, r7, r3
 1116 014a 1B78     		ldrb	r3, [r3]
 1117 014c 002B     		cmp	r3, #0
 1118 014e 00D0     		beq	.L62
 1119 0150 65E0     		b	.L56
 1120              	.L62:
 891:.\ff/ff.c     **** 			p = &fs->win[clst * 2 % SS(fs)];
 1121              		.loc 1 891 0
 1122 0152 BB68     		ldr	r3, [r7, #8]
 1123 0154 5A00     		lsl	r2, r3, #1
 1124 0156 FF23     		mov	r3, #255
 1125 0158 5B00     		lsl	r3, r3, #1
 1126 015a 1340     		and	r3, r2
 1127 015c 3033     		add	r3, r3, #48
 1128 015e FA68     		ldr	r2, [r7, #12]
 1129 0160 D318     		add	r3, r2, r3
 1130 0162 7B61     		str	r3, [r7, #20]
 892:.\ff/ff.c     **** 			ST_WORD(p, (WORD)val);
 1131              		.loc 1 892 0
 1132 0164 7B68     		ldr	r3, [r7, #4]
 1133 0166 DAB2     		uxtb	r2, r3
 1134 0168 7B69     		ldr	r3, [r7, #20]
 1135 016a 1A70     		strb	r2, [r3]
 1136 016c 7B69     		ldr	r3, [r7, #20]
 1137 016e 0133     		add	r3, r3, #1
 1138 0170 7A68     		ldr	r2, [r7, #4]
 1139 0172 92B2     		uxth	r2, r2
 1140 0174 120A     		lsr	r2, r2, #8
 1141 0176 92B2     		uxth	r2, r2
 1142 0178 D2B2     		uxtb	r2, r2
 1143 017a 1A70     		strb	r2, [r3]
 893:.\ff/ff.c     **** 			break;
 1144              		.loc 1 893 0
 1145 017c 4FE0     		b	.L56
 1146              	.L53:
 894:.\ff/ff.c     **** 
 895:.\ff/ff.c     **** 		case FS_FAT32 :
 896:.\ff/ff.c     **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 1147              		.loc 1 896 0
 1148 017e FB68     		ldr	r3, [r7, #12]
 1149 0180 1A6A     		ldr	r2, [r3, #32]
 1150 0182 BB68     		ldr	r3, [r7, #8]
 1151 0184 DB09     		lsr	r3, r3, #7
 1152 0186 D318     		add	r3, r2, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 37


 1153 0188 1F22     		mov	r2, #31
 1154 018a BC18     		add	r4, r7, r2
 1155 018c FA68     		ldr	r2, [r7, #12]
 1156 018e 101C     		mov	r0, r2
 1157 0190 191C     		mov	r1, r3
 1158 0192 FFF7FEFF 		bl	move_window
 1159 0196 031C     		mov	r3, r0
 1160 0198 2370     		strb	r3, [r4]
 897:.\ff/ff.c     **** 			if (res != FR_OK) break;
 1161              		.loc 1 897 0
 1162 019a 1F23     		mov	r3, #31
 1163 019c FB18     		add	r3, r7, r3
 1164 019e 1B78     		ldrb	r3, [r3]
 1165 01a0 002B     		cmp	r3, #0
 1166 01a2 00D0     		beq	.L63
 1167 01a4 3BE0     		b	.L56
 1168              	.L63:
 898:.\ff/ff.c     **** 			p = &fs->win[clst * 4 % SS(fs)];
 1169              		.loc 1 898 0
 1170 01a6 BB68     		ldr	r3, [r7, #8]
 1171 01a8 9A00     		lsl	r2, r3, #2
 1172 01aa FE23     		mov	r3, #254
 1173 01ac 5B00     		lsl	r3, r3, #1
 1174 01ae 1340     		and	r3, r2
 1175 01b0 3033     		add	r3, r3, #48
 1176 01b2 FA68     		ldr	r2, [r7, #12]
 1177 01b4 D318     		add	r3, r2, r3
 1178 01b6 7B61     		str	r3, [r7, #20]
 899:.\ff/ff.c     **** 			val |= LD_DWORD(p) & 0xF0000000;
 1179              		.loc 1 899 0
 1180 01b8 7B69     		ldr	r3, [r7, #20]
 1181 01ba 0333     		add	r3, r3, #3
 1182 01bc 1B78     		ldrb	r3, [r3]
 1183 01be 1A06     		lsl	r2, r3, #24
 1184 01c0 7B69     		ldr	r3, [r7, #20]
 1185 01c2 0233     		add	r3, r3, #2
 1186 01c4 1B78     		ldrb	r3, [r3]
 1187 01c6 1B04     		lsl	r3, r3, #16
 1188 01c8 1343     		orr	r3, r2
 1189 01ca 7A69     		ldr	r2, [r7, #20]
 1190 01cc 0132     		add	r2, r2, #1
 1191 01ce 1278     		ldrb	r2, [r2]
 1192 01d0 1202     		lsl	r2, r2, #8
 1193 01d2 1343     		orr	r3, r2
 1194 01d4 7A69     		ldr	r2, [r7, #20]
 1195 01d6 1278     		ldrb	r2, [r2]
 1196 01d8 1343     		orr	r3, r2
 1197 01da 1B0F     		lsr	r3, r3, #28
 1198 01dc 1B07     		lsl	r3, r3, #28
 1199 01de 7A68     		ldr	r2, [r7, #4]
 1200 01e0 1343     		orr	r3, r2
 1201 01e2 7B60     		str	r3, [r7, #4]
 900:.\ff/ff.c     **** 			ST_DWORD(p, val);
 1202              		.loc 1 900 0
 1203 01e4 7B68     		ldr	r3, [r7, #4]
 1204 01e6 DAB2     		uxtb	r2, r3
 1205 01e8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 38


 1206 01ea 1A70     		strb	r2, [r3]
 1207 01ec 7B69     		ldr	r3, [r7, #20]
 1208 01ee 0133     		add	r3, r3, #1
 1209 01f0 7A68     		ldr	r2, [r7, #4]
 1210 01f2 92B2     		uxth	r2, r2
 1211 01f4 120A     		lsr	r2, r2, #8
 1212 01f6 92B2     		uxth	r2, r2
 1213 01f8 D2B2     		uxtb	r2, r2
 1214 01fa 1A70     		strb	r2, [r3]
 1215 01fc 7B69     		ldr	r3, [r7, #20]
 1216 01fe 0233     		add	r3, r3, #2
 1217 0200 7A68     		ldr	r2, [r7, #4]
 1218 0202 120C     		lsr	r2, r2, #16
 1219 0204 D2B2     		uxtb	r2, r2
 1220 0206 1A70     		strb	r2, [r3]
 1221 0208 7B69     		ldr	r3, [r7, #20]
 1222 020a 0333     		add	r3, r3, #3
 1223 020c 7A68     		ldr	r2, [r7, #4]
 1224 020e 120E     		lsr	r2, r2, #24
 1225 0210 D2B2     		uxtb	r2, r2
 1226 0212 1A70     		strb	r2, [r3]
 901:.\ff/ff.c     **** 			break;
 1227              		.loc 1 901 0
 1228 0214 03E0     		b	.L56
 1229              	.L65:
 902:.\ff/ff.c     **** 
 903:.\ff/ff.c     **** 		default :
 904:.\ff/ff.c     **** 			res = FR_INT_ERR;
 1230              		.loc 1 904 0
 1231 0216 1F23     		mov	r3, #31
 1232 0218 FB18     		add	r3, r7, r3
 1233 021a 0222     		mov	r2, #2
 1234 021c 1A70     		strb	r2, [r3]
 1235              	.L56:
 905:.\ff/ff.c     **** 		}
 906:.\ff/ff.c     **** 		fs->wflag = 1;
 1236              		.loc 1 906 0
 1237 021e FB68     		ldr	r3, [r7, #12]
 1238 0220 0122     		mov	r2, #1
 1239 0222 1A71     		strb	r2, [r3, #4]
 1240              	.L50:
 907:.\ff/ff.c     **** 	}
 908:.\ff/ff.c     **** 
 909:.\ff/ff.c     **** 	return res;
 1241              		.loc 1 909 0
 1242 0224 1F23     		mov	r3, #31
 1243 0226 FB18     		add	r3, r7, r3
 1244 0228 1B78     		ldrb	r3, [r3]
 910:.\ff/ff.c     **** }
 1245              		.loc 1 910 0
 1246 022a 181C     		mov	r0, r3
 1247 022c BD46     		mov	sp, r7
 1248 022e 09B0     		add	sp, sp, #36
 1249              		@ sp needed
 1250 0230 90BD     		pop	{r4, r7, pc}
 1251              		.cfi_endproc
 1252              	.LFE10:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 39


 1253              		.size	put_fat, .-put_fat
 1254 0232 C046     		.section	.text.remove_chain,"ax",%progbits
 1255              		.align	2
 1256              		.code	16
 1257              		.thumb_func
 1258              		.type	remove_chain, %function
 1259              	remove_chain:
 1260              	.LFB11:
 911:.\ff/ff.c     **** #endif /* !_FS_READONLY */
 912:.\ff/ff.c     **** 
 913:.\ff/ff.c     **** 
 914:.\ff/ff.c     **** 
 915:.\ff/ff.c     **** 
 916:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 917:.\ff/ff.c     **** /* FAT handling - Remove a cluster chain                                 */
 918:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 919:.\ff/ff.c     **** #if !_FS_READONLY
 920:.\ff/ff.c     **** static
 921:.\ff/ff.c     **** FRESULT remove_chain (
 922:.\ff/ff.c     **** 	FATFS *fs,			/* File system object */
 923:.\ff/ff.c     **** 	DWORD clst			/* Cluster# to remove a chain from */
 924:.\ff/ff.c     **** )
 925:.\ff/ff.c     **** {
 1261              		.loc 1 925 0
 1262              		.cfi_startproc
 1263 0000 90B5     		push	{r4, r7, lr}
 1264              		.cfi_def_cfa_offset 12
 1265              		.cfi_offset 4, -12
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 1268 0002 85B0     		sub	sp, sp, #20
 1269              		.cfi_def_cfa_offset 32
 1270 0004 00AF     		add	r7, sp, #0
 1271              		.cfi_def_cfa_register 7
 1272 0006 7860     		str	r0, [r7, #4]
 1273 0008 3960     		str	r1, [r7]
 926:.\ff/ff.c     **** 	FRESULT res;
 927:.\ff/ff.c     **** 	DWORD nxt;
 928:.\ff/ff.c     **** #if _USE_ERASE
 929:.\ff/ff.c     **** 	DWORD scl = clst, ecl = clst, resion[2];
 930:.\ff/ff.c     **** #endif
 931:.\ff/ff.c     **** 
 932:.\ff/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 1274              		.loc 1 932 0
 1275 000a 3B68     		ldr	r3, [r7]
 1276 000c 012B     		cmp	r3, #1
 1277 000e 04D9     		bls	.L67
 1278              		.loc 1 932 0 is_stmt 0 discriminator 1
 1279 0010 7B68     		ldr	r3, [r7, #4]
 1280 0012 9A69     		ldr	r2, [r3, #24]
 1281 0014 3B68     		ldr	r3, [r7]
 1282 0016 9A42     		cmp	r2, r3
 1283 0018 04D8     		bhi	.L68
 1284              	.L67:
 933:.\ff/ff.c     **** 		res = FR_INT_ERR;
 1285              		.loc 1 933 0 is_stmt 1
 1286 001a 0F23     		mov	r3, #15
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 40


 1287 001c FB18     		add	r3, r7, r3
 1288 001e 0222     		mov	r2, #2
 1289 0020 1A70     		strb	r2, [r3]
 1290 0022 44E0     		b	.L69
 1291              	.L68:
 934:.\ff/ff.c     **** 
 935:.\ff/ff.c     **** 	} else {
 936:.\ff/ff.c     **** 		res = FR_OK;
 1292              		.loc 1 936 0
 1293 0024 0F23     		mov	r3, #15
 1294 0026 FB18     		add	r3, r7, r3
 1295 0028 0022     		mov	r2, #0
 1296 002a 1A70     		strb	r2, [r3]
 937:.\ff/ff.c     **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
 1297              		.loc 1 937 0
 1298 002c 3AE0     		b	.L70
 1299              	.L76:
 938:.\ff/ff.c     **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 1300              		.loc 1 938 0
 1301 002e 7A68     		ldr	r2, [r7, #4]
 1302 0030 3B68     		ldr	r3, [r7]
 1303 0032 101C     		mov	r0, r2
 1304 0034 191C     		mov	r1, r3
 1305 0036 FFF7FEFF 		bl	get_fat
 1306 003a 031C     		mov	r3, r0
 1307 003c BB60     		str	r3, [r7, #8]
 939:.\ff/ff.c     **** 			if (nxt == 0) break;				/* Empty cluster? */
 1308              		.loc 1 939 0
 1309 003e BB68     		ldr	r3, [r7, #8]
 1310 0040 002B     		cmp	r3, #0
 1311 0042 00D1     		bne	.L71
 1312 0044 33E0     		b	.L69
 1313              	.L71:
 940:.\ff/ff.c     **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 1314              		.loc 1 940 0
 1315 0046 BB68     		ldr	r3, [r7, #8]
 1316 0048 012B     		cmp	r3, #1
 1317 004a 04D1     		bne	.L72
 1318              		.loc 1 940 0 is_stmt 0 discriminator 1
 1319 004c 0F23     		mov	r3, #15
 1320 004e FB18     		add	r3, r7, r3
 1321 0050 0222     		mov	r2, #2
 1322 0052 1A70     		strb	r2, [r3]
 1323 0054 2BE0     		b	.L69
 1324              	.L72:
 941:.\ff/ff.c     **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 1325              		.loc 1 941 0 is_stmt 1
 1326 0056 BB68     		ldr	r3, [r7, #8]
 1327 0058 0133     		add	r3, r3, #1
 1328 005a 04D1     		bne	.L73
 1329              		.loc 1 941 0 is_stmt 0 discriminator 1
 1330 005c 0F23     		mov	r3, #15
 1331 005e FB18     		add	r3, r7, r3
 1332 0060 0122     		mov	r2, #1
 1333 0062 1A70     		strb	r2, [r3]
 1334 0064 23E0     		b	.L69
 1335              	.L73:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 41


 942:.\ff/ff.c     **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 1336              		.loc 1 942 0 is_stmt 1
 1337 0066 0F23     		mov	r3, #15
 1338 0068 FC18     		add	r4, r7, r3
 1339 006a 7A68     		ldr	r2, [r7, #4]
 1340 006c 3B68     		ldr	r3, [r7]
 1341 006e 101C     		mov	r0, r2
 1342 0070 191C     		mov	r1, r3
 1343 0072 0022     		mov	r2, #0
 1344 0074 FFF7FEFF 		bl	put_fat
 1345 0078 031C     		mov	r3, r0
 1346 007a 2370     		strb	r3, [r4]
 943:.\ff/ff.c     **** 			if (res != FR_OK) break;
 1347              		.loc 1 943 0
 1348 007c 0F23     		mov	r3, #15
 1349 007e FB18     		add	r3, r7, r3
 1350 0080 1B78     		ldrb	r3, [r3]
 1351 0082 002B     		cmp	r3, #0
 1352 0084 00D0     		beq	.L74
 1353 0086 12E0     		b	.L69
 1354              	.L74:
 944:.\ff/ff.c     **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSInfo */
 1355              		.loc 1 944 0
 1356 0088 7B68     		ldr	r3, [r7, #4]
 1357 008a 1B69     		ldr	r3, [r3, #16]
 1358 008c 0133     		add	r3, r3, #1
 1359 008e 07D0     		beq	.L75
 945:.\ff/ff.c     **** 				fs->free_clust++;
 1360              		.loc 1 945 0
 1361 0090 7B68     		ldr	r3, [r7, #4]
 1362 0092 1B69     		ldr	r3, [r3, #16]
 1363 0094 5A1C     		add	r2, r3, #1
 1364 0096 7B68     		ldr	r3, [r7, #4]
 1365 0098 1A61     		str	r2, [r3, #16]
 946:.\ff/ff.c     **** 				fs->fsi_flag = 1;
 1366              		.loc 1 946 0
 1367 009a 7B68     		ldr	r3, [r7, #4]
 1368 009c 0122     		mov	r2, #1
 1369 009e 5A71     		strb	r2, [r3, #5]
 1370              	.L75:
 947:.\ff/ff.c     **** 			}
 948:.\ff/ff.c     **** #if _USE_ERASE
 949:.\ff/ff.c     **** 			if (ecl + 1 == nxt) {	/* Next cluster is contiguous */
 950:.\ff/ff.c     **** 				ecl = nxt;
 951:.\ff/ff.c     **** 			} else {				/* End of contiguous clusters */ 
 952:.\ff/ff.c     **** 				resion[0] = clust2sect(fs, scl);					/* Start sector */
 953:.\ff/ff.c     **** 				resion[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
 954:.\ff/ff.c     **** 				disk_ioctl(fs->drv, CTRL_ERASE_SECTOR, resion);		/* Erase the block */
 955:.\ff/ff.c     **** 				scl = ecl = nxt;
 956:.\ff/ff.c     **** 			}
 957:.\ff/ff.c     **** #endif
 958:.\ff/ff.c     **** 			clst = nxt;	/* Next cluster */
 1371              		.loc 1 958 0
 1372 00a0 BB68     		ldr	r3, [r7, #8]
 1373 00a2 3B60     		str	r3, [r7]
 1374              	.L70:
 937:.\ff/ff.c     **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 42


 1375              		.loc 1 937 0
 1376 00a4 7B68     		ldr	r3, [r7, #4]
 1377 00a6 9A69     		ldr	r2, [r3, #24]
 1378 00a8 3B68     		ldr	r3, [r7]
 1379 00aa 9A42     		cmp	r2, r3
 1380 00ac BFD8     		bhi	.L76
 1381              	.L69:
 959:.\ff/ff.c     **** 		}
 960:.\ff/ff.c     **** 	}
 961:.\ff/ff.c     **** 
 962:.\ff/ff.c     **** 	return res;
 1382              		.loc 1 962 0
 1383 00ae 0F23     		mov	r3, #15
 1384 00b0 FB18     		add	r3, r7, r3
 1385 00b2 1B78     		ldrb	r3, [r3]
 963:.\ff/ff.c     **** }
 1386              		.loc 1 963 0
 1387 00b4 181C     		mov	r0, r3
 1388 00b6 BD46     		mov	sp, r7
 1389 00b8 05B0     		add	sp, sp, #20
 1390              		@ sp needed
 1391 00ba 90BD     		pop	{r4, r7, pc}
 1392              		.cfi_endproc
 1393              	.LFE11:
 1394              		.size	remove_chain, .-remove_chain
 1395              		.section	.text.create_chain,"ax",%progbits
 1396              		.align	2
 1397              		.code	16
 1398              		.thumb_func
 1399              		.type	create_chain, %function
 1400              	create_chain:
 1401              	.LFB12:
 964:.\ff/ff.c     **** #endif
 965:.\ff/ff.c     **** 
 966:.\ff/ff.c     **** 
 967:.\ff/ff.c     **** 
 968:.\ff/ff.c     **** 
 969:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 970:.\ff/ff.c     **** /* FAT handling - Stretch or Create a cluster chain                      */
 971:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
 972:.\ff/ff.c     **** #if !_FS_READONLY
 973:.\ff/ff.c     **** static
 974:.\ff/ff.c     **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
 975:.\ff/ff.c     **** 	FATFS *fs,			/* File system object */
 976:.\ff/ff.c     **** 	DWORD clst			/* Cluster# to stretch. 0 means create a new chain. */
 977:.\ff/ff.c     **** )
 978:.\ff/ff.c     **** {
 1402              		.loc 1 978 0
 1403              		.cfi_startproc
 1404 0000 B0B5     		push	{r4, r5, r7, lr}
 1405              		.cfi_def_cfa_offset 16
 1406              		.cfi_offset 4, -16
 1407              		.cfi_offset 5, -12
 1408              		.cfi_offset 7, -8
 1409              		.cfi_offset 14, -4
 1410 0002 86B0     		sub	sp, sp, #24
 1411              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 43


 1412 0004 00AF     		add	r7, sp, #0
 1413              		.cfi_def_cfa_register 7
 1414 0006 7860     		str	r0, [r7, #4]
 1415 0008 3960     		str	r1, [r7]
 979:.\ff/ff.c     **** 	DWORD cs, ncl, scl;
 980:.\ff/ff.c     **** 	FRESULT res;
 981:.\ff/ff.c     **** 
 982:.\ff/ff.c     **** 
 983:.\ff/ff.c     **** 	if (clst == 0) {		/* Create a new chain */
 1416              		.loc 1 983 0
 1417 000a 3B68     		ldr	r3, [r7]
 1418 000c 002B     		cmp	r3, #0
 1419 000e 0DD1     		bne	.L79
 984:.\ff/ff.c     **** 		scl = fs->last_clust;			/* Get suggested start point */
 1420              		.loc 1 984 0
 1421 0010 7B68     		ldr	r3, [r7, #4]
 1422 0012 DB68     		ldr	r3, [r3, #12]
 1423 0014 3B61     		str	r3, [r7, #16]
 985:.\ff/ff.c     **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 1424              		.loc 1 985 0
 1425 0016 3B69     		ldr	r3, [r7, #16]
 1426 0018 002B     		cmp	r3, #0
 1427 001a 04D0     		beq	.L80
 1428              		.loc 1 985 0 is_stmt 0 discriminator 2
 1429 001c 7B68     		ldr	r3, [r7, #4]
 1430 001e 9A69     		ldr	r2, [r3, #24]
 1431 0020 3B69     		ldr	r3, [r7, #16]
 1432 0022 9A42     		cmp	r2, r3
 1433 0024 18D8     		bhi	.L82
 1434              	.L80:
 1435              		.loc 1 985 0 discriminator 3
 1436 0026 0123     		mov	r3, #1
 1437 0028 3B61     		str	r3, [r7, #16]
 1438 002a 15E0     		b	.L82
 1439              	.L79:
 986:.\ff/ff.c     **** 	}
 987:.\ff/ff.c     **** 	else {					/* Stretch the current chain */
 988:.\ff/ff.c     **** 		cs = get_fat(fs, clst);			/* Check the cluster status */
 1440              		.loc 1 988 0 is_stmt 1
 1441 002c 7A68     		ldr	r2, [r7, #4]
 1442 002e 3B68     		ldr	r3, [r7]
 1443 0030 101C     		mov	r0, r2
 1444 0032 191C     		mov	r1, r3
 1445 0034 FFF7FEFF 		bl	get_fat
 1446 0038 031C     		mov	r3, r0
 1447 003a BB60     		str	r3, [r7, #8]
 989:.\ff/ff.c     **** 		if (cs < 2) return 1;			/* It is an invalid cluster */
 1448              		.loc 1 989 0
 1449 003c BB68     		ldr	r3, [r7, #8]
 1450 003e 012B     		cmp	r3, #1
 1451 0040 01D8     		bhi	.L83
 1452              		.loc 1 989 0 is_stmt 0 discriminator 1
 1453 0042 0123     		mov	r3, #1
 1454 0044 76E0     		b	.L84
 1455              	.L83:
 990:.\ff/ff.c     **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 1456              		.loc 1 990 0 is_stmt 1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 44


 1457 0046 7B68     		ldr	r3, [r7, #4]
 1458 0048 9A69     		ldr	r2, [r3, #24]
 1459 004a BB68     		ldr	r3, [r7, #8]
 1460 004c 9A42     		cmp	r2, r3
 1461 004e 01D9     		bls	.L85
 1462              		.loc 1 990 0 is_stmt 0 discriminator 1
 1463 0050 BB68     		ldr	r3, [r7, #8]
 1464 0052 6FE0     		b	.L84
 1465              	.L85:
 991:.\ff/ff.c     **** 		scl = clst;
 1466              		.loc 1 991 0 is_stmt 1
 1467 0054 3B68     		ldr	r3, [r7]
 1468 0056 3B61     		str	r3, [r7, #16]
 1469              	.L82:
 992:.\ff/ff.c     **** 	}
 993:.\ff/ff.c     **** 
 994:.\ff/ff.c     **** 	ncl = scl;				/* Start cluster */
 1470              		.loc 1 994 0
 1471 0058 3B69     		ldr	r3, [r7, #16]
 1472 005a 7B61     		str	r3, [r7, #20]
 1473              	.L92:
 995:.\ff/ff.c     **** 	for (;;) {
 996:.\ff/ff.c     **** 		ncl++;							/* Next cluster */
 1474              		.loc 1 996 0
 1475 005c 7B69     		ldr	r3, [r7, #20]
 1476 005e 0133     		add	r3, r3, #1
 1477 0060 7B61     		str	r3, [r7, #20]
 997:.\ff/ff.c     **** 		if (ncl >= fs->n_fatent) {		/* Wrap around */
 1478              		.loc 1 997 0
 1479 0062 7B68     		ldr	r3, [r7, #4]
 1480 0064 9A69     		ldr	r2, [r3, #24]
 1481 0066 7B69     		ldr	r3, [r7, #20]
 1482 0068 9A42     		cmp	r2, r3
 1483 006a 07D8     		bhi	.L86
 998:.\ff/ff.c     **** 			ncl = 2;
 1484              		.loc 1 998 0
 1485 006c 0223     		mov	r3, #2
 1486 006e 7B61     		str	r3, [r7, #20]
 999:.\ff/ff.c     **** 			if (ncl > scl) return 0;	/* No free cluster */
 1487              		.loc 1 999 0
 1488 0070 7A69     		ldr	r2, [r7, #20]
 1489 0072 3B69     		ldr	r3, [r7, #16]
 1490 0074 9A42     		cmp	r2, r3
 1491 0076 01D9     		bls	.L86
 1492              		.loc 1 999 0 is_stmt 0 discriminator 1
 1493 0078 0023     		mov	r3, #0
 1494 007a 5BE0     		b	.L84
 1495              	.L86:
1000:.\ff/ff.c     **** 		}
1001:.\ff/ff.c     **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
 1496              		.loc 1 1001 0 is_stmt 1
 1497 007c 7A68     		ldr	r2, [r7, #4]
 1498 007e 7B69     		ldr	r3, [r7, #20]
 1499 0080 101C     		mov	r0, r2
 1500 0082 191C     		mov	r1, r3
 1501 0084 FFF7FEFF 		bl	get_fat
 1502 0088 031C     		mov	r3, r0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 45


 1503 008a BB60     		str	r3, [r7, #8]
1002:.\ff/ff.c     **** 		if (cs == 0) break;				/* Found a free cluster */
 1504              		.loc 1 1002 0
 1505 008c BB68     		ldr	r3, [r7, #8]
 1506 008e 002B     		cmp	r3, #0
 1507 0090 12D1     		bne	.L87
 1508 0092 C046     		mov	r8, r8
1003:.\ff/ff.c     **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
1004:.\ff/ff.c     **** 			return cs;
1005:.\ff/ff.c     **** 		if (ncl == scl) return 0;		/* No free cluster */
1006:.\ff/ff.c     **** 	}
1007:.\ff/ff.c     **** 
1008:.\ff/ff.c     **** 	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
 1509              		.loc 1 1008 0
 1510 0094 0F23     		mov	r3, #15
 1511 0096 FC18     		add	r4, r7, r3
 1512 0098 7A68     		ldr	r2, [r7, #4]
 1513 009a 7B69     		ldr	r3, [r7, #20]
 1514 009c 274D     		ldr	r5, .L100
 1515 009e 101C     		mov	r0, r2
 1516 00a0 191C     		mov	r1, r3
 1517 00a2 2A1C     		mov	r2, r5
 1518 00a4 FFF7FEFF 		bl	put_fat
 1519 00a8 031C     		mov	r3, r0
 1520 00aa 2370     		strb	r3, [r4]
1009:.\ff/ff.c     **** 	if (res == FR_OK && clst != 0) {
 1521              		.loc 1 1009 0
 1522 00ac 0F23     		mov	r3, #15
 1523 00ae FB18     		add	r3, r7, r3
 1524 00b0 1B78     		ldrb	r3, [r3]
 1525 00b2 002B     		cmp	r3, #0
 1526 00b4 1ED1     		bne	.L93
 1527 00b6 0EE0     		b	.L99
 1528              	.L87:
1003:.\ff/ff.c     **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 1529              		.loc 1 1003 0
 1530 00b8 BB68     		ldr	r3, [r7, #8]
 1531 00ba 0133     		add	r3, r3, #1
 1532 00bc 02D0     		beq	.L89
1003:.\ff/ff.c     **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 1533              		.loc 1 1003 0 is_stmt 0 discriminator 1
 1534 00be BB68     		ldr	r3, [r7, #8]
 1535 00c0 012B     		cmp	r3, #1
 1536 00c2 01D1     		bne	.L90
 1537              	.L89:
1004:.\ff/ff.c     **** 		if (ncl == scl) return 0;		/* No free cluster */
 1538              		.loc 1 1004 0 is_stmt 1
 1539 00c4 BB68     		ldr	r3, [r7, #8]
 1540 00c6 35E0     		b	.L84
 1541              	.L90:
1005:.\ff/ff.c     **** 	}
 1542              		.loc 1 1005 0
 1543 00c8 7A69     		ldr	r2, [r7, #20]
 1544 00ca 3B69     		ldr	r3, [r7, #16]
 1545 00cc 9A42     		cmp	r2, r3
 1546 00ce 01D1     		bne	.L91
1005:.\ff/ff.c     **** 	}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 46


 1547              		.loc 1 1005 0 is_stmt 0 discriminator 1
 1548 00d0 0023     		mov	r3, #0
 1549 00d2 2FE0     		b	.L84
 1550              	.L91:
1006:.\ff/ff.c     **** 
 1551              		.loc 1 1006 0 is_stmt 1
 1552 00d4 C2E7     		b	.L92
 1553              	.L99:
 1554              		.loc 1 1009 0 discriminator 1
 1555 00d6 3B68     		ldr	r3, [r7]
 1556 00d8 002B     		cmp	r3, #0
 1557 00da 0BD0     		beq	.L93
1010:.\ff/ff.c     **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 1558              		.loc 1 1010 0
 1559 00dc 0F23     		mov	r3, #15
 1560 00de FC18     		add	r4, r7, r3
 1561 00e0 7968     		ldr	r1, [r7, #4]
 1562 00e2 3A68     		ldr	r2, [r7]
 1563 00e4 7B69     		ldr	r3, [r7, #20]
 1564 00e6 081C     		mov	r0, r1
 1565 00e8 111C     		mov	r1, r2
 1566 00ea 1A1C     		mov	r2, r3
 1567 00ec FFF7FEFF 		bl	put_fat
 1568 00f0 031C     		mov	r3, r0
 1569 00f2 2370     		strb	r3, [r4]
 1570              	.L93:
1011:.\ff/ff.c     **** 	}
1012:.\ff/ff.c     **** 	if (res == FR_OK) {
 1571              		.loc 1 1012 0
 1572 00f4 0F23     		mov	r3, #15
 1573 00f6 FB18     		add	r3, r7, r3
 1574 00f8 1B78     		ldrb	r3, [r3]
 1575 00fa 002B     		cmp	r3, #0
 1576 00fc 0FD1     		bne	.L94
1013:.\ff/ff.c     **** 		fs->last_clust = ncl;			/* Update FSINFO */
 1577              		.loc 1 1013 0
 1578 00fe 7B68     		ldr	r3, [r7, #4]
 1579 0100 7A69     		ldr	r2, [r7, #20]
 1580 0102 DA60     		str	r2, [r3, #12]
1014:.\ff/ff.c     **** 		if (fs->free_clust != 0xFFFFFFFF) {
 1581              		.loc 1 1014 0
 1582 0104 7B68     		ldr	r3, [r7, #4]
 1583 0106 1B69     		ldr	r3, [r3, #16]
 1584 0108 0133     		add	r3, r3, #1
 1585 010a 12D0     		beq	.L96
1015:.\ff/ff.c     **** 			fs->free_clust--;
 1586              		.loc 1 1015 0
 1587 010c 7B68     		ldr	r3, [r7, #4]
 1588 010e 1B69     		ldr	r3, [r3, #16]
 1589 0110 5A1E     		sub	r2, r3, #1
 1590 0112 7B68     		ldr	r3, [r7, #4]
 1591 0114 1A61     		str	r2, [r3, #16]
1016:.\ff/ff.c     **** 			fs->fsi_flag = 1;
 1592              		.loc 1 1016 0
 1593 0116 7B68     		ldr	r3, [r7, #4]
 1594 0118 0122     		mov	r2, #1
 1595 011a 5A71     		strb	r2, [r3, #5]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 47


 1596 011c 09E0     		b	.L96
 1597              	.L94:
1017:.\ff/ff.c     **** 		}
1018:.\ff/ff.c     **** 	} else {
1019:.\ff/ff.c     **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 1598              		.loc 1 1019 0
 1599 011e 0F23     		mov	r3, #15
 1600 0120 FB18     		add	r3, r7, r3
 1601 0122 1B78     		ldrb	r3, [r3]
 1602 0124 012B     		cmp	r3, #1
 1603 0126 02D1     		bne	.L97
 1604              		.loc 1 1019 0 is_stmt 0 discriminator 1
 1605 0128 0123     		mov	r3, #1
 1606 012a 5B42     		neg	r3, r3
 1607 012c 00E0     		b	.L98
 1608              	.L97:
 1609              		.loc 1 1019 0 discriminator 2
 1610 012e 0123     		mov	r3, #1
 1611              	.L98:
 1612              		.loc 1 1019 0 discriminator 4
 1613 0130 7B61     		str	r3, [r7, #20]
 1614              	.L96:
1020:.\ff/ff.c     **** 	}
1021:.\ff/ff.c     **** 
1022:.\ff/ff.c     **** 	return ncl;		/* Return new cluster number or error code */
 1615              		.loc 1 1022 0 is_stmt 1
 1616 0132 7B69     		ldr	r3, [r7, #20]
 1617              	.L84:
1023:.\ff/ff.c     **** }
 1618              		.loc 1 1023 0
 1619 0134 181C     		mov	r0, r3
 1620 0136 BD46     		mov	sp, r7
 1621 0138 06B0     		add	sp, sp, #24
 1622              		@ sp needed
 1623 013a B0BD     		pop	{r4, r5, r7, pc}
 1624              	.L101:
 1625              		.align	2
 1626              	.L100:
 1627 013c FFFFFF0F 		.word	268435455
 1628              		.cfi_endproc
 1629              	.LFE12:
 1630              		.size	create_chain, .-create_chain
 1631              		.section	.text.dir_sdi,"ax",%progbits
 1632              		.align	2
 1633              		.code	16
 1634              		.thumb_func
 1635              		.type	dir_sdi, %function
 1636              	dir_sdi:
 1637              	.LFB13:
1024:.\ff/ff.c     **** #endif /* !_FS_READONLY */
1025:.\ff/ff.c     **** 
1026:.\ff/ff.c     **** 
1027:.\ff/ff.c     **** 
1028:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1029:.\ff/ff.c     **** /* FAT handling - Convert offset into cluster with link map table        */
1030:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1031:.\ff/ff.c     **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 48


1032:.\ff/ff.c     **** #if _USE_FASTSEEK
1033:.\ff/ff.c     **** static
1034:.\ff/ff.c     **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1035:.\ff/ff.c     **** 	FIL* fp,		/* Pointer to the file object */
1036:.\ff/ff.c     **** 	DWORD ofs		/* File offset to be converted to cluster# */
1037:.\ff/ff.c     **** )
1038:.\ff/ff.c     **** {
1039:.\ff/ff.c     **** 	DWORD cl, ncl, *tbl;
1040:.\ff/ff.c     **** 
1041:.\ff/ff.c     **** 
1042:.\ff/ff.c     **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
1043:.\ff/ff.c     **** 	cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
1044:.\ff/ff.c     **** 	for (;;) {
1045:.\ff/ff.c     **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
1046:.\ff/ff.c     **** 		if (!ncl) return 0;		/* End of table? (error) */
1047:.\ff/ff.c     **** 		if (cl < ncl) break;	/* In this fragment? */
1048:.\ff/ff.c     **** 		cl -= ncl; tbl++;		/* Next fragment */
1049:.\ff/ff.c     **** 	}
1050:.\ff/ff.c     **** 	return cl + *tbl;	/* Return the cluster number */
1051:.\ff/ff.c     **** }
1052:.\ff/ff.c     **** #endif	/* _USE_FASTSEEK */
1053:.\ff/ff.c     **** 
1054:.\ff/ff.c     **** 
1055:.\ff/ff.c     **** 
1056:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1057:.\ff/ff.c     **** /* Directory handling - Set directory index                              */
1058:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1059:.\ff/ff.c     **** 
1060:.\ff/ff.c     **** static
1061:.\ff/ff.c     **** FRESULT dir_sdi (
1062:.\ff/ff.c     **** 	DIR *dj,		/* Pointer to directory object */
1063:.\ff/ff.c     **** 	WORD idx		/* Directory index number */
1064:.\ff/ff.c     **** )
1065:.\ff/ff.c     **** {
 1638              		.loc 1 1065 0
 1639              		.cfi_startproc
 1640 0000 80B5     		push	{r7, lr}
 1641              		.cfi_def_cfa_offset 8
 1642              		.cfi_offset 7, -8
 1643              		.cfi_offset 14, -4
 1644 0002 84B0     		sub	sp, sp, #16
 1645              		.cfi_def_cfa_offset 24
 1646 0004 00AF     		add	r7, sp, #0
 1647              		.cfi_def_cfa_register 7
 1648 0006 7860     		str	r0, [r7, #4]
 1649 0008 0A1C     		mov	r2, r1
 1650 000a BB1C     		add	r3, r7, #2
 1651 000c 1A80     		strh	r2, [r3]
1066:.\ff/ff.c     **** 	DWORD clst;
1067:.\ff/ff.c     **** 	WORD ic;
1068:.\ff/ff.c     **** 
1069:.\ff/ff.c     **** 
1070:.\ff/ff.c     **** 	dj->index = idx;
 1652              		.loc 1 1070 0
 1653 000e 7B68     		ldr	r3, [r7, #4]
 1654 0010 BA1C     		add	r2, r7, #2
 1655 0012 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 49


 1656 0014 DA80     		strh	r2, [r3, #6]
1071:.\ff/ff.c     **** 	clst = dj->sclust;
 1657              		.loc 1 1071 0
 1658 0016 7B68     		ldr	r3, [r7, #4]
 1659 0018 9B68     		ldr	r3, [r3, #8]
 1660 001a FB60     		str	r3, [r7, #12]
1072:.\ff/ff.c     **** 	if (clst == 1 || clst >= dj->fs->n_fatent)	/* Check start cluster range */
 1661              		.loc 1 1072 0
 1662 001c FB68     		ldr	r3, [r7, #12]
 1663 001e 012B     		cmp	r3, #1
 1664 0020 05D0     		beq	.L103
 1665              		.loc 1 1072 0 is_stmt 0 discriminator 1
 1666 0022 7B68     		ldr	r3, [r7, #4]
 1667 0024 1B68     		ldr	r3, [r3]
 1668 0026 9A69     		ldr	r2, [r3, #24]
 1669 0028 FB68     		ldr	r3, [r7, #12]
 1670 002a 9A42     		cmp	r2, r3
 1671 002c 01D8     		bhi	.L104
 1672              	.L103:
1073:.\ff/ff.c     **** 		return FR_INT_ERR;
 1673              		.loc 1 1073 0 is_stmt 1
 1674 002e 0223     		mov	r3, #2
 1675 0030 74E0     		b	.L105
 1676              	.L104:
1074:.\ff/ff.c     **** 	if (!clst && dj->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 1677              		.loc 1 1074 0
 1678 0032 FB68     		ldr	r3, [r7, #12]
 1679 0034 002B     		cmp	r3, #0
 1680 0036 08D1     		bne	.L106
 1681              		.loc 1 1074 0 is_stmt 0 discriminator 1
 1682 0038 7B68     		ldr	r3, [r7, #4]
 1683 003a 1B68     		ldr	r3, [r3]
 1684 003c 1B78     		ldrb	r3, [r3]
 1685 003e 032B     		cmp	r3, #3
 1686 0040 03D1     		bne	.L106
1075:.\ff/ff.c     **** 		clst = dj->fs->dirbase;
 1687              		.loc 1 1075 0 is_stmt 1
 1688 0042 7B68     		ldr	r3, [r7, #4]
 1689 0044 1B68     		ldr	r3, [r3]
 1690 0046 5B6A     		ldr	r3, [r3, #36]
 1691 0048 FB60     		str	r3, [r7, #12]
 1692              	.L106:
1076:.\ff/ff.c     **** 
1077:.\ff/ff.c     **** 	if (clst == 0) {	/* Static table (root-dir in FAT12/16) */
 1693              		.loc 1 1077 0
 1694 004a FB68     		ldr	r3, [r7, #12]
 1695 004c 002B     		cmp	r3, #0
 1696 004e 16D1     		bne	.L107
1078:.\ff/ff.c     **** 		dj->clust = clst;
 1697              		.loc 1 1078 0
 1698 0050 7B68     		ldr	r3, [r7, #4]
 1699 0052 FA68     		ldr	r2, [r7, #12]
 1700 0054 DA60     		str	r2, [r3, #12]
1079:.\ff/ff.c     **** 		if (idx >= dj->fs->n_rootdir)		/* Index is out of range */
 1701              		.loc 1 1079 0
 1702 0056 7B68     		ldr	r3, [r7, #4]
 1703 0058 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 50


 1704 005a 1B89     		ldrh	r3, [r3, #8]
 1705 005c BA1C     		add	r2, r7, #2
 1706 005e 1288     		ldrh	r2, [r2]
 1707 0060 9A42     		cmp	r2, r3
 1708 0062 01D3     		bcc	.L108
1080:.\ff/ff.c     **** 			return FR_INT_ERR;
 1709              		.loc 1 1080 0
 1710 0064 0223     		mov	r3, #2
 1711 0066 59E0     		b	.L105
 1712              	.L108:
1081:.\ff/ff.c     **** 		dj->sect = dj->fs->dirbase + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
 1713              		.loc 1 1081 0
 1714 0068 7B68     		ldr	r3, [r7, #4]
 1715 006a 1B68     		ldr	r3, [r3]
 1716 006c 5B6A     		ldr	r3, [r3, #36]
 1717 006e BA1C     		add	r2, r7, #2
 1718 0070 1288     		ldrh	r2, [r2]
 1719 0072 1209     		lsr	r2, r2, #4
 1720 0074 92B2     		uxth	r2, r2
 1721 0076 9A18     		add	r2, r3, r2
 1722 0078 7B68     		ldr	r3, [r7, #4]
 1723 007a 1A61     		str	r2, [r3, #16]
 1724 007c 42E0     		b	.L109
 1725              	.L107:
1082:.\ff/ff.c     **** 	}
1083:.\ff/ff.c     **** 	else {				/* Dynamic table (sub-dirs or root-dir in FAT32) */
1084:.\ff/ff.c     **** 		ic = SS(dj->fs) / SZ_DIR * dj->fs->csize;	/* Entries per cluster */
 1726              		.loc 1 1084 0
 1727 007e 7B68     		ldr	r3, [r7, #4]
 1728 0080 1B68     		ldr	r3, [r3]
 1729 0082 9B78     		ldrb	r3, [r3, #2]
 1730 0084 9AB2     		uxth	r2, r3
 1731 0086 0A23     		mov	r3, #10
 1732 0088 FB18     		add	r3, r7, r3
 1733 008a 1201     		lsl	r2, r2, #4
 1734 008c 1A80     		strh	r2, [r3]
1085:.\ff/ff.c     **** 		while (idx >= ic) {	/* Follow cluster chain */
 1735              		.loc 1 1085 0
 1736 008e 20E0     		b	.L110
 1737              	.L114:
1086:.\ff/ff.c     **** 			clst = get_fat(dj->fs, clst);				/* Get next cluster */
 1738              		.loc 1 1086 0
 1739 0090 7B68     		ldr	r3, [r7, #4]
 1740 0092 1A68     		ldr	r2, [r3]
 1741 0094 FB68     		ldr	r3, [r7, #12]
 1742 0096 101C     		mov	r0, r2
 1743 0098 191C     		mov	r1, r3
 1744 009a FFF7FEFF 		bl	get_fat
 1745 009e 031C     		mov	r3, r0
 1746 00a0 FB60     		str	r3, [r7, #12]
1087:.\ff/ff.c     **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 1747              		.loc 1 1087 0
 1748 00a2 FB68     		ldr	r3, [r7, #12]
 1749 00a4 0133     		add	r3, r3, #1
 1750 00a6 01D1     		bne	.L111
 1751              		.loc 1 1087 0 is_stmt 0 discriminator 1
 1752 00a8 0123     		mov	r3, #1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 51


 1753 00aa 37E0     		b	.L105
 1754              	.L111:
1088:.\ff/ff.c     **** 			if (clst < 2 || clst >= dj->fs->n_fatent)	/* Reached to end of table or int error */
 1755              		.loc 1 1088 0 is_stmt 1
 1756 00ac FB68     		ldr	r3, [r7, #12]
 1757 00ae 012B     		cmp	r3, #1
 1758 00b0 05D9     		bls	.L112
 1759              		.loc 1 1088 0 is_stmt 0 discriminator 1
 1760 00b2 7B68     		ldr	r3, [r7, #4]
 1761 00b4 1B68     		ldr	r3, [r3]
 1762 00b6 9A69     		ldr	r2, [r3, #24]
 1763 00b8 FB68     		ldr	r3, [r7, #12]
 1764 00ba 9A42     		cmp	r2, r3
 1765 00bc 01D8     		bhi	.L113
 1766              	.L112:
1089:.\ff/ff.c     **** 				return FR_INT_ERR;
 1767              		.loc 1 1089 0 is_stmt 1
 1768 00be 0223     		mov	r3, #2
 1769 00c0 2CE0     		b	.L105
 1770              	.L113:
1090:.\ff/ff.c     **** 			idx -= ic;
 1771              		.loc 1 1090 0
 1772 00c2 BB1C     		add	r3, r7, #2
 1773 00c4 B91C     		add	r1, r7, #2
 1774 00c6 0A22     		mov	r2, #10
 1775 00c8 BA18     		add	r2, r7, r2
 1776 00ca 0988     		ldrh	r1, [r1]
 1777 00cc 1288     		ldrh	r2, [r2]
 1778 00ce 8A1A     		sub	r2, r1, r2
 1779 00d0 1A80     		strh	r2, [r3]
 1780              	.L110:
1085:.\ff/ff.c     **** 			clst = get_fat(dj->fs, clst);				/* Get next cluster */
 1781              		.loc 1 1085 0
 1782 00d2 BA1C     		add	r2, r7, #2
 1783 00d4 0A23     		mov	r3, #10
 1784 00d6 FB18     		add	r3, r7, r3
 1785 00d8 1288     		ldrh	r2, [r2]
 1786 00da 1B88     		ldrh	r3, [r3]
 1787 00dc 9A42     		cmp	r2, r3
 1788 00de D7D2     		bcs	.L114
1091:.\ff/ff.c     **** 		}
1092:.\ff/ff.c     **** 		dj->clust = clst;
 1789              		.loc 1 1092 0
 1790 00e0 7B68     		ldr	r3, [r7, #4]
 1791 00e2 FA68     		ldr	r2, [r7, #12]
 1792 00e4 DA60     		str	r2, [r3, #12]
1093:.\ff/ff.c     **** 		dj->sect = clust2sect(dj->fs, clst) + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
 1793              		.loc 1 1093 0
 1794 00e6 7B68     		ldr	r3, [r7, #4]
 1795 00e8 1A68     		ldr	r2, [r3]
 1796 00ea FB68     		ldr	r3, [r7, #12]
 1797 00ec 101C     		mov	r0, r2
 1798 00ee 191C     		mov	r1, r3
 1799 00f0 FFF7FEFF 		bl	clust2sect
 1800 00f4 021C     		mov	r2, r0
 1801 00f6 BB1C     		add	r3, r7, #2
 1802 00f8 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 52


 1803 00fa 1B09     		lsr	r3, r3, #4
 1804 00fc 9BB2     		uxth	r3, r3
 1805 00fe D218     		add	r2, r2, r3
 1806 0100 7B68     		ldr	r3, [r7, #4]
 1807 0102 1A61     		str	r2, [r3, #16]
 1808              	.L109:
1094:.\ff/ff.c     **** 	}
1095:.\ff/ff.c     **** 
1096:.\ff/ff.c     **** 	dj->dir = dj->fs->win + (idx % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector 
 1809              		.loc 1 1096 0
 1810 0104 7B68     		ldr	r3, [r7, #4]
 1811 0106 1A68     		ldr	r2, [r3]
 1812 0108 BB1C     		add	r3, r7, #2
 1813 010a 1B88     		ldrh	r3, [r3]
 1814 010c 0F21     		mov	r1, #15
 1815 010e 0B40     		and	r3, r1
 1816 0110 5B01     		lsl	r3, r3, #5
 1817 0112 3033     		add	r3, r3, #48
 1818 0114 D218     		add	r2, r2, r3
 1819 0116 7B68     		ldr	r3, [r7, #4]
 1820 0118 5A61     		str	r2, [r3, #20]
1097:.\ff/ff.c     **** 
1098:.\ff/ff.c     **** 	return FR_OK;	/* Seek succeeded */
 1821              		.loc 1 1098 0
 1822 011a 0023     		mov	r3, #0
 1823              	.L105:
1099:.\ff/ff.c     **** }
 1824              		.loc 1 1099 0
 1825 011c 181C     		mov	r0, r3
 1826 011e BD46     		mov	sp, r7
 1827 0120 04B0     		add	sp, sp, #16
 1828              		@ sp needed
 1829 0122 80BD     		pop	{r7, pc}
 1830              		.cfi_endproc
 1831              	.LFE13:
 1832              		.size	dir_sdi, .-dir_sdi
 1833              		.section	.text.dir_next,"ax",%progbits
 1834              		.align	2
 1835              		.code	16
 1836              		.thumb_func
 1837              		.type	dir_next, %function
 1838              	dir_next:
 1839              	.LFB14:
1100:.\ff/ff.c     **** 
1101:.\ff/ff.c     **** 
1102:.\ff/ff.c     **** 
1103:.\ff/ff.c     **** 
1104:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1105:.\ff/ff.c     **** /* Directory handling - Move directory index next                        */
1106:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1107:.\ff/ff.c     **** 
1108:.\ff/ff.c     **** static
1109:.\ff/ff.c     **** FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:EOT and could not stretch
1110:.\ff/ff.c     **** 	DIR *dj,		/* Pointer to directory object */
1111:.\ff/ff.c     **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1112:.\ff/ff.c     **** )
1113:.\ff/ff.c     **** {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 53


 1840              		.loc 1 1113 0
 1841              		.cfi_startproc
 1842 0000 90B5     		push	{r4, r7, lr}
 1843              		.cfi_def_cfa_offset 12
 1844              		.cfi_offset 4, -12
 1845              		.cfi_offset 7, -8
 1846              		.cfi_offset 14, -4
 1847 0002 85B0     		sub	sp, sp, #20
 1848              		.cfi_def_cfa_offset 32
 1849 0004 00AF     		add	r7, sp, #0
 1850              		.cfi_def_cfa_register 7
 1851 0006 7860     		str	r0, [r7, #4]
 1852 0008 3960     		str	r1, [r7]
1114:.\ff/ff.c     **** 	DWORD clst;
1115:.\ff/ff.c     **** 	WORD i;
1116:.\ff/ff.c     **** 
1117:.\ff/ff.c     **** 
1118:.\ff/ff.c     **** 	i = dj->index + 1;
 1853              		.loc 1 1118 0
 1854 000a 7B68     		ldr	r3, [r7, #4]
 1855 000c DA88     		ldrh	r2, [r3, #6]
 1856 000e 0823     		mov	r3, #8
 1857 0010 FB18     		add	r3, r7, r3
 1858 0012 0132     		add	r2, r2, #1
 1859 0014 1A80     		strh	r2, [r3]
1119:.\ff/ff.c     **** 	if (!i || !dj->sect)	/* Report EOT when index has reached 65535 */
 1860              		.loc 1 1119 0
 1861 0016 0823     		mov	r3, #8
 1862 0018 FB18     		add	r3, r7, r3
 1863 001a 1B88     		ldrh	r3, [r3]
 1864 001c 002B     		cmp	r3, #0
 1865 001e 03D0     		beq	.L116
 1866              		.loc 1 1119 0 is_stmt 0 discriminator 1
 1867 0020 7B68     		ldr	r3, [r7, #4]
 1868 0022 1B69     		ldr	r3, [r3, #16]
 1869 0024 002B     		cmp	r3, #0
 1870 0026 01D1     		bne	.L117
 1871              	.L116:
1120:.\ff/ff.c     **** 		return FR_NO_FILE;
 1872              		.loc 1 1120 0 is_stmt 1
 1873 0028 0423     		mov	r3, #4
 1874 002a D2E0     		b	.L118
 1875              	.L117:
1121:.\ff/ff.c     **** 
1122:.\ff/ff.c     **** 	if (!(i % (SS(dj->fs) / SZ_DIR))) {	/* Sector changed? */
 1876              		.loc 1 1122 0
 1877 002c 0823     		mov	r3, #8
 1878 002e FB18     		add	r3, r7, r3
 1879 0030 1B88     		ldrh	r3, [r3]
 1880 0032 0F22     		mov	r2, #15
 1881 0034 1340     		and	r3, r2
 1882 0036 9BB2     		uxth	r3, r3
 1883 0038 002B     		cmp	r3, #0
 1884 003a 00D0     		beq	.LCB1743
 1885 003c B7E0     		b	.L119	@long jump
 1886              	.LCB1743:
1123:.\ff/ff.c     **** 		dj->sect++;					/* Next sector */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 54


 1887              		.loc 1 1123 0
 1888 003e 7B68     		ldr	r3, [r7, #4]
 1889 0040 1B69     		ldr	r3, [r3, #16]
 1890 0042 5A1C     		add	r2, r3, #1
 1891 0044 7B68     		ldr	r3, [r7, #4]
 1892 0046 1A61     		str	r2, [r3, #16]
1124:.\ff/ff.c     **** 
1125:.\ff/ff.c     **** 		if (dj->clust == 0) {	/* Static table */
 1893              		.loc 1 1125 0
 1894 0048 7B68     		ldr	r3, [r7, #4]
 1895 004a DB68     		ldr	r3, [r3, #12]
 1896 004c 002B     		cmp	r3, #0
 1897 004e 0AD1     		bne	.L120
1126:.\ff/ff.c     **** 			if (i >= dj->fs->n_rootdir)	/* Report EOT when end of table */
 1898              		.loc 1 1126 0
 1899 0050 7B68     		ldr	r3, [r7, #4]
 1900 0052 1B68     		ldr	r3, [r3]
 1901 0054 1B89     		ldrh	r3, [r3, #8]
 1902 0056 0822     		mov	r2, #8
 1903 0058 BA18     		add	r2, r7, r2
 1904 005a 1288     		ldrh	r2, [r2]
 1905 005c 9A42     		cmp	r2, r3
 1906 005e 00D2     		bcs	.LCB1760
 1907 0060 A5E0     		b	.L119	@long jump
 1908              	.LCB1760:
1127:.\ff/ff.c     **** 				return FR_NO_FILE;
 1909              		.loc 1 1127 0
 1910 0062 0423     		mov	r3, #4
 1911 0064 B5E0     		b	.L118
 1912              	.L120:
1128:.\ff/ff.c     **** 		}
1129:.\ff/ff.c     **** 		else {					/* Dynamic table */
1130:.\ff/ff.c     **** 			if (((i / (SS(dj->fs) / SZ_DIR)) & (dj->fs->csize - 1)) == 0) {	/* Cluster changed? */
 1913              		.loc 1 1130 0
 1914 0066 0823     		mov	r3, #8
 1915 0068 FB18     		add	r3, r7, r3
 1916 006a 1B88     		ldrh	r3, [r3]
 1917 006c 1B09     		lsr	r3, r3, #4
 1918 006e 9BB2     		uxth	r3, r3
 1919 0070 1A1C     		mov	r2, r3
 1920 0072 7B68     		ldr	r3, [r7, #4]
 1921 0074 1B68     		ldr	r3, [r3]
 1922 0076 9B78     		ldrb	r3, [r3, #2]
 1923 0078 013B     		sub	r3, r3, #1
 1924 007a 1340     		and	r3, r2
 1925 007c 00D0     		beq	.LCB1778
 1926 007e 96E0     		b	.L119	@long jump
 1927              	.LCB1778:
1131:.\ff/ff.c     **** 				clst = get_fat(dj->fs, dj->clust);				/* Get next cluster */
 1928              		.loc 1 1131 0
 1929 0080 7B68     		ldr	r3, [r7, #4]
 1930 0082 1A68     		ldr	r2, [r3]
 1931 0084 7B68     		ldr	r3, [r7, #4]
 1932 0086 DB68     		ldr	r3, [r3, #12]
 1933 0088 101C     		mov	r0, r2
 1934 008a 191C     		mov	r1, r3
 1935 008c FFF7FEFF 		bl	get_fat
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 55


 1936 0090 031C     		mov	r3, r0
 1937 0092 FB60     		str	r3, [r7, #12]
1132:.\ff/ff.c     **** 				if (clst <= 1) return FR_INT_ERR;
 1938              		.loc 1 1132 0
 1939 0094 FB68     		ldr	r3, [r7, #12]
 1940 0096 012B     		cmp	r3, #1
 1941 0098 01D8     		bhi	.L121
 1942              		.loc 1 1132 0 is_stmt 0 discriminator 1
 1943 009a 0223     		mov	r3, #2
 1944 009c 99E0     		b	.L118
 1945              	.L121:
1133:.\ff/ff.c     **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 1946              		.loc 1 1133 0 is_stmt 1
 1947 009e FB68     		ldr	r3, [r7, #12]
 1948 00a0 0133     		add	r3, r3, #1
 1949 00a2 01D1     		bne	.L122
 1950              		.loc 1 1133 0 is_stmt 0 discriminator 1
 1951 00a4 0123     		mov	r3, #1
 1952 00a6 94E0     		b	.L118
 1953              	.L122:
1134:.\ff/ff.c     **** 				if (clst >= dj->fs->n_fatent) {					/* When it reached end of dynamic table */
 1954              		.loc 1 1134 0 is_stmt 1
 1955 00a8 7B68     		ldr	r3, [r7, #4]
 1956 00aa 1B68     		ldr	r3, [r3]
 1957 00ac 9A69     		ldr	r2, [r3, #24]
 1958 00ae FB68     		ldr	r3, [r7, #12]
 1959 00b0 9A42     		cmp	r2, r3
 1960 00b2 00D9     		bls	.LCB1809
 1961 00b4 6EE0     		b	.L123	@long jump
 1962              	.LCB1809:
 1963              	.LBB3:
1135:.\ff/ff.c     **** #if !_FS_READONLY
1136:.\ff/ff.c     **** 					BYTE c;
1137:.\ff/ff.c     **** 					if (!stretch) return FR_NO_FILE;			/* When do not stretch, report EOT */
 1964              		.loc 1 1137 0
 1965 00b6 3B68     		ldr	r3, [r7]
 1966 00b8 002B     		cmp	r3, #0
 1967 00ba 01D1     		bne	.L124
 1968              		.loc 1 1137 0 is_stmt 0 discriminator 1
 1969 00bc 0423     		mov	r3, #4
 1970 00be 88E0     		b	.L118
 1971              	.L124:
1138:.\ff/ff.c     **** 					clst = create_chain(dj->fs, dj->clust);		/* Stretch cluster chain */
 1972              		.loc 1 1138 0 is_stmt 1
 1973 00c0 7B68     		ldr	r3, [r7, #4]
 1974 00c2 1A68     		ldr	r2, [r3]
 1975 00c4 7B68     		ldr	r3, [r7, #4]
 1976 00c6 DB68     		ldr	r3, [r3, #12]
 1977 00c8 101C     		mov	r0, r2
 1978 00ca 191C     		mov	r1, r3
 1979 00cc FFF7FEFF 		bl	create_chain
 1980 00d0 031C     		mov	r3, r0
 1981 00d2 FB60     		str	r3, [r7, #12]
1139:.\ff/ff.c     **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 1982              		.loc 1 1139 0
 1983 00d4 FB68     		ldr	r3, [r7, #12]
 1984 00d6 002B     		cmp	r3, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 56


 1985 00d8 01D1     		bne	.L125
 1986              		.loc 1 1139 0 is_stmt 0 discriminator 1
 1987 00da 0723     		mov	r3, #7
 1988 00dc 79E0     		b	.L118
 1989              	.L125:
1140:.\ff/ff.c     **** 					if (clst == 1) return FR_INT_ERR;
 1990              		.loc 1 1140 0 is_stmt 1
 1991 00de FB68     		ldr	r3, [r7, #12]
 1992 00e0 012B     		cmp	r3, #1
 1993 00e2 01D1     		bne	.L126
 1994              		.loc 1 1140 0 is_stmt 0 discriminator 1
 1995 00e4 0223     		mov	r3, #2
 1996 00e6 74E0     		b	.L118
 1997              	.L126:
1141:.\ff/ff.c     **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 1998              		.loc 1 1141 0 is_stmt 1
 1999 00e8 FB68     		ldr	r3, [r7, #12]
 2000 00ea 0133     		add	r3, r3, #1
 2001 00ec 01D1     		bne	.L127
 2002              		.loc 1 1141 0 is_stmt 0 discriminator 1
 2003 00ee 0123     		mov	r3, #1
 2004 00f0 6FE0     		b	.L118
 2005              	.L127:
1142:.\ff/ff.c     **** 					/* Clean-up stretched table */
1143:.\ff/ff.c     **** 					if (move_window(dj->fs, 0)) return FR_DISK_ERR;	/* Flush active window */
 2006              		.loc 1 1143 0 is_stmt 1
 2007 00f2 7B68     		ldr	r3, [r7, #4]
 2008 00f4 1B68     		ldr	r3, [r3]
 2009 00f6 181C     		mov	r0, r3
 2010 00f8 0021     		mov	r1, #0
 2011 00fa FFF7FEFF 		bl	move_window
 2012 00fe 031E     		sub	r3, r0, #0
 2013 0100 01D0     		beq	.L128
 2014              		.loc 1 1143 0 is_stmt 0 discriminator 1
 2015 0102 0123     		mov	r3, #1
 2016 0104 65E0     		b	.L118
 2017              	.L128:
1144:.\ff/ff.c     **** 					mem_set(dj->fs->win, 0, SS(dj->fs));			/* Clear window buffer */
 2018              		.loc 1 1144 0 is_stmt 1
 2019 0106 7B68     		ldr	r3, [r7, #4]
 2020 0108 1B68     		ldr	r3, [r3]
 2021 010a 3033     		add	r3, r3, #48
 2022 010c 1A1C     		mov	r2, r3
 2023 010e 8023     		mov	r3, #128
 2024 0110 9B00     		lsl	r3, r3, #2
 2025 0112 101C     		mov	r0, r2
 2026 0114 0021     		mov	r1, #0
 2027 0116 1A1C     		mov	r2, r3
 2028 0118 FFF7FEFF 		bl	mem_set
1145:.\ff/ff.c     **** 					dj->fs->winsect = clust2sect(dj->fs, clst);	/* Cluster start sector */
 2029              		.loc 1 1145 0
 2030 011c 7B68     		ldr	r3, [r7, #4]
 2031 011e 1C68     		ldr	r4, [r3]
 2032 0120 7B68     		ldr	r3, [r7, #4]
 2033 0122 1A68     		ldr	r2, [r3]
 2034 0124 FB68     		ldr	r3, [r7, #12]
 2035 0126 101C     		mov	r0, r2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 57


 2036 0128 191C     		mov	r1, r3
 2037 012a FFF7FEFF 		bl	clust2sect
 2038 012e 031C     		mov	r3, r0
 2039 0130 E362     		str	r3, [r4, #44]
1146:.\ff/ff.c     **** 					for (c = 0; c < dj->fs->csize; c++) {		/* Fill the new cluster with 0 */
 2040              		.loc 1 1146 0
 2041 0132 0B23     		mov	r3, #11
 2042 0134 FB18     		add	r3, r7, r3
 2043 0136 0022     		mov	r2, #0
 2044 0138 1A70     		strb	r2, [r3]
 2045 013a 19E0     		b	.L129
 2046              	.L131:
1147:.\ff/ff.c     **** 						dj->fs->wflag = 1;
 2047              		.loc 1 1147 0
 2048 013c 7B68     		ldr	r3, [r7, #4]
 2049 013e 1B68     		ldr	r3, [r3]
 2050 0140 0122     		mov	r2, #1
 2051 0142 1A71     		strb	r2, [r3, #4]
1148:.\ff/ff.c     **** 						if (move_window(dj->fs, 0)) return FR_DISK_ERR;
 2052              		.loc 1 1148 0
 2053 0144 7B68     		ldr	r3, [r7, #4]
 2054 0146 1B68     		ldr	r3, [r3]
 2055 0148 181C     		mov	r0, r3
 2056 014a 0021     		mov	r1, #0
 2057 014c FFF7FEFF 		bl	move_window
 2058 0150 031E     		sub	r3, r0, #0
 2059 0152 01D0     		beq	.L130
 2060              		.loc 1 1148 0 is_stmt 0 discriminator 1
 2061 0154 0123     		mov	r3, #1
 2062 0156 3CE0     		b	.L118
 2063              	.L130:
1149:.\ff/ff.c     **** 						dj->fs->winsect++;
 2064              		.loc 1 1149 0 is_stmt 1 discriminator 2
 2065 0158 7B68     		ldr	r3, [r7, #4]
 2066 015a 1B68     		ldr	r3, [r3]
 2067 015c DA6A     		ldr	r2, [r3, #44]
 2068 015e 0132     		add	r2, r2, #1
 2069 0160 DA62     		str	r2, [r3, #44]
1146:.\ff/ff.c     **** 						dj->fs->wflag = 1;
 2070              		.loc 1 1146 0 discriminator 2
 2071 0162 0B23     		mov	r3, #11
 2072 0164 FB18     		add	r3, r7, r3
 2073 0166 1A78     		ldrb	r2, [r3]
 2074 0168 0B23     		mov	r3, #11
 2075 016a FB18     		add	r3, r7, r3
 2076 016c 0132     		add	r2, r2, #1
 2077 016e 1A70     		strb	r2, [r3]
 2078              	.L129:
1146:.\ff/ff.c     **** 						dj->fs->wflag = 1;
 2079              		.loc 1 1146 0 is_stmt 0 discriminator 1
 2080 0170 7B68     		ldr	r3, [r7, #4]
 2081 0172 1B68     		ldr	r3, [r3]
 2082 0174 9B78     		ldrb	r3, [r3, #2]
 2083 0176 0B22     		mov	r2, #11
 2084 0178 BA18     		add	r2, r7, r2
 2085 017a 1278     		ldrb	r2, [r2]
 2086 017c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 58


 2087 017e DDD3     		bcc	.L131
1150:.\ff/ff.c     **** 					}
1151:.\ff/ff.c     **** 					dj->fs->winsect -= c;						/* Rewind window address */
 2088              		.loc 1 1151 0 is_stmt 1
 2089 0180 7B68     		ldr	r3, [r7, #4]
 2090 0182 1B68     		ldr	r3, [r3]
 2091 0184 7A68     		ldr	r2, [r7, #4]
 2092 0186 1268     		ldr	r2, [r2]
 2093 0188 D16A     		ldr	r1, [r2, #44]
 2094 018a 0B22     		mov	r2, #11
 2095 018c BA18     		add	r2, r7, r2
 2096 018e 1278     		ldrb	r2, [r2]
 2097 0190 8A1A     		sub	r2, r1, r2
 2098 0192 DA62     		str	r2, [r3, #44]
 2099              	.L123:
 2100              	.LBE3:
1152:.\ff/ff.c     **** #else
1153:.\ff/ff.c     **** 					return FR_NO_FILE;			/* Report EOT */
1154:.\ff/ff.c     **** #endif
1155:.\ff/ff.c     **** 				}
1156:.\ff/ff.c     **** 				dj->clust = clst;				/* Initialize data for new cluster */
 2101              		.loc 1 1156 0
 2102 0194 7B68     		ldr	r3, [r7, #4]
 2103 0196 FA68     		ldr	r2, [r7, #12]
 2104 0198 DA60     		str	r2, [r3, #12]
1157:.\ff/ff.c     **** 				dj->sect = clust2sect(dj->fs, clst);
 2105              		.loc 1 1157 0
 2106 019a 7B68     		ldr	r3, [r7, #4]
 2107 019c 1A68     		ldr	r2, [r3]
 2108 019e FB68     		ldr	r3, [r7, #12]
 2109 01a0 101C     		mov	r0, r2
 2110 01a2 191C     		mov	r1, r3
 2111 01a4 FFF7FEFF 		bl	clust2sect
 2112 01a8 021C     		mov	r2, r0
 2113 01aa 7B68     		ldr	r3, [r7, #4]
 2114 01ac 1A61     		str	r2, [r3, #16]
 2115              	.L119:
1158:.\ff/ff.c     **** 			}
1159:.\ff/ff.c     **** 		}
1160:.\ff/ff.c     **** 	}
1161:.\ff/ff.c     **** 
1162:.\ff/ff.c     **** 	dj->index = i;
 2116              		.loc 1 1162 0
 2117 01ae 7B68     		ldr	r3, [r7, #4]
 2118 01b0 0822     		mov	r2, #8
 2119 01b2 BA18     		add	r2, r7, r2
 2120 01b4 1288     		ldrh	r2, [r2]
 2121 01b6 DA80     		strh	r2, [r3, #6]
1163:.\ff/ff.c     **** 	dj->dir = dj->fs->win + (i % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;
 2122              		.loc 1 1163 0
 2123 01b8 7B68     		ldr	r3, [r7, #4]
 2124 01ba 1A68     		ldr	r2, [r3]
 2125 01bc 0823     		mov	r3, #8
 2126 01be FB18     		add	r3, r7, r3
 2127 01c0 1B88     		ldrh	r3, [r3]
 2128 01c2 0F21     		mov	r1, #15
 2129 01c4 0B40     		and	r3, r1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 59


 2130 01c6 5B01     		lsl	r3, r3, #5
 2131 01c8 3033     		add	r3, r3, #48
 2132 01ca D218     		add	r2, r2, r3
 2133 01cc 7B68     		ldr	r3, [r7, #4]
 2134 01ce 5A61     		str	r2, [r3, #20]
1164:.\ff/ff.c     **** 
1165:.\ff/ff.c     **** 	return FR_OK;
 2135              		.loc 1 1165 0
 2136 01d0 0023     		mov	r3, #0
 2137              	.L118:
1166:.\ff/ff.c     **** }
 2138              		.loc 1 1166 0
 2139 01d2 181C     		mov	r0, r3
 2140 01d4 BD46     		mov	sp, r7
 2141 01d6 05B0     		add	sp, sp, #20
 2142              		@ sp needed
 2143 01d8 90BD     		pop	{r4, r7, pc}
 2144              		.cfi_endproc
 2145              	.LFE14:
 2146              		.size	dir_next, .-dir_next
 2147 01da C046     		.section	.text.dir_find,"ax",%progbits
 2148              		.align	2
 2149              		.code	16
 2150              		.thumb_func
 2151              		.type	dir_find, %function
 2152              	dir_find:
 2153              	.LFB15:
1167:.\ff/ff.c     **** 
1168:.\ff/ff.c     **** 
1169:.\ff/ff.c     **** 
1170:.\ff/ff.c     **** 
1171:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1172:.\ff/ff.c     **** /* LFN handling - Test/Pick/Fit an LFN segment from/to directory entry   */
1173:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1174:.\ff/ff.c     **** #if _USE_LFN
1175:.\ff/ff.c     **** static
1176:.\ff/ff.c     **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN chars in the directory 
1177:.\ff/ff.c     **** 
1178:.\ff/ff.c     **** 
1179:.\ff/ff.c     **** static
1180:.\ff/ff.c     **** int cmp_lfn (			/* 1:Matched, 0:Not matched */
1181:.\ff/ff.c     **** 	WCHAR *lfnbuf,		/* Pointer to the LFN to be compared */
1182:.\ff/ff.c     **** 	BYTE *dir			/* Pointer to the directory entry containing a part of LFN */
1183:.\ff/ff.c     **** )
1184:.\ff/ff.c     **** {
1185:.\ff/ff.c     **** 	UINT i, s;
1186:.\ff/ff.c     **** 	WCHAR wc, uc;
1187:.\ff/ff.c     **** 
1188:.\ff/ff.c     **** 
1189:.\ff/ff.c     **** 	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
1190:.\ff/ff.c     **** 	s = 0; wc = 1;
1191:.\ff/ff.c     **** 	do {
1192:.\ff/ff.c     **** 		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
1193:.\ff/ff.c     **** 		if (wc) {	/* Last char has not been processed */
1194:.\ff/ff.c     **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
1195:.\ff/ff.c     **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
1196:.\ff/ff.c     **** 				return 0;				/* Not matched */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 60


1197:.\ff/ff.c     **** 		} else {
1198:.\ff/ff.c     **** 			if (uc != 0xFFFF) return 0;	/* Check filler */
1199:.\ff/ff.c     **** 		}
1200:.\ff/ff.c     **** 	} while (++s < 13);				/* Repeat until all chars in the entry are checked */
1201:.\ff/ff.c     **** 
1202:.\ff/ff.c     **** 	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
1203:.\ff/ff.c     **** 		return 0;
1204:.\ff/ff.c     **** 
1205:.\ff/ff.c     **** 	return 1;						/* The part of LFN matched */
1206:.\ff/ff.c     **** }
1207:.\ff/ff.c     **** 
1208:.\ff/ff.c     **** 
1209:.\ff/ff.c     **** 
1210:.\ff/ff.c     **** static
1211:.\ff/ff.c     **** int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
1212:.\ff/ff.c     **** 	WCHAR *lfnbuf,		/* Pointer to the Unicode-LFN buffer */
1213:.\ff/ff.c     **** 	BYTE *dir			/* Pointer to the directory entry */
1214:.\ff/ff.c     **** )
1215:.\ff/ff.c     **** {
1216:.\ff/ff.c     **** 	UINT i, s;
1217:.\ff/ff.c     **** 	WCHAR wc, uc;
1218:.\ff/ff.c     **** 
1219:.\ff/ff.c     **** 
1220:.\ff/ff.c     **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1221:.\ff/ff.c     **** 
1222:.\ff/ff.c     **** 	s = 0; wc = 1;
1223:.\ff/ff.c     **** 	do {
1224:.\ff/ff.c     **** 		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
1225:.\ff/ff.c     **** 		if (wc) {	/* Last char has not been processed */
1226:.\ff/ff.c     **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1227:.\ff/ff.c     **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1228:.\ff/ff.c     **** 		} else {
1229:.\ff/ff.c     **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1230:.\ff/ff.c     **** 		}
1231:.\ff/ff.c     **** 	} while (++s < 13);						/* Read all character in the entry */
1232:.\ff/ff.c     **** 
1233:.\ff/ff.c     **** 	if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
1234:.\ff/ff.c     **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1235:.\ff/ff.c     **** 		lfnbuf[i] = 0;
1236:.\ff/ff.c     **** 	}
1237:.\ff/ff.c     **** 
1238:.\ff/ff.c     **** 	return 1;
1239:.\ff/ff.c     **** }
1240:.\ff/ff.c     **** 
1241:.\ff/ff.c     **** 
1242:.\ff/ff.c     **** #if !_FS_READONLY
1243:.\ff/ff.c     **** static
1244:.\ff/ff.c     **** void fit_lfn (
1245:.\ff/ff.c     **** 	const WCHAR *lfnbuf,	/* Pointer to the LFN buffer */
1246:.\ff/ff.c     **** 	BYTE *dir,				/* Pointer to the directory entry */
1247:.\ff/ff.c     **** 	BYTE ord,				/* LFN order (1-20) */
1248:.\ff/ff.c     **** 	BYTE sum				/* SFN sum */
1249:.\ff/ff.c     **** )
1250:.\ff/ff.c     **** {
1251:.\ff/ff.c     **** 	UINT i, s;
1252:.\ff/ff.c     **** 	WCHAR wc;
1253:.\ff/ff.c     **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 61


1254:.\ff/ff.c     **** 
1255:.\ff/ff.c     **** 	dir[LDIR_Chksum] = sum;			/* Set check sum */
1256:.\ff/ff.c     **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1257:.\ff/ff.c     **** 	dir[LDIR_Type] = 0;
1258:.\ff/ff.c     **** 	ST_WORD(dir+LDIR_FstClusLO, 0);
1259:.\ff/ff.c     **** 
1260:.\ff/ff.c     **** 	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
1261:.\ff/ff.c     **** 	s = wc = 0;
1262:.\ff/ff.c     **** 	do {
1263:.\ff/ff.c     **** 		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective char */
1264:.\ff/ff.c     **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
1265:.\ff/ff.c     **** 		if (!wc) wc = 0xFFFF;		/* Padding chars following last char */
1266:.\ff/ff.c     **** 	} while (++s < 13);
1267:.\ff/ff.c     **** 	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
1268:.\ff/ff.c     **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1269:.\ff/ff.c     **** }
1270:.\ff/ff.c     **** 
1271:.\ff/ff.c     **** #endif
1272:.\ff/ff.c     **** #endif
1273:.\ff/ff.c     **** 
1274:.\ff/ff.c     **** 
1275:.\ff/ff.c     **** 
1276:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1277:.\ff/ff.c     **** /* Create numbered name                                                  */
1278:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1279:.\ff/ff.c     **** #if _USE_LFN
1280:.\ff/ff.c     **** void gen_numname (
1281:.\ff/ff.c     **** 	BYTE *dst,			/* Pointer to generated SFN */
1282:.\ff/ff.c     **** 	const BYTE *src,	/* Pointer to source SFN to be modified */
1283:.\ff/ff.c     **** 	const WCHAR *lfn,	/* Pointer to LFN */
1284:.\ff/ff.c     **** 	WORD seq			/* Sequence number */
1285:.\ff/ff.c     **** )
1286:.\ff/ff.c     **** {
1287:.\ff/ff.c     **** 	BYTE ns[8], c;
1288:.\ff/ff.c     **** 	UINT i, j;
1289:.\ff/ff.c     **** 
1290:.\ff/ff.c     **** 
1291:.\ff/ff.c     **** 	mem_cpy(dst, src, 11);
1292:.\ff/ff.c     **** 
1293:.\ff/ff.c     **** 	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
1294:.\ff/ff.c     **** 		do seq = (seq >> 1) + (seq << 15) + (WORD)*lfn++; while (*lfn);
1295:.\ff/ff.c     **** 	}
1296:.\ff/ff.c     **** 
1297:.\ff/ff.c     **** 	/* itoa (hexdecimal) */
1298:.\ff/ff.c     **** 	i = 7;
1299:.\ff/ff.c     **** 	do {
1300:.\ff/ff.c     **** 		c = (seq % 16) + '0';
1301:.\ff/ff.c     **** 		if (c > '9') c += 7;
1302:.\ff/ff.c     **** 		ns[i--] = c;
1303:.\ff/ff.c     **** 		seq /= 16;
1304:.\ff/ff.c     **** 	} while (seq);
1305:.\ff/ff.c     **** 	ns[i] = '~';
1306:.\ff/ff.c     **** 
1307:.\ff/ff.c     **** 	/* Append the number */
1308:.\ff/ff.c     **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1309:.\ff/ff.c     **** 		if (IsDBCS1(dst[j])) {
1310:.\ff/ff.c     **** 			if (j == i - 1) break;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 62


1311:.\ff/ff.c     **** 			j++;
1312:.\ff/ff.c     **** 		}
1313:.\ff/ff.c     **** 	}
1314:.\ff/ff.c     **** 	do {
1315:.\ff/ff.c     **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1316:.\ff/ff.c     **** 	} while (j < 8);
1317:.\ff/ff.c     **** }
1318:.\ff/ff.c     **** #endif
1319:.\ff/ff.c     **** 
1320:.\ff/ff.c     **** 
1321:.\ff/ff.c     **** 
1322:.\ff/ff.c     **** 
1323:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1324:.\ff/ff.c     **** /* Calculate sum of an SFN                                               */
1325:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1326:.\ff/ff.c     **** #if _USE_LFN
1327:.\ff/ff.c     **** static
1328:.\ff/ff.c     **** BYTE sum_sfn (
1329:.\ff/ff.c     **** 	const BYTE *dir		/* Ptr to directory entry */
1330:.\ff/ff.c     **** )
1331:.\ff/ff.c     **** {
1332:.\ff/ff.c     **** 	BYTE sum = 0;
1333:.\ff/ff.c     **** 	UINT n = 11;
1334:.\ff/ff.c     **** 
1335:.\ff/ff.c     **** 	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
1336:.\ff/ff.c     **** 	return sum;
1337:.\ff/ff.c     **** }
1338:.\ff/ff.c     **** #endif
1339:.\ff/ff.c     **** 
1340:.\ff/ff.c     **** 
1341:.\ff/ff.c     **** 
1342:.\ff/ff.c     **** 
1343:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1344:.\ff/ff.c     **** /* Directory handling - Find an object in the directory                  */
1345:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1346:.\ff/ff.c     **** 
1347:.\ff/ff.c     **** static
1348:.\ff/ff.c     **** FRESULT dir_find (
1349:.\ff/ff.c     **** 	DIR *dj			/* Pointer to the directory object linked to the file name */
1350:.\ff/ff.c     **** )
1351:.\ff/ff.c     **** {
 2154              		.loc 1 1351 0
 2155              		.cfi_startproc
 2156 0000 90B5     		push	{r4, r7, lr}
 2157              		.cfi_def_cfa_offset 12
 2158              		.cfi_offset 4, -12
 2159              		.cfi_offset 7, -8
 2160              		.cfi_offset 14, -4
 2161 0002 87B0     		sub	sp, sp, #28
 2162              		.cfi_def_cfa_offset 40
 2163 0004 00AF     		add	r7, sp, #0
 2164              		.cfi_def_cfa_register 7
 2165 0006 7860     		str	r0, [r7, #4]
1352:.\ff/ff.c     **** 	FRESULT res;
1353:.\ff/ff.c     **** 	BYTE c, *dir;
1354:.\ff/ff.c     **** #if _USE_LFN
1355:.\ff/ff.c     **** 	BYTE a, ord, sum;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 63


1356:.\ff/ff.c     **** #endif
1357:.\ff/ff.c     **** 
1358:.\ff/ff.c     **** 	res = dir_sdi(dj, 0);			/* Rewind directory object */
 2166              		.loc 1 1358 0
 2167 0008 1723     		mov	r3, #23
 2168 000a FC18     		add	r4, r7, r3
 2169 000c 7B68     		ldr	r3, [r7, #4]
 2170 000e 181C     		mov	r0, r3
 2171 0010 0021     		mov	r1, #0
 2172 0012 FFF7FEFF 		bl	dir_sdi
 2173 0016 031C     		mov	r3, r0
 2174 0018 2370     		strb	r3, [r4]
1359:.\ff/ff.c     **** 	if (res != FR_OK) return res;
 2175              		.loc 1 1359 0
 2176 001a 1723     		mov	r3, #23
 2177 001c FB18     		add	r3, r7, r3
 2178 001e 1B78     		ldrb	r3, [r3]
 2179 0020 002B     		cmp	r3, #0
 2180 0022 03D0     		beq	.L133
 2181              		.loc 1 1359 0 is_stmt 0 discriminator 1
 2182 0024 1723     		mov	r3, #23
 2183 0026 FB18     		add	r3, r7, r3
 2184 0028 1B78     		ldrb	r3, [r3]
 2185 002a 46E0     		b	.L134
 2186              	.L133:
1360:.\ff/ff.c     **** 
1361:.\ff/ff.c     **** #if _USE_LFN
1362:.\ff/ff.c     **** 	ord = sum = 0xFF;
1363:.\ff/ff.c     **** #endif
1364:.\ff/ff.c     **** 	do {
1365:.\ff/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 2187              		.loc 1 1365 0 is_stmt 1
 2188 002c 7B68     		ldr	r3, [r7, #4]
 2189 002e 1A68     		ldr	r2, [r3]
 2190 0030 7B68     		ldr	r3, [r7, #4]
 2191 0032 1B69     		ldr	r3, [r3, #16]
 2192 0034 1721     		mov	r1, #23
 2193 0036 7C18     		add	r4, r7, r1
 2194 0038 101C     		mov	r0, r2
 2195 003a 191C     		mov	r1, r3
 2196 003c FFF7FEFF 		bl	move_window
 2197 0040 031C     		mov	r3, r0
 2198 0042 2370     		strb	r3, [r4]
1366:.\ff/ff.c     **** 		if (res != FR_OK) break;
 2199              		.loc 1 1366 0
 2200 0044 1723     		mov	r3, #23
 2201 0046 FB18     		add	r3, r7, r3
 2202 0048 1B78     		ldrb	r3, [r3]
 2203 004a 002B     		cmp	r3, #0
 2204 004c 00D0     		beq	.L135
 2205 004e 31E0     		b	.L136
 2206              	.L135:
1367:.\ff/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
 2207              		.loc 1 1367 0
 2208 0050 7B68     		ldr	r3, [r7, #4]
 2209 0052 5B69     		ldr	r3, [r3, #20]
 2210 0054 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 64


1368:.\ff/ff.c     **** 		c = dir[DIR_Name];
 2211              		.loc 1 1368 0
 2212 0056 0F23     		mov	r3, #15
 2213 0058 FB18     		add	r3, r7, r3
 2214 005a 3A69     		ldr	r2, [r7, #16]
 2215 005c 1278     		ldrb	r2, [r2]
 2216 005e 1A70     		strb	r2, [r3]
1369:.\ff/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 2217              		.loc 1 1369 0
 2218 0060 0F23     		mov	r3, #15
 2219 0062 FB18     		add	r3, r7, r3
 2220 0064 1B78     		ldrb	r3, [r3]
 2221 0066 002B     		cmp	r3, #0
 2222 0068 04D1     		bne	.L137
 2223              		.loc 1 1369 0 is_stmt 0 discriminator 1
 2224 006a 1723     		mov	r3, #23
 2225 006c FB18     		add	r3, r7, r3
 2226 006e 0422     		mov	r2, #4
 2227 0070 1A70     		strb	r2, [r3]
 2228 0072 1FE0     		b	.L136
 2229              	.L137:
1370:.\ff/ff.c     **** #if _USE_LFN	/* LFN configuration */
1371:.\ff/ff.c     **** 		a = dir[DIR_Attr] & AM_MASK;
1372:.\ff/ff.c     **** 		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
1373:.\ff/ff.c     **** 			ord = 0xFF;
1374:.\ff/ff.c     **** 		} else {
1375:.\ff/ff.c     **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1376:.\ff/ff.c     **** 				if (dj->lfn) {
1377:.\ff/ff.c     **** 					if (c & LLE) {		/* Is it start of LFN sequence? */
1378:.\ff/ff.c     **** 						sum = dir[LDIR_Chksum];
1379:.\ff/ff.c     **** 						c &= ~LLE; ord = c;	/* LFN start order */
1380:.\ff/ff.c     **** 						dj->lfn_idx = dj->index;
1381:.\ff/ff.c     **** 					}
1382:.\ff/ff.c     **** 					/* Check validity of the LFN entry and compare it with given name */
1383:.\ff/ff.c     **** 					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dj->lfn, dir)) ? ord - 1 : 0xFF;
1384:.\ff/ff.c     **** 				}
1385:.\ff/ff.c     **** 			} else {					/* An SFN entry is found */
1386:.\ff/ff.c     **** 				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
1387:.\ff/ff.c     **** 				ord = 0xFF; dj->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1388:.\ff/ff.c     **** 				if (!(dj->fn[NS] & NS_LOSS) && !mem_cmp(dir, dj->fn, 11)) break;	/* SFN matched? */
1389:.\ff/ff.c     **** 			}
1390:.\ff/ff.c     **** 		}
1391:.\ff/ff.c     **** #else		/* Non LFN configuration */
1392:.\ff/ff.c     **** 		if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dj->fn, 11)) /* Is it a valid entry? */
 2230              		.loc 1 1392 0 is_stmt 1
 2231 0074 3B69     		ldr	r3, [r7, #16]
 2232 0076 0B33     		add	r3, r3, #11
 2233 0078 1B78     		ldrb	r3, [r3]
 2234 007a 1A1C     		mov	r2, r3
 2235 007c 0823     		mov	r3, #8
 2236 007e 1340     		and	r3, r2
 2237 0080 0AD1     		bne	.L138
 2238              		.loc 1 1392 0 is_stmt 0 discriminator 1
 2239 0082 7B68     		ldr	r3, [r7, #4]
 2240 0084 9B69     		ldr	r3, [r3, #24]
 2241 0086 3A69     		ldr	r2, [r7, #16]
 2242 0088 101C     		mov	r0, r2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 65


 2243 008a 191C     		mov	r1, r3
 2244 008c 0B22     		mov	r2, #11
 2245 008e FFF7FEFF 		bl	mem_cmp
 2246 0092 031E     		sub	r3, r0, #0
 2247 0094 00D1     		bne	.L138
1393:.\ff/ff.c     **** 			break;
 2248              		.loc 1 1393 0 is_stmt 1
 2249 0096 0DE0     		b	.L136
 2250              	.L138:
1394:.\ff/ff.c     **** #endif
1395:.\ff/ff.c     **** 		res = dir_next(dj, 0);		/* Next entry */
 2251              		.loc 1 1395 0
 2252 0098 1723     		mov	r3, #23
 2253 009a FC18     		add	r4, r7, r3
 2254 009c 7B68     		ldr	r3, [r7, #4]
 2255 009e 181C     		mov	r0, r3
 2256 00a0 0021     		mov	r1, #0
 2257 00a2 FFF7FEFF 		bl	dir_next
 2258 00a6 031C     		mov	r3, r0
 2259 00a8 2370     		strb	r3, [r4]
1396:.\ff/ff.c     **** 	} while (res == FR_OK);
 2260              		.loc 1 1396 0
 2261 00aa 1723     		mov	r3, #23
 2262 00ac FB18     		add	r3, r7, r3
 2263 00ae 1B78     		ldrb	r3, [r3]
 2264 00b0 002B     		cmp	r3, #0
 2265 00b2 BBD0     		beq	.L133
 2266              	.L136:
1397:.\ff/ff.c     **** 
1398:.\ff/ff.c     **** 	return res;
 2267              		.loc 1 1398 0
 2268 00b4 1723     		mov	r3, #23
 2269 00b6 FB18     		add	r3, r7, r3
 2270 00b8 1B78     		ldrb	r3, [r3]
 2271              	.L134:
1399:.\ff/ff.c     **** }
 2272              		.loc 1 1399 0
 2273 00ba 181C     		mov	r0, r3
 2274 00bc BD46     		mov	sp, r7
 2275 00be 07B0     		add	sp, sp, #28
 2276              		@ sp needed
 2277 00c0 90BD     		pop	{r4, r7, pc}
 2278              		.cfi_endproc
 2279              	.LFE15:
 2280              		.size	dir_find, .-dir_find
 2281 00c2 C046     		.section	.text.dir_read,"ax",%progbits
 2282              		.align	2
 2283              		.code	16
 2284              		.thumb_func
 2285              		.type	dir_read, %function
 2286              	dir_read:
 2287              	.LFB16:
1400:.\ff/ff.c     **** 
1401:.\ff/ff.c     **** 
1402:.\ff/ff.c     **** 
1403:.\ff/ff.c     **** 
1404:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 66


1405:.\ff/ff.c     **** /* Read an object from the directory                                     */
1406:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1407:.\ff/ff.c     **** #if _FS_MINIMIZE <= 1
1408:.\ff/ff.c     **** static
1409:.\ff/ff.c     **** FRESULT dir_read (
1410:.\ff/ff.c     **** 	DIR *dj			/* Pointer to the directory object that pointing the entry to be read */
1411:.\ff/ff.c     **** )
1412:.\ff/ff.c     **** {
 2288              		.loc 1 1412 0
 2289              		.cfi_startproc
 2290 0000 90B5     		push	{r4, r7, lr}
 2291              		.cfi_def_cfa_offset 12
 2292              		.cfi_offset 4, -12
 2293              		.cfi_offset 7, -8
 2294              		.cfi_offset 14, -4
 2295 0002 87B0     		sub	sp, sp, #28
 2296              		.cfi_def_cfa_offset 40
 2297 0004 00AF     		add	r7, sp, #0
 2298              		.cfi_def_cfa_register 7
 2299 0006 7860     		str	r0, [r7, #4]
1413:.\ff/ff.c     **** 	FRESULT res;
1414:.\ff/ff.c     **** 	BYTE c, *dir;
1415:.\ff/ff.c     **** #if _USE_LFN
1416:.\ff/ff.c     **** 	BYTE a, ord = 0xFF, sum = 0xFF;
1417:.\ff/ff.c     **** #endif
1418:.\ff/ff.c     **** 
1419:.\ff/ff.c     **** 	res = FR_NO_FILE;
 2300              		.loc 1 1419 0
 2301 0008 1723     		mov	r3, #23
 2302 000a FB18     		add	r3, r7, r3
 2303 000c 0422     		mov	r2, #4
 2304 000e 1A70     		strb	r2, [r3]
1420:.\ff/ff.c     **** 	while (dj->sect) {
 2305              		.loc 1 1420 0
 2306 0010 44E0     		b	.L140
 2307              	.L145:
1421:.\ff/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 2308              		.loc 1 1421 0
 2309 0012 7B68     		ldr	r3, [r7, #4]
 2310 0014 1A68     		ldr	r2, [r3]
 2311 0016 7B68     		ldr	r3, [r7, #4]
 2312 0018 1B69     		ldr	r3, [r3, #16]
 2313 001a 1721     		mov	r1, #23
 2314 001c 7C18     		add	r4, r7, r1
 2315 001e 101C     		mov	r0, r2
 2316 0020 191C     		mov	r1, r3
 2317 0022 FFF7FEFF 		bl	move_window
 2318 0026 031C     		mov	r3, r0
 2319 0028 2370     		strb	r3, [r4]
1422:.\ff/ff.c     **** 		if (res != FR_OK) break;
 2320              		.loc 1 1422 0
 2321 002a 1723     		mov	r3, #23
 2322 002c FB18     		add	r3, r7, r3
 2323 002e 1B78     		ldrb	r3, [r3]
 2324 0030 002B     		cmp	r3, #0
 2325 0032 00D0     		beq	.L141
 2326 0034 36E0     		b	.L142
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 67


 2327              	.L141:
1423:.\ff/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
 2328              		.loc 1 1423 0
 2329 0036 7B68     		ldr	r3, [r7, #4]
 2330 0038 5B69     		ldr	r3, [r3, #20]
 2331 003a 3B61     		str	r3, [r7, #16]
1424:.\ff/ff.c     **** 		c = dir[DIR_Name];
 2332              		.loc 1 1424 0
 2333 003c 0F23     		mov	r3, #15
 2334 003e FB18     		add	r3, r7, r3
 2335 0040 3A69     		ldr	r2, [r7, #16]
 2336 0042 1278     		ldrb	r2, [r2]
 2337 0044 1A70     		strb	r2, [r3]
1425:.\ff/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 2338              		.loc 1 1425 0
 2339 0046 0F23     		mov	r3, #15
 2340 0048 FB18     		add	r3, r7, r3
 2341 004a 1B78     		ldrb	r3, [r3]
 2342 004c 002B     		cmp	r3, #0
 2343 004e 04D1     		bne	.L143
 2344              		.loc 1 1425 0 is_stmt 0 discriminator 1
 2345 0050 1723     		mov	r3, #23
 2346 0052 FB18     		add	r3, r7, r3
 2347 0054 0422     		mov	r2, #4
 2348 0056 1A70     		strb	r2, [r3]
 2349 0058 24E0     		b	.L142
 2350              	.L143:
1426:.\ff/ff.c     **** #if _USE_LFN	/* LFN configuration */
1427:.\ff/ff.c     **** 		a = dir[DIR_Attr] & AM_MASK;
1428:.\ff/ff.c     **** 		if (c == DDE || (!_FS_RPATH && c == '.') || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without 
1429:.\ff/ff.c     **** 			ord = 0xFF;
1430:.\ff/ff.c     **** 		} else {
1431:.\ff/ff.c     **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1432:.\ff/ff.c     **** 				if (c & LLE) {			/* Is it start of LFN sequence? */
1433:.\ff/ff.c     **** 					sum = dir[LDIR_Chksum];
1434:.\ff/ff.c     **** 					c &= ~LLE; ord = c;
1435:.\ff/ff.c     **** 					dj->lfn_idx = dj->index;
1436:.\ff/ff.c     **** 				}
1437:.\ff/ff.c     **** 				/* Check LFN validity and capture it */
1438:.\ff/ff.c     **** 				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dj->lfn, dir)) ? ord - 1 : 0xFF;
1439:.\ff/ff.c     **** 			} else {					/* An SFN entry is found */
1440:.\ff/ff.c     **** 				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
1441:.\ff/ff.c     **** 					dj->lfn_idx = 0xFFFF;		/* It has no LFN. */
1442:.\ff/ff.c     **** 				break;
1443:.\ff/ff.c     **** 			}
1444:.\ff/ff.c     **** 		}
1445:.\ff/ff.c     **** #else		/* Non LFN configuration */
1446:.\ff/ff.c     **** 		if (c != DDE && (_FS_RPATH || c != '.') && !(dir[DIR_Attr] & AM_VOL))	/* Is it a valid entry? */
 2351              		.loc 1 1446 0 is_stmt 1
 2352 005a 0F23     		mov	r3, #15
 2353 005c FB18     		add	r3, r7, r3
 2354 005e 1B78     		ldrb	r3, [r3]
 2355 0060 E52B     		cmp	r3, #229
 2356 0062 0CD0     		beq	.L144
 2357              		.loc 1 1446 0 is_stmt 0 discriminator 1
 2358 0064 0F23     		mov	r3, #15
 2359 0066 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 68


 2360 0068 1B78     		ldrb	r3, [r3]
 2361 006a 2E2B     		cmp	r3, #46
 2362 006c 07D0     		beq	.L144
 2363              		.loc 1 1446 0 discriminator 2
 2364 006e 3B69     		ldr	r3, [r7, #16]
 2365 0070 0B33     		add	r3, r3, #11
 2366 0072 1B78     		ldrb	r3, [r3]
 2367 0074 1A1C     		mov	r2, r3
 2368 0076 0823     		mov	r3, #8
 2369 0078 1340     		and	r3, r2
 2370 007a 00D1     		bne	.L144
1447:.\ff/ff.c     **** 			break;
 2371              		.loc 1 1447 0 is_stmt 1
 2372 007c 12E0     		b	.L142
 2373              	.L144:
1448:.\ff/ff.c     **** #endif
1449:.\ff/ff.c     **** 		res = dir_next(dj, 0);				/* Next entry */
 2374              		.loc 1 1449 0
 2375 007e 1723     		mov	r3, #23
 2376 0080 FC18     		add	r4, r7, r3
 2377 0082 7B68     		ldr	r3, [r7, #4]
 2378 0084 181C     		mov	r0, r3
 2379 0086 0021     		mov	r1, #0
 2380 0088 FFF7FEFF 		bl	dir_next
 2381 008c 031C     		mov	r3, r0
 2382 008e 2370     		strb	r3, [r4]
1450:.\ff/ff.c     **** 		if (res != FR_OK) break;
 2383              		.loc 1 1450 0
 2384 0090 1723     		mov	r3, #23
 2385 0092 FB18     		add	r3, r7, r3
 2386 0094 1B78     		ldrb	r3, [r3]
 2387 0096 002B     		cmp	r3, #0
 2388 0098 00D0     		beq	.L140
 2389 009a 03E0     		b	.L142
 2390              	.L140:
1420:.\ff/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 2391              		.loc 1 1420 0
 2392 009c 7B68     		ldr	r3, [r7, #4]
 2393 009e 1B69     		ldr	r3, [r3, #16]
 2394 00a0 002B     		cmp	r3, #0
 2395 00a2 B6D1     		bne	.L145
 2396              	.L142:
1451:.\ff/ff.c     **** 	}
1452:.\ff/ff.c     **** 
1453:.\ff/ff.c     **** 	if (res != FR_OK) dj->sect = 0;
 2397              		.loc 1 1453 0
 2398 00a4 1723     		mov	r3, #23
 2399 00a6 FB18     		add	r3, r7, r3
 2400 00a8 1B78     		ldrb	r3, [r3]
 2401 00aa 002B     		cmp	r3, #0
 2402 00ac 02D0     		beq	.L146
 2403              		.loc 1 1453 0 is_stmt 0 discriminator 1
 2404 00ae 7B68     		ldr	r3, [r7, #4]
 2405 00b0 0022     		mov	r2, #0
 2406 00b2 1A61     		str	r2, [r3, #16]
 2407              	.L146:
1454:.\ff/ff.c     **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 69


1455:.\ff/ff.c     **** 	return res;
 2408              		.loc 1 1455 0 is_stmt 1
 2409 00b4 1723     		mov	r3, #23
 2410 00b6 FB18     		add	r3, r7, r3
 2411 00b8 1B78     		ldrb	r3, [r3]
1456:.\ff/ff.c     **** }
 2412              		.loc 1 1456 0
 2413 00ba 181C     		mov	r0, r3
 2414 00bc BD46     		mov	sp, r7
 2415 00be 07B0     		add	sp, sp, #28
 2416              		@ sp needed
 2417 00c0 90BD     		pop	{r4, r7, pc}
 2418              		.cfi_endproc
 2419              	.LFE16:
 2420              		.size	dir_read, .-dir_read
 2421 00c2 C046     		.section	.text.dir_register,"ax",%progbits
 2422              		.align	2
 2423              		.code	16
 2424              		.thumb_func
 2425              		.type	dir_register, %function
 2426              	dir_register:
 2427              	.LFB17:
1457:.\ff/ff.c     **** #endif
1458:.\ff/ff.c     **** 
1459:.\ff/ff.c     **** 
1460:.\ff/ff.c     **** 
1461:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1462:.\ff/ff.c     **** /* Register an object to the directory                                   */
1463:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1464:.\ff/ff.c     **** #if !_FS_READONLY
1465:.\ff/ff.c     **** static
1466:.\ff/ff.c     **** FRESULT dir_register (	/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_D
1467:.\ff/ff.c     **** 	DIR *dj				/* Target directory with object name to be created */
1468:.\ff/ff.c     **** )
1469:.\ff/ff.c     **** {
 2428              		.loc 1 1469 0
 2429              		.cfi_startproc
 2430 0000 90B5     		push	{r4, r7, lr}
 2431              		.cfi_def_cfa_offset 12
 2432              		.cfi_offset 4, -12
 2433              		.cfi_offset 7, -8
 2434              		.cfi_offset 14, -4
 2435 0002 85B0     		sub	sp, sp, #20
 2436              		.cfi_def_cfa_offset 32
 2437 0004 00AF     		add	r7, sp, #0
 2438              		.cfi_def_cfa_register 7
 2439 0006 7860     		str	r0, [r7, #4]
1470:.\ff/ff.c     **** 	FRESULT res;
1471:.\ff/ff.c     **** 	BYTE c, *dir;
1472:.\ff/ff.c     **** #if _USE_LFN	/* LFN configuration */
1473:.\ff/ff.c     **** 	WORD n, ne, is;
1474:.\ff/ff.c     **** 	BYTE sn[12], *fn, sum;
1475:.\ff/ff.c     **** 	WCHAR *lfn;
1476:.\ff/ff.c     **** 
1477:.\ff/ff.c     **** 
1478:.\ff/ff.c     **** 	fn = dj->fn; lfn = dj->lfn;
1479:.\ff/ff.c     **** 	mem_cpy(sn, fn, 12);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 70


1480:.\ff/ff.c     **** 
1481:.\ff/ff.c     **** 	if (_FS_RPATH && (sn[NS] & NS_DOT))		/* Cannot create dot entry */
1482:.\ff/ff.c     **** 		return FR_INVALID_NAME;
1483:.\ff/ff.c     **** 
1484:.\ff/ff.c     **** 	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
1485:.\ff/ff.c     **** 		fn[NS] = 0; dj->lfn = 0;			/* Find only SFN */
1486:.\ff/ff.c     **** 		for (n = 1; n < 100; n++) {
1487:.\ff/ff.c     **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
1488:.\ff/ff.c     **** 			res = dir_find(dj);				/* Check if the name collides with existing SFN */
1489:.\ff/ff.c     **** 			if (res != FR_OK) break;
1490:.\ff/ff.c     **** 		}
1491:.\ff/ff.c     **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
1492:.\ff/ff.c     **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
1493:.\ff/ff.c     **** 		fn[NS] = sn[NS]; dj->lfn = lfn;
1494:.\ff/ff.c     **** 	}
1495:.\ff/ff.c     **** 
1496:.\ff/ff.c     **** 	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, reserve an SFN + LFN entries. */
1497:.\ff/ff.c     **** 		for (ne = 0; lfn[ne]; ne++) ;
1498:.\ff/ff.c     **** 		ne = (ne + 25) / 13;
1499:.\ff/ff.c     **** 	} else {						/* Otherwise reserve only an SFN entry. */
1500:.\ff/ff.c     **** 		ne = 1;
1501:.\ff/ff.c     **** 	}
1502:.\ff/ff.c     **** 
1503:.\ff/ff.c     **** 	/* Reserve contiguous entries */
1504:.\ff/ff.c     **** 	res = dir_sdi(dj, 0);
1505:.\ff/ff.c     **** 	if (res != FR_OK) return res;
1506:.\ff/ff.c     **** 	n = is = 0;
1507:.\ff/ff.c     **** 	do {
1508:.\ff/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1509:.\ff/ff.c     **** 		if (res != FR_OK) break;
1510:.\ff/ff.c     **** 		c = *dj->dir;				/* Check the entry status */
1511:.\ff/ff.c     **** 		if (c == DDE || c == 0) {	/* Is it a blank entry? */
1512:.\ff/ff.c     **** 			if (n == 0) is = dj->index;	/* First index of the contiguous entry */
1513:.\ff/ff.c     **** 			if (++n == ne) break;	/* A contiguous entry that required count is found */
1514:.\ff/ff.c     **** 		} else {
1515:.\ff/ff.c     **** 			n = 0;					/* Not a blank entry. Restart to search */
1516:.\ff/ff.c     **** 		}
1517:.\ff/ff.c     **** 		res = dir_next(dj, 1);		/* Next entry with table stretch */
1518:.\ff/ff.c     **** 	} while (res == FR_OK);
1519:.\ff/ff.c     **** 
1520:.\ff/ff.c     **** 	if (res == FR_OK && ne > 1) {	/* Initialize LFN entry if needed */
1521:.\ff/ff.c     **** 		res = dir_sdi(dj, is);
1522:.\ff/ff.c     **** 		if (res == FR_OK) {
1523:.\ff/ff.c     **** 			sum = sum_sfn(dj->fn);	/* Sum of the SFN tied to the LFN */
1524:.\ff/ff.c     **** 			ne--;
1525:.\ff/ff.c     **** 			do {					/* Store LFN entries in bottom first */
1526:.\ff/ff.c     **** 				res = move_window(dj->fs, dj->sect);
1527:.\ff/ff.c     **** 				if (res != FR_OK) break;
1528:.\ff/ff.c     **** 				fit_lfn(dj->lfn, dj->dir, (BYTE)ne, sum);
1529:.\ff/ff.c     **** 				dj->fs->wflag = 1;
1530:.\ff/ff.c     **** 				res = dir_next(dj, 0);	/* Next entry */
1531:.\ff/ff.c     **** 			} while (res == FR_OK && --ne);
1532:.\ff/ff.c     **** 		}
1533:.\ff/ff.c     **** 	}
1534:.\ff/ff.c     **** 
1535:.\ff/ff.c     **** #else	/* Non LFN configuration */
1536:.\ff/ff.c     **** 	res = dir_sdi(dj, 0);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 71


 2440              		.loc 1 1536 0
 2441 0008 0F23     		mov	r3, #15
 2442 000a FC18     		add	r4, r7, r3
 2443 000c 7B68     		ldr	r3, [r7, #4]
 2444 000e 181C     		mov	r0, r3
 2445 0010 0021     		mov	r1, #0
 2446 0012 FFF7FEFF 		bl	dir_sdi
 2447 0016 031C     		mov	r3, r0
 2448 0018 2370     		strb	r3, [r4]
1537:.\ff/ff.c     **** 	if (res == FR_OK) {
 2449              		.loc 1 1537 0
 2450 001a 0F23     		mov	r3, #15
 2451 001c FB18     		add	r3, r7, r3
 2452 001e 1B78     		ldrb	r3, [r3]
 2453 0020 002B     		cmp	r3, #0
 2454 0022 2FD1     		bne	.L149
 2455              	.L151:
1538:.\ff/ff.c     **** 		do {	/* Find a blank entry for the SFN */
1539:.\ff/ff.c     **** 			res = move_window(dj->fs, dj->sect);
 2456              		.loc 1 1539 0
 2457 0024 7B68     		ldr	r3, [r7, #4]
 2458 0026 1A68     		ldr	r2, [r3]
 2459 0028 7B68     		ldr	r3, [r7, #4]
 2460 002a 1B69     		ldr	r3, [r3, #16]
 2461 002c 0F21     		mov	r1, #15
 2462 002e 7C18     		add	r4, r7, r1
 2463 0030 101C     		mov	r0, r2
 2464 0032 191C     		mov	r1, r3
 2465 0034 FFF7FEFF 		bl	move_window
 2466 0038 031C     		mov	r3, r0
 2467 003a 2370     		strb	r3, [r4]
1540:.\ff/ff.c     **** 			if (res != FR_OK) break;
 2468              		.loc 1 1540 0
 2469 003c 0F23     		mov	r3, #15
 2470 003e FB18     		add	r3, r7, r3
 2471 0040 1B78     		ldrb	r3, [r3]
 2472 0042 002B     		cmp	r3, #0
 2473 0044 00D0     		beq	.L150
 2474 0046 1DE0     		b	.L149
 2475              	.L150:
1541:.\ff/ff.c     **** 			c = *dj->dir;
 2476              		.loc 1 1541 0
 2477 0048 7B68     		ldr	r3, [r7, #4]
 2478 004a 5A69     		ldr	r2, [r3, #20]
 2479 004c 0E23     		mov	r3, #14
 2480 004e FB18     		add	r3, r7, r3
 2481 0050 1278     		ldrb	r2, [r2]
 2482 0052 1A70     		strb	r2, [r3]
1542:.\ff/ff.c     **** 			if (c == DDE || c == 0) break;	/* Is it a blank entry? */
 2483              		.loc 1 1542 0
 2484 0054 0E23     		mov	r3, #14
 2485 0056 FB18     		add	r3, r7, r3
 2486 0058 1B78     		ldrb	r3, [r3]
 2487 005a E52B     		cmp	r3, #229
 2488 005c 12D0     		beq	.L149
 2489              		.loc 1 1542 0 is_stmt 0 discriminator 1
 2490 005e 0E23     		mov	r3, #14
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 72


 2491 0060 FB18     		add	r3, r7, r3
 2492 0062 1B78     		ldrb	r3, [r3]
 2493 0064 002B     		cmp	r3, #0
 2494 0066 0DD0     		beq	.L149
1543:.\ff/ff.c     **** 			res = dir_next(dj, 1);			/* Next entry with table stretch */
 2495              		.loc 1 1543 0 is_stmt 1
 2496 0068 0F23     		mov	r3, #15
 2497 006a FC18     		add	r4, r7, r3
 2498 006c 7B68     		ldr	r3, [r7, #4]
 2499 006e 181C     		mov	r0, r3
 2500 0070 0121     		mov	r1, #1
 2501 0072 FFF7FEFF 		bl	dir_next
 2502 0076 031C     		mov	r3, r0
 2503 0078 2370     		strb	r3, [r4]
1544:.\ff/ff.c     **** 		} while (res == FR_OK);
 2504              		.loc 1 1544 0
 2505 007a 0F23     		mov	r3, #15
 2506 007c FB18     		add	r3, r7, r3
 2507 007e 1B78     		ldrb	r3, [r3]
 2508 0080 002B     		cmp	r3, #0
 2509 0082 CFD0     		beq	.L151
 2510              	.L149:
1545:.\ff/ff.c     **** 	}
1546:.\ff/ff.c     **** #endif
1547:.\ff/ff.c     **** 
1548:.\ff/ff.c     **** 	if (res == FR_OK) {		/* Initialize the SFN entry */
 2511              		.loc 1 1548 0
 2512 0084 0F23     		mov	r3, #15
 2513 0086 FB18     		add	r3, r7, r3
 2514 0088 1B78     		ldrb	r3, [r3]
 2515 008a 002B     		cmp	r3, #0
 2516 008c 25D1     		bne	.L152
1549:.\ff/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 2517              		.loc 1 1549 0
 2518 008e 7B68     		ldr	r3, [r7, #4]
 2519 0090 1A68     		ldr	r2, [r3]
 2520 0092 7B68     		ldr	r3, [r7, #4]
 2521 0094 1B69     		ldr	r3, [r3, #16]
 2522 0096 0F21     		mov	r1, #15
 2523 0098 7C18     		add	r4, r7, r1
 2524 009a 101C     		mov	r0, r2
 2525 009c 191C     		mov	r1, r3
 2526 009e FFF7FEFF 		bl	move_window
 2527 00a2 031C     		mov	r3, r0
 2528 00a4 2370     		strb	r3, [r4]
1550:.\ff/ff.c     **** 		if (res == FR_OK) {
 2529              		.loc 1 1550 0
 2530 00a6 0F23     		mov	r3, #15
 2531 00a8 FB18     		add	r3, r7, r3
 2532 00aa 1B78     		ldrb	r3, [r3]
 2533 00ac 002B     		cmp	r3, #0
 2534 00ae 14D1     		bne	.L152
1551:.\ff/ff.c     **** 			dir = dj->dir;
 2535              		.loc 1 1551 0
 2536 00b0 7B68     		ldr	r3, [r7, #4]
 2537 00b2 5B69     		ldr	r3, [r3, #20]
 2538 00b4 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 73


1552:.\ff/ff.c     **** 			mem_set(dir, 0, SZ_DIR);	/* Clean the entry */
 2539              		.loc 1 1552 0
 2540 00b6 BB68     		ldr	r3, [r7, #8]
 2541 00b8 181C     		mov	r0, r3
 2542 00ba 0021     		mov	r1, #0
 2543 00bc 2022     		mov	r2, #32
 2544 00be FFF7FEFF 		bl	mem_set
1553:.\ff/ff.c     **** 			mem_cpy(dir, dj->fn, 11);	/* Put SFN */
 2545              		.loc 1 1553 0
 2546 00c2 7B68     		ldr	r3, [r7, #4]
 2547 00c4 9B69     		ldr	r3, [r3, #24]
 2548 00c6 BA68     		ldr	r2, [r7, #8]
 2549 00c8 101C     		mov	r0, r2
 2550 00ca 191C     		mov	r1, r3
 2551 00cc 0B22     		mov	r2, #11
 2552 00ce FFF7FEFF 		bl	mem_cpy
1554:.\ff/ff.c     **** #if _USE_LFN
1555:.\ff/ff.c     **** 			dir[DIR_NTres] = *(dj->fn+NS) & (NS_BODY | NS_EXT);	/* Put NT flag */
1556:.\ff/ff.c     **** #endif
1557:.\ff/ff.c     **** 			dj->fs->wflag = 1;
 2553              		.loc 1 1557 0
 2554 00d2 7B68     		ldr	r3, [r7, #4]
 2555 00d4 1B68     		ldr	r3, [r3]
 2556 00d6 0122     		mov	r2, #1
 2557 00d8 1A71     		strb	r2, [r3, #4]
 2558              	.L152:
1558:.\ff/ff.c     **** 		}
1559:.\ff/ff.c     **** 	}
1560:.\ff/ff.c     **** 
1561:.\ff/ff.c     **** 	return res;
 2559              		.loc 1 1561 0
 2560 00da 0F23     		mov	r3, #15
 2561 00dc FB18     		add	r3, r7, r3
 2562 00de 1B78     		ldrb	r3, [r3]
1562:.\ff/ff.c     **** }
 2563              		.loc 1 1562 0
 2564 00e0 181C     		mov	r0, r3
 2565 00e2 BD46     		mov	sp, r7
 2566 00e4 05B0     		add	sp, sp, #20
 2567              		@ sp needed
 2568 00e6 90BD     		pop	{r4, r7, pc}
 2569              		.cfi_endproc
 2570              	.LFE17:
 2571              		.size	dir_register, .-dir_register
 2572              		.section	.text.dir_remove,"ax",%progbits
 2573              		.align	2
 2574              		.code	16
 2575              		.thumb_func
 2576              		.type	dir_remove, %function
 2577              	dir_remove:
 2578              	.LFB18:
1563:.\ff/ff.c     **** #endif /* !_FS_READONLY */
1564:.\ff/ff.c     **** 
1565:.\ff/ff.c     **** 
1566:.\ff/ff.c     **** 
1567:.\ff/ff.c     **** 
1568:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 74


1569:.\ff/ff.c     **** /* Remove an object from the directory                                   */
1570:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1571:.\ff/ff.c     **** #if !_FS_READONLY && !_FS_MINIMIZE
1572:.\ff/ff.c     **** static
1573:.\ff/ff.c     **** FRESULT dir_remove (	/* FR_OK: Successful, FR_DISK_ERR: A disk error */
1574:.\ff/ff.c     **** 	DIR *dj				/* Directory object pointing the entry to be removed */
1575:.\ff/ff.c     **** )
1576:.\ff/ff.c     **** {
 2579              		.loc 1 1576 0
 2580              		.cfi_startproc
 2581 0000 90B5     		push	{r4, r7, lr}
 2582              		.cfi_def_cfa_offset 12
 2583              		.cfi_offset 4, -12
 2584              		.cfi_offset 7, -8
 2585              		.cfi_offset 14, -4
 2586 0002 85B0     		sub	sp, sp, #20
 2587              		.cfi_def_cfa_offset 32
 2588 0004 00AF     		add	r7, sp, #0
 2589              		.cfi_def_cfa_register 7
 2590 0006 7860     		str	r0, [r7, #4]
1577:.\ff/ff.c     **** 	FRESULT res;
1578:.\ff/ff.c     **** #if _USE_LFN	/* LFN configuration */
1579:.\ff/ff.c     **** 	WORD i;
1580:.\ff/ff.c     **** 
1581:.\ff/ff.c     **** 	i = dj->index;	/* SFN index */
1582:.\ff/ff.c     **** 	res = dir_sdi(dj, (WORD)((dj->lfn_idx == 0xFFFF) ? i : dj->lfn_idx));	/* Goto the SFN or top of th
1583:.\ff/ff.c     **** 	if (res == FR_OK) {
1584:.\ff/ff.c     **** 		do {
1585:.\ff/ff.c     **** 			res = move_window(dj->fs, dj->sect);
1586:.\ff/ff.c     **** 			if (res != FR_OK) break;
1587:.\ff/ff.c     **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
1588:.\ff/ff.c     **** 			dj->fs->wflag = 1;
1589:.\ff/ff.c     **** 			if (dj->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
1590:.\ff/ff.c     **** 			res = dir_next(dj, 0);		/* Next entry */
1591:.\ff/ff.c     **** 		} while (res == FR_OK);
1592:.\ff/ff.c     **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
1593:.\ff/ff.c     **** 	}
1594:.\ff/ff.c     **** 
1595:.\ff/ff.c     **** #else			/* Non LFN configuration */
1596:.\ff/ff.c     **** 	res = dir_sdi(dj, dj->index);
 2591              		.loc 1 1596 0
 2592 0008 7B68     		ldr	r3, [r7, #4]
 2593 000a DB88     		ldrh	r3, [r3, #6]
 2594 000c 0F22     		mov	r2, #15
 2595 000e BC18     		add	r4, r7, r2
 2596 0010 7A68     		ldr	r2, [r7, #4]
 2597 0012 101C     		mov	r0, r2
 2598 0014 191C     		mov	r1, r3
 2599 0016 FFF7FEFF 		bl	dir_sdi
 2600 001a 031C     		mov	r3, r0
 2601 001c 2370     		strb	r3, [r4]
1597:.\ff/ff.c     **** 	if (res == FR_OK) {
 2602              		.loc 1 1597 0
 2603 001e 0F23     		mov	r3, #15
 2604 0020 FB18     		add	r3, r7, r3
 2605 0022 1B78     		ldrb	r3, [r3]
 2606 0024 002B     		cmp	r3, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 75


 2607 0026 18D1     		bne	.L155
1598:.\ff/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 2608              		.loc 1 1598 0
 2609 0028 7B68     		ldr	r3, [r7, #4]
 2610 002a 1A68     		ldr	r2, [r3]
 2611 002c 7B68     		ldr	r3, [r7, #4]
 2612 002e 1B69     		ldr	r3, [r3, #16]
 2613 0030 0F21     		mov	r1, #15
 2614 0032 7C18     		add	r4, r7, r1
 2615 0034 101C     		mov	r0, r2
 2616 0036 191C     		mov	r1, r3
 2617 0038 FFF7FEFF 		bl	move_window
 2618 003c 031C     		mov	r3, r0
 2619 003e 2370     		strb	r3, [r4]
1599:.\ff/ff.c     **** 		if (res == FR_OK) {
 2620              		.loc 1 1599 0
 2621 0040 0F23     		mov	r3, #15
 2622 0042 FB18     		add	r3, r7, r3
 2623 0044 1B78     		ldrb	r3, [r3]
 2624 0046 002B     		cmp	r3, #0
 2625 0048 07D1     		bne	.L155
1600:.\ff/ff.c     **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
 2626              		.loc 1 1600 0
 2627 004a 7B68     		ldr	r3, [r7, #4]
 2628 004c 5B69     		ldr	r3, [r3, #20]
 2629 004e E522     		mov	r2, #229
 2630 0050 1A70     		strb	r2, [r3]
1601:.\ff/ff.c     **** 			dj->fs->wflag = 1;
 2631              		.loc 1 1601 0
 2632 0052 7B68     		ldr	r3, [r7, #4]
 2633 0054 1B68     		ldr	r3, [r3]
 2634 0056 0122     		mov	r2, #1
 2635 0058 1A71     		strb	r2, [r3, #4]
 2636              	.L155:
1602:.\ff/ff.c     **** 		}
1603:.\ff/ff.c     **** 	}
1604:.\ff/ff.c     **** #endif
1605:.\ff/ff.c     **** 
1606:.\ff/ff.c     **** 	return res;
 2637              		.loc 1 1606 0
 2638 005a 0F23     		mov	r3, #15
 2639 005c FB18     		add	r3, r7, r3
 2640 005e 1B78     		ldrb	r3, [r3]
1607:.\ff/ff.c     **** }
 2641              		.loc 1 1607 0
 2642 0060 181C     		mov	r0, r3
 2643 0062 BD46     		mov	sp, r7
 2644 0064 05B0     		add	sp, sp, #20
 2645              		@ sp needed
 2646 0066 90BD     		pop	{r4, r7, pc}
 2647              		.cfi_endproc
 2648              	.LFE18:
 2649              		.size	dir_remove, .-dir_remove
 2650              		.section	.rodata
 2651              		.align	2
 2652              	.LC1:
 2653 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 76


 2653      3A3B3C3D 
 2653      3E3F5B5D 
 2653      7C7F00
 2654              		.section	.text.create_name,"ax",%progbits
 2655              		.align	2
 2656              		.code	16
 2657              		.thumb_func
 2658              		.type	create_name, %function
 2659              	create_name:
 2660              	.LFB19:
1608:.\ff/ff.c     **** #endif /* !_FS_READONLY */
1609:.\ff/ff.c     **** 
1610:.\ff/ff.c     **** 
1611:.\ff/ff.c     **** 
1612:.\ff/ff.c     **** 
1613:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1614:.\ff/ff.c     **** /* Pick a segment and create the object name in directory form           */
1615:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1616:.\ff/ff.c     **** 
1617:.\ff/ff.c     **** static
1618:.\ff/ff.c     **** FRESULT create_name (
1619:.\ff/ff.c     **** 	DIR *dj,			/* Pointer to the directory object */
1620:.\ff/ff.c     **** 	const TCHAR **path	/* Pointer to pointer to the segment in the path string */
1621:.\ff/ff.c     **** )
1622:.\ff/ff.c     **** {
 2661              		.loc 1 1622 0
 2662              		.cfi_startproc
 2663 0000 80B5     		push	{r7, lr}
 2664              		.cfi_def_cfa_offset 8
 2665              		.cfi_offset 7, -8
 2666              		.cfi_offset 14, -4
 2667 0002 88B0     		sub	sp, sp, #32
 2668              		.cfi_def_cfa_offset 40
 2669 0004 00AF     		add	r7, sp, #0
 2670              		.cfi_def_cfa_register 7
 2671 0006 7860     		str	r0, [r7, #4]
 2672 0008 3960     		str	r1, [r7]
1623:.\ff/ff.c     **** #ifdef _EXCVT
1624:.\ff/ff.c     **** 	static const BYTE excvt[] = _EXCVT;	/* Upper conversion table for extended chars */
1625:.\ff/ff.c     **** #endif
1626:.\ff/ff.c     **** 
1627:.\ff/ff.c     **** #if _USE_LFN	/* LFN configuration */
1628:.\ff/ff.c     **** 	BYTE b, cf;
1629:.\ff/ff.c     **** 	WCHAR w, *lfn;
1630:.\ff/ff.c     **** 	UINT i, ni, si, di;
1631:.\ff/ff.c     **** 	const TCHAR *p;
1632:.\ff/ff.c     **** 
1633:.\ff/ff.c     **** 	/* Create LFN in Unicode */
1634:.\ff/ff.c     **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1635:.\ff/ff.c     **** 	lfn = dj->lfn;
1636:.\ff/ff.c     **** 	si = di = 0;
1637:.\ff/ff.c     **** 	for (;;) {
1638:.\ff/ff.c     **** 		w = p[si++];					/* Get a character */
1639:.\ff/ff.c     **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
1640:.\ff/ff.c     **** 		if (di >= _MAX_LFN)				/* Reject too long name */
1641:.\ff/ff.c     **** 			return FR_INVALID_NAME;
1642:.\ff/ff.c     **** #if !_LFN_UNICODE
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 77


1643:.\ff/ff.c     **** 		w &= 0xFF;
1644:.\ff/ff.c     **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1645:.\ff/ff.c     **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
1646:.\ff/ff.c     **** 			if (!IsDBCS2(b))
1647:.\ff/ff.c     **** 				return FR_INVALID_NAME;	/* Reject invalid sequence */
1648:.\ff/ff.c     **** 			w = (w << 8) + b;			/* Create a DBC */
1649:.\ff/ff.c     **** 		}
1650:.\ff/ff.c     **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
1651:.\ff/ff.c     **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
1652:.\ff/ff.c     **** #endif
1653:.\ff/ff.c     **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal chars for LFN */
1654:.\ff/ff.c     **** 			return FR_INVALID_NAME;
1655:.\ff/ff.c     **** 		lfn[di++] = w;					/* Store the Unicode char */
1656:.\ff/ff.c     **** 	}
1657:.\ff/ff.c     **** 	*path = &p[si];						/* Return pointer to the next segment */
1658:.\ff/ff.c     **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1659:.\ff/ff.c     **** #if _FS_RPATH
1660:.\ff/ff.c     **** 	if ((di == 1 && lfn[di-1] == '.') || /* Is this a dot entry? */
1661:.\ff/ff.c     **** 		(di == 2 && lfn[di-1] == '.' && lfn[di-2] == '.')) {
1662:.\ff/ff.c     **** 		lfn[di] = 0;
1663:.\ff/ff.c     **** 		for (i = 0; i < 11; i++)
1664:.\ff/ff.c     **** 			dj->fn[i] = (i < di) ? '.' : ' ';
1665:.\ff/ff.c     **** 		dj->fn[i] = cf | NS_DOT;		/* This is a dot entry */
1666:.\ff/ff.c     **** 		return FR_OK;
1667:.\ff/ff.c     **** 	}
1668:.\ff/ff.c     **** #endif
1669:.\ff/ff.c     **** 	while (di) {						/* Strip trailing spaces and dots */
1670:.\ff/ff.c     **** 		w = lfn[di-1];
1671:.\ff/ff.c     **** 		if (w != ' ' && w != '.') break;
1672:.\ff/ff.c     **** 		di--;
1673:.\ff/ff.c     **** 	}
1674:.\ff/ff.c     **** 	if (!di) return FR_INVALID_NAME;	/* Reject nul string */
1675:.\ff/ff.c     **** 
1676:.\ff/ff.c     **** 	lfn[di] = 0;						/* LFN is created */
1677:.\ff/ff.c     **** 
1678:.\ff/ff.c     **** 	/* Create SFN in directory form */
1679:.\ff/ff.c     **** 	mem_set(dj->fn, ' ', 11);
1680:.\ff/ff.c     **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
1681:.\ff/ff.c     **** 	if (si) cf |= NS_LOSS | NS_LFN;
1682:.\ff/ff.c     **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
1683:.\ff/ff.c     **** 
1684:.\ff/ff.c     **** 	b = i = 0; ni = 8;
1685:.\ff/ff.c     **** 	for (;;) {
1686:.\ff/ff.c     **** 		w = lfn[si++];					/* Get an LFN char */
1687:.\ff/ff.c     **** 		if (!w) break;					/* Break on end of the LFN */
1688:.\ff/ff.c     **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
1689:.\ff/ff.c     **** 			cf |= NS_LOSS | NS_LFN; continue;
1690:.\ff/ff.c     **** 		}
1691:.\ff/ff.c     **** 
1692:.\ff/ff.c     **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
1693:.\ff/ff.c     **** 			if (ni == 11) {				/* Long extension */
1694:.\ff/ff.c     **** 				cf |= NS_LOSS | NS_LFN; break;
1695:.\ff/ff.c     **** 			}
1696:.\ff/ff.c     **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
1697:.\ff/ff.c     **** 			if (si > di) break;			/* No extension */
1698:.\ff/ff.c     **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
1699:.\ff/ff.c     **** 			b <<= 2; continue;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 78


1700:.\ff/ff.c     **** 		}
1701:.\ff/ff.c     **** 
1702:.\ff/ff.c     **** 		if (w >= 0x80) {				/* Non ASCII char */
1703:.\ff/ff.c     **** #ifdef _EXCVT
1704:.\ff/ff.c     **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
1705:.\ff/ff.c     **** 			if (w) w = excvt[w - 0x80];	/* Convert extended char to upper (SBCS) */
1706:.\ff/ff.c     **** #else
1707:.\ff/ff.c     **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
1708:.\ff/ff.c     **** #endif
1709:.\ff/ff.c     **** 			cf |= NS_LFN;				/* Force create LFN entry */
1710:.\ff/ff.c     **** 		}
1711:.\ff/ff.c     **** 
1712:.\ff/ff.c     **** 		if (_DF1S && w >= 0x100) {		/* Double byte char (always false on SBCS cfg) */
1713:.\ff/ff.c     **** 			if (i >= ni - 1) {
1714:.\ff/ff.c     **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
1715:.\ff/ff.c     **** 			}
1716:.\ff/ff.c     **** 			dj->fn[i++] = (BYTE)(w >> 8);
1717:.\ff/ff.c     **** 		} else {						/* Single byte char */
1718:.\ff/ff.c     **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal chars for SFN */
1719:.\ff/ff.c     **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
1720:.\ff/ff.c     **** 			} else {
1721:.\ff/ff.c     **** 				if (IsUpper(w)) {		/* ASCII large capital */
1722:.\ff/ff.c     **** 					b |= 2;
1723:.\ff/ff.c     **** 				} else {
1724:.\ff/ff.c     **** 					if (IsLower(w)) {	/* ASCII small capital */
1725:.\ff/ff.c     **** 						b |= 1; w -= 0x20;
1726:.\ff/ff.c     **** 					}
1727:.\ff/ff.c     **** 				}
1728:.\ff/ff.c     **** 			}
1729:.\ff/ff.c     **** 		}
1730:.\ff/ff.c     **** 		dj->fn[i++] = (BYTE)w;
1731:.\ff/ff.c     **** 	}
1732:.\ff/ff.c     **** 
1733:.\ff/ff.c     **** 	if (dj->fn[0] == DDE) dj->fn[0] = NDDE;	/* If the first char collides with deleted mark, replace i
1734:.\ff/ff.c     **** 
1735:.\ff/ff.c     **** 	if (ni == 8) b <<= 2;
1736:.\ff/ff.c     **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
1737:.\ff/ff.c     **** 		cf |= NS_LFN;
1738:.\ff/ff.c     **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended char, NT flags are create
1739:.\ff/ff.c     **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
1740:.\ff/ff.c     **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
1741:.\ff/ff.c     **** 	}
1742:.\ff/ff.c     **** 
1743:.\ff/ff.c     **** 	dj->fn[NS] = cf;	/* SFN is created */
1744:.\ff/ff.c     **** 
1745:.\ff/ff.c     **** 	return FR_OK;
1746:.\ff/ff.c     **** 
1747:.\ff/ff.c     **** 
1748:.\ff/ff.c     **** #else	/* Non-LFN configuration */
1749:.\ff/ff.c     **** 	BYTE b, c, d, *sfn;
1750:.\ff/ff.c     **** 	UINT ni, si, i;
1751:.\ff/ff.c     **** 	const char *p;
1752:.\ff/ff.c     **** 
1753:.\ff/ff.c     **** 	/* Create file name in directory form */
1754:.\ff/ff.c     **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
 2673              		.loc 1 1754 0
 2674 000a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 79


 2675 000c 1B68     		ldr	r3, [r3]
 2676 000e FB60     		str	r3, [r7, #12]
 2677 0010 02E0     		b	.L158
 2678              	.L159:
 2679              		.loc 1 1754 0 is_stmt 0 discriminator 5
 2680 0012 FB68     		ldr	r3, [r7, #12]
 2681 0014 0133     		add	r3, r3, #1
 2682 0016 FB60     		str	r3, [r7, #12]
 2683              	.L158:
 2684              		.loc 1 1754 0 discriminator 1
 2685 0018 FB68     		ldr	r3, [r7, #12]
 2686 001a 1B78     		ldrb	r3, [r3]
 2687 001c 2F2B     		cmp	r3, #47
 2688 001e F8D0     		beq	.L159
 2689              		.loc 1 1754 0 discriminator 4
 2690 0020 FB68     		ldr	r3, [r7, #12]
 2691 0022 1B78     		ldrb	r3, [r3]
 2692 0024 5C2B     		cmp	r3, #92
 2693 0026 F4D0     		beq	.L159
1755:.\ff/ff.c     **** 	sfn = dj->fn;
 2694              		.loc 1 1755 0 is_stmt 1
 2695 0028 7B68     		ldr	r3, [r7, #4]
 2696 002a 9B69     		ldr	r3, [r3, #24]
 2697 002c BB60     		str	r3, [r7, #8]
1756:.\ff/ff.c     **** 	mem_set(sfn, ' ', 11);
 2698              		.loc 1 1756 0
 2699 002e BB68     		ldr	r3, [r7, #8]
 2700 0030 181C     		mov	r0, r3
 2701 0032 2021     		mov	r1, #32
 2702 0034 0B22     		mov	r2, #11
 2703 0036 FFF7FEFF 		bl	mem_set
1757:.\ff/ff.c     **** 	si = i = b = 0; ni = 8;
 2704              		.loc 1 1757 0
 2705 003a 1F23     		mov	r3, #31
 2706 003c FB18     		add	r3, r7, r3
 2707 003e 0022     		mov	r2, #0
 2708 0040 1A70     		strb	r2, [r3]
 2709 0042 0023     		mov	r3, #0
 2710 0044 3B61     		str	r3, [r7, #16]
 2711 0046 3B69     		ldr	r3, [r7, #16]
 2712 0048 7B61     		str	r3, [r7, #20]
 2713 004a 0823     		mov	r3, #8
 2714 004c BB61     		str	r3, [r7, #24]
 2715              	.L171:
1758:.\ff/ff.c     **** #if _FS_RPATH
1759:.\ff/ff.c     **** 	if (p[si] == '.') { /* Is this a dot entry? */
1760:.\ff/ff.c     **** 		for (;;) {
1761:.\ff/ff.c     **** 			c = (BYTE)p[si++];
1762:.\ff/ff.c     **** 			if (c != '.' || si >= 3) break;
1763:.\ff/ff.c     **** 			sfn[i++] = c;
1764:.\ff/ff.c     **** 		}
1765:.\ff/ff.c     **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
1766:.\ff/ff.c     **** 		*path = &p[si];									/* Return pointer to the next segment */
1767:.\ff/ff.c     **** 		sfn[NS] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of path */
1768:.\ff/ff.c     **** 		return FR_OK;
1769:.\ff/ff.c     **** 	}
1770:.\ff/ff.c     **** #endif
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 80


1771:.\ff/ff.c     **** 	for (;;) {
1772:.\ff/ff.c     **** 		c = (BYTE)p[si++];
 2716              		.loc 1 1772 0
 2717 004e 7B69     		ldr	r3, [r7, #20]
 2718 0050 5A1C     		add	r2, r3, #1
 2719 0052 7A61     		str	r2, [r7, #20]
 2720 0054 FA68     		ldr	r2, [r7, #12]
 2721 0056 D218     		add	r2, r2, r3
 2722 0058 1E23     		mov	r3, #30
 2723 005a FB18     		add	r3, r7, r3
 2724 005c 1278     		ldrb	r2, [r2]
 2725 005e 1A70     		strb	r2, [r3]
1773:.\ff/ff.c     **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
 2726              		.loc 1 1773 0
 2727 0060 1E23     		mov	r3, #30
 2728 0062 FB18     		add	r3, r7, r3
 2729 0064 1B78     		ldrb	r3, [r3]
 2730 0066 202B     		cmp	r3, #32
 2731 0068 00D8     		bhi	.LCB2523
 2732 006a 84E0     		b	.L160	@long jump
 2733              	.LCB2523:
 2734              		.loc 1 1773 0 is_stmt 0 discriminator 1
 2735 006c 1E23     		mov	r3, #30
 2736 006e FB18     		add	r3, r7, r3
 2737 0070 1B78     		ldrb	r3, [r3]
 2738 0072 2F2B     		cmp	r3, #47
 2739 0074 00D1     		bne	.LCB2528
 2740 0076 7EE0     		b	.L160	@long jump
 2741              	.LCB2528:
 2742              		.loc 1 1773 0 discriminator 2
 2743 0078 1E23     		mov	r3, #30
 2744 007a FB18     		add	r3, r7, r3
 2745 007c 1B78     		ldrb	r3, [r3]
 2746 007e 5C2B     		cmp	r3, #92
 2747 0080 00D1     		bne	.LCB2533
 2748 0082 78E0     		b	.L160	@long jump
 2749              	.LCB2533:
1774:.\ff/ff.c     **** 		if (c == '.' || i >= ni) {
 2750              		.loc 1 1774 0 is_stmt 1
 2751 0084 1E23     		mov	r3, #30
 2752 0086 FB18     		add	r3, r7, r3
 2753 0088 1B78     		ldrb	r3, [r3]
 2754 008a 2E2B     		cmp	r3, #46
 2755 008c 03D0     		beq	.L161
 2756              		.loc 1 1774 0 is_stmt 0 discriminator 1
 2757 008e 3A69     		ldr	r2, [r7, #16]
 2758 0090 BB69     		ldr	r3, [r7, #24]
 2759 0092 9A42     		cmp	r2, r3
 2760 0094 15D3     		bcc	.L162
 2761              	.L161:
1775:.\ff/ff.c     **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
 2762              		.loc 1 1775 0 is_stmt 1
 2763 0096 BB69     		ldr	r3, [r7, #24]
 2764 0098 082B     		cmp	r3, #8
 2765 009a 04D1     		bne	.L163
 2766              		.loc 1 1775 0 is_stmt 0 discriminator 2
 2767 009c 1E23     		mov	r3, #30
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 81


 2768 009e FB18     		add	r3, r7, r3
 2769 00a0 1B78     		ldrb	r3, [r3]
 2770 00a2 2E2B     		cmp	r3, #46
 2771 00a4 01D0     		beq	.L164
 2772              	.L163:
 2773              		.loc 1 1775 0 discriminator 3
 2774 00a6 0623     		mov	r3, #6
 2775 00a8 B0E0     		b	.L165
 2776              	.L164:
1776:.\ff/ff.c     **** 			i = 8; ni = 11;
 2777              		.loc 1 1776 0 is_stmt 1
 2778 00aa 0823     		mov	r3, #8
 2779 00ac 3B61     		str	r3, [r7, #16]
 2780 00ae 0B23     		mov	r3, #11
 2781 00b0 BB61     		str	r3, [r7, #24]
1777:.\ff/ff.c     **** 			b <<= 2; continue;
 2782              		.loc 1 1777 0
 2783 00b2 1F23     		mov	r3, #31
 2784 00b4 FB18     		add	r3, r7, r3
 2785 00b6 1F22     		mov	r2, #31
 2786 00b8 BA18     		add	r2, r7, r2
 2787 00ba 1278     		ldrb	r2, [r2]
 2788 00bc 9200     		lsl	r2, r2, #2
 2789 00be 1A70     		strb	r2, [r3]
 2790 00c0 58E0     		b	.L166
 2791              	.L162:
1778:.\ff/ff.c     **** 		}
1779:.\ff/ff.c     **** 		if (c >= 0x80) {				/* Extended char? */
 2792              		.loc 1 1779 0
 2793 00c2 1E23     		mov	r3, #30
 2794 00c4 FB18     		add	r3, r7, r3
 2795 00c6 1B78     		ldrb	r3, [r3]
 2796 00c8 5BB2     		sxtb	r3, r3
 2797 00ca 002B     		cmp	r3, #0
 2798 00cc 11DA     		bge	.L179
1780:.\ff/ff.c     **** 			b |= 3;						/* Eliminate NT flag */
 2799              		.loc 1 1780 0
 2800 00ce 1F23     		mov	r3, #31
 2801 00d0 FB18     		add	r3, r7, r3
 2802 00d2 1F22     		mov	r2, #31
 2803 00d4 BA18     		add	r2, r7, r2
 2804 00d6 1278     		ldrb	r2, [r2]
 2805 00d8 0321     		mov	r1, #3
 2806 00da 0A43     		orr	r2, r1
 2807 00dc 1A70     		strb	r2, [r3]
1781:.\ff/ff.c     **** #ifdef _EXCVT
1782:.\ff/ff.c     **** 			c = excvt[c-0x80];			/* Upper conversion (SBCS) */
 2808              		.loc 1 1782 0
 2809 00de 1E23     		mov	r3, #30
 2810 00e0 FB18     		add	r3, r7, r3
 2811 00e2 1B78     		ldrb	r3, [r3]
 2812 00e4 803B     		sub	r3, r3, #128
 2813 00e6 1A1C     		mov	r2, r3
 2814 00e8 1E23     		mov	r3, #30
 2815 00ea FB18     		add	r3, r7, r3
 2816 00ec 4949     		ldr	r1, .L180
 2817 00ee 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 82


 2818 00f0 1A70     		strb	r2, [r3]
 2819              	.L179:
1783:.\ff/ff.c     **** #else
1784:.\ff/ff.c     **** #if !_DF1S	/* ASCII only cfg */
1785:.\ff/ff.c     **** 			return FR_INVALID_NAME;
1786:.\ff/ff.c     **** #endif
1787:.\ff/ff.c     **** #endif
1788:.\ff/ff.c     **** 		}
1789:.\ff/ff.c     **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1790:.\ff/ff.c     **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
1791:.\ff/ff.c     **** 			if (!IsDBCS2(d) || i >= ni - 1)	/* Reject invalid DBC */
1792:.\ff/ff.c     **** 				return FR_INVALID_NAME;
1793:.\ff/ff.c     **** 			sfn[i++] = c;
1794:.\ff/ff.c     **** 			sfn[i++] = d;
1795:.\ff/ff.c     **** 		} else {						/* Single byte code */
1796:.\ff/ff.c     **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
 2820              		.loc 1 1796 0
 2821 00f2 1E23     		mov	r3, #30
 2822 00f4 FB18     		add	r3, r7, r3
 2823 00f6 1B78     		ldrb	r3, [r3]
 2824 00f8 474A     		ldr	r2, .L180+4
 2825 00fa 101C     		mov	r0, r2
 2826 00fc 191C     		mov	r1, r3
 2827 00fe FFF7FEFF 		bl	chk_chr
 2828 0102 031E     		sub	r3, r0, #0
 2829 0104 01D0     		beq	.L168
1797:.\ff/ff.c     **** 				return FR_INVALID_NAME;
 2830              		.loc 1 1797 0
 2831 0106 0623     		mov	r3, #6
 2832 0108 80E0     		b	.L165
 2833              	.L168:
1798:.\ff/ff.c     **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 2834              		.loc 1 1798 0
 2835 010a 1E23     		mov	r3, #30
 2836 010c FB18     		add	r3, r7, r3
 2837 010e 1B78     		ldrb	r3, [r3]
 2838 0110 402B     		cmp	r3, #64
 2839 0112 0DD9     		bls	.L169
 2840              		.loc 1 1798 0 is_stmt 0 discriminator 1
 2841 0114 1E23     		mov	r3, #30
 2842 0116 FB18     		add	r3, r7, r3
 2843 0118 1B78     		ldrb	r3, [r3]
 2844 011a 5A2B     		cmp	r3, #90
 2845 011c 08D8     		bhi	.L169
1799:.\ff/ff.c     **** 				b |= 2;
 2846              		.loc 1 1799 0 is_stmt 1
 2847 011e 1F23     		mov	r3, #31
 2848 0120 FB18     		add	r3, r7, r3
 2849 0122 1F22     		mov	r2, #31
 2850 0124 BA18     		add	r2, r7, r2
 2851 0126 1278     		ldrb	r2, [r2]
 2852 0128 0221     		mov	r1, #2
 2853 012a 0A43     		orr	r2, r1
 2854 012c 1A70     		strb	r2, [r3]
 2855 012e 18E0     		b	.L170
 2856              	.L169:
1800:.\ff/ff.c     **** 			} else {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 83


1801:.\ff/ff.c     **** 				if (IsLower(c)) {		/* ASCII small capital? */
 2857              		.loc 1 1801 0
 2858 0130 1E23     		mov	r3, #30
 2859 0132 FB18     		add	r3, r7, r3
 2860 0134 1B78     		ldrb	r3, [r3]
 2861 0136 602B     		cmp	r3, #96
 2862 0138 13D9     		bls	.L170
 2863              		.loc 1 1801 0 is_stmt 0 discriminator 1
 2864 013a 1E23     		mov	r3, #30
 2865 013c FB18     		add	r3, r7, r3
 2866 013e 1B78     		ldrb	r3, [r3]
 2867 0140 7A2B     		cmp	r3, #122
 2868 0142 0ED8     		bhi	.L170
1802:.\ff/ff.c     **** 					b |= 1; c -= 0x20;
 2869              		.loc 1 1802 0 is_stmt 1
 2870 0144 1F23     		mov	r3, #31
 2871 0146 FB18     		add	r3, r7, r3
 2872 0148 1F22     		mov	r2, #31
 2873 014a BA18     		add	r2, r7, r2
 2874 014c 1278     		ldrb	r2, [r2]
 2875 014e 0121     		mov	r1, #1
 2876 0150 0A43     		orr	r2, r1
 2877 0152 1A70     		strb	r2, [r3]
 2878 0154 1E23     		mov	r3, #30
 2879 0156 FB18     		add	r3, r7, r3
 2880 0158 1E22     		mov	r2, #30
 2881 015a BA18     		add	r2, r7, r2
 2882 015c 1278     		ldrb	r2, [r2]
 2883 015e 203A     		sub	r2, r2, #32
 2884 0160 1A70     		strb	r2, [r3]
 2885              	.L170:
1803:.\ff/ff.c     **** 				}
1804:.\ff/ff.c     **** 			}
1805:.\ff/ff.c     **** 			sfn[i++] = c;
 2886              		.loc 1 1805 0
 2887 0162 3B69     		ldr	r3, [r7, #16]
 2888 0164 5A1C     		add	r2, r3, #1
 2889 0166 3A61     		str	r2, [r7, #16]
 2890 0168 BA68     		ldr	r2, [r7, #8]
 2891 016a D318     		add	r3, r2, r3
 2892 016c 1E22     		mov	r2, #30
 2893 016e BA18     		add	r2, r7, r2
 2894 0170 1278     		ldrb	r2, [r2]
 2895 0172 1A70     		strb	r2, [r3]
 2896              	.L166:
1806:.\ff/ff.c     **** 		}
1807:.\ff/ff.c     **** 	}
 2897              		.loc 1 1807 0
 2898 0174 6BE7     		b	.L171
 2899              	.L160:
1808:.\ff/ff.c     **** 	*path = &p[si];						/* Return pointer to the next segment */
 2900              		.loc 1 1808 0
 2901 0176 FA68     		ldr	r2, [r7, #12]
 2902 0178 7B69     		ldr	r3, [r7, #20]
 2903 017a D218     		add	r2, r2, r3
 2904 017c 3B68     		ldr	r3, [r7]
 2905 017e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 84


1809:.\ff/ff.c     **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 2906              		.loc 1 1809 0
 2907 0180 1E23     		mov	r3, #30
 2908 0182 FB18     		add	r3, r7, r3
 2909 0184 1B78     		ldrb	r3, [r3]
 2910 0186 202B     		cmp	r3, #32
 2911 0188 01D8     		bhi	.L172
 2912              		.loc 1 1809 0 is_stmt 0 discriminator 1
 2913 018a 0422     		mov	r2, #4
 2914 018c 00E0     		b	.L173
 2915              	.L172:
 2916              		.loc 1 1809 0 discriminator 2
 2917 018e 0022     		mov	r2, #0
 2918              	.L173:
 2919              		.loc 1 1809 0 discriminator 4
 2920 0190 1E23     		mov	r3, #30
 2921 0192 FB18     		add	r3, r7, r3
 2922 0194 1A70     		strb	r2, [r3]
1810:.\ff/ff.c     **** 
1811:.\ff/ff.c     **** 	if (!i) return FR_INVALID_NAME;		/* Reject nul string */
 2923              		.loc 1 1811 0 is_stmt 1 discriminator 4
 2924 0196 3B69     		ldr	r3, [r7, #16]
 2925 0198 002B     		cmp	r3, #0
 2926 019a 01D1     		bne	.L174
 2927              		.loc 1 1811 0 is_stmt 0 discriminator 1
 2928 019c 0623     		mov	r3, #6
 2929 019e 35E0     		b	.L165
 2930              	.L174:
1812:.\ff/ff.c     **** 	if (sfn[0] == DDE) sfn[0] = NDDE;	/* When first char collides with DDE, replace it with 0x05 */
 2931              		.loc 1 1812 0 is_stmt 1
 2932 01a0 BB68     		ldr	r3, [r7, #8]
 2933 01a2 1B78     		ldrb	r3, [r3]
 2934 01a4 E52B     		cmp	r3, #229
 2935 01a6 02D1     		bne	.L175
 2936              		.loc 1 1812 0 is_stmt 0 discriminator 1
 2937 01a8 BB68     		ldr	r3, [r7, #8]
 2938 01aa 0522     		mov	r2, #5
 2939 01ac 1A70     		strb	r2, [r3]
 2940              	.L175:
1813:.\ff/ff.c     **** 
1814:.\ff/ff.c     **** 	if (ni == 8) b <<= 2;
 2941              		.loc 1 1814 0 is_stmt 1
 2942 01ae BB69     		ldr	r3, [r7, #24]
 2943 01b0 082B     		cmp	r3, #8
 2944 01b2 06D1     		bne	.L176
 2945              		.loc 1 1814 0 is_stmt 0 discriminator 1
 2946 01b4 1F23     		mov	r3, #31
 2947 01b6 FB18     		add	r3, r7, r3
 2948 01b8 1F22     		mov	r2, #31
 2949 01ba BA18     		add	r2, r7, r2
 2950 01bc 1278     		ldrb	r2, [r2]
 2951 01be 9200     		lsl	r2, r2, #2
 2952 01c0 1A70     		strb	r2, [r3]
 2953              	.L176:
1815:.\ff/ff.c     **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
 2954              		.loc 1 1815 0 is_stmt 1
 2955 01c2 1F23     		mov	r3, #31
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 85


 2956 01c4 FB18     		add	r3, r7, r3
 2957 01c6 1B78     		ldrb	r3, [r3]
 2958 01c8 0322     		mov	r2, #3
 2959 01ca 1340     		and	r3, r2
 2960 01cc 012B     		cmp	r3, #1
 2961 01ce 07D1     		bne	.L177
 2962              		.loc 1 1815 0 is_stmt 0 discriminator 1
 2963 01d0 1E23     		mov	r3, #30
 2964 01d2 FB18     		add	r3, r7, r3
 2965 01d4 1E22     		mov	r2, #30
 2966 01d6 BA18     		add	r2, r7, r2
 2967 01d8 1278     		ldrb	r2, [r2]
 2968 01da 1021     		mov	r1, #16
 2969 01dc 0A43     		orr	r2, r1
 2970 01de 1A70     		strb	r2, [r3]
 2971              	.L177:
1816:.\ff/ff.c     **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
 2972              		.loc 1 1816 0 is_stmt 1
 2973 01e0 1F23     		mov	r3, #31
 2974 01e2 FB18     		add	r3, r7, r3
 2975 01e4 1B78     		ldrb	r3, [r3]
 2976 01e6 0C22     		mov	r2, #12
 2977 01e8 1340     		and	r3, r2
 2978 01ea 042B     		cmp	r3, #4
 2979 01ec 07D1     		bne	.L178
 2980              		.loc 1 1816 0 is_stmt 0 discriminator 1
 2981 01ee 1E23     		mov	r3, #30
 2982 01f0 FB18     		add	r3, r7, r3
 2983 01f2 1E22     		mov	r2, #30
 2984 01f4 BA18     		add	r2, r7, r2
 2985 01f6 1278     		ldrb	r2, [r2]
 2986 01f8 0821     		mov	r1, #8
 2987 01fa 0A43     		orr	r2, r1
 2988 01fc 1A70     		strb	r2, [r3]
 2989              	.L178:
1817:.\ff/ff.c     **** 
1818:.\ff/ff.c     **** 	sfn[NS] = c;		/* Store NT flag, File name is created */
 2990              		.loc 1 1818 0 is_stmt 1
 2991 01fe BB68     		ldr	r3, [r7, #8]
 2992 0200 0B33     		add	r3, r3, #11
 2993 0202 1E22     		mov	r2, #30
 2994 0204 BA18     		add	r2, r7, r2
 2995 0206 1278     		ldrb	r2, [r2]
 2996 0208 1A70     		strb	r2, [r3]
1819:.\ff/ff.c     **** 
1820:.\ff/ff.c     **** 	return FR_OK;
 2997              		.loc 1 1820 0
 2998 020a 0023     		mov	r3, #0
 2999              	.L165:
1821:.\ff/ff.c     **** #endif
1822:.\ff/ff.c     **** }
 3000              		.loc 1 1822 0
 3001 020c 181C     		mov	r0, r3
 3002 020e BD46     		mov	sp, r7
 3003 0210 08B0     		add	sp, sp, #32
 3004              		@ sp needed
 3005 0212 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 86


 3006              	.L181:
 3007              		.align	2
 3008              	.L180:
 3009 0214 10000000 		.word	excvt.5064
 3010 0218 00000000 		.word	.LC1
 3011              		.cfi_endproc
 3012              	.LFE19:
 3013              		.size	create_name, .-create_name
 3014              		.section	.text.get_fileinfo,"ax",%progbits
 3015              		.align	2
 3016              		.code	16
 3017              		.thumb_func
 3018              		.type	get_fileinfo, %function
 3019              	get_fileinfo:
 3020              	.LFB20:
1823:.\ff/ff.c     **** 
1824:.\ff/ff.c     **** 
1825:.\ff/ff.c     **** 
1826:.\ff/ff.c     **** 
1827:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1828:.\ff/ff.c     **** /* Get file information from directory entry                             */
1829:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1830:.\ff/ff.c     **** #if _FS_MINIMIZE <= 1
1831:.\ff/ff.c     **** static
1832:.\ff/ff.c     **** void get_fileinfo (		/* No return code */
1833:.\ff/ff.c     **** 	DIR *dj,			/* Pointer to the directory object */
1834:.\ff/ff.c     **** 	FILINFO *fno	 	/* Pointer to the file information to be filled */
1835:.\ff/ff.c     **** )
1836:.\ff/ff.c     **** {
 3021              		.loc 1 1836 0
 3022              		.cfi_startproc
 3023 0000 80B5     		push	{r7, lr}
 3024              		.cfi_def_cfa_offset 8
 3025              		.cfi_offset 7, -8
 3026              		.cfi_offset 14, -4
 3027 0002 88B0     		sub	sp, sp, #32
 3028              		.cfi_def_cfa_offset 40
 3029 0004 00AF     		add	r7, sp, #0
 3030              		.cfi_def_cfa_register 7
 3031 0006 7860     		str	r0, [r7, #4]
 3032 0008 3960     		str	r1, [r7]
1837:.\ff/ff.c     **** 	UINT i;
1838:.\ff/ff.c     **** 	BYTE nt, *dir;
1839:.\ff/ff.c     **** 	TCHAR *p, c;
1840:.\ff/ff.c     **** 
1841:.\ff/ff.c     **** 
1842:.\ff/ff.c     **** 	p = fno->fname;
 3033              		.loc 1 1842 0
 3034 000a 3B68     		ldr	r3, [r7]
 3035 000c 0933     		add	r3, r3, #9
 3036 000e BB61     		str	r3, [r7, #24]
1843:.\ff/ff.c     **** 	if (dj->sect) {
 3037              		.loc 1 1843 0
 3038 0010 7B68     		ldr	r3, [r7, #4]
 3039 0012 1B69     		ldr	r3, [r3, #16]
 3040 0014 002B     		cmp	r3, #0
 3041 0016 00D1     		bne	.LCB2809
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 87


 3042 0018 88E0     		b	.L183	@long jump
 3043              	.LCB2809:
1844:.\ff/ff.c     **** 		dir = dj->dir;
 3044              		.loc 1 1844 0
 3045 001a 7B68     		ldr	r3, [r7, #4]
 3046 001c 5B69     		ldr	r3, [r3, #20]
 3047 001e 3B61     		str	r3, [r7, #16]
1845:.\ff/ff.c     **** 		nt = dir[DIR_NTres];		/* NT flag */
 3048              		.loc 1 1845 0
 3049 0020 0F23     		mov	r3, #15
 3050 0022 FB18     		add	r3, r7, r3
 3051 0024 3A69     		ldr	r2, [r7, #16]
 3052 0026 127B     		ldrb	r2, [r2, #12]
 3053 0028 1A70     		strb	r2, [r3]
1846:.\ff/ff.c     **** 		for (i = 0; i < 8; i++) {	/* Copy name body */
 3054              		.loc 1 1846 0
 3055 002a 0023     		mov	r3, #0
 3056 002c FB61     		str	r3, [r7, #28]
 3057 002e 1FE0     		b	.L184
 3058              	.L188:
1847:.\ff/ff.c     **** 			c = dir[i];
 3059              		.loc 1 1847 0
 3060 0030 3A69     		ldr	r2, [r7, #16]
 3061 0032 FB69     		ldr	r3, [r7, #28]
 3062 0034 D218     		add	r2, r2, r3
 3063 0036 1723     		mov	r3, #23
 3064 0038 FB18     		add	r3, r7, r3
 3065 003a 1278     		ldrb	r2, [r2]
 3066 003c 1A70     		strb	r2, [r3]
1848:.\ff/ff.c     **** 			if (c == ' ') break;
 3067              		.loc 1 1848 0
 3068 003e 1723     		mov	r3, #23
 3069 0040 FB18     		add	r3, r7, r3
 3070 0042 1B78     		ldrb	r3, [r3]
 3071 0044 202B     		cmp	r3, #32
 3072 0046 00D1     		bne	.L185
 3073 0048 15E0     		b	.L186
 3074              	.L185:
1849:.\ff/ff.c     **** 			if (c == NDDE) c = (TCHAR)DDE;
 3075              		.loc 1 1849 0
 3076 004a 1723     		mov	r3, #23
 3077 004c FB18     		add	r3, r7, r3
 3078 004e 1B78     		ldrb	r3, [r3]
 3079 0050 052B     		cmp	r3, #5
 3080 0052 03D1     		bne	.L193
 3081              		.loc 1 1849 0 is_stmt 0 discriminator 1
 3082 0054 1723     		mov	r3, #23
 3083 0056 FB18     		add	r3, r7, r3
 3084 0058 E522     		mov	r2, #229
 3085 005a 1A70     		strb	r2, [r3]
 3086              	.L193:
1850:.\ff/ff.c     **** 			if (_USE_LFN && (nt & NS_BODY) && IsUpper(c)) c += 0x20;
1851:.\ff/ff.c     **** #if _LFN_UNICODE
1852:.\ff/ff.c     **** 			if (IsDBCS1(c) && i < 7 && IsDBCS2(dir[i+1]))
1853:.\ff/ff.c     **** 				c = (c << 8) | dir[++i];
1854:.\ff/ff.c     **** 			c = ff_convert(c, 1);
1855:.\ff/ff.c     **** 			if (!c) c = '?';
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 88


1856:.\ff/ff.c     **** #endif
1857:.\ff/ff.c     **** 			*p++ = c;
 3087              		.loc 1 1857 0 is_stmt 1 discriminator 2
 3088 005c BB69     		ldr	r3, [r7, #24]
 3089 005e 5A1C     		add	r2, r3, #1
 3090 0060 BA61     		str	r2, [r7, #24]
 3091 0062 1722     		mov	r2, #23
 3092 0064 BA18     		add	r2, r7, r2
 3093 0066 1278     		ldrb	r2, [r2]
 3094 0068 1A70     		strb	r2, [r3]
1846:.\ff/ff.c     **** 			c = dir[i];
 3095              		.loc 1 1846 0 discriminator 2
 3096 006a FB69     		ldr	r3, [r7, #28]
 3097 006c 0133     		add	r3, r3, #1
 3098 006e FB61     		str	r3, [r7, #28]
 3099              	.L184:
1846:.\ff/ff.c     **** 			c = dir[i];
 3100              		.loc 1 1846 0 is_stmt 0 discriminator 1
 3101 0070 FB69     		ldr	r3, [r7, #28]
 3102 0072 072B     		cmp	r3, #7
 3103 0074 DCD9     		bls	.L188
 3104              	.L186:
1858:.\ff/ff.c     **** 		}
1859:.\ff/ff.c     **** 		if (dir[8] != ' ') {		/* Copy name extension */
 3105              		.loc 1 1859 0 is_stmt 1
 3106 0076 3B69     		ldr	r3, [r7, #16]
 3107 0078 0833     		add	r3, r3, #8
 3108 007a 1B78     		ldrb	r3, [r3]
 3109 007c 202B     		cmp	r3, #32
 3110 007e 21D0     		beq	.L189
1860:.\ff/ff.c     **** 			*p++ = '.';
 3111              		.loc 1 1860 0
 3112 0080 BB69     		ldr	r3, [r7, #24]
 3113 0082 5A1C     		add	r2, r3, #1
 3114 0084 BA61     		str	r2, [r7, #24]
 3115 0086 2E22     		mov	r2, #46
 3116 0088 1A70     		strb	r2, [r3]
1861:.\ff/ff.c     **** 			for (i = 8; i < 11; i++) {
 3117              		.loc 1 1861 0
 3118 008a 0823     		mov	r3, #8
 3119 008c FB61     		str	r3, [r7, #28]
 3120 008e 16E0     		b	.L190
 3121              	.L192:
1862:.\ff/ff.c     **** 				c = dir[i];
 3122              		.loc 1 1862 0
 3123 0090 3A69     		ldr	r2, [r7, #16]
 3124 0092 FB69     		ldr	r3, [r7, #28]
 3125 0094 D218     		add	r2, r2, r3
 3126 0096 1723     		mov	r3, #23
 3127 0098 FB18     		add	r3, r7, r3
 3128 009a 1278     		ldrb	r2, [r2]
 3129 009c 1A70     		strb	r2, [r3]
1863:.\ff/ff.c     **** 				if (c == ' ') break;
 3130              		.loc 1 1863 0
 3131 009e 1723     		mov	r3, #23
 3132 00a0 FB18     		add	r3, r7, r3
 3133 00a2 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 89


 3134 00a4 202B     		cmp	r3, #32
 3135 00a6 00D1     		bne	.L191
 3136 00a8 0CE0     		b	.L189
 3137              	.L191:
1864:.\ff/ff.c     **** 				if (_USE_LFN && (nt & NS_EXT) && IsUpper(c)) c += 0x20;
1865:.\ff/ff.c     **** #if _LFN_UNICODE
1866:.\ff/ff.c     **** 				if (IsDBCS1(c) && i < 10 && IsDBCS2(dir[i+1]))
1867:.\ff/ff.c     **** 					c = (c << 8) | dir[++i];
1868:.\ff/ff.c     **** 				c = ff_convert(c, 1);
1869:.\ff/ff.c     **** 				if (!c) c = '?';
1870:.\ff/ff.c     **** #endif
1871:.\ff/ff.c     **** 				*p++ = c;
 3138              		.loc 1 1871 0 discriminator 2
 3139 00aa BB69     		ldr	r3, [r7, #24]
 3140 00ac 5A1C     		add	r2, r3, #1
 3141 00ae BA61     		str	r2, [r7, #24]
 3142 00b0 1722     		mov	r2, #23
 3143 00b2 BA18     		add	r2, r7, r2
 3144 00b4 1278     		ldrb	r2, [r2]
 3145 00b6 1A70     		strb	r2, [r3]
1861:.\ff/ff.c     **** 				c = dir[i];
 3146              		.loc 1 1861 0 discriminator 2
 3147 00b8 FB69     		ldr	r3, [r7, #28]
 3148 00ba 0133     		add	r3, r3, #1
 3149 00bc FB61     		str	r3, [r7, #28]
 3150              	.L190:
1861:.\ff/ff.c     **** 				c = dir[i];
 3151              		.loc 1 1861 0 is_stmt 0 discriminator 1
 3152 00be FB69     		ldr	r3, [r7, #28]
 3153 00c0 0A2B     		cmp	r3, #10
 3154 00c2 E5D9     		bls	.L192
 3155              	.L189:
1872:.\ff/ff.c     **** 			}
1873:.\ff/ff.c     **** 		}
1874:.\ff/ff.c     **** 		fno->fattrib = dir[DIR_Attr];				/* Attribute */
 3156              		.loc 1 1874 0 is_stmt 1
 3157 00c4 3B69     		ldr	r3, [r7, #16]
 3158 00c6 DA7A     		ldrb	r2, [r3, #11]
 3159 00c8 3B68     		ldr	r3, [r7]
 3160 00ca 1A72     		strb	r2, [r3, #8]
1875:.\ff/ff.c     **** 		fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
 3161              		.loc 1 1875 0
 3162 00cc 3B69     		ldr	r3, [r7, #16]
 3163 00ce 1F33     		add	r3, r3, #31
 3164 00d0 1B78     		ldrb	r3, [r3]
 3165 00d2 1A06     		lsl	r2, r3, #24
 3166 00d4 3B69     		ldr	r3, [r7, #16]
 3167 00d6 1E33     		add	r3, r3, #30
 3168 00d8 1B78     		ldrb	r3, [r3]
 3169 00da 1B04     		lsl	r3, r3, #16
 3170 00dc 1343     		orr	r3, r2
 3171 00de 3A69     		ldr	r2, [r7, #16]
 3172 00e0 1D32     		add	r2, r2, #29
 3173 00e2 1278     		ldrb	r2, [r2]
 3174 00e4 1202     		lsl	r2, r2, #8
 3175 00e6 1343     		orr	r3, r2
 3176 00e8 3A69     		ldr	r2, [r7, #16]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 90


 3177 00ea 1C32     		add	r2, r2, #28
 3178 00ec 1278     		ldrb	r2, [r2]
 3179 00ee 1A43     		orr	r2, r3
 3180 00f0 3B68     		ldr	r3, [r7]
 3181 00f2 1A60     		str	r2, [r3]
1876:.\ff/ff.c     **** 		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
 3182              		.loc 1 1876 0
 3183 00f4 3B69     		ldr	r3, [r7, #16]
 3184 00f6 1933     		add	r3, r3, #25
 3185 00f8 1B78     		ldrb	r3, [r3]
 3186 00fa 1B02     		lsl	r3, r3, #8
 3187 00fc 9AB2     		uxth	r2, r3
 3188 00fe 3B69     		ldr	r3, [r7, #16]
 3189 0100 1833     		add	r3, r3, #24
 3190 0102 1B78     		ldrb	r3, [r3]
 3191 0104 9BB2     		uxth	r3, r3
 3192 0106 1343     		orr	r3, r2
 3193 0108 9BB2     		uxth	r3, r3
 3194 010a 9AB2     		uxth	r2, r3
 3195 010c 3B68     		ldr	r3, [r7]
 3196 010e 9A80     		strh	r2, [r3, #4]
1877:.\ff/ff.c     **** 		fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
 3197              		.loc 1 1877 0
 3198 0110 3B69     		ldr	r3, [r7, #16]
 3199 0112 1733     		add	r3, r3, #23
 3200 0114 1B78     		ldrb	r3, [r3]
 3201 0116 1B02     		lsl	r3, r3, #8
 3202 0118 9AB2     		uxth	r2, r3
 3203 011a 3B69     		ldr	r3, [r7, #16]
 3204 011c 1633     		add	r3, r3, #22
 3205 011e 1B78     		ldrb	r3, [r3]
 3206 0120 9BB2     		uxth	r3, r3
 3207 0122 1343     		orr	r3, r2
 3208 0124 9BB2     		uxth	r3, r3
 3209 0126 9AB2     		uxth	r2, r3
 3210 0128 3B68     		ldr	r3, [r7]
 3211 012a DA80     		strh	r2, [r3, #6]
 3212              	.L183:
1878:.\ff/ff.c     **** 	}
1879:.\ff/ff.c     **** 	*p = 0;		/* Terminate SFN str by a \0 */
 3213              		.loc 1 1879 0
 3214 012c BB69     		ldr	r3, [r7, #24]
 3215 012e 0022     		mov	r2, #0
 3216 0130 1A70     		strb	r2, [r3]
1880:.\ff/ff.c     **** 
1881:.\ff/ff.c     **** #if _USE_LFN
1882:.\ff/ff.c     **** 	if (fno->lfname && fno->lfsize) {
1883:.\ff/ff.c     **** 		TCHAR *tp = fno->lfname;
1884:.\ff/ff.c     **** 		WCHAR w, *lfn;
1885:.\ff/ff.c     **** 
1886:.\ff/ff.c     **** 		i = 0;
1887:.\ff/ff.c     **** 		if (dj->sect && dj->lfn_idx != 0xFFFF) {/* Get LFN if available */
1888:.\ff/ff.c     **** 			lfn = dj->lfn;
1889:.\ff/ff.c     **** 			while ((w = *lfn++) != 0) {			/* Get an LFN char */
1890:.\ff/ff.c     **** #if !_LFN_UNICODE
1891:.\ff/ff.c     **** 				w = ff_convert(w, 0);			/* Unicode -> OEM conversion */
1892:.\ff/ff.c     **** 				if (!w) { i = 0; break; }		/* Could not convert, no LFN */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 91


1893:.\ff/ff.c     **** 				if (_DF1S && w >= 0x100)		/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
1894:.\ff/ff.c     **** 					tp[i++] = (TCHAR)(w >> 8);
1895:.\ff/ff.c     **** #endif
1896:.\ff/ff.c     **** 				if (i >= fno->lfsize - 1) { i = 0; break; }	/* Buffer overflow, no LFN */
1897:.\ff/ff.c     **** 				tp[i++] = (TCHAR)w;
1898:.\ff/ff.c     **** 			}
1899:.\ff/ff.c     **** 		}
1900:.\ff/ff.c     **** 		tp[i] = 0;	/* Terminate the LFN str by a \0 */
1901:.\ff/ff.c     **** 	}
1902:.\ff/ff.c     **** #endif
1903:.\ff/ff.c     **** }
 3217              		.loc 1 1903 0
 3218 0132 BD46     		mov	sp, r7
 3219 0134 08B0     		add	sp, sp, #32
 3220              		@ sp needed
 3221 0136 80BD     		pop	{r7, pc}
 3222              		.cfi_endproc
 3223              	.LFE20:
 3224              		.size	get_fileinfo, .-get_fileinfo
 3225              		.section	.text.follow_path,"ax",%progbits
 3226              		.align	2
 3227              		.code	16
 3228              		.thumb_func
 3229              		.type	follow_path, %function
 3230              	follow_path:
 3231              	.LFB21:
1904:.\ff/ff.c     **** #endif /* _FS_MINIMIZE <= 1 */
1905:.\ff/ff.c     **** 
1906:.\ff/ff.c     **** 
1907:.\ff/ff.c     **** 
1908:.\ff/ff.c     **** 
1909:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1910:.\ff/ff.c     **** /* Follow a file path                                                    */
1911:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1912:.\ff/ff.c     **** 
1913:.\ff/ff.c     **** static
1914:.\ff/ff.c     **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
1915:.\ff/ff.c     **** 	DIR *dj,			/* Directory object to return last directory and found object */
1916:.\ff/ff.c     **** 	const TCHAR *path	/* Full-path string to find a file or directory */
1917:.\ff/ff.c     **** )
1918:.\ff/ff.c     **** {
 3232              		.loc 1 1918 0
 3233              		.cfi_startproc
 3234 0000 90B5     		push	{r4, r7, lr}
 3235              		.cfi_def_cfa_offset 12
 3236              		.cfi_offset 4, -12
 3237              		.cfi_offset 7, -8
 3238              		.cfi_offset 14, -4
 3239 0002 85B0     		sub	sp, sp, #20
 3240              		.cfi_def_cfa_offset 32
 3241 0004 00AF     		add	r7, sp, #0
 3242              		.cfi_def_cfa_register 7
 3243 0006 7860     		str	r0, [r7, #4]
 3244 0008 3960     		str	r1, [r7]
1919:.\ff/ff.c     **** 	FRESULT res;
1920:.\ff/ff.c     **** 	BYTE *dir, ns;
1921:.\ff/ff.c     **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 92


1922:.\ff/ff.c     **** 
1923:.\ff/ff.c     **** #if _FS_RPATH
1924:.\ff/ff.c     **** 	if (*path == '/' || *path == '\\') { /* There is a heading separator */
1925:.\ff/ff.c     **** 		path++;	dj->sclust = 0;		/* Strip it and start from the root dir */
1926:.\ff/ff.c     **** 	} else {							/* No heading separator */
1927:.\ff/ff.c     **** 		dj->sclust = dj->fs->cdir;	/* Start from the current dir */
1928:.\ff/ff.c     **** 	}
1929:.\ff/ff.c     **** #else
1930:.\ff/ff.c     **** 	if (*path == '/' || *path == '\\')	/* Strip heading separator if exist */
 3245              		.loc 1 1930 0
 3246 000a 3B68     		ldr	r3, [r7]
 3247 000c 1B78     		ldrb	r3, [r3]
 3248 000e 2F2B     		cmp	r3, #47
 3249 0010 03D0     		beq	.L195
 3250              		.loc 1 1930 0 is_stmt 0 discriminator 1
 3251 0012 3B68     		ldr	r3, [r7]
 3252 0014 1B78     		ldrb	r3, [r3]
 3253 0016 5C2B     		cmp	r3, #92
 3254 0018 02D1     		bne	.L196
 3255              	.L195:
1931:.\ff/ff.c     **** 		path++;
 3256              		.loc 1 1931 0 is_stmt 1
 3257 001a 3B68     		ldr	r3, [r7]
 3258 001c 0133     		add	r3, r3, #1
 3259 001e 3B60     		str	r3, [r7]
 3260              	.L196:
1932:.\ff/ff.c     **** 	dj->sclust = 0;						/* Start from the root dir */
 3261              		.loc 1 1932 0
 3262 0020 7B68     		ldr	r3, [r7, #4]
 3263 0022 0022     		mov	r2, #0
 3264 0024 9A60     		str	r2, [r3, #8]
1933:.\ff/ff.c     **** #endif
1934:.\ff/ff.c     **** 
1935:.\ff/ff.c     **** 	if ((UINT)*path < ' ') {			/* Nul path means the start directory itself */
 3265              		.loc 1 1935 0
 3266 0026 3B68     		ldr	r3, [r7]
 3267 0028 1B78     		ldrb	r3, [r3]
 3268 002a 1F2B     		cmp	r3, #31
 3269 002c 0CD8     		bhi	.L197
1936:.\ff/ff.c     **** 		res = dir_sdi(dj, 0);
 3270              		.loc 1 1936 0
 3271 002e 0F23     		mov	r3, #15
 3272 0030 FC18     		add	r4, r7, r3
 3273 0032 7B68     		ldr	r3, [r7, #4]
 3274 0034 181C     		mov	r0, r3
 3275 0036 0021     		mov	r1, #0
 3276 0038 FFF7FEFF 		bl	dir_sdi
 3277 003c 031C     		mov	r3, r0
 3278 003e 2370     		strb	r3, [r4]
1937:.\ff/ff.c     **** 		dj->dir = 0;
 3279              		.loc 1 1937 0
 3280 0040 7B68     		ldr	r3, [r7, #4]
 3281 0042 0022     		mov	r2, #0
 3282 0044 5A61     		str	r2, [r3, #20]
 3283 0046 67E0     		b	.L198
 3284              	.L197:
1938:.\ff/ff.c     **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 93


1939:.\ff/ff.c     **** 	} else {							/* Follow path */
1940:.\ff/ff.c     **** 		for (;;) {
1941:.\ff/ff.c     **** 			res = create_name(dj, &path);	/* Get a segment */
 3285              		.loc 1 1941 0
 3286 0048 0F23     		mov	r3, #15
 3287 004a FC18     		add	r4, r7, r3
 3288 004c 7A68     		ldr	r2, [r7, #4]
 3289 004e 3B1C     		mov	r3, r7
 3290 0050 101C     		mov	r0, r2
 3291 0052 191C     		mov	r1, r3
 3292 0054 FFF7FEFF 		bl	create_name
 3293 0058 031C     		mov	r3, r0
 3294 005a 2370     		strb	r3, [r4]
1942:.\ff/ff.c     **** 			if (res != FR_OK) break;
 3295              		.loc 1 1942 0
 3296 005c 0F23     		mov	r3, #15
 3297 005e FB18     		add	r3, r7, r3
 3298 0060 1B78     		ldrb	r3, [r3]
 3299 0062 002B     		cmp	r3, #0
 3300 0064 00D0     		beq	.L199
 3301 0066 57E0     		b	.L198
 3302              	.L199:
1943:.\ff/ff.c     **** 			res = dir_find(dj);				/* Find it */
 3303              		.loc 1 1943 0
 3304 0068 0F23     		mov	r3, #15
 3305 006a FC18     		add	r4, r7, r3
 3306 006c 7B68     		ldr	r3, [r7, #4]
 3307 006e 181C     		mov	r0, r3
 3308 0070 FFF7FEFF 		bl	dir_find
 3309 0074 031C     		mov	r3, r0
 3310 0076 2370     		strb	r3, [r4]
1944:.\ff/ff.c     **** 			ns = *(dj->fn+NS);
 3311              		.loc 1 1944 0
 3312 0078 7B68     		ldr	r3, [r7, #4]
 3313 007a 9A69     		ldr	r2, [r3, #24]
 3314 007c 0E23     		mov	r3, #14
 3315 007e FB18     		add	r3, r7, r3
 3316 0080 D27A     		ldrb	r2, [r2, #11]
 3317 0082 1A70     		strb	r2, [r3]
1945:.\ff/ff.c     **** 			if (res != FR_OK) {				/* Failed to find the object */
 3318              		.loc 1 1945 0
 3319 0084 0F23     		mov	r3, #15
 3320 0086 FB18     		add	r3, r7, r3
 3321 0088 1B78     		ldrb	r3, [r3]
 3322 008a 002B     		cmp	r3, #0
 3323 008c 11D0     		beq	.L200
1946:.\ff/ff.c     **** 				if (res != FR_NO_FILE) break;	/* Abort if any hard error occured */
 3324              		.loc 1 1946 0
 3325 008e 0F23     		mov	r3, #15
 3326 0090 FB18     		add	r3, r7, r3
 3327 0092 1B78     		ldrb	r3, [r3]
 3328 0094 042B     		cmp	r3, #4
 3329 0096 00D0     		beq	.L201
 3330 0098 3EE0     		b	.L198
 3331              	.L201:
1947:.\ff/ff.c     **** 				/* Object not found */
1948:.\ff/ff.c     **** 				if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exit */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 94


1949:.\ff/ff.c     **** 					dj->sclust = 0; dj->dir = 0;	/* It is the root dir */
1950:.\ff/ff.c     **** 					res = FR_OK;
1951:.\ff/ff.c     **** 					if (!(ns & NS_LAST)) continue;
1952:.\ff/ff.c     **** 				} else {							/* Could not find the object */
1953:.\ff/ff.c     **** 					if (!(ns & NS_LAST)) res = FR_NO_PATH;
 3332              		.loc 1 1953 0
 3333 009a 0E23     		mov	r3, #14
 3334 009c FB18     		add	r3, r7, r3
 3335 009e 1B78     		ldrb	r3, [r3]
 3336 00a0 0422     		mov	r2, #4
 3337 00a2 1340     		and	r3, r2
 3338 00a4 04D1     		bne	.L202
 3339              		.loc 1 1953 0 is_stmt 0 discriminator 1
 3340 00a6 0F23     		mov	r3, #15
 3341 00a8 FB18     		add	r3, r7, r3
 3342 00aa 0522     		mov	r2, #5
 3343 00ac 1A70     		strb	r2, [r3]
1954:.\ff/ff.c     **** 				}
1955:.\ff/ff.c     **** 				break;
 3344              		.loc 1 1955 0 is_stmt 1 discriminator 1
 3345 00ae 33E0     		b	.L198
 3346              	.L202:
 3347 00b0 32E0     		b	.L198
 3348              	.L200:
1956:.\ff/ff.c     **** 			}
1957:.\ff/ff.c     **** 			if (ns & NS_LAST) break;			/* Last segment match. Function completed. */
 3349              		.loc 1 1957 0
 3350 00b2 0E23     		mov	r3, #14
 3351 00b4 FB18     		add	r3, r7, r3
 3352 00b6 1B78     		ldrb	r3, [r3]
 3353 00b8 0422     		mov	r2, #4
 3354 00ba 1340     		and	r3, r2
 3355 00bc 00D0     		beq	.L203
 3356 00be 2BE0     		b	.L198
 3357              	.L203:
1958:.\ff/ff.c     **** 			dir = dj->dir;						/* There is next segment. Follow the sub directory */
 3358              		.loc 1 1958 0
 3359 00c0 7B68     		ldr	r3, [r7, #4]
 3360 00c2 5B69     		ldr	r3, [r3, #20]
 3361 00c4 BB60     		str	r3, [r7, #8]
1959:.\ff/ff.c     **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* Cannot follow because it is a file */
 3362              		.loc 1 1959 0
 3363 00c6 BB68     		ldr	r3, [r7, #8]
 3364 00c8 0B33     		add	r3, r3, #11
 3365 00ca 1B78     		ldrb	r3, [r3]
 3366 00cc 1A1C     		mov	r2, r3
 3367 00ce 1023     		mov	r3, #16
 3368 00d0 1340     		and	r3, r2
 3369 00d2 04D1     		bne	.L204
1960:.\ff/ff.c     **** 				res = FR_NO_PATH; break;
 3370              		.loc 1 1960 0
 3371 00d4 0F23     		mov	r3, #15
 3372 00d6 FB18     		add	r3, r7, r3
 3373 00d8 0522     		mov	r2, #5
 3374 00da 1A70     		strb	r2, [r3]
 3375 00dc 1CE0     		b	.L198
 3376              	.L204:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 95


1961:.\ff/ff.c     **** 			}
1962:.\ff/ff.c     **** 			dj->sclust = LD_CLUST(dir);
 3377              		.loc 1 1962 0
 3378 00de BB68     		ldr	r3, [r7, #8]
 3379 00e0 1533     		add	r3, r3, #21
 3380 00e2 1B78     		ldrb	r3, [r3]
 3381 00e4 1B02     		lsl	r3, r3, #8
 3382 00e6 9AB2     		uxth	r2, r3
 3383 00e8 BB68     		ldr	r3, [r7, #8]
 3384 00ea 1433     		add	r3, r3, #20
 3385 00ec 1B78     		ldrb	r3, [r3]
 3386 00ee 9BB2     		uxth	r3, r3
 3387 00f0 1343     		orr	r3, r2
 3388 00f2 9BB2     		uxth	r3, r3
 3389 00f4 9BB2     		uxth	r3, r3
 3390 00f6 1B04     		lsl	r3, r3, #16
 3391 00f8 BA68     		ldr	r2, [r7, #8]
 3392 00fa 1B32     		add	r2, r2, #27
 3393 00fc 1278     		ldrb	r2, [r2]
 3394 00fe 1202     		lsl	r2, r2, #8
 3395 0100 91B2     		uxth	r1, r2
 3396 0102 BA68     		ldr	r2, [r7, #8]
 3397 0104 1A32     		add	r2, r2, #26
 3398 0106 1278     		ldrb	r2, [r2]
 3399 0108 92B2     		uxth	r2, r2
 3400 010a 0A43     		orr	r2, r1
 3401 010c 92B2     		uxth	r2, r2
 3402 010e 92B2     		uxth	r2, r2
 3403 0110 1A43     		orr	r2, r3
 3404 0112 7B68     		ldr	r3, [r7, #4]
 3405 0114 9A60     		str	r2, [r3, #8]
1963:.\ff/ff.c     **** 		}
 3406              		.loc 1 1963 0
 3407 0116 97E7     		b	.L197
 3408              	.L198:
1964:.\ff/ff.c     **** 	}
1965:.\ff/ff.c     **** 
1966:.\ff/ff.c     **** 	return res;
 3409              		.loc 1 1966 0
 3410 0118 0F23     		mov	r3, #15
 3411 011a FB18     		add	r3, r7, r3
 3412 011c 1B78     		ldrb	r3, [r3]
1967:.\ff/ff.c     **** }
 3413              		.loc 1 1967 0
 3414 011e 181C     		mov	r0, r3
 3415 0120 BD46     		mov	sp, r7
 3416 0122 05B0     		add	sp, sp, #20
 3417              		@ sp needed
 3418 0124 90BD     		pop	{r4, r7, pc}
 3419              		.cfi_endproc
 3420              	.LFE21:
 3421              		.size	follow_path, .-follow_path
 3422 0126 C046     		.section	.text.check_fs,"ax",%progbits
 3423              		.align	2
 3424              		.code	16
 3425              		.thumb_func
 3426              		.type	check_fs, %function
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 96


 3427              	check_fs:
 3428              	.LFB22:
1968:.\ff/ff.c     **** 
1969:.\ff/ff.c     **** 
1970:.\ff/ff.c     **** 
1971:.\ff/ff.c     **** 
1972:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1973:.\ff/ff.c     **** /* Load boot record and check if it is an FAT boot record                */
1974:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1975:.\ff/ff.c     **** 
1976:.\ff/ff.c     **** static
1977:.\ff/ff.c     **** BYTE check_fs (	/* 0:The FAT BR, 1:Valid BR but not an FAT, 2:Not a BR, 3:Disk error */
1978:.\ff/ff.c     **** 	FATFS *fs,	/* File system object */
1979:.\ff/ff.c     **** 	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
1980:.\ff/ff.c     **** )
1981:.\ff/ff.c     **** {
 3429              		.loc 1 1981 0
 3430              		.cfi_startproc
 3431 0000 80B5     		push	{r7, lr}
 3432              		.cfi_def_cfa_offset 8
 3433              		.cfi_offset 7, -8
 3434              		.cfi_offset 14, -4
 3435 0002 82B0     		sub	sp, sp, #8
 3436              		.cfi_def_cfa_offset 16
 3437 0004 00AF     		add	r7, sp, #0
 3438              		.cfi_def_cfa_register 7
 3439 0006 7860     		str	r0, [r7, #4]
 3440 0008 3960     		str	r1, [r7]
1982:.\ff/ff.c     **** 	if (disk_read(fs->drv, fs->win, sect, 1) != RES_OK)	/* Load boot record */
 3441              		.loc 1 1982 0
 3442 000a 7B68     		ldr	r3, [r7, #4]
 3443 000c 5978     		ldrb	r1, [r3, #1]
 3444 000e 7B68     		ldr	r3, [r7, #4]
 3445 0010 3033     		add	r3, r3, #48
 3446 0012 1A1C     		mov	r2, r3
 3447 0014 3B68     		ldr	r3, [r7]
 3448 0016 081C     		mov	r0, r1
 3449 0018 111C     		mov	r1, r2
 3450 001a 1A1C     		mov	r2, r3
 3451 001c 0123     		mov	r3, #1
 3452 001e FFF7FEFF 		bl	disk_read
 3453 0022 031E     		sub	r3, r0, #0
 3454 0024 01D0     		beq	.L207
1983:.\ff/ff.c     **** 		return 3;
 3455              		.loc 1 1983 0
 3456 0026 0323     		mov	r3, #3
 3457 0028 44E0     		b	.L208
 3458              	.L207:
1984:.\ff/ff.c     **** 	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)		/* Check record signature (always placed at offset 510 
 3459              		.loc 1 1984 0
 3460 002a 7B68     		ldr	r3, [r7, #4]
 3461 002c 234A     		ldr	r2, .L212
 3462 002e 9B5C     		ldrb	r3, [r3, r2]
 3463 0030 1B02     		lsl	r3, r3, #8
 3464 0032 99B2     		uxth	r1, r3
 3465 0034 7B68     		ldr	r3, [r7, #4]
 3466 0036 224A     		ldr	r2, .L212+4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 97


 3467 0038 9B5C     		ldrb	r3, [r3, r2]
 3468 003a 9BB2     		uxth	r3, r3
 3469 003c 0A1C     		add	r2, r1, #0
 3470 003e 1343     		orr	r3, r2
 3471 0040 9BB2     		uxth	r3, r3
 3472 0042 1BB2     		sxth	r3, r3
 3473 0044 1F4A     		ldr	r2, .L212+8
 3474 0046 9342     		cmp	r3, r2
 3475 0048 01D0     		beq	.L209
1985:.\ff/ff.c     **** 		return 2;
 3476              		.loc 1 1985 0
 3477 004a 0223     		mov	r3, #2
 3478 004c 32E0     		b	.L208
 3479              	.L209:
1986:.\ff/ff.c     **** 
1987:.\ff/ff.c     **** 	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 3480              		.loc 1 1987 0
 3481 004e 7B68     		ldr	r3, [r7, #4]
 3482 0050 6922     		mov	r2, #105
 3483 0052 9B5C     		ldrb	r3, [r3, r2]
 3484 0054 1A06     		lsl	r2, r3, #24
 3485 0056 7B68     		ldr	r3, [r7, #4]
 3486 0058 6821     		mov	r1, #104
 3487 005a 5B5C     		ldrb	r3, [r3, r1]
 3488 005c 1B04     		lsl	r3, r3, #16
 3489 005e 1343     		orr	r3, r2
 3490 0060 7A68     		ldr	r2, [r7, #4]
 3491 0062 6721     		mov	r1, #103
 3492 0064 525C     		ldrb	r2, [r2, r1]
 3493 0066 1202     		lsl	r2, r2, #8
 3494 0068 1343     		orr	r3, r2
 3495 006a 7A68     		ldr	r2, [r7, #4]
 3496 006c 6621     		mov	r1, #102
 3497 006e 525C     		ldrb	r2, [r2, r1]
 3498 0070 1343     		orr	r3, r2
 3499 0072 1B02     		lsl	r3, r3, #8
 3500 0074 1B0A     		lsr	r3, r3, #8
 3501 0076 144A     		ldr	r2, .L212+12
 3502 0078 9342     		cmp	r3, r2
 3503 007a 01D1     		bne	.L210
1988:.\ff/ff.c     **** 		return 0;
 3504              		.loc 1 1988 0
 3505 007c 0023     		mov	r3, #0
 3506 007e 19E0     		b	.L208
 3507              	.L210:
1989:.\ff/ff.c     **** 	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)
 3508              		.loc 1 1989 0
 3509 0080 7B68     		ldr	r3, [r7, #4]
 3510 0082 8522     		mov	r2, #133
 3511 0084 9B5C     		ldrb	r3, [r3, r2]
 3512 0086 1A06     		lsl	r2, r3, #24
 3513 0088 7B68     		ldr	r3, [r7, #4]
 3514 008a 8421     		mov	r1, #132
 3515 008c 5B5C     		ldrb	r3, [r3, r1]
 3516 008e 1B04     		lsl	r3, r3, #16
 3517 0090 1343     		orr	r3, r2
 3518 0092 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 98


 3519 0094 8321     		mov	r1, #131
 3520 0096 525C     		ldrb	r2, [r2, r1]
 3521 0098 1202     		lsl	r2, r2, #8
 3522 009a 1343     		orr	r3, r2
 3523 009c 7A68     		ldr	r2, [r7, #4]
 3524 009e 8221     		mov	r1, #130
 3525 00a0 525C     		ldrb	r2, [r2, r1]
 3526 00a2 1343     		orr	r3, r2
 3527 00a4 1B02     		lsl	r3, r3, #8
 3528 00a6 1B0A     		lsr	r3, r3, #8
 3529 00a8 074A     		ldr	r2, .L212+12
 3530 00aa 9342     		cmp	r3, r2
 3531 00ac 01D1     		bne	.L211
1990:.\ff/ff.c     **** 		return 0;
 3532              		.loc 1 1990 0
 3533 00ae 0023     		mov	r3, #0
 3534 00b0 00E0     		b	.L208
 3535              	.L211:
1991:.\ff/ff.c     **** 
1992:.\ff/ff.c     **** 	return 1;
 3536              		.loc 1 1992 0
 3537 00b2 0123     		mov	r3, #1
 3538              	.L208:
1993:.\ff/ff.c     **** }
 3539              		.loc 1 1993 0
 3540 00b4 181C     		mov	r0, r3
 3541 00b6 BD46     		mov	sp, r7
 3542 00b8 02B0     		add	sp, sp, #8
 3543              		@ sp needed
 3544 00ba 80BD     		pop	{r7, pc}
 3545              	.L213:
 3546              		.align	2
 3547              	.L212:
 3548 00bc 2F020000 		.word	559
 3549 00c0 2E020000 		.word	558
 3550 00c4 55AAFFFF 		.word	-21931
 3551 00c8 46415400 		.word	5521734
 3552              		.cfi_endproc
 3553              	.LFE22:
 3554              		.size	check_fs, .-check_fs
 3555              		.global	__aeabi_uidiv
 3556              		.section	.text.chk_mounted,"ax",%progbits
 3557              		.align	2
 3558              		.code	16
 3559              		.thumb_func
 3560              		.type	chk_mounted, %function
 3561              	chk_mounted:
 3562              	.LFB23:
1994:.\ff/ff.c     **** 
1995:.\ff/ff.c     **** 
1996:.\ff/ff.c     **** 
1997:.\ff/ff.c     **** 
1998:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
1999:.\ff/ff.c     **** /* Check if the file system object is valid or not                       */
2000:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2001:.\ff/ff.c     **** 
2002:.\ff/ff.c     **** static
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 99


2003:.\ff/ff.c     **** FRESULT chk_mounted (	/* FR_OK(0): successful, !=0: any error occurred */
2004:.\ff/ff.c     **** 	const TCHAR **path,	/* Pointer to pointer to the path name (drive number) */
2005:.\ff/ff.c     **** 	FATFS **rfs,		/* Pointer to pointer to the found file system object */
2006:.\ff/ff.c     **** 	BYTE chk_wp			/* !=0: Check media write protection for write access */
2007:.\ff/ff.c     **** )
2008:.\ff/ff.c     **** {
 3563              		.loc 1 2008 0
 3564              		.cfi_startproc
 3565 0000 90B5     		push	{r4, r7, lr}
 3566              		.cfi_def_cfa_offset 12
 3567              		.cfi_offset 4, -12
 3568              		.cfi_offset 7, -8
 3569              		.cfi_offset 14, -4
 3570 0002 93B0     		sub	sp, sp, #76
 3571              		.cfi_def_cfa_offset 88
 3572 0004 00AF     		add	r7, sp, #0
 3573              		.cfi_def_cfa_register 7
 3574 0006 F860     		str	r0, [r7, #12]
 3575 0008 B960     		str	r1, [r7, #8]
 3576 000a FB1D     		add	r3, r7, #7
 3577 000c 1A70     		strb	r2, [r3]
2009:.\ff/ff.c     **** 	BYTE fmt, b, *tbl;
2010:.\ff/ff.c     **** 	UINT vol;
2011:.\ff/ff.c     **** 	DSTATUS stat;
2012:.\ff/ff.c     **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat;
2013:.\ff/ff.c     **** 	WORD nrsv;
2014:.\ff/ff.c     **** 	const TCHAR *p = *path;
 3578              		.loc 1 2014 0
 3579 000e FB68     		ldr	r3, [r7, #12]
 3580 0010 1B68     		ldr	r3, [r3]
 3581 0012 FB62     		str	r3, [r7, #44]
2015:.\ff/ff.c     **** 	FATFS *fs;
2016:.\ff/ff.c     **** 
2017:.\ff/ff.c     **** 	/* Get logical drive number from the path name */
2018:.\ff/ff.c     **** 	vol = p[0] - '0';					/* Is there a drive number? */
 3582              		.loc 1 2018 0
 3583 0014 FB6A     		ldr	r3, [r7, #44]
 3584 0016 1B78     		ldrb	r3, [r3]
 3585 0018 303B     		sub	r3, r3, #48
 3586 001a 3B64     		str	r3, [r7, #64]
2019:.\ff/ff.c     **** 	if (vol <= 9 && p[1] == ':') {		/* Found a drive number, get and strip it */
 3587              		.loc 1 2019 0
 3588 001c 3B6C     		ldr	r3, [r7, #64]
 3589 001e 092B     		cmp	r3, #9
 3590 0020 0BD8     		bhi	.L215
 3591              		.loc 1 2019 0 is_stmt 0 discriminator 1
 3592 0022 FB6A     		ldr	r3, [r7, #44]
 3593 0024 0133     		add	r3, r3, #1
 3594 0026 1B78     		ldrb	r3, [r3]
 3595 0028 3A2B     		cmp	r3, #58
 3596 002a 06D1     		bne	.L215
2020:.\ff/ff.c     **** 		p += 2; *path = p;				/* Return pointer to the path name */
 3597              		.loc 1 2020 0 is_stmt 1
 3598 002c FB6A     		ldr	r3, [r7, #44]
 3599 002e 0233     		add	r3, r3, #2
 3600 0030 FB62     		str	r3, [r7, #44]
 3601 0032 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 100


 3602 0034 FA6A     		ldr	r2, [r7, #44]
 3603 0036 1A60     		str	r2, [r3]
 3604 0038 01E0     		b	.L216
 3605              	.L215:
2021:.\ff/ff.c     **** 	} else {							/* No drive number is given */
2022:.\ff/ff.c     **** #if _FS_RPATH
2023:.\ff/ff.c     **** 		vol = CurrVol;					/* Use current drive */
2024:.\ff/ff.c     **** #else
2025:.\ff/ff.c     **** 		vol = 0;						/* Use drive 0 */
 3606              		.loc 1 2025 0
 3607 003a 0023     		mov	r3, #0
 3608 003c 3B64     		str	r3, [r7, #64]
 3609              	.L216:
2026:.\ff/ff.c     **** #endif
2027:.\ff/ff.c     **** 	}
2028:.\ff/ff.c     **** 
2029:.\ff/ff.c     **** 	/* Check if the logical drive is valid or not */
2030:.\ff/ff.c     **** 	if (vol >= _VOLUMES) 				/* Is the drive number valid? */
 3610              		.loc 1 2030 0
 3611 003e 3B6C     		ldr	r3, [r7, #64]
 3612 0040 002B     		cmp	r3, #0
 3613 0042 01D0     		beq	.L217
2031:.\ff/ff.c     **** 		return FR_INVALID_DRIVE;
 3614              		.loc 1 2031 0
 3615 0044 0B23     		mov	r3, #11
 3616 0046 A2E2     		b	.L218
 3617              	.L217:
2032:.\ff/ff.c     **** 	*rfs = fs = FatFs[vol];				/* Return pointer to the corresponding file system object */
 3618              		.loc 1 2032 0
 3619 0048 D54B     		ldr	r3, .L247
 3620 004a 3A6C     		ldr	r2, [r7, #64]
 3621 004c 9200     		lsl	r2, r2, #2
 3622 004e D358     		ldr	r3, [r2, r3]
 3623 0050 BB62     		str	r3, [r7, #40]
 3624 0052 BB68     		ldr	r3, [r7, #8]
 3625 0054 BA6A     		ldr	r2, [r7, #40]
 3626 0056 1A60     		str	r2, [r3]
2033:.\ff/ff.c     **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 3627              		.loc 1 2033 0
 3628 0058 BB6A     		ldr	r3, [r7, #40]
 3629 005a 002B     		cmp	r3, #0
 3630 005c 01D1     		bne	.L219
 3631              		.loc 1 2033 0 is_stmt 0 discriminator 1
 3632 005e 0C23     		mov	r3, #12
 3633 0060 95E2     		b	.L218
 3634              	.L219:
2034:.\ff/ff.c     **** 
2035:.\ff/ff.c     **** 	ENTER_FF(fs);						/* Lock file system */
2036:.\ff/ff.c     **** 
2037:.\ff/ff.c     **** 	if (fs->fs_type) {					/* If the logical drive has been mounted */
 3635              		.loc 1 2037 0 is_stmt 1
 3636 0062 BB6A     		ldr	r3, [r7, #40]
 3637 0064 1B78     		ldrb	r3, [r3]
 3638 0066 002B     		cmp	r3, #0
 3639 0068 1CD0     		beq	.L220
2038:.\ff/ff.c     **** 		stat = disk_status(fs->drv);
 3640              		.loc 1 2038 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 101


 3641 006a BB6A     		ldr	r3, [r7, #40]
 3642 006c 5B78     		ldrb	r3, [r3, #1]
 3643 006e 2722     		mov	r2, #39
 3644 0070 BC18     		add	r4, r7, r2
 3645 0072 181C     		mov	r0, r3
 3646 0074 FFF7FEFF 		bl	disk_status
 3647 0078 031C     		mov	r3, r0
 3648 007a 2370     		strb	r3, [r4]
2039:.\ff/ff.c     **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized (has not been changed)
 3649              		.loc 1 2039 0
 3650 007c 2723     		mov	r3, #39
 3651 007e FB18     		add	r3, r7, r3
 3652 0080 1B78     		ldrb	r3, [r3]
 3653 0082 0122     		mov	r2, #1
 3654 0084 1340     		and	r3, r2
 3655 0086 0DD1     		bne	.L220
2040:.\ff/ff.c     **** #if !_FS_READONLY
2041:.\ff/ff.c     **** 			if (chk_wp && (stat & STA_PROTECT))	/* Check write protection if needed */
 3656              		.loc 1 2041 0
 3657 0088 FB1D     		add	r3, r7, #7
 3658 008a 1B78     		ldrb	r3, [r3]
 3659 008c 002B     		cmp	r3, #0
 3660 008e 07D0     		beq	.L221
 3661              		.loc 1 2041 0 is_stmt 0 discriminator 1
 3662 0090 2723     		mov	r3, #39
 3663 0092 FB18     		add	r3, r7, r3
 3664 0094 1B78     		ldrb	r3, [r3]
 3665 0096 0422     		mov	r2, #4
 3666 0098 1340     		and	r3, r2
 3667 009a 01D0     		beq	.L221
2042:.\ff/ff.c     **** 				return FR_WRITE_PROTECTED;
 3668              		.loc 1 2042 0 is_stmt 1
 3669 009c 0A23     		mov	r3, #10
 3670 009e 76E2     		b	.L218
 3671              	.L221:
2043:.\ff/ff.c     **** #endif
2044:.\ff/ff.c     **** 			return FR_OK;				/* The file system object is valid */
 3672              		.loc 1 2044 0
 3673 00a0 0023     		mov	r3, #0
 3674 00a2 74E2     		b	.L218
 3675              	.L220:
2045:.\ff/ff.c     **** 		}
2046:.\ff/ff.c     **** 	}
2047:.\ff/ff.c     **** 
2048:.\ff/ff.c     **** 	/* The logical drive must be mounted. */
2049:.\ff/ff.c     **** 	/* Following code attempts to mount a volume. (analyze BPB and initialize the fs object) */
2050:.\ff/ff.c     **** 
2051:.\ff/ff.c     **** 	fs->fs_type = 0;					/* Clear the file system object */
 3676              		.loc 1 2051 0
 3677 00a4 BB6A     		ldr	r3, [r7, #40]
 3678 00a6 0022     		mov	r2, #0
 3679 00a8 1A70     		strb	r2, [r3]
2052:.\ff/ff.c     **** 	fs->drv = (BYTE)LD2PD(vol);			/* Bind the logical drive and a physical drive */
 3680              		.loc 1 2052 0
 3681 00aa 3B6C     		ldr	r3, [r7, #64]
 3682 00ac DAB2     		uxtb	r2, r3
 3683 00ae BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 102


 3684 00b0 5A70     		strb	r2, [r3, #1]
2053:.\ff/ff.c     **** 	stat = disk_initialize(fs->drv);	/* Initialize low level disk I/O layer */
 3685              		.loc 1 2053 0
 3686 00b2 BB6A     		ldr	r3, [r7, #40]
 3687 00b4 5B78     		ldrb	r3, [r3, #1]
 3688 00b6 2722     		mov	r2, #39
 3689 00b8 BC18     		add	r4, r7, r2
 3690 00ba 181C     		mov	r0, r3
 3691 00bc FFF7FEFF 		bl	disk_initialize
 3692 00c0 031C     		mov	r3, r0
 3693 00c2 2370     		strb	r3, [r4]
2054:.\ff/ff.c     **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 3694              		.loc 1 2054 0
 3695 00c4 2723     		mov	r3, #39
 3696 00c6 FB18     		add	r3, r7, r3
 3697 00c8 1B78     		ldrb	r3, [r3]
 3698 00ca 0122     		mov	r2, #1
 3699 00cc 1340     		and	r3, r2
 3700 00ce 01D0     		beq	.L222
2055:.\ff/ff.c     **** 		return FR_NOT_READY;			/* Failed to initialize due to no media or hard error */
 3701              		.loc 1 2055 0
 3702 00d0 0323     		mov	r3, #3
 3703 00d2 5CE2     		b	.L218
 3704              	.L222:
2056:.\ff/ff.c     **** #if _MAX_SS != 512						/* Get disk sector size (variable sector size cfg only) */
2057:.\ff/ff.c     **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &fs->ssize) != RES_OK)
2058:.\ff/ff.c     **** 		return FR_DISK_ERR;
2059:.\ff/ff.c     **** #endif
2060:.\ff/ff.c     **** #if !_FS_READONLY
2061:.\ff/ff.c     **** 	if (chk_wp && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 3705              		.loc 1 2061 0
 3706 00d4 FB1D     		add	r3, r7, #7
 3707 00d6 1B78     		ldrb	r3, [r3]
 3708 00d8 002B     		cmp	r3, #0
 3709 00da 07D0     		beq	.L223
 3710              		.loc 1 2061 0 is_stmt 0 discriminator 1
 3711 00dc 2723     		mov	r3, #39
 3712 00de FB18     		add	r3, r7, r3
 3713 00e0 1B78     		ldrb	r3, [r3]
 3714 00e2 0422     		mov	r2, #4
 3715 00e4 1340     		and	r3, r2
 3716 00e6 01D0     		beq	.L223
2062:.\ff/ff.c     **** 		return FR_WRITE_PROTECTED;
 3717              		.loc 1 2062 0 is_stmt 1
 3718 00e8 0A23     		mov	r3, #10
 3719 00ea 50E2     		b	.L218
 3720              	.L223:
2063:.\ff/ff.c     **** #endif
2064:.\ff/ff.c     **** 	/* Search FAT partition on the drive. Supports only generic partitionings, FDISK and SFD. */
2065:.\ff/ff.c     **** 	fmt = check_fs(fs, bsect = 0);		/* Check sector 0 if it is a VBR */
 3721              		.loc 1 2065 0
 3722 00ec 0023     		mov	r3, #0
 3723 00ee FB63     		str	r3, [r7, #60]
 3724 00f0 4723     		mov	r3, #71
 3725 00f2 FC18     		add	r4, r7, r3
 3726 00f4 BA6A     		ldr	r2, [r7, #40]
 3727 00f6 FB6B     		ldr	r3, [r7, #60]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 103


 3728 00f8 101C     		mov	r0, r2
 3729 00fa 191C     		mov	r1, r3
 3730 00fc FFF7FEFF 		bl	check_fs
 3731 0100 031C     		mov	r3, r0
 3732 0102 2370     		strb	r3, [r4]
2066:.\ff/ff.c     **** 	if (fmt == 1) {						/* Not an FAT-VBR, the disk may be partitioned */
 3733              		.loc 1 2066 0
 3734 0104 4723     		mov	r3, #71
 3735 0106 FB18     		add	r3, r7, r3
 3736 0108 1B78     		ldrb	r3, [r3]
 3737 010a 012B     		cmp	r3, #1
 3738 010c 25D1     		bne	.L224
2067:.\ff/ff.c     **** 		/* Check the partition listed in top of the partition table */
2068:.\ff/ff.c     **** 		tbl = &fs->win[MBR_Table + LD2PT(vol) * SZ_PTE];/* Partition table */
 3739              		.loc 1 2068 0
 3740 010e BB6A     		ldr	r3, [r7, #40]
 3741 0110 EF33     		add	r3, r3, #239
 3742 0112 FF33     		add	r3, r3, #255
 3743 0114 3B62     		str	r3, [r7, #32]
2069:.\ff/ff.c     **** 		if (tbl[4]) {									/* Is the partition existing? */
 3744              		.loc 1 2069 0
 3745 0116 3B6A     		ldr	r3, [r7, #32]
 3746 0118 0433     		add	r3, r3, #4
 3747 011a 1B78     		ldrb	r3, [r3]
 3748 011c 002B     		cmp	r3, #0
 3749 011e 1CD0     		beq	.L224
2070:.\ff/ff.c     **** 			bsect = LD_DWORD(&tbl[8]);					/* Partition offset in LBA */
 3750              		.loc 1 2070 0
 3751 0120 3B6A     		ldr	r3, [r7, #32]
 3752 0122 0B33     		add	r3, r3, #11
 3753 0124 1B78     		ldrb	r3, [r3]
 3754 0126 1A06     		lsl	r2, r3, #24
 3755 0128 3B6A     		ldr	r3, [r7, #32]
 3756 012a 0A33     		add	r3, r3, #10
 3757 012c 1B78     		ldrb	r3, [r3]
 3758 012e 1B04     		lsl	r3, r3, #16
 3759 0130 1343     		orr	r3, r2
 3760 0132 3A6A     		ldr	r2, [r7, #32]
 3761 0134 0932     		add	r2, r2, #9
 3762 0136 1278     		ldrb	r2, [r2]
 3763 0138 1202     		lsl	r2, r2, #8
 3764 013a 1343     		orr	r3, r2
 3765 013c 3A6A     		ldr	r2, [r7, #32]
 3766 013e 0832     		add	r2, r2, #8
 3767 0140 1278     		ldrb	r2, [r2]
 3768 0142 1343     		orr	r3, r2
 3769 0144 FB63     		str	r3, [r7, #60]
2071:.\ff/ff.c     **** 			fmt = check_fs(fs, bsect);					/* Check the partition */
 3770              		.loc 1 2071 0
 3771 0146 4723     		mov	r3, #71
 3772 0148 FC18     		add	r4, r7, r3
 3773 014a BA6A     		ldr	r2, [r7, #40]
 3774 014c FB6B     		ldr	r3, [r7, #60]
 3775 014e 101C     		mov	r0, r2
 3776 0150 191C     		mov	r1, r3
 3777 0152 FFF7FEFF 		bl	check_fs
 3778 0156 031C     		mov	r3, r0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 104


 3779 0158 2370     		strb	r3, [r4]
 3780              	.L224:
2072:.\ff/ff.c     **** 		}
2073:.\ff/ff.c     **** 	}
2074:.\ff/ff.c     **** 	if (fmt == 3) return FR_DISK_ERR;
 3781              		.loc 1 2074 0
 3782 015a 4723     		mov	r3, #71
 3783 015c FB18     		add	r3, r7, r3
 3784 015e 1B78     		ldrb	r3, [r3]
 3785 0160 032B     		cmp	r3, #3
 3786 0162 01D1     		bne	.L225
 3787              		.loc 1 2074 0 is_stmt 0 discriminator 1
 3788 0164 0123     		mov	r3, #1
 3789 0166 12E2     		b	.L218
 3790              	.L225:
2075:.\ff/ff.c     **** 	if (fmt) return FR_NO_FILESYSTEM;					/* No FAT volume is found */
 3791              		.loc 1 2075 0 is_stmt 1
 3792 0168 4723     		mov	r3, #71
 3793 016a FB18     		add	r3, r7, r3
 3794 016c 1B78     		ldrb	r3, [r3]
 3795 016e 002B     		cmp	r3, #0
 3796 0170 01D0     		beq	.L226
 3797              		.loc 1 2075 0 is_stmt 0 discriminator 1
 3798 0172 0D23     		mov	r3, #13
 3799 0174 0BE2     		b	.L218
 3800              	.L226:
2076:.\ff/ff.c     **** 
2077:.\ff/ff.c     **** 	/* Following code initializes the file system object */
2078:.\ff/ff.c     **** 
2079:.\ff/ff.c     **** 	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical s
 3801              		.loc 1 2079 0 is_stmt 1
 3802 0176 BB6A     		ldr	r3, [r7, #40]
 3803 0178 3C22     		mov	r2, #60
 3804 017a 9B5C     		ldrb	r3, [r3, r2]
 3805 017c 1B02     		lsl	r3, r3, #8
 3806 017e 99B2     		uxth	r1, r3
 3807 0180 BB6A     		ldr	r3, [r7, #40]
 3808 0182 3B22     		mov	r2, #59
 3809 0184 9B5C     		ldrb	r3, [r3, r2]
 3810 0186 9BB2     		uxth	r3, r3
 3811 0188 0A1C     		add	r2, r1, #0
 3812 018a 1343     		orr	r3, r2
 3813 018c 9BB2     		uxth	r3, r3
 3814 018e 1AB2     		sxth	r2, r3
 3815 0190 8023     		mov	r3, #128
 3816 0192 9B00     		lsl	r3, r3, #2
 3817 0194 9A42     		cmp	r2, r3
 3818 0196 01D0     		beq	.L227
2080:.\ff/ff.c     **** 		return FR_NO_FILESYSTEM;
 3819              		.loc 1 2080 0
 3820 0198 0D23     		mov	r3, #13
 3821 019a F8E1     		b	.L218
 3822              	.L227:
2081:.\ff/ff.c     **** 
2082:.\ff/ff.c     **** 	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
 3823              		.loc 1 2082 0
 3824 019c BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 105


 3825 019e 4722     		mov	r2, #71
 3826 01a0 9B5C     		ldrb	r3, [r3, r2]
 3827 01a2 1B02     		lsl	r3, r3, #8
 3828 01a4 99B2     		uxth	r1, r3
 3829 01a6 BB6A     		ldr	r3, [r7, #40]
 3830 01a8 4622     		mov	r2, #70
 3831 01aa 9B5C     		ldrb	r3, [r3, r2]
 3832 01ac 9BB2     		uxth	r3, r3
 3833 01ae 0A1C     		add	r2, r1, #0
 3834 01b0 1343     		orr	r3, r2
 3835 01b2 9BB2     		uxth	r3, r3
 3836 01b4 9BB2     		uxth	r3, r3
 3837 01b6 BB63     		str	r3, [r7, #56]
2083:.\ff/ff.c     **** 	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
 3838              		.loc 1 2083 0
 3839 01b8 BB6B     		ldr	r3, [r7, #56]
 3840 01ba 002B     		cmp	r3, #0
 3841 01bc 12D1     		bne	.L228
 3842              		.loc 1 2083 0 is_stmt 0 discriminator 1
 3843 01be BB6A     		ldr	r3, [r7, #40]
 3844 01c0 5722     		mov	r2, #87
 3845 01c2 9B5C     		ldrb	r3, [r3, r2]
 3846 01c4 1A06     		lsl	r2, r3, #24
 3847 01c6 BB6A     		ldr	r3, [r7, #40]
 3848 01c8 5621     		mov	r1, #86
 3849 01ca 5B5C     		ldrb	r3, [r3, r1]
 3850 01cc 1B04     		lsl	r3, r3, #16
 3851 01ce 1343     		orr	r3, r2
 3852 01d0 BA6A     		ldr	r2, [r7, #40]
 3853 01d2 5521     		mov	r1, #85
 3854 01d4 525C     		ldrb	r2, [r2, r1]
 3855 01d6 1202     		lsl	r2, r2, #8
 3856 01d8 1343     		orr	r3, r2
 3857 01da BA6A     		ldr	r2, [r7, #40]
 3858 01dc 5421     		mov	r1, #84
 3859 01de 525C     		ldrb	r2, [r2, r1]
 3860 01e0 1343     		orr	r3, r2
 3861 01e2 BB63     		str	r3, [r7, #56]
 3862              	.L228:
2084:.\ff/ff.c     **** 	fs->fsize = fasize;
 3863              		.loc 1 2084 0 is_stmt 1
 3864 01e4 BB6A     		ldr	r3, [r7, #40]
 3865 01e6 BA6B     		ldr	r2, [r7, #56]
 3866 01e8 DA61     		str	r2, [r3, #28]
2085:.\ff/ff.c     **** 
2086:.\ff/ff.c     **** 	fs->n_fats = b = fs->win[BPB_NumFATs];				/* Number of FAT copies */
 3867              		.loc 1 2086 0
 3868 01ea 1F23     		mov	r3, #31
 3869 01ec FB18     		add	r3, r7, r3
 3870 01ee BA6A     		ldr	r2, [r7, #40]
 3871 01f0 4021     		mov	r1, #64
 3872 01f2 525C     		ldrb	r2, [r2, r1]
 3873 01f4 1A70     		strb	r2, [r3]
 3874 01f6 BB6A     		ldr	r3, [r7, #40]
 3875 01f8 1F22     		mov	r2, #31
 3876 01fa BA18     		add	r2, r7, r2
 3877 01fc 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 106


 3878 01fe DA70     		strb	r2, [r3, #3]
2087:.\ff/ff.c     **** 	if (b != 1 && b != 2) return FR_NO_FILESYSTEM;		/* (Must be 1 or 2) */
 3879              		.loc 1 2087 0
 3880 0200 1F23     		mov	r3, #31
 3881 0202 FB18     		add	r3, r7, r3
 3882 0204 1B78     		ldrb	r3, [r3]
 3883 0206 012B     		cmp	r3, #1
 3884 0208 06D0     		beq	.L229
 3885              		.loc 1 2087 0 is_stmt 0 discriminator 1
 3886 020a 1F23     		mov	r3, #31
 3887 020c FB18     		add	r3, r7, r3
 3888 020e 1B78     		ldrb	r3, [r3]
 3889 0210 022B     		cmp	r3, #2
 3890 0212 01D0     		beq	.L229
 3891              		.loc 1 2087 0 discriminator 2
 3892 0214 0D23     		mov	r3, #13
 3893 0216 BAE1     		b	.L218
 3894              	.L229:
2088:.\ff/ff.c     **** 	fasize *= b;										/* Number of sectors for FAT area */
 3895              		.loc 1 2088 0 is_stmt 1
 3896 0218 1F23     		mov	r3, #31
 3897 021a FB18     		add	r3, r7, r3
 3898 021c 1A78     		ldrb	r2, [r3]
 3899 021e BB6B     		ldr	r3, [r7, #56]
 3900 0220 5343     		mul	r3, r2
 3901 0222 BB63     		str	r3, [r7, #56]
2089:.\ff/ff.c     **** 
2090:.\ff/ff.c     **** 	fs->csize = b = fs->win[BPB_SecPerClus];			/* Number of sectors per cluster */
 3902              		.loc 1 2090 0
 3903 0224 1F23     		mov	r3, #31
 3904 0226 FB18     		add	r3, r7, r3
 3905 0228 BA6A     		ldr	r2, [r7, #40]
 3906 022a 3D21     		mov	r1, #61
 3907 022c 525C     		ldrb	r2, [r2, r1]
 3908 022e 1A70     		strb	r2, [r3]
 3909 0230 BB6A     		ldr	r3, [r7, #40]
 3910 0232 1F22     		mov	r2, #31
 3911 0234 BA18     		add	r2, r7, r2
 3912 0236 1278     		ldrb	r2, [r2]
 3913 0238 9A70     		strb	r2, [r3, #2]
2091:.\ff/ff.c     **** 	if (!b || (b & (b - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
 3914              		.loc 1 2091 0
 3915 023a 1F23     		mov	r3, #31
 3916 023c FB18     		add	r3, r7, r3
 3917 023e 1B78     		ldrb	r3, [r3]
 3918 0240 002B     		cmp	r3, #0
 3919 0242 08D0     		beq	.L230
 3920              		.loc 1 2091 0 is_stmt 0 discriminator 2
 3921 0244 1F23     		mov	r3, #31
 3922 0246 FB18     		add	r3, r7, r3
 3923 0248 1B78     		ldrb	r3, [r3]
 3924 024a 1F22     		mov	r2, #31
 3925 024c BA18     		add	r2, r7, r2
 3926 024e 1278     		ldrb	r2, [r2]
 3927 0250 013A     		sub	r2, r2, #1
 3928 0252 1340     		and	r3, r2
 3929 0254 01D0     		beq	.L231
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 107


 3930              	.L230:
 3931              		.loc 1 2091 0 discriminator 3
 3932 0256 0D23     		mov	r3, #13
 3933 0258 99E1     		b	.L218
 3934              	.L231:
2092:.\ff/ff.c     **** 
2093:.\ff/ff.c     **** 	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
 3935              		.loc 1 2093 0 is_stmt 1
 3936 025a BB6A     		ldr	r3, [r7, #40]
 3937 025c 4222     		mov	r2, #66
 3938 025e 9B5C     		ldrb	r3, [r3, r2]
 3939 0260 1B02     		lsl	r3, r3, #8
 3940 0262 99B2     		uxth	r1, r3
 3941 0264 BB6A     		ldr	r3, [r7, #40]
 3942 0266 4122     		mov	r2, #65
 3943 0268 9B5C     		ldrb	r3, [r3, r2]
 3944 026a 9BB2     		uxth	r3, r3
 3945 026c 0A1C     		add	r2, r1, #0
 3946 026e 1343     		orr	r3, r2
 3947 0270 9BB2     		uxth	r3, r3
 3948 0272 9AB2     		uxth	r2, r3
 3949 0274 BB6A     		ldr	r3, [r7, #40]
 3950 0276 1A81     		strh	r2, [r3, #8]
2094:.\ff/ff.c     **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIR)) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be sector 
 3951              		.loc 1 2094 0
 3952 0278 BB6A     		ldr	r3, [r7, #40]
 3953 027a 1B89     		ldrh	r3, [r3, #8]
 3954 027c 0F22     		mov	r2, #15
 3955 027e 1340     		and	r3, r2
 3956 0280 9BB2     		uxth	r3, r3
 3957 0282 002B     		cmp	r3, #0
 3958 0284 01D0     		beq	.L232
 3959              		.loc 1 2094 0 is_stmt 0 discriminator 1
 3960 0286 0D23     		mov	r3, #13
 3961 0288 81E1     		b	.L218
 3962              	.L232:
2095:.\ff/ff.c     **** 
2096:.\ff/ff.c     **** 	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
 3963              		.loc 1 2096 0 is_stmt 1
 3964 028a BB6A     		ldr	r3, [r7, #40]
 3965 028c 4422     		mov	r2, #68
 3966 028e 9B5C     		ldrb	r3, [r3, r2]
 3967 0290 1B02     		lsl	r3, r3, #8
 3968 0292 99B2     		uxth	r1, r3
 3969 0294 BB6A     		ldr	r3, [r7, #40]
 3970 0296 4322     		mov	r2, #67
 3971 0298 9B5C     		ldrb	r3, [r3, r2]
 3972 029a 9BB2     		uxth	r3, r3
 3973 029c 0A1C     		add	r2, r1, #0
 3974 029e 1343     		orr	r3, r2
 3975 02a0 9BB2     		uxth	r3, r3
 3976 02a2 9BB2     		uxth	r3, r3
 3977 02a4 7B63     		str	r3, [r7, #52]
2097:.\ff/ff.c     **** 	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
 3978              		.loc 1 2097 0
 3979 02a6 7B6B     		ldr	r3, [r7, #52]
 3980 02a8 002B     		cmp	r3, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 108


 3981 02aa 12D1     		bne	.L233
 3982              		.loc 1 2097 0 is_stmt 0 discriminator 1
 3983 02ac BB6A     		ldr	r3, [r7, #40]
 3984 02ae 5322     		mov	r2, #83
 3985 02b0 9B5C     		ldrb	r3, [r3, r2]
 3986 02b2 1A06     		lsl	r2, r3, #24
 3987 02b4 BB6A     		ldr	r3, [r7, #40]
 3988 02b6 5221     		mov	r1, #82
 3989 02b8 5B5C     		ldrb	r3, [r3, r1]
 3990 02ba 1B04     		lsl	r3, r3, #16
 3991 02bc 1343     		orr	r3, r2
 3992 02be BA6A     		ldr	r2, [r7, #40]
 3993 02c0 5121     		mov	r1, #81
 3994 02c2 525C     		ldrb	r2, [r2, r1]
 3995 02c4 1202     		lsl	r2, r2, #8
 3996 02c6 1343     		orr	r3, r2
 3997 02c8 BA6A     		ldr	r2, [r7, #40]
 3998 02ca 5021     		mov	r1, #80
 3999 02cc 525C     		ldrb	r2, [r2, r1]
 4000 02ce 1343     		orr	r3, r2
 4001 02d0 7B63     		str	r3, [r7, #52]
 4002              	.L233:
2098:.\ff/ff.c     **** 
2099:.\ff/ff.c     **** 	nrsv = LD_WORD(fs->win+BPB_RsvdSecCnt);				/* Number of reserved sectors */
 4003              		.loc 1 2099 0 is_stmt 1
 4004 02d2 BB6A     		ldr	r3, [r7, #40]
 4005 02d4 3F22     		mov	r2, #63
 4006 02d6 9B5C     		ldrb	r3, [r3, r2]
 4007 02d8 1B02     		lsl	r3, r3, #8
 4008 02da 99B2     		uxth	r1, r3
 4009 02dc BB6A     		ldr	r3, [r7, #40]
 4010 02de 3E22     		mov	r2, #62
 4011 02e0 9B5C     		ldrb	r3, [r3, r2]
 4012 02e2 9BB2     		uxth	r3, r3
 4013 02e4 0A1C     		add	r2, r1, #0
 4014 02e6 1343     		orr	r3, r2
 4015 02e8 9AB2     		uxth	r2, r3
 4016 02ea 1C23     		mov	r3, #28
 4017 02ec FB18     		add	r3, r7, r3
 4018 02ee 1A80     		strh	r2, [r3]
2100:.\ff/ff.c     **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (BPB_RsvdSecCnt must not be 0) */
 4019              		.loc 1 2100 0
 4020 02f0 1C23     		mov	r3, #28
 4021 02f2 FB18     		add	r3, r7, r3
 4022 02f4 1B88     		ldrh	r3, [r3]
 4023 02f6 002B     		cmp	r3, #0
 4024 02f8 01D1     		bne	.L234
 4025              		.loc 1 2100 0 is_stmt 0 discriminator 1
 4026 02fa 0D23     		mov	r3, #13
 4027 02fc 47E1     		b	.L218
 4028              	.L234:
2101:.\ff/ff.c     **** 
2102:.\ff/ff.c     **** 	/* Determine the FAT sub type */
2103:.\ff/ff.c     **** 	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
 4029              		.loc 1 2103 0 is_stmt 1
 4030 02fe 1C23     		mov	r3, #28
 4031 0300 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 109


 4032 0302 1A88     		ldrh	r2, [r3]
 4033 0304 BB6B     		ldr	r3, [r7, #56]
 4034 0306 D318     		add	r3, r2, r3
 4035 0308 BA6A     		ldr	r2, [r7, #40]
 4036 030a 1289     		ldrh	r2, [r2, #8]
 4037 030c 1209     		lsr	r2, r2, #4
 4038 030e 92B2     		uxth	r2, r2
 4039 0310 9B18     		add	r3, r3, r2
 4040 0312 BB61     		str	r3, [r7, #24]
2104:.\ff/ff.c     **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 4041              		.loc 1 2104 0
 4042 0314 7A6B     		ldr	r2, [r7, #52]
 4043 0316 BB69     		ldr	r3, [r7, #24]
 4044 0318 9A42     		cmp	r2, r3
 4045 031a 01D2     		bcs	.L235
 4046              		.loc 1 2104 0 is_stmt 0 discriminator 1
 4047 031c 0D23     		mov	r3, #13
 4048 031e 36E1     		b	.L218
 4049              	.L235:
2105:.\ff/ff.c     **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 4050              		.loc 1 2105 0 is_stmt 1
 4051 0320 7A6B     		ldr	r2, [r7, #52]
 4052 0322 BB69     		ldr	r3, [r7, #24]
 4053 0324 D21A     		sub	r2, r2, r3
 4054 0326 BB6A     		ldr	r3, [r7, #40]
 4055 0328 9B78     		ldrb	r3, [r3, #2]
 4056 032a 101C     		mov	r0, r2
 4057 032c 191C     		mov	r1, r3
 4058 032e FFF7FEFF 		bl	__aeabi_uidiv
 4059 0332 031C     		mov	r3, r0
 4060 0334 7B61     		str	r3, [r7, #20]
2106:.\ff/ff.c     **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 4061              		.loc 1 2106 0
 4062 0336 7B69     		ldr	r3, [r7, #20]
 4063 0338 002B     		cmp	r3, #0
 4064 033a 01D1     		bne	.L236
 4065              		.loc 1 2106 0 is_stmt 0 discriminator 1
 4066 033c 0D23     		mov	r3, #13
 4067 033e 26E1     		b	.L218
 4068              	.L236:
2107:.\ff/ff.c     **** 	fmt = FS_FAT12;
 4069              		.loc 1 2107 0 is_stmt 1
 4070 0340 4723     		mov	r3, #71
 4071 0342 FB18     		add	r3, r7, r3
 4072 0344 0122     		mov	r2, #1
 4073 0346 1A70     		strb	r2, [r3]
2108:.\ff/ff.c     **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
 4074              		.loc 1 2108 0
 4075 0348 7B69     		ldr	r3, [r7, #20]
 4076 034a 164A     		ldr	r2, .L247+4
 4077 034c 9342     		cmp	r3, r2
 4078 034e 03D9     		bls	.L237
 4079              		.loc 1 2108 0 is_stmt 0 discriminator 1
 4080 0350 4723     		mov	r3, #71
 4081 0352 FB18     		add	r3, r7, r3
 4082 0354 0222     		mov	r2, #2
 4083 0356 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 110


 4084              	.L237:
2109:.\ff/ff.c     **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 4085              		.loc 1 2109 0 is_stmt 1
 4086 0358 7B69     		ldr	r3, [r7, #20]
 4087 035a 134A     		ldr	r2, .L247+8
 4088 035c 9342     		cmp	r3, r2
 4089 035e 03D9     		bls	.L238
 4090              		.loc 1 2109 0 is_stmt 0 discriminator 1
 4091 0360 4723     		mov	r3, #71
 4092 0362 FB18     		add	r3, r7, r3
 4093 0364 0322     		mov	r2, #3
 4094 0366 1A70     		strb	r2, [r3]
 4095              	.L238:
2110:.\ff/ff.c     **** 
2111:.\ff/ff.c     **** 	/* Boundaries and Limits */
2112:.\ff/ff.c     **** 	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
 4096              		.loc 1 2112 0 is_stmt 1
 4097 0368 7B69     		ldr	r3, [r7, #20]
 4098 036a 9A1C     		add	r2, r3, #2
 4099 036c BB6A     		ldr	r3, [r7, #40]
 4100 036e 9A61     		str	r2, [r3, #24]
2113:.\ff/ff.c     **** 	fs->database = bsect + sysect;						/* Data start sector */
 4101              		.loc 1 2113 0
 4102 0370 FA6B     		ldr	r2, [r7, #60]
 4103 0372 BB69     		ldr	r3, [r7, #24]
 4104 0374 D218     		add	r2, r2, r3
 4105 0376 BB6A     		ldr	r3, [r7, #40]
 4106 0378 9A62     		str	r2, [r3, #40]
2114:.\ff/ff.c     **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 4107              		.loc 1 2114 0
 4108 037a 1C23     		mov	r3, #28
 4109 037c FB18     		add	r3, r7, r3
 4110 037e 1A88     		ldrh	r2, [r3]
 4111 0380 FB6B     		ldr	r3, [r7, #60]
 4112 0382 D218     		add	r2, r2, r3
 4113 0384 BB6A     		ldr	r3, [r7, #40]
 4114 0386 1A62     		str	r2, [r3, #32]
2115:.\ff/ff.c     **** 	if (fmt == FS_FAT32) {
 4115              		.loc 1 2115 0
 4116 0388 4723     		mov	r3, #71
 4117 038a FB18     		add	r3, r7, r3
 4118 038c 1B78     		ldrb	r3, [r3]
 4119 038e 032B     		cmp	r3, #3
 4120 0390 25D1     		bne	.L239
2116:.\ff/ff.c     **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 4121              		.loc 1 2116 0
 4122 0392 BB6A     		ldr	r3, [r7, #40]
 4123 0394 1B89     		ldrh	r3, [r3, #8]
 4124 0396 002B     		cmp	r3, #0
 4125 0398 08D0     		beq	.L240
 4126              		.loc 1 2116 0 is_stmt 0 discriminator 1
 4127 039a 0D23     		mov	r3, #13
 4128 039c F7E0     		b	.L218
 4129              	.L248:
 4130 039e C046     		.align	2
 4131              	.L247:
 4132 03a0 00000000 		.word	FatFs
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 111


 4133 03a4 F50F0000 		.word	4085
 4134 03a8 F5FF0000 		.word	65525
 4135              	.L240:
2117:.\ff/ff.c     **** 		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
 4136              		.loc 1 2117 0 is_stmt 1
 4137 03ac BB6A     		ldr	r3, [r7, #40]
 4138 03ae 5F22     		mov	r2, #95
 4139 03b0 9B5C     		ldrb	r3, [r3, r2]
 4140 03b2 1A06     		lsl	r2, r3, #24
 4141 03b4 BB6A     		ldr	r3, [r7, #40]
 4142 03b6 5E21     		mov	r1, #94
 4143 03b8 5B5C     		ldrb	r3, [r3, r1]
 4144 03ba 1B04     		lsl	r3, r3, #16
 4145 03bc 1343     		orr	r3, r2
 4146 03be BA6A     		ldr	r2, [r7, #40]
 4147 03c0 5D21     		mov	r1, #93
 4148 03c2 525C     		ldrb	r2, [r2, r1]
 4149 03c4 1202     		lsl	r2, r2, #8
 4150 03c6 1343     		orr	r3, r2
 4151 03c8 BA6A     		ldr	r2, [r7, #40]
 4152 03ca 5C21     		mov	r1, #92
 4153 03cc 525C     		ldrb	r2, [r2, r1]
 4154 03ce 1A43     		orr	r2, r3
 4155 03d0 BB6A     		ldr	r3, [r7, #40]
 4156 03d2 5A62     		str	r2, [r3, #36]
2118:.\ff/ff.c     **** 		szbfat = fs->n_fatent * 4;						/* (Required FAT size) */
 4157              		.loc 1 2118 0
 4158 03d4 BB6A     		ldr	r3, [r7, #40]
 4159 03d6 9B69     		ldr	r3, [r3, #24]
 4160 03d8 9B00     		lsl	r3, r3, #2
 4161 03da 3B63     		str	r3, [r7, #48]
 4162 03dc 20E0     		b	.L241
 4163              	.L239:
2119:.\ff/ff.c     **** 	} else {
2120:.\ff/ff.c     **** 		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
 4164              		.loc 1 2120 0
 4165 03de BB6A     		ldr	r3, [r7, #40]
 4166 03e0 1B89     		ldrh	r3, [r3, #8]
 4167 03e2 002B     		cmp	r3, #0
 4168 03e4 01D1     		bne	.L242
 4169              		.loc 1 2120 0 is_stmt 0 discriminator 1
 4170 03e6 0D23     		mov	r3, #13
 4171 03e8 D1E0     		b	.L218
 4172              	.L242:
2121:.\ff/ff.c     **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 4173              		.loc 1 2121 0 is_stmt 1
 4174 03ea BB6A     		ldr	r3, [r7, #40]
 4175 03ec 1A6A     		ldr	r2, [r3, #32]
 4176 03ee BB6B     		ldr	r3, [r7, #56]
 4177 03f0 D218     		add	r2, r2, r3
 4178 03f2 BB6A     		ldr	r3, [r7, #40]
 4179 03f4 5A62     		str	r2, [r3, #36]
2122:.\ff/ff.c     **** 		szbfat = (fmt == FS_FAT16) ?					/* (Required FAT size) */
2123:.\ff/ff.c     **** 			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 4180              		.loc 1 2123 0
 4181 03f6 4723     		mov	r3, #71
 4182 03f8 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 112


 4183 03fa 1B78     		ldrb	r3, [r3]
 4184 03fc 022B     		cmp	r3, #2
 4185 03fe 03D1     		bne	.L243
 4186              		.loc 1 2123 0 is_stmt 0 discriminator 1
 4187 0400 BB6A     		ldr	r3, [r7, #40]
 4188 0402 9B69     		ldr	r3, [r3, #24]
 4189 0404 5B00     		lsl	r3, r3, #1
 4190 0406 0AE0     		b	.L244
 4191              	.L243:
 4192              		.loc 1 2123 0 discriminator 2
 4193 0408 BB6A     		ldr	r3, [r7, #40]
 4194 040a 9A69     		ldr	r2, [r3, #24]
 4195 040c 131C     		mov	r3, r2
 4196 040e 5B00     		lsl	r3, r3, #1
 4197 0410 9B18     		add	r3, r3, r2
 4198 0412 5A08     		lsr	r2, r3, #1
 4199 0414 BB6A     		ldr	r3, [r7, #40]
 4200 0416 9B69     		ldr	r3, [r3, #24]
 4201 0418 0121     		mov	r1, #1
 4202 041a 0B40     		and	r3, r1
 4203 041c D318     		add	r3, r2, r3
 4204              	.L244:
2122:.\ff/ff.c     **** 		szbfat = (fmt == FS_FAT16) ?					/* (Required FAT size) */
 4205              		.loc 1 2122 0 is_stmt 1
 4206 041e 3B63     		str	r3, [r7, #48]
 4207              	.L241:
2124:.\ff/ff.c     **** 	}
2125:.\ff/ff.c     **** 	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than required) */
 4208              		.loc 1 2125 0
 4209 0420 BB6A     		ldr	r3, [r7, #40]
 4210 0422 DA69     		ldr	r2, [r3, #28]
 4211 0424 3B6B     		ldr	r3, [r7, #48]
 4212 0426 5C49     		ldr	r1, .L249
 4213 0428 8C46     		mov	ip, r1
 4214 042a 6344     		add	r3, r3, ip
 4215 042c 5B0A     		lsr	r3, r3, #9
 4216 042e 9A42     		cmp	r2, r3
 4217 0430 01D2     		bcs	.L245
2126:.\ff/ff.c     **** 		return FR_NO_FILESYSTEM;
 4218              		.loc 1 2126 0
 4219 0432 0D23     		mov	r3, #13
 4220 0434 ABE0     		b	.L218
 4221              	.L245:
2127:.\ff/ff.c     **** 
2128:.\ff/ff.c     **** #if !_FS_READONLY
2129:.\ff/ff.c     **** 	/* Initialize cluster allocation information */
2130:.\ff/ff.c     **** 	fs->free_clust = 0xFFFFFFFF;
 4222              		.loc 1 2130 0
 4223 0436 BB6A     		ldr	r3, [r7, #40]
 4224 0438 0122     		mov	r2, #1
 4225 043a 5242     		neg	r2, r2
 4226 043c 1A61     		str	r2, [r3, #16]
2131:.\ff/ff.c     **** 	fs->last_clust = 0;
 4227              		.loc 1 2131 0
 4228 043e BB6A     		ldr	r3, [r7, #40]
 4229 0440 0022     		mov	r2, #0
 4230 0442 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 113


2132:.\ff/ff.c     **** 
2133:.\ff/ff.c     **** 	/* Get fsinfo if available */
2134:.\ff/ff.c     **** 	if (fmt == FS_FAT32) {
 4231              		.loc 1 2134 0
 4232 0444 4723     		mov	r3, #71
 4233 0446 FB18     		add	r3, r7, r3
 4234 0448 1B78     		ldrb	r3, [r3]
 4235 044a 032B     		cmp	r3, #3
 4236 044c 00D0     		beq	.LCB3948
 4237 044e 88E0     		b	.L246	@long jump
 4238              	.LCB3948:
2135:.\ff/ff.c     **** 	 	fs->fsi_flag = 0;
 4239              		.loc 1 2135 0
 4240 0450 BB6A     		ldr	r3, [r7, #40]
 4241 0452 0022     		mov	r2, #0
 4242 0454 5A71     		strb	r2, [r3, #5]
2136:.\ff/ff.c     **** 		fs->fsi_sector = bsect + LD_WORD(fs->win+BPB_FSInfo);
 4243              		.loc 1 2136 0
 4244 0456 BB6A     		ldr	r3, [r7, #40]
 4245 0458 6122     		mov	r2, #97
 4246 045a 9B5C     		ldrb	r3, [r3, r2]
 4247 045c 1B02     		lsl	r3, r3, #8
 4248 045e 99B2     		uxth	r1, r3
 4249 0460 BB6A     		ldr	r3, [r7, #40]
 4250 0462 6022     		mov	r2, #96
 4251 0464 9B5C     		ldrb	r3, [r3, r2]
 4252 0466 9BB2     		uxth	r3, r3
 4253 0468 0A1C     		add	r2, r1, #0
 4254 046a 1343     		orr	r3, r2
 4255 046c 9BB2     		uxth	r3, r3
 4256 046e 9BB2     		uxth	r3, r3
 4257 0470 1A1C     		mov	r2, r3
 4258 0472 FB6B     		ldr	r3, [r7, #60]
 4259 0474 D218     		add	r2, r2, r3
 4260 0476 BB6A     		ldr	r3, [r7, #40]
 4261 0478 5A61     		str	r2, [r3, #20]
2137:.\ff/ff.c     **** 		if (disk_read(fs->drv, fs->win, fs->fsi_sector, 1) == RES_OK &&
 4262              		.loc 1 2137 0
 4263 047a BB6A     		ldr	r3, [r7, #40]
 4264 047c 5978     		ldrb	r1, [r3, #1]
 4265 047e BB6A     		ldr	r3, [r7, #40]
 4266 0480 3033     		add	r3, r3, #48
 4267 0482 1A1C     		mov	r2, r3
 4268 0484 BB6A     		ldr	r3, [r7, #40]
 4269 0486 5B69     		ldr	r3, [r3, #20]
 4270 0488 081C     		mov	r0, r1
 4271 048a 111C     		mov	r1, r2
 4272 048c 1A1C     		mov	r2, r3
 4273 048e 0123     		mov	r3, #1
 4274 0490 FFF7FEFF 		bl	disk_read
 4275 0494 031E     		sub	r3, r0, #0
 4276 0496 64D1     		bne	.L246
2138:.\ff/ff.c     **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
 4277              		.loc 1 2138 0 discriminator 1
 4278 0498 BB6A     		ldr	r3, [r7, #40]
 4279 049a 404A     		ldr	r2, .L249+4
 4280 049c 9B5C     		ldrb	r3, [r3, r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 114


 4281 049e 1B02     		lsl	r3, r3, #8
 4282 04a0 99B2     		uxth	r1, r3
 4283 04a2 BB6A     		ldr	r3, [r7, #40]
 4284 04a4 3E4A     		ldr	r2, .L249+8
 4285 04a6 9B5C     		ldrb	r3, [r3, r2]
 4286 04a8 9BB2     		uxth	r3, r3
 4287 04aa 0A1C     		add	r2, r1, #0
 4288 04ac 1343     		orr	r3, r2
 4289 04ae 9BB2     		uxth	r3, r3
2137:.\ff/ff.c     **** 		if (disk_read(fs->drv, fs->win, fs->fsi_sector, 1) == RES_OK &&
 4290              		.loc 1 2137 0 discriminator 1
 4291 04b0 1BB2     		sxth	r3, r3
 4292 04b2 3C4A     		ldr	r2, .L249+12
 4293 04b4 9342     		cmp	r3, r2
 4294 04b6 54D1     		bne	.L246
2139:.\ff/ff.c     **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
 4295              		.loc 1 2139 0
 4296 04b8 BB6A     		ldr	r3, [r7, #40]
 4297 04ba 3322     		mov	r2, #51
 4298 04bc 9B5C     		ldrb	r3, [r3, r2]
 4299 04be 1A06     		lsl	r2, r3, #24
 4300 04c0 BB6A     		ldr	r3, [r7, #40]
 4301 04c2 3221     		mov	r1, #50
 4302 04c4 5B5C     		ldrb	r3, [r3, r1]
 4303 04c6 1B04     		lsl	r3, r3, #16
 4304 04c8 1343     		orr	r3, r2
 4305 04ca BA6A     		ldr	r2, [r7, #40]
 4306 04cc 3121     		mov	r1, #49
 4307 04ce 525C     		ldrb	r2, [r2, r1]
 4308 04d0 1202     		lsl	r2, r2, #8
 4309 04d2 1343     		orr	r3, r2
 4310 04d4 BA6A     		ldr	r2, [r7, #40]
 4311 04d6 3021     		mov	r1, #48
 4312 04d8 525C     		ldrb	r2, [r2, r1]
 4313 04da 1343     		orr	r3, r2
2138:.\ff/ff.c     **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
 4314              		.loc 1 2138 0
 4315 04dc 324A     		ldr	r2, .L249+16
 4316 04de 9342     		cmp	r3, r2
 4317 04e0 3FD1     		bne	.L246
2140:.\ff/ff.c     **** 			LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272) {
 4318              		.loc 1 2140 0
 4319 04e2 BB6A     		ldr	r3, [r7, #40]
 4320 04e4 314A     		ldr	r2, .L249+20
 4321 04e6 9B5C     		ldrb	r3, [r3, r2]
 4322 04e8 1A06     		lsl	r2, r3, #24
 4323 04ea BB6A     		ldr	r3, [r7, #40]
 4324 04ec 3049     		ldr	r1, .L249+24
 4325 04ee 5B5C     		ldrb	r3, [r3, r1]
 4326 04f0 1B04     		lsl	r3, r3, #16
 4327 04f2 1343     		orr	r3, r2
 4328 04f4 BA6A     		ldr	r2, [r7, #40]
 4329 04f6 2F49     		ldr	r1, .L249+28
 4330 04f8 525C     		ldrb	r2, [r2, r1]
 4331 04fa 1202     		lsl	r2, r2, #8
 4332 04fc 1343     		orr	r3, r2
 4333 04fe B96A     		ldr	r1, [r7, #40]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 115


 4334 0500 8522     		mov	r2, #133
 4335 0502 9200     		lsl	r2, r2, #2
 4336 0504 8A5C     		ldrb	r2, [r1, r2]
 4337 0506 1343     		orr	r3, r2
2139:.\ff/ff.c     **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
 4338              		.loc 1 2139 0
 4339 0508 2B4A     		ldr	r2, .L249+32
 4340 050a 9342     		cmp	r3, r2
 4341 050c 29D1     		bne	.L246
2141:.\ff/ff.c     **** 				fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
 4342              		.loc 1 2141 0
 4343 050e BB6A     		ldr	r3, [r7, #40]
 4344 0510 2A4A     		ldr	r2, .L249+36
 4345 0512 9B5C     		ldrb	r3, [r3, r2]
 4346 0514 1A06     		lsl	r2, r3, #24
 4347 0516 BB6A     		ldr	r3, [r7, #40]
 4348 0518 2949     		ldr	r1, .L249+40
 4349 051a 5B5C     		ldrb	r3, [r3, r1]
 4350 051c 1B04     		lsl	r3, r3, #16
 4351 051e 1343     		orr	r3, r2
 4352 0520 BA6A     		ldr	r2, [r7, #40]
 4353 0522 2849     		ldr	r1, .L249+44
 4354 0524 525C     		ldrb	r2, [r2, r1]
 4355 0526 1202     		lsl	r2, r2, #8
 4356 0528 1343     		orr	r3, r2
 4357 052a B96A     		ldr	r1, [r7, #40]
 4358 052c 8722     		mov	r2, #135
 4359 052e 9200     		lsl	r2, r2, #2
 4360 0530 8A5C     		ldrb	r2, [r1, r2]
 4361 0532 1A43     		orr	r2, r3
 4362 0534 BB6A     		ldr	r3, [r7, #40]
 4363 0536 DA60     		str	r2, [r3, #12]
2142:.\ff/ff.c     **** 				fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
 4364              		.loc 1 2142 0
 4365 0538 BB6A     		ldr	r3, [r7, #40]
 4366 053a 234A     		ldr	r2, .L249+48
 4367 053c 9B5C     		ldrb	r3, [r3, r2]
 4368 053e 1A06     		lsl	r2, r3, #24
 4369 0540 BB6A     		ldr	r3, [r7, #40]
 4370 0542 2249     		ldr	r1, .L249+52
 4371 0544 5B5C     		ldrb	r3, [r3, r1]
 4372 0546 1B04     		lsl	r3, r3, #16
 4373 0548 1343     		orr	r3, r2
 4374 054a BA6A     		ldr	r2, [r7, #40]
 4375 054c 2049     		ldr	r1, .L249+56
 4376 054e 525C     		ldrb	r2, [r2, r1]
 4377 0550 1202     		lsl	r2, r2, #8
 4378 0552 1343     		orr	r3, r2
 4379 0554 B96A     		ldr	r1, [r7, #40]
 4380 0556 8622     		mov	r2, #134
 4381 0558 9200     		lsl	r2, r2, #2
 4382 055a 8A5C     		ldrb	r2, [r1, r2]
 4383 055c 1A43     		orr	r2, r3
 4384 055e BB6A     		ldr	r3, [r7, #40]
 4385 0560 1A61     		str	r2, [r3, #16]
 4386              	.L246:
2143:.\ff/ff.c     **** 		}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 116


2144:.\ff/ff.c     **** 	}
2145:.\ff/ff.c     **** #endif
2146:.\ff/ff.c     **** 	fs->fs_type = fmt;		/* FAT sub-type */
 4387              		.loc 1 2146 0
 4388 0562 BB6A     		ldr	r3, [r7, #40]
 4389 0564 4722     		mov	r2, #71
 4390 0566 BA18     		add	r2, r7, r2
 4391 0568 1278     		ldrb	r2, [r2]
 4392 056a 1A70     		strb	r2, [r3]
2147:.\ff/ff.c     **** 	fs->id = ++Fsid;		/* File system mount ID */
 4393              		.loc 1 2147 0
 4394 056c 194B     		ldr	r3, .L249+60
 4395 056e 1B88     		ldrh	r3, [r3]
 4396 0570 0133     		add	r3, r3, #1
 4397 0572 9AB2     		uxth	r2, r3
 4398 0574 174B     		ldr	r3, .L249+60
 4399 0576 1A80     		strh	r2, [r3]
 4400 0578 164B     		ldr	r3, .L249+60
 4401 057a 1A88     		ldrh	r2, [r3]
 4402 057c BB6A     		ldr	r3, [r7, #40]
 4403 057e DA80     		strh	r2, [r3, #6]
2148:.\ff/ff.c     **** 	fs->winsect = 0;		/* Invalidate sector cache */
 4404              		.loc 1 2148 0
 4405 0580 BB6A     		ldr	r3, [r7, #40]
 4406 0582 0022     		mov	r2, #0
 4407 0584 DA62     		str	r2, [r3, #44]
2149:.\ff/ff.c     **** 	fs->wflag = 0;
 4408              		.loc 1 2149 0
 4409 0586 BB6A     		ldr	r3, [r7, #40]
 4410 0588 0022     		mov	r2, #0
 4411 058a 1A71     		strb	r2, [r3, #4]
2150:.\ff/ff.c     **** #if _FS_RPATH
2151:.\ff/ff.c     **** 	fs->cdir = 0;			/* Current directory (root dir) */
2152:.\ff/ff.c     **** #endif
2153:.\ff/ff.c     **** #if _FS_SHARE				/* Clear file lock semaphores */
2154:.\ff/ff.c     **** 	clear_lock(fs);
2155:.\ff/ff.c     **** #endif
2156:.\ff/ff.c     **** 
2157:.\ff/ff.c     **** 	return FR_OK;
 4412              		.loc 1 2157 0
 4413 058c 0023     		mov	r3, #0
 4414              	.L218:
2158:.\ff/ff.c     **** }
 4415              		.loc 1 2158 0
 4416 058e 181C     		mov	r0, r3
 4417 0590 BD46     		mov	sp, r7
 4418 0592 13B0     		add	sp, sp, #76
 4419              		@ sp needed
 4420 0594 90BD     		pop	{r4, r7, pc}
 4421              	.L250:
 4422 0596 C046     		.align	2
 4423              	.L249:
 4424 0598 FF010000 		.word	511
 4425 059c 2F020000 		.word	559
 4426 05a0 2E020000 		.word	558
 4427 05a4 55AAFFFF 		.word	-21931
 4428 05a8 52526141 		.word	1096897106
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 117


 4429 05ac 17020000 		.word	535
 4430 05b0 16020000 		.word	534
 4431 05b4 15020000 		.word	533
 4432 05b8 72724161 		.word	1631679090
 4433 05bc 1F020000 		.word	543
 4434 05c0 1E020000 		.word	542
 4435 05c4 1D020000 		.word	541
 4436 05c8 1B020000 		.word	539
 4437 05cc 1A020000 		.word	538
 4438 05d0 19020000 		.word	537
 4439 05d4 04000000 		.word	Fsid
 4440              		.cfi_endproc
 4441              	.LFE23:
 4442              		.size	chk_mounted, .-chk_mounted
 4443              		.section	.text.validate,"ax",%progbits
 4444              		.align	2
 4445              		.code	16
 4446              		.thumb_func
 4447              		.type	validate, %function
 4448              	validate:
 4449              	.LFB24:
2159:.\ff/ff.c     **** 
2160:.\ff/ff.c     **** 
2161:.\ff/ff.c     **** 
2162:.\ff/ff.c     **** 
2163:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2164:.\ff/ff.c     **** /* Check if the file/dir object is valid or not                          */
2165:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2166:.\ff/ff.c     **** 
2167:.\ff/ff.c     **** static
2168:.\ff/ff.c     **** FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
2169:.\ff/ff.c     **** 	FATFS *fs,		/* Pointer to the file system object */
2170:.\ff/ff.c     **** 	WORD id			/* Member id of the target object to be checked */
2171:.\ff/ff.c     **** )
2172:.\ff/ff.c     **** {
 4450              		.loc 1 2172 0
 4451              		.cfi_startproc
 4452 0000 80B5     		push	{r7, lr}
 4453              		.cfi_def_cfa_offset 8
 4454              		.cfi_offset 7, -8
 4455              		.cfi_offset 14, -4
 4456 0002 82B0     		sub	sp, sp, #8
 4457              		.cfi_def_cfa_offset 16
 4458 0004 00AF     		add	r7, sp, #0
 4459              		.cfi_def_cfa_register 7
 4460 0006 7860     		str	r0, [r7, #4]
 4461 0008 0A1C     		mov	r2, r1
 4462 000a BB1C     		add	r3, r7, #2
 4463 000c 1A80     		strh	r2, [r3]
2173:.\ff/ff.c     **** 	if (!fs || !fs->fs_type || fs->id != id)
 4464              		.loc 1 2173 0
 4465 000e 7B68     		ldr	r3, [r7, #4]
 4466 0010 002B     		cmp	r3, #0
 4467 0012 09D0     		beq	.L252
 4468              		.loc 1 2173 0 is_stmt 0 discriminator 1
 4469 0014 7B68     		ldr	r3, [r7, #4]
 4470 0016 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 118


 4471 0018 002B     		cmp	r3, #0
 4472 001a 05D0     		beq	.L252
 4473              		.loc 1 2173 0 discriminator 2
 4474 001c 7B68     		ldr	r3, [r7, #4]
 4475 001e DB88     		ldrh	r3, [r3, #6]
 4476 0020 BA1C     		add	r2, r7, #2
 4477 0022 1288     		ldrh	r2, [r2]
 4478 0024 9A42     		cmp	r2, r3
 4479 0026 01D0     		beq	.L253
 4480              	.L252:
2174:.\ff/ff.c     **** 		return FR_INVALID_OBJECT;
 4481              		.loc 1 2174 0 is_stmt 1
 4482 0028 0923     		mov	r3, #9
 4483 002a 0CE0     		b	.L254
 4484              	.L253:
2175:.\ff/ff.c     **** 
2176:.\ff/ff.c     **** 	ENTER_FF(fs);		/* Lock file system */
2177:.\ff/ff.c     **** 
2178:.\ff/ff.c     **** 	if (disk_status(fs->drv) & STA_NOINIT)
 4485              		.loc 1 2178 0
 4486 002c 7B68     		ldr	r3, [r7, #4]
 4487 002e 5B78     		ldrb	r3, [r3, #1]
 4488 0030 181C     		mov	r0, r3
 4489 0032 FFF7FEFF 		bl	disk_status
 4490 0036 031C     		mov	r3, r0
 4491 0038 1A1C     		mov	r2, r3
 4492 003a 0123     		mov	r3, #1
 4493 003c 1340     		and	r3, r2
 4494 003e 01D0     		beq	.L255
2179:.\ff/ff.c     **** 		return FR_NOT_READY;
 4495              		.loc 1 2179 0
 4496 0040 0323     		mov	r3, #3
 4497 0042 00E0     		b	.L254
 4498              	.L255:
2180:.\ff/ff.c     **** 
2181:.\ff/ff.c     **** 	return FR_OK;
 4499              		.loc 1 2181 0
 4500 0044 0023     		mov	r3, #0
 4501              	.L254:
2182:.\ff/ff.c     **** }
 4502              		.loc 1 2182 0
 4503 0046 181C     		mov	r0, r3
 4504 0048 BD46     		mov	sp, r7
 4505 004a 02B0     		add	sp, sp, #8
 4506              		@ sp needed
 4507 004c 80BD     		pop	{r7, pc}
 4508              		.cfi_endproc
 4509              	.LFE24:
 4510              		.size	validate, .-validate
 4511 004e C046     		.section	.text.f_mount,"ax",%progbits
 4512              		.align	2
 4513              		.global	f_mount
 4514              		.code	16
 4515              		.thumb_func
 4516              		.type	f_mount, %function
 4517              	f_mount:
 4518              	.LFB25:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 119


2183:.\ff/ff.c     **** 
2184:.\ff/ff.c     **** 
2185:.\ff/ff.c     **** 
2186:.\ff/ff.c     **** 
2187:.\ff/ff.c     **** /*--------------------------------------------------------------------------
2188:.\ff/ff.c     **** 
2189:.\ff/ff.c     ****    Public Functions
2190:.\ff/ff.c     **** 
2191:.\ff/ff.c     **** --------------------------------------------------------------------------*/
2192:.\ff/ff.c     **** 
2193:.\ff/ff.c     **** 
2194:.\ff/ff.c     **** 
2195:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2196:.\ff/ff.c     **** /* Mount/Unmount a Logical Drive                                         */
2197:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2198:.\ff/ff.c     **** 
2199:.\ff/ff.c     **** FRESULT f_mount (
2200:.\ff/ff.c     **** 	BYTE vol,		/* Logical drive number to be mounted/unmounted */
2201:.\ff/ff.c     **** 	FATFS *fs		/* Pointer to new file system object (NULL for unmount)*/
2202:.\ff/ff.c     **** )
2203:.\ff/ff.c     **** {
 4519              		.loc 1 2203 0
 4520              		.cfi_startproc
 4521 0000 80B5     		push	{r7, lr}
 4522              		.cfi_def_cfa_offset 8
 4523              		.cfi_offset 7, -8
 4524              		.cfi_offset 14, -4
 4525 0002 84B0     		sub	sp, sp, #16
 4526              		.cfi_def_cfa_offset 24
 4527 0004 00AF     		add	r7, sp, #0
 4528              		.cfi_def_cfa_register 7
 4529 0006 021C     		mov	r2, r0
 4530 0008 3960     		str	r1, [r7]
 4531 000a FB1D     		add	r3, r7, #7
 4532 000c 1A70     		strb	r2, [r3]
2204:.\ff/ff.c     **** 	FATFS *rfs;
2205:.\ff/ff.c     **** 
2206:.\ff/ff.c     **** 
2207:.\ff/ff.c     **** 	if (vol >= _VOLUMES)			/* Check if the drive number is valid */
 4533              		.loc 1 2207 0
 4534 000e FB1D     		add	r3, r7, #7
 4535 0010 1B78     		ldrb	r3, [r3]
 4536 0012 002B     		cmp	r3, #0
 4537 0014 01D0     		beq	.L257
2208:.\ff/ff.c     **** 		return FR_INVALID_DRIVE;
 4538              		.loc 1 2208 0
 4539 0016 0B23     		mov	r3, #11
 4540 0018 18E0     		b	.L258
 4541              	.L257:
2209:.\ff/ff.c     **** 	rfs = FatFs[vol];				/* Get current fs object */
 4542              		.loc 1 2209 0
 4543 001a FB1D     		add	r3, r7, #7
 4544 001c 1A78     		ldrb	r2, [r3]
 4545 001e 0D4B     		ldr	r3, .L261
 4546 0020 9200     		lsl	r2, r2, #2
 4547 0022 D358     		ldr	r3, [r2, r3]
 4548 0024 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 120


2210:.\ff/ff.c     **** 
2211:.\ff/ff.c     **** 	if (rfs) {
 4549              		.loc 1 2211 0
 4550 0026 FB68     		ldr	r3, [r7, #12]
 4551 0028 002B     		cmp	r3, #0
 4552 002a 02D0     		beq	.L259
2212:.\ff/ff.c     **** #if _FS_SHARE
2213:.\ff/ff.c     **** 		clear_lock(rfs);
2214:.\ff/ff.c     **** #endif
2215:.\ff/ff.c     **** #if _FS_REENTRANT					/* Discard sync object of the current volume */
2216:.\ff/ff.c     **** 		if (!ff_del_syncobj(rfs->sobj)) return FR_INT_ERR;
2217:.\ff/ff.c     **** #endif
2218:.\ff/ff.c     **** 		rfs->fs_type = 0;			/* Clear old fs object */
 4553              		.loc 1 2218 0
 4554 002c FB68     		ldr	r3, [r7, #12]
 4555 002e 0022     		mov	r2, #0
 4556 0030 1A70     		strb	r2, [r3]
 4557              	.L259:
2219:.\ff/ff.c     **** 	}
2220:.\ff/ff.c     **** 
2221:.\ff/ff.c     **** 	if (fs) {
 4558              		.loc 1 2221 0
 4559 0032 3B68     		ldr	r3, [r7]
 4560 0034 002B     		cmp	r3, #0
 4561 0036 02D0     		beq	.L260
2222:.\ff/ff.c     **** 		fs->fs_type = 0;			/* Clear new fs object */
 4562              		.loc 1 2222 0
 4563 0038 3B68     		ldr	r3, [r7]
 4564 003a 0022     		mov	r2, #0
 4565 003c 1A70     		strb	r2, [r3]
 4566              	.L260:
2223:.\ff/ff.c     **** #if _FS_REENTRANT					/* Create sync object for the new volume */
2224:.\ff/ff.c     **** 		if (!ff_cre_syncobj(vol, &fs->sobj)) return FR_INT_ERR;
2225:.\ff/ff.c     **** #endif
2226:.\ff/ff.c     **** 	}
2227:.\ff/ff.c     **** 	FatFs[vol] = fs;				/* Register new fs object */
 4567              		.loc 1 2227 0
 4568 003e FB1D     		add	r3, r7, #7
 4569 0040 1A78     		ldrb	r2, [r3]
 4570 0042 044B     		ldr	r3, .L261
 4571 0044 9200     		lsl	r2, r2, #2
 4572 0046 3968     		ldr	r1, [r7]
 4573 0048 D150     		str	r1, [r2, r3]
2228:.\ff/ff.c     **** 
2229:.\ff/ff.c     **** 	return FR_OK;
 4574              		.loc 1 2229 0
 4575 004a 0023     		mov	r3, #0
 4576              	.L258:
2230:.\ff/ff.c     **** }
 4577              		.loc 1 2230 0
 4578 004c 181C     		mov	r0, r3
 4579 004e BD46     		mov	sp, r7
 4580 0050 04B0     		add	sp, sp, #16
 4581              		@ sp needed
 4582 0052 80BD     		pop	{r7, pc}
 4583              	.L262:
 4584              		.align	2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 121


 4585              	.L261:
 4586 0054 00000000 		.word	FatFs
 4587              		.cfi_endproc
 4588              	.LFE25:
 4589              		.size	f_mount, .-f_mount
 4590              		.section	.text.f_open,"ax",%progbits
 4591              		.align	2
 4592              		.global	f_open
 4593              		.code	16
 4594              		.thumb_func
 4595              		.type	f_open, %function
 4596              	f_open:
 4597              	.LFB26:
2231:.\ff/ff.c     **** 
2232:.\ff/ff.c     **** 
2233:.\ff/ff.c     **** 
2234:.\ff/ff.c     **** 
2235:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2236:.\ff/ff.c     **** /* Open or Create a File                                                 */
2237:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2238:.\ff/ff.c     **** 
2239:.\ff/ff.c     **** FRESULT f_open (
2240:.\ff/ff.c     **** 	FIL *fp,			/* Pointer to the blank file object */
2241:.\ff/ff.c     **** 	const TCHAR *path,	/* Pointer to the file name */
2242:.\ff/ff.c     **** 	BYTE mode			/* Access mode and file open mode flags */
2243:.\ff/ff.c     **** )
2244:.\ff/ff.c     **** {
 4598              		.loc 1 2244 0
 4599              		.cfi_startproc
 4600 0000 90B5     		push	{r4, r7, lr}
 4601              		.cfi_def_cfa_offset 12
 4602              		.cfi_offset 4, -12
 4603              		.cfi_offset 7, -8
 4604              		.cfi_offset 14, -4
 4605 0002 93B0     		sub	sp, sp, #76
 4606              		.cfi_def_cfa_offset 88
 4607 0004 00AF     		add	r7, sp, #0
 4608              		.cfi_def_cfa_register 7
 4609 0006 F860     		str	r0, [r7, #12]
 4610 0008 B960     		str	r1, [r7, #8]
 4611 000a FB1D     		add	r3, r7, #7
 4612 000c 1A70     		strb	r2, [r3]
2245:.\ff/ff.c     **** 	FRESULT res;
2246:.\ff/ff.c     **** 	DIR dj;
2247:.\ff/ff.c     **** 	BYTE *dir;
2248:.\ff/ff.c     **** 	DEF_NAMEBUF;
2249:.\ff/ff.c     **** 
2250:.\ff/ff.c     **** 
2251:.\ff/ff.c     **** 	fp->fs = 0;			/* Clear file object */
 4613              		.loc 1 2251 0
 4614 000e FB68     		ldr	r3, [r7, #12]
 4615 0010 0022     		mov	r2, #0
 4616 0012 1A60     		str	r2, [r3]
2252:.\ff/ff.c     **** 
2253:.\ff/ff.c     **** #if !_FS_READONLY
2254:.\ff/ff.c     **** 	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW ;
 4617              		.loc 1 2254 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 122


 4618 0014 FB1D     		add	r3, r7, #7
 4619 0016 FA1D     		add	r2, r7, #7
 4620 0018 1278     		ldrb	r2, [r2]
 4621 001a 1F21     		mov	r1, #31
 4622 001c 0A40     		and	r2, r1
 4623 001e 1A70     		strb	r2, [r3]
2255:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj.fs, (BYTE)(mode & ~FA_READ));
 4624              		.loc 1 2255 0
 4625 0020 FB1D     		add	r3, r7, #7
 4626 0022 1B78     		ldrb	r3, [r3]
 4627 0024 0122     		mov	r2, #1
 4628 0026 9343     		bic	r3, r2
 4629 0028 DBB2     		uxtb	r3, r3
 4630 002a 4722     		mov	r2, #71
 4631 002c BC18     		add	r4, r7, r2
 4632 002e 0822     		mov	r2, #8
 4633 0030 B918     		add	r1, r7, r2
 4634 0032 1C22     		mov	r2, #28
 4635 0034 BA18     		add	r2, r7, r2
 4636 0036 081C     		mov	r0, r1
 4637 0038 111C     		mov	r1, r2
 4638 003a 1A1C     		mov	r2, r3
 4639 003c FFF7FEFF 		bl	chk_mounted
 4640 0040 031C     		mov	r3, r0
 4641 0042 2370     		strb	r3, [r4]
2256:.\ff/ff.c     **** #else
2257:.\ff/ff.c     **** 	mode &= FA_READ;
2258:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
2259:.\ff/ff.c     **** #endif
2260:.\ff/ff.c     **** 	INIT_BUF(dj);
 4642              		.loc 1 2260 0
 4643 0044 1C23     		mov	r3, #28
 4644 0046 FB18     		add	r3, r7, r3
 4645 0048 1022     		mov	r2, #16
 4646 004a BA18     		add	r2, r7, r2
 4647 004c 9A61     		str	r2, [r3, #24]
2261:.\ff/ff.c     **** 	if (res == FR_OK)
 4648              		.loc 1 2261 0
 4649 004e 4723     		mov	r3, #71
 4650 0050 FB18     		add	r3, r7, r3
 4651 0052 1B78     		ldrb	r3, [r3]
 4652 0054 002B     		cmp	r3, #0
 4653 0056 0AD1     		bne	.L264
2262:.\ff/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 4654              		.loc 1 2262 0
 4655 0058 BB68     		ldr	r3, [r7, #8]
 4656 005a 4722     		mov	r2, #71
 4657 005c BC18     		add	r4, r7, r2
 4658 005e 1C22     		mov	r2, #28
 4659 0060 BA18     		add	r2, r7, r2
 4660 0062 101C     		mov	r0, r2
 4661 0064 191C     		mov	r1, r3
 4662 0066 FFF7FEFF 		bl	follow_path
 4663 006a 031C     		mov	r3, r0
 4664 006c 2370     		strb	r3, [r4]
 4665              	.L264:
2263:.\ff/ff.c     **** 	dir = dj.dir;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 123


 4666              		.loc 1 2263 0
 4667 006e 1C23     		mov	r3, #28
 4668 0070 FB18     		add	r3, r7, r3
 4669 0072 5B69     		ldr	r3, [r3, #20]
 4670 0074 3B64     		str	r3, [r7, #64]
2264:.\ff/ff.c     **** 
2265:.\ff/ff.c     **** #if !_FS_READONLY	/* R/W configuration */
2266:.\ff/ff.c     **** 	if (res == FR_OK) {
 4671              		.loc 1 2266 0
 4672 0076 4723     		mov	r3, #71
 4673 0078 FB18     		add	r3, r7, r3
 4674 007a 1B78     		ldrb	r3, [r3]
 4675 007c 002B     		cmp	r3, #0
 4676 007e 06D1     		bne	.L265
2267:.\ff/ff.c     **** 		if (!dir)	/* Current dir itself */
 4677              		.loc 1 2267 0
 4678 0080 3B6C     		ldr	r3, [r7, #64]
 4679 0082 002B     		cmp	r3, #0
 4680 0084 03D1     		bne	.L265
2268:.\ff/ff.c     **** 			res = FR_INVALID_NAME;
 4681              		.loc 1 2268 0
 4682 0086 4723     		mov	r3, #71
 4683 0088 FB18     		add	r3, r7, r3
 4684 008a 0622     		mov	r2, #6
 4685 008c 1A70     		strb	r2, [r3]
 4686              	.L265:
2269:.\ff/ff.c     **** #if _FS_SHARE
2270:.\ff/ff.c     **** 		else
2271:.\ff/ff.c     **** 			res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
2272:.\ff/ff.c     **** #endif
2273:.\ff/ff.c     **** 	}
2274:.\ff/ff.c     **** 	/* Create or Open a file */
2275:.\ff/ff.c     **** 	if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 4687              		.loc 1 2275 0
 4688 008e FB1D     		add	r3, r7, #7
 4689 0090 1B78     		ldrb	r3, [r3]
 4690 0092 1C22     		mov	r2, #28
 4691 0094 1340     		and	r3, r2
 4692 0096 00D1     		bne	.LCB4371
 4693 0098 CCE0     		b	.L266	@long jump
 4694              	.LCB4371:
 4695              	.LBB4:
2276:.\ff/ff.c     **** 		DWORD dw, cl;
2277:.\ff/ff.c     **** 
2278:.\ff/ff.c     **** 		if (res != FR_OK) {					/* No file, create new */
 4696              		.loc 1 2278 0
 4697 009a 4723     		mov	r3, #71
 4698 009c FB18     		add	r3, r7, r3
 4699 009e 1B78     		ldrb	r3, [r3]
 4700 00a0 002B     		cmp	r3, #0
 4701 00a2 18D0     		beq	.L267
2279:.\ff/ff.c     **** 			if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
 4702              		.loc 1 2279 0
 4703 00a4 4723     		mov	r3, #71
 4704 00a6 FB18     		add	r3, r7, r3
 4705 00a8 1B78     		ldrb	r3, [r3]
 4706 00aa 042B     		cmp	r3, #4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 124


 4707 00ac 08D1     		bne	.L268
2280:.\ff/ff.c     **** #if _FS_SHARE
2281:.\ff/ff.c     **** 				res = enq_lock(dj.fs) ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
2282:.\ff/ff.c     **** #else
2283:.\ff/ff.c     **** 				res = dir_register(&dj);
 4708              		.loc 1 2283 0
 4709 00ae 4723     		mov	r3, #71
 4710 00b0 FC18     		add	r4, r7, r3
 4711 00b2 1C23     		mov	r3, #28
 4712 00b4 FB18     		add	r3, r7, r3
 4713 00b6 181C     		mov	r0, r3
 4714 00b8 FFF7FEFF 		bl	dir_register
 4715 00bc 031C     		mov	r3, r0
 4716 00be 2370     		strb	r3, [r4]
 4717              	.L268:
2284:.\ff/ff.c     **** #endif
2285:.\ff/ff.c     **** 			mode |= FA_CREATE_ALWAYS;		/* File is created */
 4718              		.loc 1 2285 0
 4719 00c0 FB1D     		add	r3, r7, #7
 4720 00c2 FA1D     		add	r2, r7, #7
 4721 00c4 1278     		ldrb	r2, [r2]
 4722 00c6 0821     		mov	r1, #8
 4723 00c8 0A43     		orr	r2, r1
 4724 00ca 1A70     		strb	r2, [r3]
2286:.\ff/ff.c     **** 			dir = dj.dir;					/* New entry */
 4725              		.loc 1 2286 0
 4726 00cc 1C23     		mov	r3, #28
 4727 00ce FB18     		add	r3, r7, r3
 4728 00d0 5B69     		ldr	r3, [r3, #20]
 4729 00d2 3B64     		str	r3, [r7, #64]
 4730 00d4 14E0     		b	.L269
 4731              	.L267:
2287:.\ff/ff.c     **** 		}
2288:.\ff/ff.c     **** 		else {								/* Any object is already existing */
2289:.\ff/ff.c     **** 			if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 4732              		.loc 1 2289 0
 4733 00d6 3B6C     		ldr	r3, [r7, #64]
 4734 00d8 0B33     		add	r3, r3, #11
 4735 00da 1B78     		ldrb	r3, [r3]
 4736 00dc 1A1C     		mov	r2, r3
 4737 00de 1123     		mov	r3, #17
 4738 00e0 1340     		and	r3, r2
 4739 00e2 04D0     		beq	.L270
2290:.\ff/ff.c     **** 				res = FR_DENIED;
 4740              		.loc 1 2290 0
 4741 00e4 4723     		mov	r3, #71
 4742 00e6 FB18     		add	r3, r7, r3
 4743 00e8 0722     		mov	r2, #7
 4744 00ea 1A70     		strb	r2, [r3]
 4745 00ec 08E0     		b	.L269
 4746              	.L270:
2291:.\ff/ff.c     **** 			} else {
2292:.\ff/ff.c     **** 				if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
 4747              		.loc 1 2292 0
 4748 00ee FB1D     		add	r3, r7, #7
 4749 00f0 1B78     		ldrb	r3, [r3]
 4750 00f2 0422     		mov	r2, #4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 125


 4751 00f4 1340     		and	r3, r2
 4752 00f6 03D0     		beq	.L269
2293:.\ff/ff.c     **** 					res = FR_EXIST;
 4753              		.loc 1 2293 0
 4754 00f8 4723     		mov	r3, #71
 4755 00fa FB18     		add	r3, r7, r3
 4756 00fc 0822     		mov	r2, #8
 4757 00fe 1A70     		strb	r2, [r3]
 4758              	.L269:
2294:.\ff/ff.c     **** 			}
2295:.\ff/ff.c     **** 		}
2296:.\ff/ff.c     **** 		if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 4759              		.loc 1 2296 0
 4760 0100 4723     		mov	r3, #71
 4761 0102 FB18     		add	r3, r7, r3
 4762 0104 1B78     		ldrb	r3, [r3]
 4763 0106 002B     		cmp	r3, #0
 4764 0108 00D0     		beq	.LCB4439
 4765 010a 92E0     		b	.L271	@long jump
 4766              	.LCB4439:
 4767              		.loc 1 2296 0 is_stmt 0 discriminator 1
 4768 010c FB1D     		add	r3, r7, #7
 4769 010e 1B78     		ldrb	r3, [r3]
 4770 0110 0822     		mov	r2, #8
 4771 0112 1340     		and	r3, r2
 4772 0114 00D1     		bne	.LCB4445
 4773 0116 8CE0     		b	.L271	@long jump
 4774              	.LCB4445:
2297:.\ff/ff.c     **** 			dw = get_fattime();					/* Created time */
 4775              		.loc 1 2297 0 is_stmt 1
 4776 0118 FFF7FEFF 		bl	get_fattime
 4777 011c 031C     		mov	r3, r0
 4778 011e FB63     		str	r3, [r7, #60]
2298:.\ff/ff.c     **** 			ST_DWORD(dir+DIR_CrtTime, dw);
 4779              		.loc 1 2298 0
 4780 0120 3B6C     		ldr	r3, [r7, #64]
 4781 0122 0E33     		add	r3, r3, #14
 4782 0124 FA6B     		ldr	r2, [r7, #60]
 4783 0126 D2B2     		uxtb	r2, r2
 4784 0128 1A70     		strb	r2, [r3]
 4785 012a 3B6C     		ldr	r3, [r7, #64]
 4786 012c 0F33     		add	r3, r3, #15
 4787 012e FA6B     		ldr	r2, [r7, #60]
 4788 0130 92B2     		uxth	r2, r2
 4789 0132 120A     		lsr	r2, r2, #8
 4790 0134 92B2     		uxth	r2, r2
 4791 0136 D2B2     		uxtb	r2, r2
 4792 0138 1A70     		strb	r2, [r3]
 4793 013a 3B6C     		ldr	r3, [r7, #64]
 4794 013c 1033     		add	r3, r3, #16
 4795 013e FA6B     		ldr	r2, [r7, #60]
 4796 0140 120C     		lsr	r2, r2, #16
 4797 0142 D2B2     		uxtb	r2, r2
 4798 0144 1A70     		strb	r2, [r3]
 4799 0146 3B6C     		ldr	r3, [r7, #64]
 4800 0148 1133     		add	r3, r3, #17
 4801 014a FA6B     		ldr	r2, [r7, #60]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 126


 4802 014c 120E     		lsr	r2, r2, #24
 4803 014e D2B2     		uxtb	r2, r2
 4804 0150 1A70     		strb	r2, [r3]
2299:.\ff/ff.c     **** 			dir[DIR_Attr] = 0;					/* Reset attribute */
 4805              		.loc 1 2299 0
 4806 0152 3B6C     		ldr	r3, [r7, #64]
 4807 0154 0B33     		add	r3, r3, #11
 4808 0156 0022     		mov	r2, #0
 4809 0158 1A70     		strb	r2, [r3]
2300:.\ff/ff.c     **** 			ST_DWORD(dir+DIR_FileSize, 0);		/* size = 0 */
 4810              		.loc 1 2300 0
 4811 015a 3B6C     		ldr	r3, [r7, #64]
 4812 015c 1C33     		add	r3, r3, #28
 4813 015e 0022     		mov	r2, #0
 4814 0160 1A70     		strb	r2, [r3]
 4815 0162 3B6C     		ldr	r3, [r7, #64]
 4816 0164 1D33     		add	r3, r3, #29
 4817 0166 0022     		mov	r2, #0
 4818 0168 1A70     		strb	r2, [r3]
 4819 016a 3B6C     		ldr	r3, [r7, #64]
 4820 016c 1E33     		add	r3, r3, #30
 4821 016e 0022     		mov	r2, #0
 4822 0170 1A70     		strb	r2, [r3]
 4823 0172 3B6C     		ldr	r3, [r7, #64]
 4824 0174 1F33     		add	r3, r3, #31
 4825 0176 0022     		mov	r2, #0
 4826 0178 1A70     		strb	r2, [r3]
2301:.\ff/ff.c     **** 			cl = LD_CLUST(dir);					/* Get start cluster */
 4827              		.loc 1 2301 0
 4828 017a 3B6C     		ldr	r3, [r7, #64]
 4829 017c 1533     		add	r3, r3, #21
 4830 017e 1B78     		ldrb	r3, [r3]
 4831 0180 1B02     		lsl	r3, r3, #8
 4832 0182 9AB2     		uxth	r2, r3
 4833 0184 3B6C     		ldr	r3, [r7, #64]
 4834 0186 1433     		add	r3, r3, #20
 4835 0188 1B78     		ldrb	r3, [r3]
 4836 018a 9BB2     		uxth	r3, r3
 4837 018c 1343     		orr	r3, r2
 4838 018e 9BB2     		uxth	r3, r3
 4839 0190 9BB2     		uxth	r3, r3
 4840 0192 1B04     		lsl	r3, r3, #16
 4841 0194 3A6C     		ldr	r2, [r7, #64]
 4842 0196 1B32     		add	r2, r2, #27
 4843 0198 1278     		ldrb	r2, [r2]
 4844 019a 1202     		lsl	r2, r2, #8
 4845 019c 91B2     		uxth	r1, r2
 4846 019e 3A6C     		ldr	r2, [r7, #64]
 4847 01a0 1A32     		add	r2, r2, #26
 4848 01a2 1278     		ldrb	r2, [r2]
 4849 01a4 92B2     		uxth	r2, r2
 4850 01a6 0A43     		orr	r2, r1
 4851 01a8 92B2     		uxth	r2, r2
 4852 01aa 92B2     		uxth	r2, r2
 4853 01ac 1343     		orr	r3, r2
 4854 01ae BB63     		str	r3, [r7, #56]
2302:.\ff/ff.c     **** 			ST_CLUST(dir, 0);					/* cluster = 0 */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 127


 4855              		.loc 1 2302 0
 4856 01b0 3B6C     		ldr	r3, [r7, #64]
 4857 01b2 1A33     		add	r3, r3, #26
 4858 01b4 0022     		mov	r2, #0
 4859 01b6 1A70     		strb	r2, [r3]
 4860 01b8 3B6C     		ldr	r3, [r7, #64]
 4861 01ba 1B33     		add	r3, r3, #27
 4862 01bc 0022     		mov	r2, #0
 4863 01be 1A70     		strb	r2, [r3]
 4864 01c0 3B6C     		ldr	r3, [r7, #64]
 4865 01c2 1433     		add	r3, r3, #20
 4866 01c4 0022     		mov	r2, #0
 4867 01c6 1A70     		strb	r2, [r3]
 4868 01c8 3B6C     		ldr	r3, [r7, #64]
 4869 01ca 1533     		add	r3, r3, #21
 4870 01cc 0022     		mov	r2, #0
 4871 01ce 1A70     		strb	r2, [r3]
2303:.\ff/ff.c     **** 			dj.fs->wflag = 1;
 4872              		.loc 1 2303 0
 4873 01d0 1C23     		mov	r3, #28
 4874 01d2 FB18     		add	r3, r7, r3
 4875 01d4 1B68     		ldr	r3, [r3]
 4876 01d6 0122     		mov	r2, #1
 4877 01d8 1A71     		strb	r2, [r3, #4]
2304:.\ff/ff.c     **** 			if (cl) {							/* Remove the cluster chain if exist */
 4878              		.loc 1 2304 0
 4879 01da BB6B     		ldr	r3, [r7, #56]
 4880 01dc 002B     		cmp	r3, #0
 4881 01de 28D0     		beq	.L271
2305:.\ff/ff.c     **** 				dw = dj.fs->winsect;
 4882              		.loc 1 2305 0
 4883 01e0 1C23     		mov	r3, #28
 4884 01e2 FB18     		add	r3, r7, r3
 4885 01e4 1B68     		ldr	r3, [r3]
 4886 01e6 DB6A     		ldr	r3, [r3, #44]
 4887 01e8 FB63     		str	r3, [r7, #60]
2306:.\ff/ff.c     **** 				res = remove_chain(dj.fs, cl);
 4888              		.loc 1 2306 0
 4889 01ea 1C23     		mov	r3, #28
 4890 01ec FB18     		add	r3, r7, r3
 4891 01ee 1A68     		ldr	r2, [r3]
 4892 01f0 4723     		mov	r3, #71
 4893 01f2 FC18     		add	r4, r7, r3
 4894 01f4 BB6B     		ldr	r3, [r7, #56]
 4895 01f6 101C     		mov	r0, r2
 4896 01f8 191C     		mov	r1, r3
 4897 01fa FFF7FEFF 		bl	remove_chain
 4898 01fe 031C     		mov	r3, r0
 4899 0200 2370     		strb	r3, [r4]
2307:.\ff/ff.c     **** 				if (res == FR_OK) {
 4900              		.loc 1 2307 0
 4901 0202 4723     		mov	r3, #71
 4902 0204 FB18     		add	r3, r7, r3
 4903 0206 1B78     		ldrb	r3, [r3]
 4904 0208 002B     		cmp	r3, #0
 4905 020a 12D1     		bne	.L271
2308:.\ff/ff.c     **** 					dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 128


 4906              		.loc 1 2308 0
 4907 020c 1C23     		mov	r3, #28
 4908 020e FB18     		add	r3, r7, r3
 4909 0210 1B68     		ldr	r3, [r3]
 4910 0212 BA6B     		ldr	r2, [r7, #56]
 4911 0214 013A     		sub	r2, r2, #1
 4912 0216 DA60     		str	r2, [r3, #12]
2309:.\ff/ff.c     **** 					res = move_window(dj.fs, dw);
 4913              		.loc 1 2309 0
 4914 0218 1C23     		mov	r3, #28
 4915 021a FB18     		add	r3, r7, r3
 4916 021c 1A68     		ldr	r2, [r3]
 4917 021e 4723     		mov	r3, #71
 4918 0220 FC18     		add	r4, r7, r3
 4919 0222 FB6B     		ldr	r3, [r7, #60]
 4920 0224 101C     		mov	r0, r2
 4921 0226 191C     		mov	r1, r3
 4922 0228 FFF7FEFF 		bl	move_window
 4923 022c 031C     		mov	r3, r0
 4924 022e 2370     		strb	r3, [r4]
 4925              	.LBE4:
 4926 0230 21E0     		b	.L272
 4927              	.L271:
 4928 0232 20E0     		b	.L272
 4929              	.L266:
2310:.\ff/ff.c     **** 				}
2311:.\ff/ff.c     **** 			}
2312:.\ff/ff.c     **** 		}
2313:.\ff/ff.c     **** 	}
2314:.\ff/ff.c     **** 	else {	/* Open an existing file */
2315:.\ff/ff.c     **** 		if (res == FR_OK) {						/* Follow succeeded */
 4930              		.loc 1 2315 0
 4931 0234 4723     		mov	r3, #71
 4932 0236 FB18     		add	r3, r7, r3
 4933 0238 1B78     		ldrb	r3, [r3]
 4934 023a 002B     		cmp	r3, #0
 4935 023c 1BD1     		bne	.L272
2316:.\ff/ff.c     **** 			if (dir[DIR_Attr] & AM_DIR) {		/* It is a directory */
 4936              		.loc 1 2316 0
 4937 023e 3B6C     		ldr	r3, [r7, #64]
 4938 0240 0B33     		add	r3, r3, #11
 4939 0242 1B78     		ldrb	r3, [r3]
 4940 0244 1A1C     		mov	r2, r3
 4941 0246 1023     		mov	r3, #16
 4942 0248 1340     		and	r3, r2
 4943 024a 04D0     		beq	.L273
2317:.\ff/ff.c     **** 				res = FR_NO_FILE;
 4944              		.loc 1 2317 0
 4945 024c 4723     		mov	r3, #71
 4946 024e FB18     		add	r3, r7, r3
 4947 0250 0422     		mov	r2, #4
 4948 0252 1A70     		strb	r2, [r3]
 4949 0254 0FE0     		b	.L272
 4950              	.L273:
2318:.\ff/ff.c     **** 			} else {
2319:.\ff/ff.c     **** 				if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
 4951              		.loc 1 2319 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 129


 4952 0256 FB1D     		add	r3, r7, #7
 4953 0258 1B78     		ldrb	r3, [r3]
 4954 025a 0222     		mov	r2, #2
 4955 025c 1340     		and	r3, r2
 4956 025e 0AD0     		beq	.L272
 4957              		.loc 1 2319 0 is_stmt 0 discriminator 1
 4958 0260 3B6C     		ldr	r3, [r7, #64]
 4959 0262 0B33     		add	r3, r3, #11
 4960 0264 1B78     		ldrb	r3, [r3]
 4961 0266 1A1C     		mov	r2, r3
 4962 0268 0123     		mov	r3, #1
 4963 026a 1340     		and	r3, r2
 4964 026c 03D0     		beq	.L272
2320:.\ff/ff.c     **** 					res = FR_DENIED;
 4965              		.loc 1 2320 0 is_stmt 1
 4966 026e 4723     		mov	r3, #71
 4967 0270 FB18     		add	r3, r7, r3
 4968 0272 0722     		mov	r2, #7
 4969 0274 1A70     		strb	r2, [r3]
 4970              	.L272:
2321:.\ff/ff.c     **** 			}
2322:.\ff/ff.c     **** 		}
2323:.\ff/ff.c     **** 	}
2324:.\ff/ff.c     **** 	if (res == FR_OK) {
 4971              		.loc 1 2324 0
 4972 0276 4723     		mov	r3, #71
 4973 0278 FB18     		add	r3, r7, r3
 4974 027a 1B78     		ldrb	r3, [r3]
 4975 027c 002B     		cmp	r3, #0
 4976 027e 13D1     		bne	.L274
2325:.\ff/ff.c     **** 		if (mode & FA_CREATE_ALWAYS)			/* Set file change flag if created or overwritten */
 4977              		.loc 1 2325 0
 4978 0280 FB1D     		add	r3, r7, #7
 4979 0282 1B78     		ldrb	r3, [r3]
 4980 0284 0822     		mov	r2, #8
 4981 0286 1340     		and	r3, r2
 4982 0288 05D0     		beq	.L275
2326:.\ff/ff.c     **** 			mode |= FA__WRITTEN;
 4983              		.loc 1 2326 0
 4984 028a FB1D     		add	r3, r7, #7
 4985 028c FA1D     		add	r2, r7, #7
 4986 028e 1278     		ldrb	r2, [r2]
 4987 0290 2021     		mov	r1, #32
 4988 0292 0A43     		orr	r2, r1
 4989 0294 1A70     		strb	r2, [r3]
 4990              	.L275:
2327:.\ff/ff.c     **** 		fp->dir_sect = dj.fs->winsect;			/* Pointer to the directory entry */
 4991              		.loc 1 2327 0
 4992 0296 1C23     		mov	r3, #28
 4993 0298 FB18     		add	r3, r7, r3
 4994 029a 1B68     		ldr	r3, [r3]
 4995 029c DA6A     		ldr	r2, [r3, #44]
 4996 029e FB68     		ldr	r3, [r7, #12]
 4997 02a0 DA61     		str	r2, [r3, #28]
2328:.\ff/ff.c     **** 		fp->dir_ptr = dir;
 4998              		.loc 1 2328 0
 4999 02a2 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 130


 5000 02a4 3A6C     		ldr	r2, [r7, #64]
 5001 02a6 1A62     		str	r2, [r3, #32]
 5002              	.L274:
2329:.\ff/ff.c     **** #if _FS_SHARE
2330:.\ff/ff.c     **** 		fp->lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
2331:.\ff/ff.c     **** 		if (!fp->lockid) res = FR_INT_ERR;
2332:.\ff/ff.c     **** #endif
2333:.\ff/ff.c     **** 	}
2334:.\ff/ff.c     **** 
2335:.\ff/ff.c     **** #else				/* R/O configuration */
2336:.\ff/ff.c     **** 	if (res == FR_OK) {					/* Follow succeeded */
2337:.\ff/ff.c     **** 		if (!dir) {						/* Current dir itself */
2338:.\ff/ff.c     **** 			res = FR_INVALID_NAME;
2339:.\ff/ff.c     **** 		} else {
2340:.\ff/ff.c     **** 			if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
2341:.\ff/ff.c     **** 				res = FR_NO_FILE;
2342:.\ff/ff.c     **** 		}
2343:.\ff/ff.c     **** 	}
2344:.\ff/ff.c     **** #endif
2345:.\ff/ff.c     **** 	FREE_BUF();
2346:.\ff/ff.c     **** 
2347:.\ff/ff.c     **** 	if (res == FR_OK) {
 5003              		.loc 1 2347 0
 5004 02a8 4723     		mov	r3, #71
 5005 02aa FB18     		add	r3, r7, r3
 5006 02ac 1B78     		ldrb	r3, [r3]
 5007 02ae 002B     		cmp	r3, #0
 5008 02b0 44D1     		bne	.L276
2348:.\ff/ff.c     **** 		fp->flag = mode;					/* File access mode */
 5009              		.loc 1 2348 0
 5010 02b2 FB68     		ldr	r3, [r7, #12]
 5011 02b4 FA1D     		add	r2, r7, #7
 5012 02b6 1278     		ldrb	r2, [r2]
 5013 02b8 9A71     		strb	r2, [r3, #6]
2349:.\ff/ff.c     **** 		fp->sclust = LD_CLUST(dir);			/* File start cluster */
 5014              		.loc 1 2349 0
 5015 02ba 3B6C     		ldr	r3, [r7, #64]
 5016 02bc 1533     		add	r3, r3, #21
 5017 02be 1B78     		ldrb	r3, [r3]
 5018 02c0 1B02     		lsl	r3, r3, #8
 5019 02c2 9AB2     		uxth	r2, r3
 5020 02c4 3B6C     		ldr	r3, [r7, #64]
 5021 02c6 1433     		add	r3, r3, #20
 5022 02c8 1B78     		ldrb	r3, [r3]
 5023 02ca 9BB2     		uxth	r3, r3
 5024 02cc 1343     		orr	r3, r2
 5025 02ce 9BB2     		uxth	r3, r3
 5026 02d0 9BB2     		uxth	r3, r3
 5027 02d2 1B04     		lsl	r3, r3, #16
 5028 02d4 3A6C     		ldr	r2, [r7, #64]
 5029 02d6 1B32     		add	r2, r2, #27
 5030 02d8 1278     		ldrb	r2, [r2]
 5031 02da 1202     		lsl	r2, r2, #8
 5032 02dc 91B2     		uxth	r1, r2
 5033 02de 3A6C     		ldr	r2, [r7, #64]
 5034 02e0 1A32     		add	r2, r2, #26
 5035 02e2 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 131


 5036 02e4 92B2     		uxth	r2, r2
 5037 02e6 0A43     		orr	r2, r1
 5038 02e8 92B2     		uxth	r2, r2
 5039 02ea 92B2     		uxth	r2, r2
 5040 02ec 1A43     		orr	r2, r3
 5041 02ee FB68     		ldr	r3, [r7, #12]
 5042 02f0 1A61     		str	r2, [r3, #16]
2350:.\ff/ff.c     **** 		fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
 5043              		.loc 1 2350 0
 5044 02f2 3B6C     		ldr	r3, [r7, #64]
 5045 02f4 1F33     		add	r3, r3, #31
 5046 02f6 1B78     		ldrb	r3, [r3]
 5047 02f8 1A06     		lsl	r2, r3, #24
 5048 02fa 3B6C     		ldr	r3, [r7, #64]
 5049 02fc 1E33     		add	r3, r3, #30
 5050 02fe 1B78     		ldrb	r3, [r3]
 5051 0300 1B04     		lsl	r3, r3, #16
 5052 0302 1343     		orr	r3, r2
 5053 0304 3A6C     		ldr	r2, [r7, #64]
 5054 0306 1D32     		add	r2, r2, #29
 5055 0308 1278     		ldrb	r2, [r2]
 5056 030a 1202     		lsl	r2, r2, #8
 5057 030c 1343     		orr	r3, r2
 5058 030e 3A6C     		ldr	r2, [r7, #64]
 5059 0310 1C32     		add	r2, r2, #28
 5060 0312 1278     		ldrb	r2, [r2]
 5061 0314 1A43     		orr	r2, r3
 5062 0316 FB68     		ldr	r3, [r7, #12]
 5063 0318 DA60     		str	r2, [r3, #12]
2351:.\ff/ff.c     **** 		fp->fptr = 0;						/* File pointer */
 5064              		.loc 1 2351 0
 5065 031a FB68     		ldr	r3, [r7, #12]
 5066 031c 0022     		mov	r2, #0
 5067 031e 9A60     		str	r2, [r3, #8]
2352:.\ff/ff.c     **** 		fp->dsect = 0;
 5068              		.loc 1 2352 0
 5069 0320 FB68     		ldr	r3, [r7, #12]
 5070 0322 0022     		mov	r2, #0
 5071 0324 9A61     		str	r2, [r3, #24]
2353:.\ff/ff.c     **** #if _USE_FASTSEEK
2354:.\ff/ff.c     **** 		fp->cltbl = 0;						/* Normal seek mode */
2355:.\ff/ff.c     **** #endif
2356:.\ff/ff.c     **** 		fp->fs = dj.fs; fp->id = dj.fs->id;	/* Validate file object */
 5072              		.loc 1 2356 0
 5073 0326 1C23     		mov	r3, #28
 5074 0328 FB18     		add	r3, r7, r3
 5075 032a 1A68     		ldr	r2, [r3]
 5076 032c FB68     		ldr	r3, [r7, #12]
 5077 032e 1A60     		str	r2, [r3]
 5078 0330 1C23     		mov	r3, #28
 5079 0332 FB18     		add	r3, r7, r3
 5080 0334 1B68     		ldr	r3, [r3]
 5081 0336 DA88     		ldrh	r2, [r3, #6]
 5082 0338 FB68     		ldr	r3, [r7, #12]
 5083 033a 9A80     		strh	r2, [r3, #4]
 5084              	.L276:
2357:.\ff/ff.c     **** 	}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 132


2358:.\ff/ff.c     **** 
2359:.\ff/ff.c     **** 	LEAVE_FF(dj.fs, res);
 5085              		.loc 1 2359 0
 5086 033c 4723     		mov	r3, #71
 5087 033e FB18     		add	r3, r7, r3
 5088 0340 1B78     		ldrb	r3, [r3]
2360:.\ff/ff.c     **** }
 5089              		.loc 1 2360 0
 5090 0342 181C     		mov	r0, r3
 5091 0344 BD46     		mov	sp, r7
 5092 0346 13B0     		add	sp, sp, #76
 5093              		@ sp needed
 5094 0348 90BD     		pop	{r4, r7, pc}
 5095              		.cfi_endproc
 5096              	.LFE26:
 5097              		.size	f_open, .-f_open
 5098 034a C046     		.section	.text.f_read,"ax",%progbits
 5099              		.align	2
 5100              		.global	f_read
 5101              		.code	16
 5102              		.thumb_func
 5103              		.type	f_read, %function
 5104              	f_read:
 5105              	.LFB27:
2361:.\ff/ff.c     **** 
2362:.\ff/ff.c     **** 
2363:.\ff/ff.c     **** 
2364:.\ff/ff.c     **** 
2365:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2366:.\ff/ff.c     **** /* Read File                                                             */
2367:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2368:.\ff/ff.c     **** 
2369:.\ff/ff.c     **** FRESULT f_read (
2370:.\ff/ff.c     **** 	FIL *fp, 		/* Pointer to the file object */
2371:.\ff/ff.c     **** 	void *buff,		/* Pointer to data buffer */
2372:.\ff/ff.c     **** 	UINT btr,		/* Number of bytes to read */
2373:.\ff/ff.c     **** 	UINT *br		/* Pointer to number of bytes read */
2374:.\ff/ff.c     **** )
2375:.\ff/ff.c     **** {
 5106              		.loc 1 2375 0
 5107              		.cfi_startproc
 5108 0000 90B5     		push	{r4, r7, lr}
 5109              		.cfi_def_cfa_offset 12
 5110              		.cfi_offset 4, -12
 5111              		.cfi_offset 7, -8
 5112              		.cfi_offset 14, -4
 5113 0002 8DB0     		sub	sp, sp, #52
 5114              		.cfi_def_cfa_offset 64
 5115 0004 00AF     		add	r7, sp, #0
 5116              		.cfi_def_cfa_register 7
 5117 0006 F860     		str	r0, [r7, #12]
 5118 0008 B960     		str	r1, [r7, #8]
 5119 000a 7A60     		str	r2, [r7, #4]
 5120 000c 3B60     		str	r3, [r7]
2376:.\ff/ff.c     **** 	FRESULT res;
2377:.\ff/ff.c     **** 	DWORD clst, sect, remain;
2378:.\ff/ff.c     **** 	UINT rcnt, cc;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 133


2379:.\ff/ff.c     **** 	BYTE csect, *rbuff = buff;
 5121              		.loc 1 2379 0
 5122 000e BB68     		ldr	r3, [r7, #8]
 5123 0010 3B62     		str	r3, [r7, #32]
2380:.\ff/ff.c     **** 
2381:.\ff/ff.c     **** 
2382:.\ff/ff.c     **** 	*br = 0;	/* Initialize byte counter */
 5124              		.loc 1 2382 0
 5125 0012 3B68     		ldr	r3, [r7]
 5126 0014 0022     		mov	r2, #0
 5127 0016 1A60     		str	r2, [r3]
2383:.\ff/ff.c     **** 
2384:.\ff/ff.c     **** 	res = validate(fp->fs, fp->id);				/* Check validity */
 5128              		.loc 1 2384 0
 5129 0018 FB68     		ldr	r3, [r7, #12]
 5130 001a 1A68     		ldr	r2, [r3]
 5131 001c FB68     		ldr	r3, [r7, #12]
 5132 001e 9B88     		ldrh	r3, [r3, #4]
 5133 0020 1F21     		mov	r1, #31
 5134 0022 7C18     		add	r4, r7, r1
 5135 0024 101C     		mov	r0, r2
 5136 0026 191C     		mov	r1, r3
 5137 0028 FFF7FEFF 		bl	validate
 5138 002c 031C     		mov	r3, r0
 5139 002e 2370     		strb	r3, [r4]
2385:.\ff/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 5140              		.loc 1 2385 0
 5141 0030 1F23     		mov	r3, #31
 5142 0032 FB18     		add	r3, r7, r3
 5143 0034 1B78     		ldrb	r3, [r3]
 5144 0036 002B     		cmp	r3, #0
 5145 0038 03D0     		beq	.L279
 5146              		.loc 1 2385 0 is_stmt 0 discriminator 1
 5147 003a 1F23     		mov	r3, #31
 5148 003c FB18     		add	r3, r7, r3
 5149 003e 1B78     		ldrb	r3, [r3]
 5150 0040 1FE1     		b	.L280
 5151              	.L279:
2386:.\ff/ff.c     **** 	if (fp->flag & FA__ERROR)					/* Aborted file? */
 5152              		.loc 1 2386 0 is_stmt 1
 5153 0042 FB68     		ldr	r3, [r7, #12]
 5154 0044 9B79     		ldrb	r3, [r3, #6]
 5155 0046 DBB2     		uxtb	r3, r3
 5156 0048 5BB2     		sxtb	r3, r3
 5157 004a 002B     		cmp	r3, #0
 5158 004c 01DA     		bge	.L281
2387:.\ff/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 5159              		.loc 1 2387 0
 5160 004e 0223     		mov	r3, #2
 5161 0050 17E1     		b	.L280
 5162              	.L281:
2388:.\ff/ff.c     **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 5163              		.loc 1 2388 0
 5164 0052 FB68     		ldr	r3, [r7, #12]
 5165 0054 9B79     		ldrb	r3, [r3, #6]
 5166 0056 1A1C     		mov	r2, r3
 5167 0058 0123     		mov	r3, #1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 134


 5168 005a 1340     		and	r3, r2
 5169 005c 01D1     		bne	.L282
2389:.\ff/ff.c     **** 		LEAVE_FF(fp->fs, FR_DENIED);
 5170              		.loc 1 2389 0
 5171 005e 0723     		mov	r3, #7
 5172 0060 0FE1     		b	.L280
 5173              	.L282:
2390:.\ff/ff.c     **** 	remain = fp->fsize - fp->fptr;
 5174              		.loc 1 2390 0
 5175 0062 FB68     		ldr	r3, [r7, #12]
 5176 0064 DA68     		ldr	r2, [r3, #12]
 5177 0066 FB68     		ldr	r3, [r7, #12]
 5178 0068 9B68     		ldr	r3, [r3, #8]
 5179 006a D31A     		sub	r3, r2, r3
 5180 006c BB61     		str	r3, [r7, #24]
2391:.\ff/ff.c     **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 5181              		.loc 1 2391 0
 5182 006e 7A68     		ldr	r2, [r7, #4]
 5183 0070 BB69     		ldr	r3, [r7, #24]
 5184 0072 9A42     		cmp	r2, r3
 5185 0074 01D9     		bls	.L283
 5186              		.loc 1 2391 0 is_stmt 0 discriminator 1
 5187 0076 BB69     		ldr	r3, [r7, #24]
 5188 0078 7B60     		str	r3, [r7, #4]
 5189              	.L283:
2392:.\ff/ff.c     **** 
2393:.\ff/ff.c     **** 	for ( ;  btr;								/* Repeat until all data read */
 5190              		.loc 1 2393 0 is_stmt 1
 5191 007a FDE0     		b	.L284
 5192              	.L299:
2394:.\ff/ff.c     **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
2395:.\ff/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 5193              		.loc 1 2395 0
 5194 007c FB68     		ldr	r3, [r7, #12]
 5195 007e 9B68     		ldr	r3, [r3, #8]
 5196 0080 DB05     		lsl	r3, r3, #23
 5197 0082 DB0D     		lsr	r3, r3, #23
 5198 0084 00D0     		beq	.LCB4845
 5199 0086 B2E0     		b	.L285	@long jump
 5200              	.LCB4845:
2396:.\ff/ff.c     **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 5201              		.loc 1 2396 0
 5202 0088 FB68     		ldr	r3, [r7, #12]
 5203 008a 9B68     		ldr	r3, [r3, #8]
 5204 008c 5B0A     		lsr	r3, r3, #9
 5205 008e DAB2     		uxtb	r2, r3
 5206 0090 FB68     		ldr	r3, [r7, #12]
 5207 0092 1B68     		ldr	r3, [r3]
 5208 0094 9B78     		ldrb	r3, [r3, #2]
 5209 0096 013B     		sub	r3, r3, #1
 5210 0098 D9B2     		uxtb	r1, r3
 5211 009a 1723     		mov	r3, #23
 5212 009c FB18     		add	r3, r7, r3
 5213 009e 0A40     		and	r2, r1
 5214 00a0 1A70     		strb	r2, [r3]
2397:.\ff/ff.c     **** 			if (!csect) {						/* On the cluster boundary? */
 5215              		.loc 1 2397 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 135


 5216 00a2 1723     		mov	r3, #23
 5217 00a4 FB18     		add	r3, r7, r3
 5218 00a6 1B78     		ldrb	r3, [r3]
 5219 00a8 002B     		cmp	r3, #0
 5220 00aa 2ED1     		bne	.L286
2398:.\ff/ff.c     **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 5221              		.loc 1 2398 0
 5222 00ac FB68     		ldr	r3, [r7, #12]
 5223 00ae 9B68     		ldr	r3, [r3, #8]
 5224 00b0 002B     		cmp	r3, #0
 5225 00b2 03D1     		bne	.L287
2399:.\ff/ff.c     **** 					clst = fp->sclust;			/* Follow from the origin */
 5226              		.loc 1 2399 0
 5227 00b4 FB68     		ldr	r3, [r7, #12]
 5228 00b6 1B69     		ldr	r3, [r3, #16]
 5229 00b8 FB62     		str	r3, [r7, #44]
 5230 00ba 09E0     		b	.L288
 5231              	.L287:
2400:.\ff/ff.c     **** 				} else {						/* Middle or end of the file */
2401:.\ff/ff.c     **** #if _USE_FASTSEEK
2402:.\ff/ff.c     **** 					if (fp->cltbl)
2403:.\ff/ff.c     **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2404:.\ff/ff.c     **** 					else
2405:.\ff/ff.c     **** #endif
2406:.\ff/ff.c     **** 						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
 5232              		.loc 1 2406 0
 5233 00bc FB68     		ldr	r3, [r7, #12]
 5234 00be 1A68     		ldr	r2, [r3]
 5235 00c0 FB68     		ldr	r3, [r7, #12]
 5236 00c2 5B69     		ldr	r3, [r3, #20]
 5237 00c4 101C     		mov	r0, r2
 5238 00c6 191C     		mov	r1, r3
 5239 00c8 FFF7FEFF 		bl	get_fat
 5240 00cc 031C     		mov	r3, r0
 5241 00ce FB62     		str	r3, [r7, #44]
 5242              	.L288:
2407:.\ff/ff.c     **** 				}
2408:.\ff/ff.c     **** 				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
 5243              		.loc 1 2408 0
 5244 00d0 FB6A     		ldr	r3, [r7, #44]
 5245 00d2 012B     		cmp	r3, #1
 5246 00d4 09D8     		bhi	.L289
 5247              		.loc 1 2408 0 is_stmt 0 discriminator 1
 5248 00d6 FB68     		ldr	r3, [r7, #12]
 5249 00d8 9B79     		ldrb	r3, [r3, #6]
 5250 00da 8022     		mov	r2, #128
 5251 00dc 5242     		neg	r2, r2
 5252 00de 1343     		orr	r3, r2
 5253 00e0 DAB2     		uxtb	r2, r3
 5254 00e2 FB68     		ldr	r3, [r7, #12]
 5255 00e4 9A71     		strb	r2, [r3, #6]
 5256 00e6 0223     		mov	r3, #2
 5257 00e8 CBE0     		b	.L280
 5258              	.L289:
2409:.\ff/ff.c     **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5259              		.loc 1 2409 0 is_stmt 1
 5260 00ea FB6A     		ldr	r3, [r7, #44]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 136


 5261 00ec 0133     		add	r3, r3, #1
 5262 00ee 09D1     		bne	.L290
 5263              		.loc 1 2409 0 is_stmt 0 discriminator 1
 5264 00f0 FB68     		ldr	r3, [r7, #12]
 5265 00f2 9B79     		ldrb	r3, [r3, #6]
 5266 00f4 8022     		mov	r2, #128
 5267 00f6 5242     		neg	r2, r2
 5268 00f8 1343     		orr	r3, r2
 5269 00fa DAB2     		uxtb	r2, r3
 5270 00fc FB68     		ldr	r3, [r7, #12]
 5271 00fe 9A71     		strb	r2, [r3, #6]
 5272 0100 0123     		mov	r3, #1
 5273 0102 BEE0     		b	.L280
 5274              	.L290:
2410:.\ff/ff.c     **** 				fp->clust = clst;				/* Update current cluster */
 5275              		.loc 1 2410 0 is_stmt 1
 5276 0104 FB68     		ldr	r3, [r7, #12]
 5277 0106 FA6A     		ldr	r2, [r7, #44]
 5278 0108 5A61     		str	r2, [r3, #20]
 5279              	.L286:
2411:.\ff/ff.c     **** 			}
2412:.\ff/ff.c     **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 5280              		.loc 1 2412 0
 5281 010a FB68     		ldr	r3, [r7, #12]
 5282 010c 1A68     		ldr	r2, [r3]
 5283 010e FB68     		ldr	r3, [r7, #12]
 5284 0110 5B69     		ldr	r3, [r3, #20]
 5285 0112 101C     		mov	r0, r2
 5286 0114 191C     		mov	r1, r3
 5287 0116 FFF7FEFF 		bl	clust2sect
 5288 011a 031C     		mov	r3, r0
 5289 011c 3B61     		str	r3, [r7, #16]
2413:.\ff/ff.c     **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 5290              		.loc 1 2413 0
 5291 011e 3B69     		ldr	r3, [r7, #16]
 5292 0120 002B     		cmp	r3, #0
 5293 0122 09D1     		bne	.L291
 5294              		.loc 1 2413 0 is_stmt 0 discriminator 1
 5295 0124 FB68     		ldr	r3, [r7, #12]
 5296 0126 9B79     		ldrb	r3, [r3, #6]
 5297 0128 8022     		mov	r2, #128
 5298 012a 5242     		neg	r2, r2
 5299 012c 1343     		orr	r3, r2
 5300 012e DAB2     		uxtb	r2, r3
 5301 0130 FB68     		ldr	r3, [r7, #12]
 5302 0132 9A71     		strb	r2, [r3, #6]
 5303 0134 0223     		mov	r3, #2
 5304 0136 A4E0     		b	.L280
 5305              	.L291:
2414:.\ff/ff.c     **** 			sect += csect;
 5306              		.loc 1 2414 0 is_stmt 1
 5307 0138 1723     		mov	r3, #23
 5308 013a FB18     		add	r3, r7, r3
 5309 013c 1B78     		ldrb	r3, [r3]
 5310 013e 3A69     		ldr	r2, [r7, #16]
 5311 0140 D318     		add	r3, r2, r3
 5312 0142 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 137


2415:.\ff/ff.c     **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
 5313              		.loc 1 2415 0
 5314 0144 7B68     		ldr	r3, [r7, #4]
 5315 0146 5B0A     		lsr	r3, r3, #9
 5316 0148 7B62     		str	r3, [r7, #36]
2416:.\ff/ff.c     **** 			if (cc) {							/* Read maximum contiguous sectors directly */
 5317              		.loc 1 2416 0
 5318 014a 7B6A     		ldr	r3, [r7, #36]
 5319 014c 002B     		cmp	r3, #0
 5320 014e 4BD0     		beq	.L292
2417:.\ff/ff.c     **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 5321              		.loc 1 2417 0
 5322 0150 1723     		mov	r3, #23
 5323 0152 FB18     		add	r3, r7, r3
 5324 0154 1A78     		ldrb	r2, [r3]
 5325 0156 7B6A     		ldr	r3, [r7, #36]
 5326 0158 D218     		add	r2, r2, r3
 5327 015a FB68     		ldr	r3, [r7, #12]
 5328 015c 1B68     		ldr	r3, [r3]
 5329 015e 9B78     		ldrb	r3, [r3, #2]
 5330 0160 9A42     		cmp	r2, r3
 5331 0162 08D9     		bls	.L293
2418:.\ff/ff.c     **** 					cc = fp->fs->csize - csect;
 5332              		.loc 1 2418 0
 5333 0164 FB68     		ldr	r3, [r7, #12]
 5334 0166 1B68     		ldr	r3, [r3]
 5335 0168 9B78     		ldrb	r3, [r3, #2]
 5336 016a 1A1C     		mov	r2, r3
 5337 016c 1723     		mov	r3, #23
 5338 016e FB18     		add	r3, r7, r3
 5339 0170 1B78     		ldrb	r3, [r3]
 5340 0172 D31A     		sub	r3, r2, r3
 5341 0174 7B62     		str	r3, [r7, #36]
 5342              	.L293:
2419:.\ff/ff.c     **** 				if (disk_read(fp->fs->drv, rbuff, sect, (BYTE)cc) != RES_OK)
 5343              		.loc 1 2419 0
 5344 0176 FB68     		ldr	r3, [r7, #12]
 5345 0178 1B68     		ldr	r3, [r3]
 5346 017a 5878     		ldrb	r0, [r3, #1]
 5347 017c 7B6A     		ldr	r3, [r7, #36]
 5348 017e DBB2     		uxtb	r3, r3
 5349 0180 396A     		ldr	r1, [r7, #32]
 5350 0182 3A69     		ldr	r2, [r7, #16]
 5351 0184 FFF7FEFF 		bl	disk_read
 5352 0188 031E     		sub	r3, r0, #0
 5353 018a 09D0     		beq	.L294
2420:.\ff/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
 5354              		.loc 1 2420 0
 5355 018c FB68     		ldr	r3, [r7, #12]
 5356 018e 9B79     		ldrb	r3, [r3, #6]
 5357 0190 8022     		mov	r2, #128
 5358 0192 5242     		neg	r2, r2
 5359 0194 1343     		orr	r3, r2
 5360 0196 DAB2     		uxtb	r2, r3
 5361 0198 FB68     		ldr	r3, [r7, #12]
 5362 019a 9A71     		strb	r2, [r3, #6]
 5363 019c 0123     		mov	r3, #1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 138


 5364 019e 70E0     		b	.L280
 5365              	.L294:
2421:.\ff/ff.c     **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
2422:.\ff/ff.c     **** #if _FS_TINY
2423:.\ff/ff.c     **** 				if (fp->fs->wflag && fp->fs->winsect - sect < cc)
 5366              		.loc 1 2423 0
 5367 01a0 FB68     		ldr	r3, [r7, #12]
 5368 01a2 1B68     		ldr	r3, [r3]
 5369 01a4 1B79     		ldrb	r3, [r3, #4]
 5370 01a6 002B     		cmp	r3, #0
 5371 01a8 1AD0     		beq	.L295
 5372              		.loc 1 2423 0 is_stmt 0 discriminator 1
 5373 01aa FB68     		ldr	r3, [r7, #12]
 5374 01ac 1B68     		ldr	r3, [r3]
 5375 01ae DA6A     		ldr	r2, [r3, #44]
 5376 01b0 3B69     		ldr	r3, [r7, #16]
 5377 01b2 D21A     		sub	r2, r2, r3
 5378 01b4 7B6A     		ldr	r3, [r7, #36]
 5379 01b6 9A42     		cmp	r2, r3
 5380 01b8 12D2     		bcs	.L295
2424:.\ff/ff.c     **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win, SS(fp->fs));
 5381              		.loc 1 2424 0 is_stmt 1
 5382 01ba FB68     		ldr	r3, [r7, #12]
 5383 01bc 1B68     		ldr	r3, [r3]
 5384 01be DA6A     		ldr	r2, [r3, #44]
 5385 01c0 3B69     		ldr	r3, [r7, #16]
 5386 01c2 D31A     		sub	r3, r2, r3
 5387 01c4 5B02     		lsl	r3, r3, #9
 5388 01c6 3A6A     		ldr	r2, [r7, #32]
 5389 01c8 D118     		add	r1, r2, r3
 5390 01ca FB68     		ldr	r3, [r7, #12]
 5391 01cc 1B68     		ldr	r3, [r3]
 5392 01ce 3033     		add	r3, r3, #48
 5393 01d0 1A1C     		mov	r2, r3
 5394 01d2 8023     		mov	r3, #128
 5395 01d4 9B00     		lsl	r3, r3, #2
 5396 01d6 081C     		mov	r0, r1
 5397 01d8 111C     		mov	r1, r2
 5398 01da 1A1C     		mov	r2, r3
 5399 01dc FFF7FEFF 		bl	mem_cpy
 5400              	.L295:
2425:.\ff/ff.c     **** #else
2426:.\ff/ff.c     **** 				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
2427:.\ff/ff.c     **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
2428:.\ff/ff.c     **** #endif
2429:.\ff/ff.c     **** #endif
2430:.\ff/ff.c     **** 				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
 5401              		.loc 1 2430 0
 5402 01e0 7B6A     		ldr	r3, [r7, #36]
 5403 01e2 5B02     		lsl	r3, r3, #9
 5404 01e4 BB62     		str	r3, [r7, #40]
2431:.\ff/ff.c     **** 				continue;
 5405              		.loc 1 2431 0
 5406 01e6 33E0     		b	.L296
 5407              	.L292:
2432:.\ff/ff.c     **** 			}
2433:.\ff/ff.c     **** #if !_FS_TINY
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 139


2434:.\ff/ff.c     **** 			if (fp->dsect != sect) {			/* Load data sector if not in cache */
2435:.\ff/ff.c     **** #if !_FS_READONLY
2436:.\ff/ff.c     **** 				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2437:.\ff/ff.c     **** 					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2438:.\ff/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2439:.\ff/ff.c     **** 					fp->flag &= ~FA__DIRTY;
2440:.\ff/ff.c     **** 				}
2441:.\ff/ff.c     **** #endif
2442:.\ff/ff.c     **** 				if (disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)	/* Fill sector cache */
2443:.\ff/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2444:.\ff/ff.c     **** 			}
2445:.\ff/ff.c     **** #endif
2446:.\ff/ff.c     **** 			fp->dsect = sect;
 5408              		.loc 1 2446 0
 5409 01e8 FB68     		ldr	r3, [r7, #12]
 5410 01ea 3A69     		ldr	r2, [r7, #16]
 5411 01ec 9A61     		str	r2, [r3, #24]
 5412              	.L285:
2447:.\ff/ff.c     **** 		}
2448:.\ff/ff.c     **** 		rcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
 5413              		.loc 1 2448 0
 5414 01ee FB68     		ldr	r3, [r7, #12]
 5415 01f0 9B68     		ldr	r3, [r3, #8]
 5416 01f2 DB05     		lsl	r3, r3, #23
 5417 01f4 DB0D     		lsr	r3, r3, #23
 5418 01f6 8022     		mov	r2, #128
 5419 01f8 9200     		lsl	r2, r2, #2
 5420 01fa D31A     		sub	r3, r2, r3
 5421 01fc BB62     		str	r3, [r7, #40]
2449:.\ff/ff.c     **** 		if (rcnt > btr) rcnt = btr;
 5422              		.loc 1 2449 0
 5423 01fe BA6A     		ldr	r2, [r7, #40]
 5424 0200 7B68     		ldr	r3, [r7, #4]
 5425 0202 9A42     		cmp	r2, r3
 5426 0204 01D9     		bls	.L297
 5427              		.loc 1 2449 0 is_stmt 0 discriminator 1
 5428 0206 7B68     		ldr	r3, [r7, #4]
 5429 0208 BB62     		str	r3, [r7, #40]
 5430              	.L297:
2450:.\ff/ff.c     **** #if _FS_TINY
2451:.\ff/ff.c     **** 		if (move_window(fp->fs, fp->dsect))		/* Move sector window */
 5431              		.loc 1 2451 0 is_stmt 1
 5432 020a FB68     		ldr	r3, [r7, #12]
 5433 020c 1A68     		ldr	r2, [r3]
 5434 020e FB68     		ldr	r3, [r7, #12]
 5435 0210 9B69     		ldr	r3, [r3, #24]
 5436 0212 101C     		mov	r0, r2
 5437 0214 191C     		mov	r1, r3
 5438 0216 FFF7FEFF 		bl	move_window
 5439 021a 031E     		sub	r3, r0, #0
 5440 021c 09D0     		beq	.L298
2452:.\ff/ff.c     **** 			ABORT(fp->fs, FR_DISK_ERR);
 5441              		.loc 1 2452 0
 5442 021e FB68     		ldr	r3, [r7, #12]
 5443 0220 9B79     		ldrb	r3, [r3, #6]
 5444 0222 8022     		mov	r2, #128
 5445 0224 5242     		neg	r2, r2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 140


 5446 0226 1343     		orr	r3, r2
 5447 0228 DAB2     		uxtb	r2, r3
 5448 022a FB68     		ldr	r3, [r7, #12]
 5449 022c 9A71     		strb	r2, [r3, #6]
 5450 022e 0123     		mov	r3, #1
 5451 0230 27E0     		b	.L280
 5452              	.L298:
2453:.\ff/ff.c     **** 		mem_cpy(rbuff, &fp->fs->win[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
 5453              		.loc 1 2453 0
 5454 0232 FB68     		ldr	r3, [r7, #12]
 5455 0234 1A68     		ldr	r2, [r3]
 5456 0236 FB68     		ldr	r3, [r7, #12]
 5457 0238 9B68     		ldr	r3, [r3, #8]
 5458 023a DB05     		lsl	r3, r3, #23
 5459 023c DB0D     		lsr	r3, r3, #23
 5460 023e 3033     		add	r3, r3, #48
 5461 0240 D218     		add	r2, r2, r3
 5462 0242 396A     		ldr	r1, [r7, #32]
 5463 0244 BB6A     		ldr	r3, [r7, #40]
 5464 0246 081C     		mov	r0, r1
 5465 0248 111C     		mov	r1, r2
 5466 024a 1A1C     		mov	r2, r3
 5467 024c FFF7FEFF 		bl	mem_cpy
 5468              	.L296:
2394:.\ff/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 5469              		.loc 1 2394 0
 5470 0250 3A6A     		ldr	r2, [r7, #32]
 5471 0252 BB6A     		ldr	r3, [r7, #40]
 5472 0254 D318     		add	r3, r2, r3
 5473 0256 3B62     		str	r3, [r7, #32]
 5474 0258 FB68     		ldr	r3, [r7, #12]
 5475 025a 9A68     		ldr	r2, [r3, #8]
 5476 025c BB6A     		ldr	r3, [r7, #40]
 5477 025e D218     		add	r2, r2, r3
 5478 0260 FB68     		ldr	r3, [r7, #12]
 5479 0262 9A60     		str	r2, [r3, #8]
 5480 0264 3B68     		ldr	r3, [r7]
 5481 0266 1A68     		ldr	r2, [r3]
 5482 0268 BB6A     		ldr	r3, [r7, #40]
 5483 026a D218     		add	r2, r2, r3
 5484 026c 3B68     		ldr	r3, [r7]
 5485 026e 1A60     		str	r2, [r3]
 5486 0270 7A68     		ldr	r2, [r7, #4]
 5487 0272 BB6A     		ldr	r3, [r7, #40]
 5488 0274 D31A     		sub	r3, r2, r3
 5489 0276 7B60     		str	r3, [r7, #4]
 5490              	.L284:
2393:.\ff/ff.c     **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 5491              		.loc 1 2393 0
 5492 0278 7B68     		ldr	r3, [r7, #4]
 5493 027a 002B     		cmp	r3, #0
 5494 027c 00D0     		beq	.LCB5129
 5495 027e FDE6     		b	.L299	@long jump
 5496              	.LCB5129:
2454:.\ff/ff.c     **** #else
2455:.\ff/ff.c     **** 		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2456:.\ff/ff.c     **** #endif
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 141


2457:.\ff/ff.c     **** 	}
2458:.\ff/ff.c     **** 
2459:.\ff/ff.c     **** 	LEAVE_FF(fp->fs, FR_OK);
 5497              		.loc 1 2459 0
 5498 0280 0023     		mov	r3, #0
 5499              	.L280:
2460:.\ff/ff.c     **** }
 5500              		.loc 1 2460 0
 5501 0282 181C     		mov	r0, r3
 5502 0284 BD46     		mov	sp, r7
 5503 0286 0DB0     		add	sp, sp, #52
 5504              		@ sp needed
 5505 0288 90BD     		pop	{r4, r7, pc}
 5506              		.cfi_endproc
 5507              	.LFE27:
 5508              		.size	f_read, .-f_read
 5509 028a C046     		.section	.text.f_write,"ax",%progbits
 5510              		.align	2
 5511              		.global	f_write
 5512              		.code	16
 5513              		.thumb_func
 5514              		.type	f_write, %function
 5515              	f_write:
 5516              	.LFB28:
2461:.\ff/ff.c     **** 
2462:.\ff/ff.c     **** 
2463:.\ff/ff.c     **** 
2464:.\ff/ff.c     **** 
2465:.\ff/ff.c     **** #if !_FS_READONLY
2466:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2467:.\ff/ff.c     **** /* Write File                                                            */
2468:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2469:.\ff/ff.c     **** 
2470:.\ff/ff.c     **** FRESULT f_write (
2471:.\ff/ff.c     **** 	FIL *fp,			/* Pointer to the file object */
2472:.\ff/ff.c     **** 	const void *buff,	/* Pointer to the data to be written */
2473:.\ff/ff.c     **** 	UINT btw,			/* Number of bytes to write */
2474:.\ff/ff.c     **** 	UINT *bw			/* Pointer to number of bytes written */
2475:.\ff/ff.c     **** )
2476:.\ff/ff.c     **** {
 5517              		.loc 1 2476 0
 5518              		.cfi_startproc
 5519 0000 90B5     		push	{r4, r7, lr}
 5520              		.cfi_def_cfa_offset 12
 5521              		.cfi_offset 4, -12
 5522              		.cfi_offset 7, -8
 5523              		.cfi_offset 14, -4
 5524 0002 8BB0     		sub	sp, sp, #44
 5525              		.cfi_def_cfa_offset 56
 5526 0004 00AF     		add	r7, sp, #0
 5527              		.cfi_def_cfa_register 7
 5528 0006 F860     		str	r0, [r7, #12]
 5529 0008 B960     		str	r1, [r7, #8]
 5530 000a 7A60     		str	r2, [r7, #4]
 5531 000c 3B60     		str	r3, [r7]
2477:.\ff/ff.c     **** 	FRESULT res;
2478:.\ff/ff.c     **** 	DWORD clst, sect;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 142


2479:.\ff/ff.c     **** 	UINT wcnt, cc;
2480:.\ff/ff.c     **** 	const BYTE *wbuff = buff;
 5532              		.loc 1 2480 0
 5533 000e BB68     		ldr	r3, [r7, #8]
 5534 0010 BB61     		str	r3, [r7, #24]
2481:.\ff/ff.c     **** 	BYTE csect;
2482:.\ff/ff.c     **** 
2483:.\ff/ff.c     **** 
2484:.\ff/ff.c     **** 	*bw = 0;	/* Initialize byte counter */
 5535              		.loc 1 2484 0
 5536 0012 3B68     		ldr	r3, [r7]
 5537 0014 0022     		mov	r2, #0
 5538 0016 1A60     		str	r2, [r3]
2485:.\ff/ff.c     **** 
2486:.\ff/ff.c     **** 	res = validate(fp->fs, fp->id);			/* Check validity */
 5539              		.loc 1 2486 0
 5540 0018 FB68     		ldr	r3, [r7, #12]
 5541 001a 1A68     		ldr	r2, [r3]
 5542 001c FB68     		ldr	r3, [r7, #12]
 5543 001e 9B88     		ldrh	r3, [r3, #4]
 5544 0020 1721     		mov	r1, #23
 5545 0022 7C18     		add	r4, r7, r1
 5546 0024 101C     		mov	r0, r2
 5547 0026 191C     		mov	r1, r3
 5548 0028 FFF7FEFF 		bl	validate
 5549 002c 031C     		mov	r3, r0
 5550 002e 2370     		strb	r3, [r4]
2487:.\ff/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 5551              		.loc 1 2487 0
 5552 0030 1723     		mov	r3, #23
 5553 0032 FB18     		add	r3, r7, r3
 5554 0034 1B78     		ldrb	r3, [r3]
 5555 0036 002B     		cmp	r3, #0
 5556 0038 03D0     		beq	.L301
 5557              		.loc 1 2487 0 is_stmt 0 discriminator 1
 5558 003a 1723     		mov	r3, #23
 5559 003c FB18     		add	r3, r7, r3
 5560 003e 1B78     		ldrb	r3, [r3]
 5561 0040 78E1     		b	.L302
 5562              	.L301:
2488:.\ff/ff.c     **** 	if (fp->flag & FA__ERROR)				/* Aborted file? */
 5563              		.loc 1 2488 0 is_stmt 1
 5564 0042 FB68     		ldr	r3, [r7, #12]
 5565 0044 9B79     		ldrb	r3, [r3, #6]
 5566 0046 DBB2     		uxtb	r3, r3
 5567 0048 5BB2     		sxtb	r3, r3
 5568 004a 002B     		cmp	r3, #0
 5569 004c 01DA     		bge	.L303
2489:.\ff/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 5570              		.loc 1 2489 0
 5571 004e 0223     		mov	r3, #2
 5572 0050 70E1     		b	.L302
 5573              	.L303:
2490:.\ff/ff.c     **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 5574              		.loc 1 2490 0
 5575 0052 FB68     		ldr	r3, [r7, #12]
 5576 0054 9B79     		ldrb	r3, [r3, #6]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 143


 5577 0056 1A1C     		mov	r2, r3
 5578 0058 0223     		mov	r3, #2
 5579 005a 1340     		and	r3, r2
 5580 005c 01D1     		bne	.L304
2491:.\ff/ff.c     **** 		LEAVE_FF(fp->fs, FR_DENIED);
 5581              		.loc 1 2491 0
 5582 005e 0723     		mov	r3, #7
 5583 0060 68E1     		b	.L302
 5584              	.L304:
2492:.\ff/ff.c     **** 	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */
 5585              		.loc 1 2492 0
 5586 0062 FB68     		ldr	r3, [r7, #12]
 5587 0064 DA68     		ldr	r2, [r3, #12]
 5588 0066 7B68     		ldr	r3, [r7, #4]
 5589 0068 D218     		add	r2, r2, r3
 5590 006a FB68     		ldr	r3, [r7, #12]
 5591 006c DB68     		ldr	r3, [r3, #12]
 5592 006e 9A42     		cmp	r2, r3
 5593 0070 01D2     		bcs	.L305
 5594              		.loc 1 2492 0 is_stmt 0 discriminator 1
 5595 0072 0023     		mov	r3, #0
 5596 0074 7B60     		str	r3, [r7, #4]
 5597              	.L305:
2493:.\ff/ff.c     **** 
2494:.\ff/ff.c     **** 	for ( ;  btw;							/* Repeat until all data written */
 5598              		.loc 1 2494 0 is_stmt 1
 5599 0076 47E1     		b	.L306
 5600              	.L327:
2495:.\ff/ff.c     **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
2496:.\ff/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 5601              		.loc 1 2496 0
 5602 0078 FB68     		ldr	r3, [r7, #12]
 5603 007a 9B68     		ldr	r3, [r3, #8]
 5604 007c DB05     		lsl	r3, r3, #23
 5605 007e DB0D     		lsr	r3, r3, #23
 5606 0080 00D0     		beq	.LCB5234
 5607 0082 F8E0     		b	.L307	@long jump
 5608              	.LCB5234:
2497:.\ff/ff.c     **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 5609              		.loc 1 2497 0
 5610 0084 FB68     		ldr	r3, [r7, #12]
 5611 0086 9B68     		ldr	r3, [r3, #8]
 5612 0088 5B0A     		lsr	r3, r3, #9
 5613 008a DAB2     		uxtb	r2, r3
 5614 008c FB68     		ldr	r3, [r7, #12]
 5615 008e 1B68     		ldr	r3, [r3]
 5616 0090 9B78     		ldrb	r3, [r3, #2]
 5617 0092 013B     		sub	r3, r3, #1
 5618 0094 D9B2     		uxtb	r1, r3
 5619 0096 1623     		mov	r3, #22
 5620 0098 FB18     		add	r3, r7, r3
 5621 009a 0A40     		and	r2, r1
 5622 009c 1A70     		strb	r2, [r3]
2498:.\ff/ff.c     **** 			if (!csect) {					/* On the cluster boundary? */
 5623              		.loc 1 2498 0
 5624 009e 1623     		mov	r3, #22
 5625 00a0 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 144


 5626 00a2 1B78     		ldrb	r3, [r3]
 5627 00a4 002B     		cmp	r3, #0
 5628 00a6 40D1     		bne	.L308
2499:.\ff/ff.c     **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5629              		.loc 1 2499 0
 5630 00a8 FB68     		ldr	r3, [r7, #12]
 5631 00aa 9B68     		ldr	r3, [r3, #8]
 5632 00ac 002B     		cmp	r3, #0
 5633 00ae 11D1     		bne	.L309
2500:.\ff/ff.c     **** 					clst = fp->sclust;		/* Follow from the origin */
 5634              		.loc 1 2500 0
 5635 00b0 FB68     		ldr	r3, [r7, #12]
 5636 00b2 1B69     		ldr	r3, [r3, #16]
 5637 00b4 7B62     		str	r3, [r7, #36]
2501:.\ff/ff.c     **** 					if (clst == 0)			/* When no cluster is allocated, */
 5638              		.loc 1 2501 0
 5639 00b6 7B6A     		ldr	r3, [r7, #36]
 5640 00b8 002B     		cmp	r3, #0
 5641 00ba 15D1     		bne	.L311
2502:.\ff/ff.c     **** 						fp->sclust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
 5642              		.loc 1 2502 0
 5643 00bc FB68     		ldr	r3, [r7, #12]
 5644 00be 1B68     		ldr	r3, [r3]
 5645 00c0 181C     		mov	r0, r3
 5646 00c2 0021     		mov	r1, #0
 5647 00c4 FFF7FEFF 		bl	create_chain
 5648 00c8 031C     		mov	r3, r0
 5649 00ca 7B62     		str	r3, [r7, #36]
 5650 00cc FB68     		ldr	r3, [r7, #12]
 5651 00ce 7A6A     		ldr	r2, [r7, #36]
 5652 00d0 1A61     		str	r2, [r3, #16]
 5653 00d2 09E0     		b	.L311
 5654              	.L309:
2503:.\ff/ff.c     **** 				} else {					/* Middle or end of the file */
2504:.\ff/ff.c     **** #if _USE_FASTSEEK
2505:.\ff/ff.c     **** 					if (fp->cltbl)
2506:.\ff/ff.c     **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2507:.\ff/ff.c     **** 					else
2508:.\ff/ff.c     **** #endif
2509:.\ff/ff.c     **** 						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 5655              		.loc 1 2509 0
 5656 00d4 FB68     		ldr	r3, [r7, #12]
 5657 00d6 1A68     		ldr	r2, [r3]
 5658 00d8 FB68     		ldr	r3, [r7, #12]
 5659 00da 5B69     		ldr	r3, [r3, #20]
 5660 00dc 101C     		mov	r0, r2
 5661 00de 191C     		mov	r1, r3
 5662 00e0 FFF7FEFF 		bl	create_chain
 5663 00e4 031C     		mov	r3, r0
 5664 00e6 7B62     		str	r3, [r7, #36]
 5665              	.L311:
2510:.\ff/ff.c     **** 				}
2511:.\ff/ff.c     **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 5666              		.loc 1 2511 0
 5667 00e8 7B6A     		ldr	r3, [r7, #36]
 5668 00ea 002B     		cmp	r3, #0
 5669 00ec 00D1     		bne	.L312
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 145


 5670 00ee 0FE1     		b	.L313
 5671              	.L312:
2512:.\ff/ff.c     **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 5672              		.loc 1 2512 0
 5673 00f0 7B6A     		ldr	r3, [r7, #36]
 5674 00f2 012B     		cmp	r3, #1
 5675 00f4 09D1     		bne	.L314
 5676              		.loc 1 2512 0 is_stmt 0 discriminator 1
 5677 00f6 FB68     		ldr	r3, [r7, #12]
 5678 00f8 9B79     		ldrb	r3, [r3, #6]
 5679 00fa 8022     		mov	r2, #128
 5680 00fc 5242     		neg	r2, r2
 5681 00fe 1343     		orr	r3, r2
 5682 0100 DAB2     		uxtb	r2, r3
 5683 0102 FB68     		ldr	r3, [r7, #12]
 5684 0104 9A71     		strb	r2, [r3, #6]
 5685 0106 0223     		mov	r3, #2
 5686 0108 14E1     		b	.L302
 5687              	.L314:
2513:.\ff/ff.c     **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5688              		.loc 1 2513 0 is_stmt 1
 5689 010a 7B6A     		ldr	r3, [r7, #36]
 5690 010c 0133     		add	r3, r3, #1
 5691 010e 09D1     		bne	.L315
 5692              		.loc 1 2513 0 is_stmt 0 discriminator 1
 5693 0110 FB68     		ldr	r3, [r7, #12]
 5694 0112 9B79     		ldrb	r3, [r3, #6]
 5695 0114 8022     		mov	r2, #128
 5696 0116 5242     		neg	r2, r2
 5697 0118 1343     		orr	r3, r2
 5698 011a DAB2     		uxtb	r2, r3
 5699 011c FB68     		ldr	r3, [r7, #12]
 5700 011e 9A71     		strb	r2, [r3, #6]
 5701 0120 0123     		mov	r3, #1
 5702 0122 07E1     		b	.L302
 5703              	.L315:
2514:.\ff/ff.c     **** 				fp->clust = clst;			/* Update current cluster */
 5704              		.loc 1 2514 0 is_stmt 1
 5705 0124 FB68     		ldr	r3, [r7, #12]
 5706 0126 7A6A     		ldr	r2, [r7, #36]
 5707 0128 5A61     		str	r2, [r3, #20]
 5708              	.L308:
2515:.\ff/ff.c     **** 			}
2516:.\ff/ff.c     **** #if _FS_TINY
2517:.\ff/ff.c     **** 			if (fp->fs->winsect == fp->dsect && move_window(fp->fs, 0))	/* Write-back sector cache */
 5709              		.loc 1 2517 0
 5710 012a FB68     		ldr	r3, [r7, #12]
 5711 012c 1B68     		ldr	r3, [r3]
 5712 012e DA6A     		ldr	r2, [r3, #44]
 5713 0130 FB68     		ldr	r3, [r7, #12]
 5714 0132 9B69     		ldr	r3, [r3, #24]
 5715 0134 9A42     		cmp	r2, r3
 5716 0136 11D1     		bne	.L316
 5717              		.loc 1 2517 0 is_stmt 0 discriminator 1
 5718 0138 FB68     		ldr	r3, [r7, #12]
 5719 013a 1B68     		ldr	r3, [r3]
 5720 013c 181C     		mov	r0, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 146


 5721 013e 0021     		mov	r1, #0
 5722 0140 FFF7FEFF 		bl	move_window
 5723 0144 031E     		sub	r3, r0, #0
 5724 0146 09D0     		beq	.L316
2518:.\ff/ff.c     **** 				ABORT(fp->fs, FR_DISK_ERR);
 5725              		.loc 1 2518 0 is_stmt 1
 5726 0148 FB68     		ldr	r3, [r7, #12]
 5727 014a 9B79     		ldrb	r3, [r3, #6]
 5728 014c 8022     		mov	r2, #128
 5729 014e 5242     		neg	r2, r2
 5730 0150 1343     		orr	r3, r2
 5731 0152 DAB2     		uxtb	r2, r3
 5732 0154 FB68     		ldr	r3, [r7, #12]
 5733 0156 9A71     		strb	r2, [r3, #6]
 5734 0158 0123     		mov	r3, #1
 5735 015a EBE0     		b	.L302
 5736              	.L316:
2519:.\ff/ff.c     **** #else
2520:.\ff/ff.c     **** 			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
2521:.\ff/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2522:.\ff/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2523:.\ff/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2524:.\ff/ff.c     **** 			}
2525:.\ff/ff.c     **** #endif
2526:.\ff/ff.c     **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 5737              		.loc 1 2526 0
 5738 015c FB68     		ldr	r3, [r7, #12]
 5739 015e 1A68     		ldr	r2, [r3]
 5740 0160 FB68     		ldr	r3, [r7, #12]
 5741 0162 5B69     		ldr	r3, [r3, #20]
 5742 0164 101C     		mov	r0, r2
 5743 0166 191C     		mov	r1, r3
 5744 0168 FFF7FEFF 		bl	clust2sect
 5745 016c 031C     		mov	r3, r0
 5746 016e 3B61     		str	r3, [r7, #16]
2527:.\ff/ff.c     **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 5747              		.loc 1 2527 0
 5748 0170 3B69     		ldr	r3, [r7, #16]
 5749 0172 002B     		cmp	r3, #0
 5750 0174 09D1     		bne	.L317
 5751              		.loc 1 2527 0 is_stmt 0 discriminator 1
 5752 0176 FB68     		ldr	r3, [r7, #12]
 5753 0178 9B79     		ldrb	r3, [r3, #6]
 5754 017a 8022     		mov	r2, #128
 5755 017c 5242     		neg	r2, r2
 5756 017e 1343     		orr	r3, r2
 5757 0180 DAB2     		uxtb	r2, r3
 5758 0182 FB68     		ldr	r3, [r7, #12]
 5759 0184 9A71     		strb	r2, [r3, #6]
 5760 0186 0223     		mov	r3, #2
 5761 0188 D4E0     		b	.L302
 5762              	.L317:
2528:.\ff/ff.c     **** 			sect += csect;
 5763              		.loc 1 2528 0 is_stmt 1
 5764 018a 1623     		mov	r3, #22
 5765 018c FB18     		add	r3, r7, r3
 5766 018e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 147


 5767 0190 3A69     		ldr	r2, [r7, #16]
 5768 0192 D318     		add	r3, r2, r3
 5769 0194 3B61     		str	r3, [r7, #16]
2529:.\ff/ff.c     **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
 5770              		.loc 1 2529 0
 5771 0196 7B68     		ldr	r3, [r7, #4]
 5772 0198 5B0A     		lsr	r3, r3, #9
 5773 019a FB61     		str	r3, [r7, #28]
2530:.\ff/ff.c     **** 			if (cc) {						/* Write maximum contiguous sectors directly */
 5774              		.loc 1 2530 0
 5775 019c FB69     		ldr	r3, [r7, #28]
 5776 019e 002B     		cmp	r3, #0
 5777 01a0 4AD0     		beq	.L318
2531:.\ff/ff.c     **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 5778              		.loc 1 2531 0
 5779 01a2 1623     		mov	r3, #22
 5780 01a4 FB18     		add	r3, r7, r3
 5781 01a6 1A78     		ldrb	r2, [r3]
 5782 01a8 FB69     		ldr	r3, [r7, #28]
 5783 01aa D218     		add	r2, r2, r3
 5784 01ac FB68     		ldr	r3, [r7, #12]
 5785 01ae 1B68     		ldr	r3, [r3]
 5786 01b0 9B78     		ldrb	r3, [r3, #2]
 5787 01b2 9A42     		cmp	r2, r3
 5788 01b4 08D9     		bls	.L319
2532:.\ff/ff.c     **** 					cc = fp->fs->csize - csect;
 5789              		.loc 1 2532 0
 5790 01b6 FB68     		ldr	r3, [r7, #12]
 5791 01b8 1B68     		ldr	r3, [r3]
 5792 01ba 9B78     		ldrb	r3, [r3, #2]
 5793 01bc 1A1C     		mov	r2, r3
 5794 01be 1623     		mov	r3, #22
 5795 01c0 FB18     		add	r3, r7, r3
 5796 01c2 1B78     		ldrb	r3, [r3]
 5797 01c4 D31A     		sub	r3, r2, r3
 5798 01c6 FB61     		str	r3, [r7, #28]
 5799              	.L319:
2533:.\ff/ff.c     **** 				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
 5800              		.loc 1 2533 0
 5801 01c8 FB68     		ldr	r3, [r7, #12]
 5802 01ca 1B68     		ldr	r3, [r3]
 5803 01cc 5878     		ldrb	r0, [r3, #1]
 5804 01ce FB69     		ldr	r3, [r7, #28]
 5805 01d0 DBB2     		uxtb	r3, r3
 5806 01d2 B969     		ldr	r1, [r7, #24]
 5807 01d4 3A69     		ldr	r2, [r7, #16]
 5808 01d6 FFF7FEFF 		bl	disk_write
 5809 01da 031E     		sub	r3, r0, #0
 5810 01dc 09D0     		beq	.L320
2534:.\ff/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
 5811              		.loc 1 2534 0
 5812 01de FB68     		ldr	r3, [r7, #12]
 5813 01e0 9B79     		ldrb	r3, [r3, #6]
 5814 01e2 8022     		mov	r2, #128
 5815 01e4 5242     		neg	r2, r2
 5816 01e6 1343     		orr	r3, r2
 5817 01e8 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 148


 5818 01ea FB68     		ldr	r3, [r7, #12]
 5819 01ec 9A71     		strb	r2, [r3, #6]
 5820 01ee 0123     		mov	r3, #1
 5821 01f0 A0E0     		b	.L302
 5822              	.L320:
2535:.\ff/ff.c     **** #if _FS_TINY
2536:.\ff/ff.c     **** 				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct 
 5823              		.loc 1 2536 0
 5824 01f2 FB68     		ldr	r3, [r7, #12]
 5825 01f4 1B68     		ldr	r3, [r3]
 5826 01f6 DA6A     		ldr	r2, [r3, #44]
 5827 01f8 3B69     		ldr	r3, [r7, #16]
 5828 01fa D21A     		sub	r2, r2, r3
 5829 01fc FB69     		ldr	r3, [r7, #28]
 5830 01fe 9A42     		cmp	r2, r3
 5831 0200 16D2     		bcs	.L321
2537:.\ff/ff.c     **** 					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
 5832              		.loc 1 2537 0
 5833 0202 FB68     		ldr	r3, [r7, #12]
 5834 0204 1B68     		ldr	r3, [r3]
 5835 0206 3033     		add	r3, r3, #48
 5836 0208 191C     		mov	r1, r3
 5837 020a FB68     		ldr	r3, [r7, #12]
 5838 020c 1B68     		ldr	r3, [r3]
 5839 020e DA6A     		ldr	r2, [r3, #44]
 5840 0210 3B69     		ldr	r3, [r7, #16]
 5841 0212 D31A     		sub	r3, r2, r3
 5842 0214 5B02     		lsl	r3, r3, #9
 5843 0216 BA69     		ldr	r2, [r7, #24]
 5844 0218 D218     		add	r2, r2, r3
 5845 021a 8023     		mov	r3, #128
 5846 021c 9B00     		lsl	r3, r3, #2
 5847 021e 081C     		mov	r0, r1
 5848 0220 111C     		mov	r1, r2
 5849 0222 1A1C     		mov	r2, r3
 5850 0224 FFF7FEFF 		bl	mem_cpy
2538:.\ff/ff.c     **** 					fp->fs->wflag = 0;
 5851              		.loc 1 2538 0
 5852 0228 FB68     		ldr	r3, [r7, #12]
 5853 022a 1B68     		ldr	r3, [r3]
 5854 022c 0022     		mov	r2, #0
 5855 022e 1A71     		strb	r2, [r3, #4]
 5856              	.L321:
2539:.\ff/ff.c     **** 				}
2540:.\ff/ff.c     **** #else
2541:.\ff/ff.c     **** 				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write 
2542:.\ff/ff.c     **** 					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
2543:.\ff/ff.c     **** 					fp->flag &= ~FA__DIRTY;
2544:.\ff/ff.c     **** 				}
2545:.\ff/ff.c     **** #endif
2546:.\ff/ff.c     **** 				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
 5857              		.loc 1 2546 0
 5858 0230 FB69     		ldr	r3, [r7, #28]
 5859 0232 5B02     		lsl	r3, r3, #9
 5860 0234 3B62     		str	r3, [r7, #32]
2547:.\ff/ff.c     **** 				continue;
 5861              		.loc 1 2547 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 149


 5862 0236 53E0     		b	.L322
 5863              	.L318:
2548:.\ff/ff.c     **** 			}
2549:.\ff/ff.c     **** #if _FS_TINY
2550:.\ff/ff.c     **** 			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
 5864              		.loc 1 2550 0
 5865 0238 FB68     		ldr	r3, [r7, #12]
 5866 023a 9A68     		ldr	r2, [r3, #8]
 5867 023c FB68     		ldr	r3, [r7, #12]
 5868 023e DB68     		ldr	r3, [r3, #12]
 5869 0240 9A42     		cmp	r2, r3
 5870 0242 15D3     		bcc	.L323
2551:.\ff/ff.c     **** 				if (move_window(fp->fs, 0)) ABORT(fp->fs, FR_DISK_ERR);
 5871              		.loc 1 2551 0
 5872 0244 FB68     		ldr	r3, [r7, #12]
 5873 0246 1B68     		ldr	r3, [r3]
 5874 0248 181C     		mov	r0, r3
 5875 024a 0021     		mov	r1, #0
 5876 024c FFF7FEFF 		bl	move_window
 5877 0250 031E     		sub	r3, r0, #0
 5878 0252 09D0     		beq	.L324
 5879              		.loc 1 2551 0 is_stmt 0 discriminator 1
 5880 0254 FB68     		ldr	r3, [r7, #12]
 5881 0256 9B79     		ldrb	r3, [r3, #6]
 5882 0258 8022     		mov	r2, #128
 5883 025a 5242     		neg	r2, r2
 5884 025c 1343     		orr	r3, r2
 5885 025e DAB2     		uxtb	r2, r3
 5886 0260 FB68     		ldr	r3, [r7, #12]
 5887 0262 9A71     		strb	r2, [r3, #6]
 5888 0264 0123     		mov	r3, #1
 5889 0266 65E0     		b	.L302
 5890              	.L324:
2552:.\ff/ff.c     **** 				fp->fs->winsect = sect;
 5891              		.loc 1 2552 0 is_stmt 1
 5892 0268 FB68     		ldr	r3, [r7, #12]
 5893 026a 1B68     		ldr	r3, [r3]
 5894 026c 3A69     		ldr	r2, [r7, #16]
 5895 026e DA62     		str	r2, [r3, #44]
 5896              	.L323:
2553:.\ff/ff.c     **** 			}
2554:.\ff/ff.c     **** #else
2555:.\ff/ff.c     **** 			if (fp->dsect != sect) {		/* Fill sector cache with file data */
2556:.\ff/ff.c     **** 				if (fp->fptr < fp->fsize &&
2557:.\ff/ff.c     **** 					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
2558:.\ff/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2559:.\ff/ff.c     **** 			}
2560:.\ff/ff.c     **** #endif
2561:.\ff/ff.c     **** 			fp->dsect = sect;
 5897              		.loc 1 2561 0
 5898 0270 FB68     		ldr	r3, [r7, #12]
 5899 0272 3A69     		ldr	r2, [r7, #16]
 5900 0274 9A61     		str	r2, [r3, #24]
 5901              	.L307:
2562:.\ff/ff.c     **** 		}
2563:.\ff/ff.c     **** 		wcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
 5902              		.loc 1 2563 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 150


 5903 0276 FB68     		ldr	r3, [r7, #12]
 5904 0278 9B68     		ldr	r3, [r3, #8]
 5905 027a DB05     		lsl	r3, r3, #23
 5906 027c DB0D     		lsr	r3, r3, #23
 5907 027e 8022     		mov	r2, #128
 5908 0280 9200     		lsl	r2, r2, #2
 5909 0282 D31A     		sub	r3, r2, r3
 5910 0284 3B62     		str	r3, [r7, #32]
2564:.\ff/ff.c     **** 		if (wcnt > btw) wcnt = btw;
 5911              		.loc 1 2564 0
 5912 0286 3A6A     		ldr	r2, [r7, #32]
 5913 0288 7B68     		ldr	r3, [r7, #4]
 5914 028a 9A42     		cmp	r2, r3
 5915 028c 01D9     		bls	.L325
 5916              		.loc 1 2564 0 is_stmt 0 discriminator 1
 5917 028e 7B68     		ldr	r3, [r7, #4]
 5918 0290 3B62     		str	r3, [r7, #32]
 5919              	.L325:
2565:.\ff/ff.c     **** #if _FS_TINY
2566:.\ff/ff.c     **** 		if (move_window(fp->fs, fp->dsect))	/* Move sector window */
 5920              		.loc 1 2566 0 is_stmt 1
 5921 0292 FB68     		ldr	r3, [r7, #12]
 5922 0294 1A68     		ldr	r2, [r3]
 5923 0296 FB68     		ldr	r3, [r7, #12]
 5924 0298 9B69     		ldr	r3, [r3, #24]
 5925 029a 101C     		mov	r0, r2
 5926 029c 191C     		mov	r1, r3
 5927 029e FFF7FEFF 		bl	move_window
 5928 02a2 031E     		sub	r3, r0, #0
 5929 02a4 09D0     		beq	.L326
2567:.\ff/ff.c     **** 			ABORT(fp->fs, FR_DISK_ERR);
 5930              		.loc 1 2567 0
 5931 02a6 FB68     		ldr	r3, [r7, #12]
 5932 02a8 9B79     		ldrb	r3, [r3, #6]
 5933 02aa 8022     		mov	r2, #128
 5934 02ac 5242     		neg	r2, r2
 5935 02ae 1343     		orr	r3, r2
 5936 02b0 DAB2     		uxtb	r2, r3
 5937 02b2 FB68     		ldr	r3, [r7, #12]
 5938 02b4 9A71     		strb	r2, [r3, #6]
 5939 02b6 0123     		mov	r3, #1
 5940 02b8 3CE0     		b	.L302
 5941              	.L326:
2568:.\ff/ff.c     **** 		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
 5942              		.loc 1 2568 0
 5943 02ba FB68     		ldr	r3, [r7, #12]
 5944 02bc 1A68     		ldr	r2, [r3]
 5945 02be FB68     		ldr	r3, [r7, #12]
 5946 02c0 9B68     		ldr	r3, [r3, #8]
 5947 02c2 DB05     		lsl	r3, r3, #23
 5948 02c4 DB0D     		lsr	r3, r3, #23
 5949 02c6 3033     		add	r3, r3, #48
 5950 02c8 D118     		add	r1, r2, r3
 5951 02ca BA69     		ldr	r2, [r7, #24]
 5952 02cc 3B6A     		ldr	r3, [r7, #32]
 5953 02ce 081C     		mov	r0, r1
 5954 02d0 111C     		mov	r1, r2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 151


 5955 02d2 1A1C     		mov	r2, r3
 5956 02d4 FFF7FEFF 		bl	mem_cpy
2569:.\ff/ff.c     **** 		fp->fs->wflag = 1;
 5957              		.loc 1 2569 0
 5958 02d8 FB68     		ldr	r3, [r7, #12]
 5959 02da 1B68     		ldr	r3, [r3]
 5960 02dc 0122     		mov	r2, #1
 5961 02de 1A71     		strb	r2, [r3, #4]
 5962              	.L322:
2495:.\ff/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 5963              		.loc 1 2495 0
 5964 02e0 BA69     		ldr	r2, [r7, #24]
 5965 02e2 3B6A     		ldr	r3, [r7, #32]
 5966 02e4 D318     		add	r3, r2, r3
 5967 02e6 BB61     		str	r3, [r7, #24]
 5968 02e8 FB68     		ldr	r3, [r7, #12]
 5969 02ea 9A68     		ldr	r2, [r3, #8]
 5970 02ec 3B6A     		ldr	r3, [r7, #32]
 5971 02ee D218     		add	r2, r2, r3
 5972 02f0 FB68     		ldr	r3, [r7, #12]
 5973 02f2 9A60     		str	r2, [r3, #8]
 5974 02f4 3B68     		ldr	r3, [r7]
 5975 02f6 1A68     		ldr	r2, [r3]
 5976 02f8 3B6A     		ldr	r3, [r7, #32]
 5977 02fa D218     		add	r2, r2, r3
 5978 02fc 3B68     		ldr	r3, [r7]
 5979 02fe 1A60     		str	r2, [r3]
 5980 0300 7A68     		ldr	r2, [r7, #4]
 5981 0302 3B6A     		ldr	r3, [r7, #32]
 5982 0304 D31A     		sub	r3, r2, r3
 5983 0306 7B60     		str	r3, [r7, #4]
 5984              	.L306:
2494:.\ff/ff.c     **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
 5985              		.loc 1 2494 0
 5986 0308 7B68     		ldr	r3, [r7, #4]
 5987 030a 002B     		cmp	r3, #0
 5988 030c 00D0     		beq	.LCB5602
 5989 030e B3E6     		b	.L327	@long jump
 5990              	.LCB5602:
 5991              	.L313:
2570:.\ff/ff.c     **** #else
2571:.\ff/ff.c     **** 		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2572:.\ff/ff.c     **** 		fp->flag |= FA__DIRTY;
2573:.\ff/ff.c     **** #endif
2574:.\ff/ff.c     **** 	}
2575:.\ff/ff.c     **** 
2576:.\ff/ff.c     **** 	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
 5992              		.loc 1 2576 0
 5993 0310 FB68     		ldr	r3, [r7, #12]
 5994 0312 9A68     		ldr	r2, [r3, #8]
 5995 0314 FB68     		ldr	r3, [r7, #12]
 5996 0316 DB68     		ldr	r3, [r3, #12]
 5997 0318 9A42     		cmp	r2, r3
 5998 031a 03D9     		bls	.L328
 5999              		.loc 1 2576 0 is_stmt 0 discriminator 1
 6000 031c FB68     		ldr	r3, [r7, #12]
 6001 031e 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 152


 6002 0320 FB68     		ldr	r3, [r7, #12]
 6003 0322 DA60     		str	r2, [r3, #12]
 6004              	.L328:
2577:.\ff/ff.c     **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
 6005              		.loc 1 2577 0 is_stmt 1
 6006 0324 FB68     		ldr	r3, [r7, #12]
 6007 0326 9B79     		ldrb	r3, [r3, #6]
 6008 0328 2022     		mov	r2, #32
 6009 032a 1343     		orr	r3, r2
 6010 032c DAB2     		uxtb	r2, r3
 6011 032e FB68     		ldr	r3, [r7, #12]
 6012 0330 9A71     		strb	r2, [r3, #6]
2578:.\ff/ff.c     **** 
2579:.\ff/ff.c     **** 	LEAVE_FF(fp->fs, FR_OK);
 6013              		.loc 1 2579 0
 6014 0332 0023     		mov	r3, #0
 6015              	.L302:
2580:.\ff/ff.c     **** }
 6016              		.loc 1 2580 0
 6017 0334 181C     		mov	r0, r3
 6018 0336 BD46     		mov	sp, r7
 6019 0338 0BB0     		add	sp, sp, #44
 6020              		@ sp needed
 6021 033a 90BD     		pop	{r4, r7, pc}
 6022              		.cfi_endproc
 6023              	.LFE28:
 6024              		.size	f_write, .-f_write
 6025              		.section	.text.f_sync,"ax",%progbits
 6026              		.align	2
 6027              		.global	f_sync
 6028              		.code	16
 6029              		.thumb_func
 6030              		.type	f_sync, %function
 6031              	f_sync:
 6032              	.LFB29:
2581:.\ff/ff.c     **** 
2582:.\ff/ff.c     **** 
2583:.\ff/ff.c     **** 
2584:.\ff/ff.c     **** 
2585:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2586:.\ff/ff.c     **** /* Synchronize the File Object                                           */
2587:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2588:.\ff/ff.c     **** 
2589:.\ff/ff.c     **** FRESULT f_sync (
2590:.\ff/ff.c     **** 	FIL *fp		/* Pointer to the file object */
2591:.\ff/ff.c     **** )
2592:.\ff/ff.c     **** {
 6033              		.loc 1 2592 0
 6034              		.cfi_startproc
 6035 0000 90B5     		push	{r4, r7, lr}
 6036              		.cfi_def_cfa_offset 12
 6037              		.cfi_offset 4, -12
 6038              		.cfi_offset 7, -8
 6039              		.cfi_offset 14, -4
 6040 0002 87B0     		sub	sp, sp, #28
 6041              		.cfi_def_cfa_offset 40
 6042 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 153


 6043              		.cfi_def_cfa_register 7
 6044 0006 7860     		str	r0, [r7, #4]
2593:.\ff/ff.c     **** 	FRESULT res;
2594:.\ff/ff.c     **** 	DWORD tim;
2595:.\ff/ff.c     **** 	BYTE *dir;
2596:.\ff/ff.c     **** 
2597:.\ff/ff.c     **** 
2598:.\ff/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 6045              		.loc 1 2598 0
 6046 0008 7B68     		ldr	r3, [r7, #4]
 6047 000a 1A68     		ldr	r2, [r3]
 6048 000c 7B68     		ldr	r3, [r7, #4]
 6049 000e 9B88     		ldrh	r3, [r3, #4]
 6050 0010 1721     		mov	r1, #23
 6051 0012 7C18     		add	r4, r7, r1
 6052 0014 101C     		mov	r0, r2
 6053 0016 191C     		mov	r1, r3
 6054 0018 FFF7FEFF 		bl	validate
 6055 001c 031C     		mov	r3, r0
 6056 001e 2370     		strb	r3, [r4]
2599:.\ff/ff.c     **** 	if (res == FR_OK) {
 6057              		.loc 1 2599 0
 6058 0020 1723     		mov	r3, #23
 6059 0022 FB18     		add	r3, r7, r3
 6060 0024 1B78     		ldrb	r3, [r3]
 6061 0026 002B     		cmp	r3, #0
 6062 0028 00D0     		beq	.LCB5667
 6063 002a 9AE0     		b	.L330	@long jump
 6064              	.LCB5667:
2600:.\ff/ff.c     **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
 6065              		.loc 1 2600 0
 6066 002c 7B68     		ldr	r3, [r7, #4]
 6067 002e 9B79     		ldrb	r3, [r3, #6]
 6068 0030 1A1C     		mov	r2, r3
 6069 0032 2023     		mov	r3, #32
 6070 0034 1340     		and	r3, r2
 6071 0036 00D1     		bne	.LCB5674
 6072 0038 93E0     		b	.L330	@long jump
 6073              	.LCB5674:
2601:.\ff/ff.c     **** #if !_FS_TINY	/* Write-back dirty buffer */
2602:.\ff/ff.c     **** 			if (fp->flag & FA__DIRTY) {
2603:.\ff/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2604:.\ff/ff.c     **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
2605:.\ff/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2606:.\ff/ff.c     **** 			}
2607:.\ff/ff.c     **** #endif
2608:.\ff/ff.c     **** 			/* Update the directory entry */
2609:.\ff/ff.c     **** 			res = move_window(fp->fs, fp->dir_sect);
 6074              		.loc 1 2609 0
 6075 003a 7B68     		ldr	r3, [r7, #4]
 6076 003c 1A68     		ldr	r2, [r3]
 6077 003e 7B68     		ldr	r3, [r7, #4]
 6078 0040 DB69     		ldr	r3, [r3, #28]
 6079 0042 1721     		mov	r1, #23
 6080 0044 7C18     		add	r4, r7, r1
 6081 0046 101C     		mov	r0, r2
 6082 0048 191C     		mov	r1, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 154


 6083 004a FFF7FEFF 		bl	move_window
 6084 004e 031C     		mov	r3, r0
 6085 0050 2370     		strb	r3, [r4]
2610:.\ff/ff.c     **** 			if (res == FR_OK) {
 6086              		.loc 1 2610 0
 6087 0052 1723     		mov	r3, #23
 6088 0054 FB18     		add	r3, r7, r3
 6089 0056 1B78     		ldrb	r3, [r3]
 6090 0058 002B     		cmp	r3, #0
 6091 005a 00D0     		beq	.LCB5690
 6092 005c 81E0     		b	.L330	@long jump
 6093              	.LCB5690:
2611:.\ff/ff.c     **** 				dir = fp->dir_ptr;
 6094              		.loc 1 2611 0
 6095 005e 7B68     		ldr	r3, [r7, #4]
 6096 0060 1B6A     		ldr	r3, [r3, #32]
 6097 0062 3B61     		str	r3, [r7, #16]
2612:.\ff/ff.c     **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
 6098              		.loc 1 2612 0
 6099 0064 3B69     		ldr	r3, [r7, #16]
 6100 0066 0B33     		add	r3, r3, #11
 6101 0068 3A69     		ldr	r2, [r7, #16]
 6102 006a 0B32     		add	r2, r2, #11
 6103 006c 1278     		ldrb	r2, [r2]
 6104 006e 2021     		mov	r1, #32
 6105 0070 0A43     		orr	r2, r1
 6106 0072 D2B2     		uxtb	r2, r2
 6107 0074 1A70     		strb	r2, [r3]
2613:.\ff/ff.c     **** 				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
 6108              		.loc 1 2613 0
 6109 0076 3B69     		ldr	r3, [r7, #16]
 6110 0078 1C33     		add	r3, r3, #28
 6111 007a 1A1C     		mov	r2, r3
 6112 007c 7B68     		ldr	r3, [r7, #4]
 6113 007e DB68     		ldr	r3, [r3, #12]
 6114 0080 DBB2     		uxtb	r3, r3
 6115 0082 1370     		strb	r3, [r2]
 6116 0084 3B69     		ldr	r3, [r7, #16]
 6117 0086 1D33     		add	r3, r3, #29
 6118 0088 1A1C     		mov	r2, r3
 6119 008a 7B68     		ldr	r3, [r7, #4]
 6120 008c DB68     		ldr	r3, [r3, #12]
 6121 008e 9BB2     		uxth	r3, r3
 6122 0090 1B0A     		lsr	r3, r3, #8
 6123 0092 9BB2     		uxth	r3, r3
 6124 0094 DBB2     		uxtb	r3, r3
 6125 0096 1370     		strb	r3, [r2]
 6126 0098 3B69     		ldr	r3, [r7, #16]
 6127 009a 1E33     		add	r3, r3, #30
 6128 009c 1A1C     		mov	r2, r3
 6129 009e 7B68     		ldr	r3, [r7, #4]
 6130 00a0 DB68     		ldr	r3, [r3, #12]
 6131 00a2 1B0C     		lsr	r3, r3, #16
 6132 00a4 DBB2     		uxtb	r3, r3
 6133 00a6 1370     		strb	r3, [r2]
 6134 00a8 3B69     		ldr	r3, [r7, #16]
 6135 00aa 1F33     		add	r3, r3, #31
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 155


 6136 00ac 1A1C     		mov	r2, r3
 6137 00ae 7B68     		ldr	r3, [r7, #4]
 6138 00b0 DB68     		ldr	r3, [r3, #12]
 6139 00b2 1B0E     		lsr	r3, r3, #24
 6140 00b4 DBB2     		uxtb	r3, r3
 6141 00b6 1370     		strb	r3, [r2]
2614:.\ff/ff.c     **** 				ST_CLUST(dir, fp->sclust);					/* Update start cluster */
 6142              		.loc 1 2614 0
 6143 00b8 3B69     		ldr	r3, [r7, #16]
 6144 00ba 1A33     		add	r3, r3, #26
 6145 00bc 1A1C     		mov	r2, r3
 6146 00be 7B68     		ldr	r3, [r7, #4]
 6147 00c0 1B69     		ldr	r3, [r3, #16]
 6148 00c2 DBB2     		uxtb	r3, r3
 6149 00c4 1370     		strb	r3, [r2]
 6150 00c6 3B69     		ldr	r3, [r7, #16]
 6151 00c8 1B33     		add	r3, r3, #27
 6152 00ca 1A1C     		mov	r2, r3
 6153 00cc 7B68     		ldr	r3, [r7, #4]
 6154 00ce 1B69     		ldr	r3, [r3, #16]
 6155 00d0 9BB2     		uxth	r3, r3
 6156 00d2 1B0A     		lsr	r3, r3, #8
 6157 00d4 9BB2     		uxth	r3, r3
 6158 00d6 DBB2     		uxtb	r3, r3
 6159 00d8 1370     		strb	r3, [r2]
 6160 00da 3B69     		ldr	r3, [r7, #16]
 6161 00dc 1433     		add	r3, r3, #20
 6162 00de 1A1C     		mov	r2, r3
 6163 00e0 7B68     		ldr	r3, [r7, #4]
 6164 00e2 1B69     		ldr	r3, [r3, #16]
 6165 00e4 1B0C     		lsr	r3, r3, #16
 6166 00e6 DBB2     		uxtb	r3, r3
 6167 00e8 1370     		strb	r3, [r2]
 6168 00ea 3B69     		ldr	r3, [r7, #16]
 6169 00ec 1533     		add	r3, r3, #21
 6170 00ee 1A1C     		mov	r2, r3
 6171 00f0 7B68     		ldr	r3, [r7, #4]
 6172 00f2 1B69     		ldr	r3, [r3, #16]
 6173 00f4 1B0C     		lsr	r3, r3, #16
 6174 00f6 9BB2     		uxth	r3, r3
 6175 00f8 1B0A     		lsr	r3, r3, #8
 6176 00fa 9BB2     		uxth	r3, r3
 6177 00fc DBB2     		uxtb	r3, r3
 6178 00fe 1370     		strb	r3, [r2]
2615:.\ff/ff.c     **** 				tim = get_fattime();						/* Update updated time */
 6179              		.loc 1 2615 0
 6180 0100 FFF7FEFF 		bl	get_fattime
 6181 0104 031C     		mov	r3, r0
 6182 0106 FB60     		str	r3, [r7, #12]
2616:.\ff/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);
 6183              		.loc 1 2616 0
 6184 0108 3B69     		ldr	r3, [r7, #16]
 6185 010a 1633     		add	r3, r3, #22
 6186 010c FA68     		ldr	r2, [r7, #12]
 6187 010e D2B2     		uxtb	r2, r2
 6188 0110 1A70     		strb	r2, [r3]
 6189 0112 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 156


 6190 0114 1733     		add	r3, r3, #23
 6191 0116 FA68     		ldr	r2, [r7, #12]
 6192 0118 92B2     		uxth	r2, r2
 6193 011a 120A     		lsr	r2, r2, #8
 6194 011c 92B2     		uxth	r2, r2
 6195 011e D2B2     		uxtb	r2, r2
 6196 0120 1A70     		strb	r2, [r3]
 6197 0122 3B69     		ldr	r3, [r7, #16]
 6198 0124 1833     		add	r3, r3, #24
 6199 0126 FA68     		ldr	r2, [r7, #12]
 6200 0128 120C     		lsr	r2, r2, #16
 6201 012a D2B2     		uxtb	r2, r2
 6202 012c 1A70     		strb	r2, [r3]
 6203 012e 3B69     		ldr	r3, [r7, #16]
 6204 0130 1933     		add	r3, r3, #25
 6205 0132 FA68     		ldr	r2, [r7, #12]
 6206 0134 120E     		lsr	r2, r2, #24
 6207 0136 D2B2     		uxtb	r2, r2
 6208 0138 1A70     		strb	r2, [r3]
2617:.\ff/ff.c     **** 				fp->flag &= ~FA__WRITTEN;
 6209              		.loc 1 2617 0
 6210 013a 7B68     		ldr	r3, [r7, #4]
 6211 013c 9B79     		ldrb	r3, [r3, #6]
 6212 013e 2022     		mov	r2, #32
 6213 0140 9343     		bic	r3, r2
 6214 0142 DAB2     		uxtb	r2, r3
 6215 0144 7B68     		ldr	r3, [r7, #4]
 6216 0146 9A71     		strb	r2, [r3, #6]
2618:.\ff/ff.c     **** 				fp->fs->wflag = 1;
 6217              		.loc 1 2618 0
 6218 0148 7B68     		ldr	r3, [r7, #4]
 6219 014a 1B68     		ldr	r3, [r3]
 6220 014c 0122     		mov	r2, #1
 6221 014e 1A71     		strb	r2, [r3, #4]
2619:.\ff/ff.c     **** 				res = sync(fp->fs);
 6222              		.loc 1 2619 0
 6223 0150 7B68     		ldr	r3, [r7, #4]
 6224 0152 1B68     		ldr	r3, [r3]
 6225 0154 1722     		mov	r2, #23
 6226 0156 BC18     		add	r4, r7, r2
 6227 0158 181C     		mov	r0, r3
 6228 015a FFF7FEFF 		bl	sync
 6229 015e 031C     		mov	r3, r0
 6230 0160 2370     		strb	r3, [r4]
 6231              	.L330:
2620:.\ff/ff.c     **** 			}
2621:.\ff/ff.c     **** 		}
2622:.\ff/ff.c     **** 	}
2623:.\ff/ff.c     **** 
2624:.\ff/ff.c     **** 	LEAVE_FF(fp->fs, res);
 6232              		.loc 1 2624 0
 6233 0162 1723     		mov	r3, #23
 6234 0164 FB18     		add	r3, r7, r3
 6235 0166 1B78     		ldrb	r3, [r3]
2625:.\ff/ff.c     **** }
 6236              		.loc 1 2625 0
 6237 0168 181C     		mov	r0, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 157


 6238 016a BD46     		mov	sp, r7
 6239 016c 07B0     		add	sp, sp, #28
 6240              		@ sp needed
 6241 016e 90BD     		pop	{r4, r7, pc}
 6242              		.cfi_endproc
 6243              	.LFE29:
 6244              		.size	f_sync, .-f_sync
 6245              		.section	.text.f_close,"ax",%progbits
 6246              		.align	2
 6247              		.global	f_close
 6248              		.code	16
 6249              		.thumb_func
 6250              		.type	f_close, %function
 6251              	f_close:
 6252              	.LFB30:
2626:.\ff/ff.c     **** 
2627:.\ff/ff.c     **** #endif /* !_FS_READONLY */
2628:.\ff/ff.c     **** 
2629:.\ff/ff.c     **** 
2630:.\ff/ff.c     **** 
2631:.\ff/ff.c     **** 
2632:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2633:.\ff/ff.c     **** /* Close File                                                            */
2634:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2635:.\ff/ff.c     **** 
2636:.\ff/ff.c     **** FRESULT f_close (
2637:.\ff/ff.c     **** 	FIL *fp		/* Pointer to the file object to be closed */
2638:.\ff/ff.c     **** )
2639:.\ff/ff.c     **** {
 6253              		.loc 1 2639 0
 6254              		.cfi_startproc
 6255 0000 90B5     		push	{r4, r7, lr}
 6256              		.cfi_def_cfa_offset 12
 6257              		.cfi_offset 4, -12
 6258              		.cfi_offset 7, -8
 6259              		.cfi_offset 14, -4
 6260 0002 85B0     		sub	sp, sp, #20
 6261              		.cfi_def_cfa_offset 32
 6262 0004 00AF     		add	r7, sp, #0
 6263              		.cfi_def_cfa_register 7
 6264 0006 7860     		str	r0, [r7, #4]
2640:.\ff/ff.c     **** 	FRESULT res;
2641:.\ff/ff.c     **** 
2642:.\ff/ff.c     **** #if _FS_READONLY
2643:.\ff/ff.c     **** 	FATFS *fs = fp->fs;
2644:.\ff/ff.c     **** 	res = validate(fs, fp->id);
2645:.\ff/ff.c     **** 	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
2646:.\ff/ff.c     **** 	LEAVE_FF(fs, res);
2647:.\ff/ff.c     **** 
2648:.\ff/ff.c     **** #else
2649:.\ff/ff.c     **** 	res = f_sync(fp);		/* Flush cached data */
 6265              		.loc 1 2649 0
 6266 0008 0F23     		mov	r3, #15
 6267 000a FC18     		add	r4, r7, r3
 6268 000c 7B68     		ldr	r3, [r7, #4]
 6269 000e 181C     		mov	r0, r3
 6270 0010 FFF7FEFF 		bl	f_sync
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 158


 6271 0014 031C     		mov	r3, r0
 6272 0016 2370     		strb	r3, [r4]
2650:.\ff/ff.c     **** #if _FS_SHARE
2651:.\ff/ff.c     **** 	if (res == FR_OK) {		/* Decrement open counter */
2652:.\ff/ff.c     **** #if _FS_REENTRANT
2653:.\ff/ff.c     **** 		res = validate(fp->fs, fp->id);
2654:.\ff/ff.c     **** 		if (res == FR_OK) {
2655:.\ff/ff.c     **** 			res = dec_lock(fp->lockid);	
2656:.\ff/ff.c     **** 			unlock_fs(fp->fs, FR_OK);
2657:.\ff/ff.c     **** 		}
2658:.\ff/ff.c     **** #else
2659:.\ff/ff.c     **** 		res = dec_lock(fp->lockid);
2660:.\ff/ff.c     **** #endif
2661:.\ff/ff.c     **** 	}
2662:.\ff/ff.c     **** #endif
2663:.\ff/ff.c     **** 	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
 6273              		.loc 1 2663 0
 6274 0018 0F23     		mov	r3, #15
 6275 001a FB18     		add	r3, r7, r3
 6276 001c 1B78     		ldrb	r3, [r3]
 6277 001e 002B     		cmp	r3, #0
 6278 0020 02D1     		bne	.L333
 6279              		.loc 1 2663 0 is_stmt 0 discriminator 1
 6280 0022 7B68     		ldr	r3, [r7, #4]
 6281 0024 0022     		mov	r2, #0
 6282 0026 1A60     		str	r2, [r3]
 6283              	.L333:
2664:.\ff/ff.c     **** 	return res;
 6284              		.loc 1 2664 0 is_stmt 1
 6285 0028 0F23     		mov	r3, #15
 6286 002a FB18     		add	r3, r7, r3
 6287 002c 1B78     		ldrb	r3, [r3]
2665:.\ff/ff.c     **** #endif
2666:.\ff/ff.c     **** }
 6288              		.loc 1 2666 0
 6289 002e 181C     		mov	r0, r3
 6290 0030 BD46     		mov	sp, r7
 6291 0032 05B0     		add	sp, sp, #20
 6292              		@ sp needed
 6293 0034 90BD     		pop	{r4, r7, pc}
 6294              		.cfi_endproc
 6295              	.LFE30:
 6296              		.size	f_close, .-f_close
 6297 0036 C046     		.section	.text.f_lseek,"ax",%progbits
 6298              		.align	2
 6299              		.global	f_lseek
 6300              		.code	16
 6301              		.thumb_func
 6302              		.type	f_lseek, %function
 6303              	f_lseek:
 6304              	.LFB31:
2667:.\ff/ff.c     **** 
2668:.\ff/ff.c     **** 
2669:.\ff/ff.c     **** 
2670:.\ff/ff.c     **** 
2671:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2672:.\ff/ff.c     **** /* Current Drive/Directory Handlings                                     */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 159


2673:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2674:.\ff/ff.c     **** 
2675:.\ff/ff.c     **** #if _FS_RPATH >= 1
2676:.\ff/ff.c     **** 
2677:.\ff/ff.c     **** FRESULT f_chdrive (
2678:.\ff/ff.c     **** 	BYTE drv		/* Drive number */
2679:.\ff/ff.c     **** )
2680:.\ff/ff.c     **** {
2681:.\ff/ff.c     **** 	if (drv >= _VOLUMES) return FR_INVALID_DRIVE;
2682:.\ff/ff.c     **** 
2683:.\ff/ff.c     **** 	CurrVol = drv;
2684:.\ff/ff.c     **** 
2685:.\ff/ff.c     **** 	return FR_OK;
2686:.\ff/ff.c     **** }
2687:.\ff/ff.c     **** 
2688:.\ff/ff.c     **** 
2689:.\ff/ff.c     **** 
2690:.\ff/ff.c     **** FRESULT f_chdir (
2691:.\ff/ff.c     **** 	const TCHAR *path	/* Pointer to the directory path */
2692:.\ff/ff.c     **** )
2693:.\ff/ff.c     **** {
2694:.\ff/ff.c     **** 	FRESULT res;
2695:.\ff/ff.c     **** 	DIR dj;
2696:.\ff/ff.c     **** 	DEF_NAMEBUF;
2697:.\ff/ff.c     **** 
2698:.\ff/ff.c     **** 
2699:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
2700:.\ff/ff.c     **** 	if (res == FR_OK) {
2701:.\ff/ff.c     **** 		INIT_BUF(dj);
2702:.\ff/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the path */
2703:.\ff/ff.c     **** 		FREE_BUF();
2704:.\ff/ff.c     **** 		if (res == FR_OK) {					/* Follow completed */
2705:.\ff/ff.c     **** 			if (!dj.dir) {
2706:.\ff/ff.c     **** 				dj.fs->cdir = dj.sclust;	/* Start directory itself */
2707:.\ff/ff.c     **** 			} else {
2708:.\ff/ff.c     **** 				if (dj.dir[DIR_Attr] & AM_DIR)	/* Reached to the directory */
2709:.\ff/ff.c     **** 					dj.fs->cdir = LD_CLUST(dj.dir);
2710:.\ff/ff.c     **** 				else
2711:.\ff/ff.c     **** 					res = FR_NO_PATH;		/* Reached but a file */
2712:.\ff/ff.c     **** 			}
2713:.\ff/ff.c     **** 		}
2714:.\ff/ff.c     **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
2715:.\ff/ff.c     **** 	}
2716:.\ff/ff.c     **** 
2717:.\ff/ff.c     **** 	LEAVE_FF(dj.fs, res);
2718:.\ff/ff.c     **** }
2719:.\ff/ff.c     **** 
2720:.\ff/ff.c     **** 
2721:.\ff/ff.c     **** #if _FS_RPATH >= 2
2722:.\ff/ff.c     **** FRESULT f_getcwd (
2723:.\ff/ff.c     **** 	TCHAR *path,	/* Pointer to the directory path */
2724:.\ff/ff.c     **** 	UINT sz_path	/* Size of path */
2725:.\ff/ff.c     **** )
2726:.\ff/ff.c     **** {
2727:.\ff/ff.c     **** 	FRESULT res;
2728:.\ff/ff.c     **** 	DIR dj;
2729:.\ff/ff.c     **** 	UINT i, n;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 160


2730:.\ff/ff.c     **** 	DWORD ccl;
2731:.\ff/ff.c     **** 	TCHAR *tp;
2732:.\ff/ff.c     **** 	FILINFO fno;
2733:.\ff/ff.c     **** 	DEF_NAMEBUF;
2734:.\ff/ff.c     **** 
2735:.\ff/ff.c     **** 
2736:.\ff/ff.c     **** 	*path = 0;
2737:.\ff/ff.c     **** 	res = chk_mounted((const TCHAR**)&path, &dj.fs, 0);	/* Get current volume */
2738:.\ff/ff.c     **** 	if (res == FR_OK) {
2739:.\ff/ff.c     **** 		INIT_BUF(dj);
2740:.\ff/ff.c     **** 		i = sz_path;		/* Bottom of buffer (dir stack base) */
2741:.\ff/ff.c     **** 		dj.sclust = dj.fs->cdir;			/* Start to follow upper dir from current dir */
2742:.\ff/ff.c     **** 		while ((ccl = dj.sclust) != 0) {	/* Repeat while current dir is a sub-dir */
2743:.\ff/ff.c     **** 			res = dir_sdi(&dj, 1);			/* Get parent dir */
2744:.\ff/ff.c     **** 			if (res != FR_OK) break;
2745:.\ff/ff.c     **** 			res = dir_read(&dj);
2746:.\ff/ff.c     **** 			if (res != FR_OK) break;
2747:.\ff/ff.c     **** 			dj.sclust = LD_CLUST(dj.dir);	/* Goto parent dir */
2748:.\ff/ff.c     **** 			res = dir_sdi(&dj, 0);
2749:.\ff/ff.c     **** 			if (res != FR_OK) break;
2750:.\ff/ff.c     **** 			do {							/* Find the entry links to the child dir */
2751:.\ff/ff.c     **** 				res = dir_read(&dj);
2752:.\ff/ff.c     **** 				if (res != FR_OK) break;
2753:.\ff/ff.c     **** 				if (ccl == LD_CLUST(dj.dir)) break;	/* Found the entry */
2754:.\ff/ff.c     **** 				res = dir_next(&dj, 0);	
2755:.\ff/ff.c     **** 			} while (res == FR_OK);
2756:.\ff/ff.c     **** 			if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
2757:.\ff/ff.c     **** 			if (res != FR_OK) break;
2758:.\ff/ff.c     **** #if _USE_LFN
2759:.\ff/ff.c     **** 			fno.lfname = path;
2760:.\ff/ff.c     **** 			fno.lfsize = i;
2761:.\ff/ff.c     **** #endif
2762:.\ff/ff.c     **** 			get_fileinfo(&dj, &fno);		/* Get the dir name and push it to the buffer */
2763:.\ff/ff.c     **** 			tp = fno.fname;
2764:.\ff/ff.c     **** 			if (_USE_LFN && *path) tp = path;
2765:.\ff/ff.c     **** 			for (n = 0; tp[n]; n++) ;
2766:.\ff/ff.c     **** 			if (i < n + 3) {
2767:.\ff/ff.c     **** 				res = FR_NOT_ENOUGH_CORE; break;
2768:.\ff/ff.c     **** 			}
2769:.\ff/ff.c     **** 			while (n) path[--i] = tp[--n];
2770:.\ff/ff.c     **** 			path[--i] = '/';
2771:.\ff/ff.c     **** 		}
2772:.\ff/ff.c     **** 		tp = path;
2773:.\ff/ff.c     **** 		if (res == FR_OK) {
2774:.\ff/ff.c     **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
2775:.\ff/ff.c     **** 			*tp++ = ':';
2776:.\ff/ff.c     **** 			if (i == sz_path) {				/* Root-dir */
2777:.\ff/ff.c     **** 				*tp++ = '/';
2778:.\ff/ff.c     **** 			} else {						/* Sub-dir */
2779:.\ff/ff.c     **** 				do		/* Add stacked path str */
2780:.\ff/ff.c     **** 					*tp++ = path[i++];
2781:.\ff/ff.c     **** 				while (i < sz_path);
2782:.\ff/ff.c     **** 			}
2783:.\ff/ff.c     **** 		}
2784:.\ff/ff.c     **** 		*tp = 0;
2785:.\ff/ff.c     **** 		FREE_BUF();
2786:.\ff/ff.c     **** 	}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 161


2787:.\ff/ff.c     **** 
2788:.\ff/ff.c     **** 	LEAVE_FF(dj.fs, res);
2789:.\ff/ff.c     **** }
2790:.\ff/ff.c     **** #endif /* _FS_RPATH >= 2 */
2791:.\ff/ff.c     **** #endif /* _FS_RPATH >= 1 */
2792:.\ff/ff.c     **** 
2793:.\ff/ff.c     **** 
2794:.\ff/ff.c     **** 
2795:.\ff/ff.c     **** #if _FS_MINIMIZE <= 2
2796:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2797:.\ff/ff.c     **** /* Seek File R/W Pointer                                                 */
2798:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2799:.\ff/ff.c     **** 
2800:.\ff/ff.c     **** FRESULT f_lseek (
2801:.\ff/ff.c     **** 	FIL *fp,		/* Pointer to the file object */
2802:.\ff/ff.c     **** 	DWORD ofs		/* File pointer from top of file */
2803:.\ff/ff.c     **** )
2804:.\ff/ff.c     **** {
 6305              		.loc 1 2804 0
 6306              		.cfi_startproc
 6307 0000 90B5     		push	{r4, r7, lr}
 6308              		.cfi_def_cfa_offset 12
 6309              		.cfi_offset 4, -12
 6310              		.cfi_offset 7, -8
 6311              		.cfi_offset 14, -4
 6312 0002 89B0     		sub	sp, sp, #36
 6313              		.cfi_def_cfa_offset 48
 6314 0004 00AF     		add	r7, sp, #0
 6315              		.cfi_def_cfa_register 7
 6316 0006 7860     		str	r0, [r7, #4]
 6317 0008 3960     		str	r1, [r7]
2805:.\ff/ff.c     **** 	FRESULT res;
2806:.\ff/ff.c     **** 
2807:.\ff/ff.c     **** 
2808:.\ff/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 6318              		.loc 1 2808 0
 6319 000a 7B68     		ldr	r3, [r7, #4]
 6320 000c 1A68     		ldr	r2, [r3]
 6321 000e 7B68     		ldr	r3, [r7, #4]
 6322 0010 9B88     		ldrh	r3, [r3, #4]
 6323 0012 1721     		mov	r1, #23
 6324 0014 7C18     		add	r4, r7, r1
 6325 0016 101C     		mov	r0, r2
 6326 0018 191C     		mov	r1, r3
 6327 001a FFF7FEFF 		bl	validate
 6328 001e 031C     		mov	r3, r0
 6329 0020 2370     		strb	r3, [r4]
2809:.\ff/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 6330              		.loc 1 2809 0
 6331 0022 1723     		mov	r3, #23
 6332 0024 FB18     		add	r3, r7, r3
 6333 0026 1B78     		ldrb	r3, [r3]
 6334 0028 002B     		cmp	r3, #0
 6335 002a 03D0     		beq	.L336
 6336              		.loc 1 2809 0 is_stmt 0 discriminator 1
 6337 002c 1723     		mov	r3, #23
 6338 002e FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 162


 6339 0030 1B78     		ldrb	r3, [r3]
 6340 0032 12E1     		b	.L337
 6341              	.L336:
2810:.\ff/ff.c     **** 	if (fp->flag & FA__ERROR)			/* Check abort flag */
 6342              		.loc 1 2810 0 is_stmt 1
 6343 0034 7B68     		ldr	r3, [r7, #4]
 6344 0036 9B79     		ldrb	r3, [r3, #6]
 6345 0038 DBB2     		uxtb	r3, r3
 6346 003a 5BB2     		sxtb	r3, r3
 6347 003c 002B     		cmp	r3, #0
 6348 003e 01DA     		bge	.L338
2811:.\ff/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 6349              		.loc 1 2811 0
 6350 0040 0223     		mov	r3, #2
 6351 0042 0AE1     		b	.L337
 6352              	.L338:
 6353              	.LBB5:
2812:.\ff/ff.c     **** 
2813:.\ff/ff.c     **** #if _USE_FASTSEEK
2814:.\ff/ff.c     **** 	if (fp->cltbl) {	/* Fast seek */
2815:.\ff/ff.c     **** 		DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
2816:.\ff/ff.c     **** 
2817:.\ff/ff.c     **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
2818:.\ff/ff.c     **** 			tbl = fp->cltbl;
2819:.\ff/ff.c     **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
2820:.\ff/ff.c     **** 			cl = fp->sclust;			/* Top of the chain */
2821:.\ff/ff.c     **** 			if (cl) {
2822:.\ff/ff.c     **** 				do {
2823:.\ff/ff.c     **** 					/* Get a fragment */
2824:.\ff/ff.c     **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
2825:.\ff/ff.c     **** 					do {
2826:.\ff/ff.c     **** 						pcl = cl; ncl++;
2827:.\ff/ff.c     **** 						cl = get_fat(fp->fs, cl);
2828:.\ff/ff.c     **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
2829:.\ff/ff.c     **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2830:.\ff/ff.c     **** 					} while (cl == pcl + 1);
2831:.\ff/ff.c     **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
2832:.\ff/ff.c     **** 						*tbl++ = ncl; *tbl++ = tcl;
2833:.\ff/ff.c     **** 					}
2834:.\ff/ff.c     **** 				} while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
2835:.\ff/ff.c     **** 			}
2836:.\ff/ff.c     **** 			*fp->cltbl = ulen;	/* Number of items used */
2837:.\ff/ff.c     **** 			if (ulen <= tlen)
2838:.\ff/ff.c     **** 				*tbl = 0;		/* Terminate table */
2839:.\ff/ff.c     **** 			else
2840:.\ff/ff.c     **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
2841:.\ff/ff.c     **** 
2842:.\ff/ff.c     **** 		} else {						/* Fast seek */
2843:.\ff/ff.c     **** 			if (ofs > fp->fsize)		/* Clip offset at the file size */
2844:.\ff/ff.c     **** 				ofs = fp->fsize;
2845:.\ff/ff.c     **** 			fp->fptr = ofs;				/* Set file pointer */
2846:.\ff/ff.c     **** 			if (ofs) {
2847:.\ff/ff.c     **** 				fp->clust = clmt_clust(fp, ofs - 1);
2848:.\ff/ff.c     **** 				dsc = clust2sect(fp->fs, fp->clust);
2849:.\ff/ff.c     **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
2850:.\ff/ff.c     **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
2851:.\ff/ff.c     **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 163


2852:.\ff/ff.c     **** #if !_FS_TINY
2853:.\ff/ff.c     **** #if !_FS_READONLY
2854:.\ff/ff.c     **** 					if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2855:.\ff/ff.c     **** 						if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2856:.\ff/ff.c     **** 							ABORT(fp->fs, FR_DISK_ERR);
2857:.\ff/ff.c     **** 						fp->flag &= ~FA__DIRTY;
2858:.\ff/ff.c     **** 					}
2859:.\ff/ff.c     **** #endif
2860:.\ff/ff.c     **** 					if (disk_read(fp->fs->drv, fp->buf, dsc, 1) != RES_OK)	/* Load current sector */
2861:.\ff/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2862:.\ff/ff.c     **** #endif
2863:.\ff/ff.c     **** 					fp->dsect = dsc;
2864:.\ff/ff.c     **** 				}
2865:.\ff/ff.c     **** 			}
2866:.\ff/ff.c     **** 		}
2867:.\ff/ff.c     **** 	} else
2868:.\ff/ff.c     **** #endif
2869:.\ff/ff.c     **** 
2870:.\ff/ff.c     **** 	/* Normal Seek */
2871:.\ff/ff.c     **** 	{
2872:.\ff/ff.c     **** 		DWORD clst, bcs, nsect, ifptr;
2873:.\ff/ff.c     **** 
2874:.\ff/ff.c     **** 		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
 6354              		.loc 1 2874 0
 6355 0044 7B68     		ldr	r3, [r7, #4]
 6356 0046 DA68     		ldr	r2, [r3, #12]
 6357 0048 3B68     		ldr	r3, [r7]
 6358 004a 9A42     		cmp	r2, r3
 6359 004c 08D2     		bcs	.L339
2875:.\ff/ff.c     **** #if !_FS_READONLY
2876:.\ff/ff.c     **** 			 && !(fp->flag & FA_WRITE)
 6360              		.loc 1 2876 0
 6361 004e 7B68     		ldr	r3, [r7, #4]
 6362 0050 9B79     		ldrb	r3, [r3, #6]
 6363 0052 1A1C     		mov	r2, r3
 6364 0054 0223     		mov	r3, #2
 6365 0056 1340     		and	r3, r2
 6366 0058 02D1     		bne	.L339
2877:.\ff/ff.c     **** #endif
2878:.\ff/ff.c     **** 			) ofs = fp->fsize;
 6367              		.loc 1 2878 0
 6368 005a 7B68     		ldr	r3, [r7, #4]
 6369 005c DB68     		ldr	r3, [r3, #12]
 6370 005e 3B60     		str	r3, [r7]
 6371              	.L339:
2879:.\ff/ff.c     **** 
2880:.\ff/ff.c     **** 		ifptr = fp->fptr;
 6372              		.loc 1 2880 0
 6373 0060 7B68     		ldr	r3, [r7, #4]
 6374 0062 9B68     		ldr	r3, [r3, #8]
 6375 0064 3B61     		str	r3, [r7, #16]
2881:.\ff/ff.c     **** 		fp->fptr = nsect = 0;
 6376              		.loc 1 2881 0
 6377 0066 0023     		mov	r3, #0
 6378 0068 BB61     		str	r3, [r7, #24]
 6379 006a 7B68     		ldr	r3, [r7, #4]
 6380 006c BA69     		ldr	r2, [r7, #24]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 164


 6381 006e 9A60     		str	r2, [r3, #8]
2882:.\ff/ff.c     **** 		if (ofs) {
 6382              		.loc 1 2882 0
 6383 0070 3B68     		ldr	r3, [r7]
 6384 0072 002B     		cmp	r3, #0
 6385 0074 00D1     		bne	.LCB5959
 6386 0076 CFE0     		b	.L340	@long jump
 6387              	.LCB5959:
2883:.\ff/ff.c     **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
 6388              		.loc 1 2883 0
 6389 0078 7B68     		ldr	r3, [r7, #4]
 6390 007a 1B68     		ldr	r3, [r3]
 6391 007c 9B78     		ldrb	r3, [r3, #2]
 6392 007e 5B02     		lsl	r3, r3, #9
 6393 0080 FB60     		str	r3, [r7, #12]
2884:.\ff/ff.c     **** 			if (ifptr > 0 &&
 6394              		.loc 1 2884 0
 6395 0082 3B69     		ldr	r3, [r7, #16]
 6396 0084 002B     		cmp	r3, #0
 6397 0086 20D0     		beq	.L341
2885:.\ff/ff.c     **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 6398              		.loc 1 2885 0 discriminator 1
 6399 0088 3B68     		ldr	r3, [r7]
 6400 008a 013B     		sub	r3, r3, #1
 6401 008c 181C     		mov	r0, r3
 6402 008e F968     		ldr	r1, [r7, #12]
 6403 0090 FFF7FEFF 		bl	__aeabi_uidiv
 6404 0094 031C     		mov	r3, r0
 6405 0096 1C1C     		mov	r4, r3
 6406 0098 3B69     		ldr	r3, [r7, #16]
 6407 009a 013B     		sub	r3, r3, #1
 6408 009c 181C     		mov	r0, r3
 6409 009e F968     		ldr	r1, [r7, #12]
 6410 00a0 FFF7FEFF 		bl	__aeabi_uidiv
 6411 00a4 031C     		mov	r3, r0
2884:.\ff/ff.c     **** 			if (ifptr > 0 &&
 6412              		.loc 1 2884 0 discriminator 1
 6413 00a6 9C42     		cmp	r4, r3
 6414 00a8 0FD3     		bcc	.L341
2886:.\ff/ff.c     **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
 6415              		.loc 1 2886 0
 6416 00aa 3B69     		ldr	r3, [r7, #16]
 6417 00ac 013B     		sub	r3, r3, #1
 6418 00ae FA68     		ldr	r2, [r7, #12]
 6419 00b0 5242     		neg	r2, r2
 6420 00b2 1A40     		and	r2, r3
 6421 00b4 7B68     		ldr	r3, [r7, #4]
 6422 00b6 9A60     		str	r2, [r3, #8]
2887:.\ff/ff.c     **** 				ofs -= fp->fptr;
 6423              		.loc 1 2887 0
 6424 00b8 7B68     		ldr	r3, [r7, #4]
 6425 00ba 9B68     		ldr	r3, [r3, #8]
 6426 00bc 3A68     		ldr	r2, [r7]
 6427 00be D31A     		sub	r3, r2, r3
 6428 00c0 3B60     		str	r3, [r7]
2888:.\ff/ff.c     **** 				clst = fp->clust;
 6429              		.loc 1 2888 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 165


 6430 00c2 7B68     		ldr	r3, [r7, #4]
 6431 00c4 5B69     		ldr	r3, [r3, #20]
 6432 00c6 FB61     		str	r3, [r7, #28]
 6433 00c8 2DE0     		b	.L342
 6434              	.L341:
2889:.\ff/ff.c     **** 			} else {									/* When seek to back cluster, */
2890:.\ff/ff.c     **** 				clst = fp->sclust;						/* start from the first cluster */
 6435              		.loc 1 2890 0
 6436 00ca 7B68     		ldr	r3, [r7, #4]
 6437 00cc 1B69     		ldr	r3, [r3, #16]
 6438 00ce FB61     		str	r3, [r7, #28]
2891:.\ff/ff.c     **** #if !_FS_READONLY
2892:.\ff/ff.c     **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
 6439              		.loc 1 2892 0
 6440 00d0 FB69     		ldr	r3, [r7, #28]
 6441 00d2 002B     		cmp	r3, #0
 6442 00d4 24D1     		bne	.L343
2893:.\ff/ff.c     **** 					clst = create_chain(fp->fs, 0);
 6443              		.loc 1 2893 0
 6444 00d6 7B68     		ldr	r3, [r7, #4]
 6445 00d8 1B68     		ldr	r3, [r3]
 6446 00da 181C     		mov	r0, r3
 6447 00dc 0021     		mov	r1, #0
 6448 00de FFF7FEFF 		bl	create_chain
 6449 00e2 031C     		mov	r3, r0
 6450 00e4 FB61     		str	r3, [r7, #28]
2894:.\ff/ff.c     **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 6451              		.loc 1 2894 0
 6452 00e6 FB69     		ldr	r3, [r7, #28]
 6453 00e8 012B     		cmp	r3, #1
 6454 00ea 09D1     		bne	.L344
 6455              		.loc 1 2894 0 is_stmt 0 discriminator 1
 6456 00ec 7B68     		ldr	r3, [r7, #4]
 6457 00ee 9B79     		ldrb	r3, [r3, #6]
 6458 00f0 8022     		mov	r2, #128
 6459 00f2 5242     		neg	r2, r2
 6460 00f4 1343     		orr	r3, r2
 6461 00f6 DAB2     		uxtb	r2, r3
 6462 00f8 7B68     		ldr	r3, [r7, #4]
 6463 00fa 9A71     		strb	r2, [r3, #6]
 6464 00fc 0223     		mov	r3, #2
 6465 00fe ACE0     		b	.L337
 6466              	.L344:
2895:.\ff/ff.c     **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 6467              		.loc 1 2895 0 is_stmt 1
 6468 0100 FB69     		ldr	r3, [r7, #28]
 6469 0102 0133     		add	r3, r3, #1
 6470 0104 09D1     		bne	.L345
 6471              		.loc 1 2895 0 is_stmt 0 discriminator 1
 6472 0106 7B68     		ldr	r3, [r7, #4]
 6473 0108 9B79     		ldrb	r3, [r3, #6]
 6474 010a 8022     		mov	r2, #128
 6475 010c 5242     		neg	r2, r2
 6476 010e 1343     		orr	r3, r2
 6477 0110 DAB2     		uxtb	r2, r3
 6478 0112 7B68     		ldr	r3, [r7, #4]
 6479 0114 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 166


 6480 0116 0123     		mov	r3, #1
 6481 0118 9FE0     		b	.L337
 6482              	.L345:
2896:.\ff/ff.c     **** 					fp->sclust = clst;
 6483              		.loc 1 2896 0 is_stmt 1
 6484 011a 7B68     		ldr	r3, [r7, #4]
 6485 011c FA69     		ldr	r2, [r7, #28]
 6486 011e 1A61     		str	r2, [r3, #16]
 6487              	.L343:
2897:.\ff/ff.c     **** 				}
2898:.\ff/ff.c     **** #endif
2899:.\ff/ff.c     **** 				fp->clust = clst;
 6488              		.loc 1 2899 0
 6489 0120 7B68     		ldr	r3, [r7, #4]
 6490 0122 FA69     		ldr	r2, [r7, #28]
 6491 0124 5A61     		str	r2, [r3, #20]
 6492              	.L342:
2900:.\ff/ff.c     **** 			}
2901:.\ff/ff.c     **** 			if (clst != 0) {
 6493              		.loc 1 2901 0
 6494 0126 FB69     		ldr	r3, [r7, #28]
 6495 0128 002B     		cmp	r3, #0
 6496 012a 00D1     		bne	.LCB6059
 6497 012c 74E0     		b	.L340	@long jump
 6498              	.LCB6059:
2902:.\ff/ff.c     **** 				while (ofs > bcs) {						/* Cluster following loop */
 6499              		.loc 1 2902 0
 6500 012e 4AE0     		b	.L346
 6501              	.L353:
2903:.\ff/ff.c     **** #if !_FS_READONLY
2904:.\ff/ff.c     **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
 6502              		.loc 1 2904 0
 6503 0130 7B68     		ldr	r3, [r7, #4]
 6504 0132 9B79     		ldrb	r3, [r3, #6]
 6505 0134 1A1C     		mov	r2, r3
 6506 0136 0223     		mov	r3, #2
 6507 0138 1340     		and	r3, r2
 6508 013a 0ED0     		beq	.L347
2905:.\ff/ff.c     **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 6509              		.loc 1 2905 0
 6510 013c 7B68     		ldr	r3, [r7, #4]
 6511 013e 1A68     		ldr	r2, [r3]
 6512 0140 FB69     		ldr	r3, [r7, #28]
 6513 0142 101C     		mov	r0, r2
 6514 0144 191C     		mov	r1, r3
 6515 0146 FFF7FEFF 		bl	create_chain
 6516 014a 031C     		mov	r3, r0
 6517 014c FB61     		str	r3, [r7, #28]
2906:.\ff/ff.c     **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 6518              		.loc 1 2906 0
 6519 014e FB69     		ldr	r3, [r7, #28]
 6520 0150 002B     		cmp	r3, #0
 6521 0152 0BD1     		bne	.L348
2907:.\ff/ff.c     **** 							ofs = bcs; break;
 6522              		.loc 1 2907 0
 6523 0154 FB68     		ldr	r3, [r7, #12]
 6524 0156 3B60     		str	r3, [r7]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 167


 6525 0158 39E0     		b	.L349
 6526              	.L347:
2908:.\ff/ff.c     **** 						}
2909:.\ff/ff.c     **** 					} else
2910:.\ff/ff.c     **** #endif
2911:.\ff/ff.c     **** 						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
 6527              		.loc 1 2911 0
 6528 015a 7B68     		ldr	r3, [r7, #4]
 6529 015c 1A68     		ldr	r2, [r3]
 6530 015e FB69     		ldr	r3, [r7, #28]
 6531 0160 101C     		mov	r0, r2
 6532 0162 191C     		mov	r1, r3
 6533 0164 FFF7FEFF 		bl	get_fat
 6534 0168 031C     		mov	r3, r0
 6535 016a FB61     		str	r3, [r7, #28]
 6536              	.L348:
2912:.\ff/ff.c     **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 6537              		.loc 1 2912 0
 6538 016c FB69     		ldr	r3, [r7, #28]
 6539 016e 0133     		add	r3, r3, #1
 6540 0170 09D1     		bne	.L350
 6541              		.loc 1 2912 0 is_stmt 0 discriminator 1
 6542 0172 7B68     		ldr	r3, [r7, #4]
 6543 0174 9B79     		ldrb	r3, [r3, #6]
 6544 0176 8022     		mov	r2, #128
 6545 0178 5242     		neg	r2, r2
 6546 017a 1343     		orr	r3, r2
 6547 017c DAB2     		uxtb	r2, r3
 6548 017e 7B68     		ldr	r3, [r7, #4]
 6549 0180 9A71     		strb	r2, [r3, #6]
 6550 0182 0123     		mov	r3, #1
 6551 0184 69E0     		b	.L337
 6552              	.L350:
2913:.\ff/ff.c     **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 6553              		.loc 1 2913 0 is_stmt 1
 6554 0186 FB69     		ldr	r3, [r7, #28]
 6555 0188 012B     		cmp	r3, #1
 6556 018a 05D9     		bls	.L351
 6557              		.loc 1 2913 0 is_stmt 0 discriminator 2
 6558 018c 7B68     		ldr	r3, [r7, #4]
 6559 018e 1B68     		ldr	r3, [r3]
 6560 0190 9A69     		ldr	r2, [r3, #24]
 6561 0192 FB69     		ldr	r3, [r7, #28]
 6562 0194 9A42     		cmp	r2, r3
 6563 0196 09D8     		bhi	.L352
 6564              	.L351:
 6565              		.loc 1 2913 0 discriminator 3
 6566 0198 7B68     		ldr	r3, [r7, #4]
 6567 019a 9B79     		ldrb	r3, [r3, #6]
 6568 019c 8022     		mov	r2, #128
 6569 019e 5242     		neg	r2, r2
 6570 01a0 1343     		orr	r3, r2
 6571 01a2 DAB2     		uxtb	r2, r3
 6572 01a4 7B68     		ldr	r3, [r7, #4]
 6573 01a6 9A71     		strb	r2, [r3, #6]
 6574 01a8 0223     		mov	r3, #2
 6575 01aa 56E0     		b	.L337
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 168


 6576              	.L352:
2914:.\ff/ff.c     **** 					fp->clust = clst;
 6577              		.loc 1 2914 0 is_stmt 1
 6578 01ac 7B68     		ldr	r3, [r7, #4]
 6579 01ae FA69     		ldr	r2, [r7, #28]
 6580 01b0 5A61     		str	r2, [r3, #20]
2915:.\ff/ff.c     **** 					fp->fptr += bcs;
 6581              		.loc 1 2915 0
 6582 01b2 7B68     		ldr	r3, [r7, #4]
 6583 01b4 9A68     		ldr	r2, [r3, #8]
 6584 01b6 FB68     		ldr	r3, [r7, #12]
 6585 01b8 D218     		add	r2, r2, r3
 6586 01ba 7B68     		ldr	r3, [r7, #4]
 6587 01bc 9A60     		str	r2, [r3, #8]
2916:.\ff/ff.c     **** 					ofs -= bcs;
 6588              		.loc 1 2916 0
 6589 01be 3A68     		ldr	r2, [r7]
 6590 01c0 FB68     		ldr	r3, [r7, #12]
 6591 01c2 D31A     		sub	r3, r2, r3
 6592 01c4 3B60     		str	r3, [r7]
 6593              	.L346:
2902:.\ff/ff.c     **** #if !_FS_READONLY
 6594              		.loc 1 2902 0
 6595 01c6 3A68     		ldr	r2, [r7]
 6596 01c8 FB68     		ldr	r3, [r7, #12]
 6597 01ca 9A42     		cmp	r2, r3
 6598 01cc B0D8     		bhi	.L353
 6599              	.L349:
2917:.\ff/ff.c     **** 				}
2918:.\ff/ff.c     **** 				fp->fptr += ofs;
 6600              		.loc 1 2918 0
 6601 01ce 7B68     		ldr	r3, [r7, #4]
 6602 01d0 9A68     		ldr	r2, [r3, #8]
 6603 01d2 3B68     		ldr	r3, [r7]
 6604 01d4 D218     		add	r2, r2, r3
 6605 01d6 7B68     		ldr	r3, [r7, #4]
 6606 01d8 9A60     		str	r2, [r3, #8]
2919:.\ff/ff.c     **** 				if (ofs % SS(fp->fs)) {
 6607              		.loc 1 2919 0
 6608 01da 3B68     		ldr	r3, [r7]
 6609 01dc DB05     		lsl	r3, r3, #23
 6610 01de DB0D     		lsr	r3, r3, #23
 6611 01e0 1AD0     		beq	.L340
2920:.\ff/ff.c     **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
 6612              		.loc 1 2920 0
 6613 01e2 7B68     		ldr	r3, [r7, #4]
 6614 01e4 1A68     		ldr	r2, [r3]
 6615 01e6 FB69     		ldr	r3, [r7, #28]
 6616 01e8 101C     		mov	r0, r2
 6617 01ea 191C     		mov	r1, r3
 6618 01ec FFF7FEFF 		bl	clust2sect
 6619 01f0 031C     		mov	r3, r0
 6620 01f2 BB61     		str	r3, [r7, #24]
2921:.\ff/ff.c     **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
 6621              		.loc 1 2921 0
 6622 01f4 BB69     		ldr	r3, [r7, #24]
 6623 01f6 002B     		cmp	r3, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 169


 6624 01f8 09D1     		bne	.L354
 6625              		.loc 1 2921 0 is_stmt 0 discriminator 1
 6626 01fa 7B68     		ldr	r3, [r7, #4]
 6627 01fc 9B79     		ldrb	r3, [r3, #6]
 6628 01fe 8022     		mov	r2, #128
 6629 0200 5242     		neg	r2, r2
 6630 0202 1343     		orr	r3, r2
 6631 0204 DAB2     		uxtb	r2, r3
 6632 0206 7B68     		ldr	r3, [r7, #4]
 6633 0208 9A71     		strb	r2, [r3, #6]
 6634 020a 0223     		mov	r3, #2
 6635 020c 25E0     		b	.L337
 6636              	.L354:
2922:.\ff/ff.c     **** 					nsect += ofs / SS(fp->fs);
 6637              		.loc 1 2922 0 is_stmt 1
 6638 020e 3B68     		ldr	r3, [r7]
 6639 0210 5B0A     		lsr	r3, r3, #9
 6640 0212 BA69     		ldr	r2, [r7, #24]
 6641 0214 D318     		add	r3, r2, r3
 6642 0216 BB61     		str	r3, [r7, #24]
 6643              	.L340:
2923:.\ff/ff.c     **** 				}
2924:.\ff/ff.c     **** 			}
2925:.\ff/ff.c     **** 		}
2926:.\ff/ff.c     **** 		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
 6644              		.loc 1 2926 0
 6645 0218 7B68     		ldr	r3, [r7, #4]
 6646 021a 9B68     		ldr	r3, [r3, #8]
 6647 021c DB05     		lsl	r3, r3, #23
 6648 021e DB0D     		lsr	r3, r3, #23
 6649 0220 07D0     		beq	.L355
 6650              		.loc 1 2926 0 is_stmt 0 discriminator 1
 6651 0222 7B68     		ldr	r3, [r7, #4]
 6652 0224 9A69     		ldr	r2, [r3, #24]
 6653 0226 BB69     		ldr	r3, [r7, #24]
 6654 0228 9A42     		cmp	r2, r3
 6655 022a 02D0     		beq	.L355
2927:.\ff/ff.c     **** #if !_FS_TINY
2928:.\ff/ff.c     **** #if !_FS_READONLY
2929:.\ff/ff.c     **** 			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
2930:.\ff/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2931:.\ff/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2932:.\ff/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2933:.\ff/ff.c     **** 			}
2934:.\ff/ff.c     **** #endif
2935:.\ff/ff.c     **** 			if (disk_read(fp->fs->drv, fp->buf, nsect, 1) != RES_OK)	/* Fill sector cache */
2936:.\ff/ff.c     **** 				ABORT(fp->fs, FR_DISK_ERR);
2937:.\ff/ff.c     **** #endif
2938:.\ff/ff.c     **** 			fp->dsect = nsect;
 6656              		.loc 1 2938 0 is_stmt 1
 6657 022c 7B68     		ldr	r3, [r7, #4]
 6658 022e BA69     		ldr	r2, [r7, #24]
 6659 0230 9A61     		str	r2, [r3, #24]
 6660              	.L355:
2939:.\ff/ff.c     **** 		}
2940:.\ff/ff.c     **** #if !_FS_READONLY
2941:.\ff/ff.c     **** 		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 170


 6661              		.loc 1 2941 0
 6662 0232 7B68     		ldr	r3, [r7, #4]
 6663 0234 9A68     		ldr	r2, [r3, #8]
 6664 0236 7B68     		ldr	r3, [r7, #4]
 6665 0238 DB68     		ldr	r3, [r3, #12]
 6666 023a 9A42     		cmp	r2, r3
 6667 023c 0AD9     		bls	.L356
2942:.\ff/ff.c     **** 			fp->fsize = fp->fptr;
 6668              		.loc 1 2942 0
 6669 023e 7B68     		ldr	r3, [r7, #4]
 6670 0240 9A68     		ldr	r2, [r3, #8]
 6671 0242 7B68     		ldr	r3, [r7, #4]
 6672 0244 DA60     		str	r2, [r3, #12]
2943:.\ff/ff.c     **** 			fp->flag |= FA__WRITTEN;
 6673              		.loc 1 2943 0
 6674 0246 7B68     		ldr	r3, [r7, #4]
 6675 0248 9B79     		ldrb	r3, [r3, #6]
 6676 024a 2022     		mov	r2, #32
 6677 024c 1343     		orr	r3, r2
 6678 024e DAB2     		uxtb	r2, r3
 6679 0250 7B68     		ldr	r3, [r7, #4]
 6680 0252 9A71     		strb	r2, [r3, #6]
 6681              	.L356:
 6682              	.LBE5:
2944:.\ff/ff.c     **** 		}
2945:.\ff/ff.c     **** #endif
2946:.\ff/ff.c     **** 	}
2947:.\ff/ff.c     **** 
2948:.\ff/ff.c     **** 	LEAVE_FF(fp->fs, res);
 6683              		.loc 1 2948 0
 6684 0254 1723     		mov	r3, #23
 6685 0256 FB18     		add	r3, r7, r3
 6686 0258 1B78     		ldrb	r3, [r3]
 6687              	.L337:
2949:.\ff/ff.c     **** }
 6688              		.loc 1 2949 0
 6689 025a 181C     		mov	r0, r3
 6690 025c BD46     		mov	sp, r7
 6691 025e 09B0     		add	sp, sp, #36
 6692              		@ sp needed
 6693 0260 90BD     		pop	{r4, r7, pc}
 6694              		.cfi_endproc
 6695              	.LFE31:
 6696              		.size	f_lseek, .-f_lseek
 6697 0262 C046     		.section	.text.f_opendir,"ax",%progbits
 6698              		.align	2
 6699              		.global	f_opendir
 6700              		.code	16
 6701              		.thumb_func
 6702              		.type	f_opendir, %function
 6703              	f_opendir:
 6704              	.LFB32:
2950:.\ff/ff.c     **** 
2951:.\ff/ff.c     **** 
2952:.\ff/ff.c     **** 
2953:.\ff/ff.c     **** #if _FS_MINIMIZE <= 1
2954:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 171


2955:.\ff/ff.c     **** /* Create a Directroy Object                                             */
2956:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2957:.\ff/ff.c     **** 
2958:.\ff/ff.c     **** FRESULT f_opendir (
2959:.\ff/ff.c     **** 	DIR *dj,			/* Pointer to directory object to create */
2960:.\ff/ff.c     **** 	const TCHAR *path	/* Pointer to the directory path */
2961:.\ff/ff.c     **** )
2962:.\ff/ff.c     **** {
 6705              		.loc 1 2962 0
 6706              		.cfi_startproc
 6707 0000 90B5     		push	{r4, r7, lr}
 6708              		.cfi_def_cfa_offset 12
 6709              		.cfi_offset 4, -12
 6710              		.cfi_offset 7, -8
 6711              		.cfi_offset 14, -4
 6712 0002 87B0     		sub	sp, sp, #28
 6713              		.cfi_def_cfa_offset 40
 6714 0004 00AF     		add	r7, sp, #0
 6715              		.cfi_def_cfa_register 7
 6716 0006 7860     		str	r0, [r7, #4]
 6717 0008 3960     		str	r1, [r7]
2963:.\ff/ff.c     **** 	FRESULT res;
2964:.\ff/ff.c     **** 	DEF_NAMEBUF;
2965:.\ff/ff.c     **** 
2966:.\ff/ff.c     **** 
2967:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj->fs, 0);
 6718              		.loc 1 2967 0
 6719 000a 7B68     		ldr	r3, [r7, #4]
 6720 000c 1722     		mov	r2, #23
 6721 000e BC18     		add	r4, r7, r2
 6722 0010 3A1C     		mov	r2, r7
 6723 0012 101C     		mov	r0, r2
 6724 0014 191C     		mov	r1, r3
 6725 0016 0022     		mov	r2, #0
 6726 0018 FFF7FEFF 		bl	chk_mounted
 6727 001c 031C     		mov	r3, r0
 6728 001e 2370     		strb	r3, [r4]
2968:.\ff/ff.c     **** 	if (res == FR_OK) {
 6729              		.loc 1 2968 0
 6730 0020 1723     		mov	r3, #23
 6731 0022 FB18     		add	r3, r7, r3
 6732 0024 1B78     		ldrb	r3, [r3]
 6733 0026 002B     		cmp	r3, #0
 6734 0028 5FD1     		bne	.L358
2969:.\ff/ff.c     **** 		INIT_BUF(*dj);
 6735              		.loc 1 2969 0
 6736 002a 7B68     		ldr	r3, [r7, #4]
 6737 002c 0822     		mov	r2, #8
 6738 002e BA18     		add	r2, r7, r2
 6739 0030 9A61     		str	r2, [r3, #24]
2970:.\ff/ff.c     **** 		res = follow_path(dj, path);			/* Follow the path to the directory */
 6740              		.loc 1 2970 0
 6741 0032 3B68     		ldr	r3, [r7]
 6742 0034 1722     		mov	r2, #23
 6743 0036 BC18     		add	r4, r7, r2
 6744 0038 7A68     		ldr	r2, [r7, #4]
 6745 003a 101C     		mov	r0, r2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 172


 6746 003c 191C     		mov	r1, r3
 6747 003e FFF7FEFF 		bl	follow_path
 6748 0042 031C     		mov	r3, r0
 6749 0044 2370     		strb	r3, [r4]
2971:.\ff/ff.c     **** 		FREE_BUF();
2972:.\ff/ff.c     **** 		if (res == FR_OK) {						/* Follow completed */
 6750              		.loc 1 2972 0
 6751 0046 1723     		mov	r3, #23
 6752 0048 FB18     		add	r3, r7, r3
 6753 004a 1B78     		ldrb	r3, [r3]
 6754 004c 002B     		cmp	r3, #0
 6755 004e 43D1     		bne	.L359
2973:.\ff/ff.c     **** 			if (dj->dir) {						/* It is not the root dir */
 6756              		.loc 1 2973 0
 6757 0050 7B68     		ldr	r3, [r7, #4]
 6758 0052 5B69     		ldr	r3, [r3, #20]
 6759 0054 002B     		cmp	r3, #0
 6760 0056 2CD0     		beq	.L360
2974:.\ff/ff.c     **** 				if (dj->dir[DIR_Attr] & AM_DIR) {	/* The object is a directory */
 6761              		.loc 1 2974 0
 6762 0058 7B68     		ldr	r3, [r7, #4]
 6763 005a 5B69     		ldr	r3, [r3, #20]
 6764 005c 0B33     		add	r3, r3, #11
 6765 005e 1B78     		ldrb	r3, [r3]
 6766 0060 1A1C     		mov	r2, r3
 6767 0062 1023     		mov	r3, #16
 6768 0064 1340     		and	r3, r2
 6769 0066 20D0     		beq	.L361
2975:.\ff/ff.c     **** 					dj->sclust = LD_CLUST(dj->dir);
 6770              		.loc 1 2975 0
 6771 0068 7B68     		ldr	r3, [r7, #4]
 6772 006a 5B69     		ldr	r3, [r3, #20]
 6773 006c 1533     		add	r3, r3, #21
 6774 006e 1B78     		ldrb	r3, [r3]
 6775 0070 1B02     		lsl	r3, r3, #8
 6776 0072 9AB2     		uxth	r2, r3
 6777 0074 7B68     		ldr	r3, [r7, #4]
 6778 0076 5B69     		ldr	r3, [r3, #20]
 6779 0078 1433     		add	r3, r3, #20
 6780 007a 1B78     		ldrb	r3, [r3]
 6781 007c 9BB2     		uxth	r3, r3
 6782 007e 1343     		orr	r3, r2
 6783 0080 9BB2     		uxth	r3, r3
 6784 0082 9BB2     		uxth	r3, r3
 6785 0084 1A04     		lsl	r2, r3, #16
 6786 0086 7B68     		ldr	r3, [r7, #4]
 6787 0088 5B69     		ldr	r3, [r3, #20]
 6788 008a 1B33     		add	r3, r3, #27
 6789 008c 1B78     		ldrb	r3, [r3]
 6790 008e 1B02     		lsl	r3, r3, #8
 6791 0090 99B2     		uxth	r1, r3
 6792 0092 7B68     		ldr	r3, [r7, #4]
 6793 0094 5B69     		ldr	r3, [r3, #20]
 6794 0096 1A33     		add	r3, r3, #26
 6795 0098 1B78     		ldrb	r3, [r3]
 6796 009a 9BB2     		uxth	r3, r3
 6797 009c 0B43     		orr	r3, r1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 173


 6798 009e 9BB2     		uxth	r3, r3
 6799 00a0 9BB2     		uxth	r3, r3
 6800 00a2 1A43     		orr	r2, r3
 6801 00a4 7B68     		ldr	r3, [r7, #4]
 6802 00a6 9A60     		str	r2, [r3, #8]
 6803 00a8 03E0     		b	.L360
 6804              	.L361:
2976:.\ff/ff.c     **** 				} else {						/* The object is not a directory */
2977:.\ff/ff.c     **** 					res = FR_NO_PATH;
 6805              		.loc 1 2977 0
 6806 00aa 1723     		mov	r3, #23
 6807 00ac FB18     		add	r3, r7, r3
 6808 00ae 0522     		mov	r2, #5
 6809 00b0 1A70     		strb	r2, [r3]
 6810              	.L360:
2978:.\ff/ff.c     **** 				}
2979:.\ff/ff.c     **** 			}
2980:.\ff/ff.c     **** 			if (res == FR_OK) {
 6811              		.loc 1 2980 0
 6812 00b2 1723     		mov	r3, #23
 6813 00b4 FB18     		add	r3, r7, r3
 6814 00b6 1B78     		ldrb	r3, [r3]
 6815 00b8 002B     		cmp	r3, #0
 6816 00ba 0DD1     		bne	.L359
2981:.\ff/ff.c     **** 				dj->id = dj->fs->id;
 6817              		.loc 1 2981 0
 6818 00bc 7B68     		ldr	r3, [r7, #4]
 6819 00be 1B68     		ldr	r3, [r3]
 6820 00c0 DA88     		ldrh	r2, [r3, #6]
 6821 00c2 7B68     		ldr	r3, [r7, #4]
 6822 00c4 9A80     		strh	r2, [r3, #4]
2982:.\ff/ff.c     **** 				res = dir_sdi(dj, 0);			/* Rewind dir */
 6823              		.loc 1 2982 0
 6824 00c6 1723     		mov	r3, #23
 6825 00c8 FC18     		add	r4, r7, r3
 6826 00ca 7B68     		ldr	r3, [r7, #4]
 6827 00cc 181C     		mov	r0, r3
 6828 00ce 0021     		mov	r1, #0
 6829 00d0 FFF7FEFF 		bl	dir_sdi
 6830 00d4 031C     		mov	r3, r0
 6831 00d6 2370     		strb	r3, [r4]
 6832              	.L359:
2983:.\ff/ff.c     **** 			}
2984:.\ff/ff.c     **** 		}
2985:.\ff/ff.c     **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 6833              		.loc 1 2985 0
 6834 00d8 1723     		mov	r3, #23
 6835 00da FB18     		add	r3, r7, r3
 6836 00dc 1B78     		ldrb	r3, [r3]
 6837 00de 042B     		cmp	r3, #4
 6838 00e0 03D1     		bne	.L358
 6839              		.loc 1 2985 0 is_stmt 0 discriminator 1
 6840 00e2 1723     		mov	r3, #23
 6841 00e4 FB18     		add	r3, r7, r3
 6842 00e6 0522     		mov	r2, #5
 6843 00e8 1A70     		strb	r2, [r3]
 6844              	.L358:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 174


2986:.\ff/ff.c     **** 	}
2987:.\ff/ff.c     **** 
2988:.\ff/ff.c     **** 	LEAVE_FF(dj->fs, res);
 6845              		.loc 1 2988 0 is_stmt 1
 6846 00ea 1723     		mov	r3, #23
 6847 00ec FB18     		add	r3, r7, r3
 6848 00ee 1B78     		ldrb	r3, [r3]
2989:.\ff/ff.c     **** }
 6849              		.loc 1 2989 0
 6850 00f0 181C     		mov	r0, r3
 6851 00f2 BD46     		mov	sp, r7
 6852 00f4 07B0     		add	sp, sp, #28
 6853              		@ sp needed
 6854 00f6 90BD     		pop	{r4, r7, pc}
 6855              		.cfi_endproc
 6856              	.LFE32:
 6857              		.size	f_opendir, .-f_opendir
 6858              		.section	.text.f_readdir,"ax",%progbits
 6859              		.align	2
 6860              		.global	f_readdir
 6861              		.code	16
 6862              		.thumb_func
 6863              		.type	f_readdir, %function
 6864              	f_readdir:
 6865              	.LFB33:
2990:.\ff/ff.c     **** 
2991:.\ff/ff.c     **** 
2992:.\ff/ff.c     **** 
2993:.\ff/ff.c     **** 
2994:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2995:.\ff/ff.c     **** /* Read Directory Entry in Sequense                                      */
2996:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
2997:.\ff/ff.c     **** 
2998:.\ff/ff.c     **** FRESULT f_readdir (
2999:.\ff/ff.c     **** 	DIR *dj,			/* Pointer to the open directory object */
3000:.\ff/ff.c     **** 	FILINFO *fno		/* Pointer to file information to return */
3001:.\ff/ff.c     **** )
3002:.\ff/ff.c     **** {
 6866              		.loc 1 3002 0
 6867              		.cfi_startproc
 6868 0000 90B5     		push	{r4, r7, lr}
 6869              		.cfi_def_cfa_offset 12
 6870              		.cfi_offset 4, -12
 6871              		.cfi_offset 7, -8
 6872              		.cfi_offset 14, -4
 6873 0002 87B0     		sub	sp, sp, #28
 6874              		.cfi_def_cfa_offset 40
 6875 0004 00AF     		add	r7, sp, #0
 6876              		.cfi_def_cfa_register 7
 6877 0006 7860     		str	r0, [r7, #4]
 6878 0008 3960     		str	r1, [r7]
3003:.\ff/ff.c     **** 	FRESULT res;
3004:.\ff/ff.c     **** 	DEF_NAMEBUF;
3005:.\ff/ff.c     **** 
3006:.\ff/ff.c     **** 
3007:.\ff/ff.c     **** 	res = validate(dj->fs, dj->id);			/* Check validity of the object */
 6879              		.loc 1 3007 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 175


 6880 000a 7B68     		ldr	r3, [r7, #4]
 6881 000c 1A68     		ldr	r2, [r3]
 6882 000e 7B68     		ldr	r3, [r7, #4]
 6883 0010 9B88     		ldrh	r3, [r3, #4]
 6884 0012 1721     		mov	r1, #23
 6885 0014 7C18     		add	r4, r7, r1
 6886 0016 101C     		mov	r0, r2
 6887 0018 191C     		mov	r1, r3
 6888 001a FFF7FEFF 		bl	validate
 6889 001e 031C     		mov	r3, r0
 6890 0020 2370     		strb	r3, [r4]
3008:.\ff/ff.c     **** 	if (res == FR_OK) {
 6891              		.loc 1 3008 0
 6892 0022 1723     		mov	r3, #23
 6893 0024 FB18     		add	r3, r7, r3
 6894 0026 1B78     		ldrb	r3, [r3]
 6895 0028 002B     		cmp	r3, #0
 6896 002a 44D1     		bne	.L364
3009:.\ff/ff.c     **** 		if (!fno) {
 6897              		.loc 1 3009 0
 6898 002c 3B68     		ldr	r3, [r7]
 6899 002e 002B     		cmp	r3, #0
 6900 0030 09D1     		bne	.L365
3010:.\ff/ff.c     **** 			res = dir_sdi(dj, 0);			/* Rewind the directory object */
 6901              		.loc 1 3010 0
 6902 0032 1723     		mov	r3, #23
 6903 0034 FC18     		add	r4, r7, r3
 6904 0036 7B68     		ldr	r3, [r7, #4]
 6905 0038 181C     		mov	r0, r3
 6906 003a 0021     		mov	r1, #0
 6907 003c FFF7FEFF 		bl	dir_sdi
 6908 0040 031C     		mov	r3, r0
 6909 0042 2370     		strb	r3, [r4]
 6910 0044 37E0     		b	.L364
 6911              	.L365:
3011:.\ff/ff.c     **** 		} else {
3012:.\ff/ff.c     **** 			INIT_BUF(*dj);
 6912              		.loc 1 3012 0
 6913 0046 7B68     		ldr	r3, [r7, #4]
 6914 0048 0822     		mov	r2, #8
 6915 004a BA18     		add	r2, r7, r2
 6916 004c 9A61     		str	r2, [r3, #24]
3013:.\ff/ff.c     **** 			res = dir_read(dj);				/* Read an directory item */
 6917              		.loc 1 3013 0
 6918 004e 1723     		mov	r3, #23
 6919 0050 FC18     		add	r4, r7, r3
 6920 0052 7B68     		ldr	r3, [r7, #4]
 6921 0054 181C     		mov	r0, r3
 6922 0056 FFF7FEFF 		bl	dir_read
 6923 005a 031C     		mov	r3, r0
 6924 005c 2370     		strb	r3, [r4]
3014:.\ff/ff.c     **** 			if (res == FR_NO_FILE) {		/* Reached end of dir */
 6925              		.loc 1 3014 0
 6926 005e 1723     		mov	r3, #23
 6927 0060 FB18     		add	r3, r7, r3
 6928 0062 1B78     		ldrb	r3, [r3]
 6929 0064 042B     		cmp	r3, #4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 176


 6930 0066 06D1     		bne	.L366
3015:.\ff/ff.c     **** 				dj->sect = 0;
 6931              		.loc 1 3015 0
 6932 0068 7B68     		ldr	r3, [r7, #4]
 6933 006a 0022     		mov	r2, #0
 6934 006c 1A61     		str	r2, [r3, #16]
3016:.\ff/ff.c     **** 				res = FR_OK;
 6935              		.loc 1 3016 0
 6936 006e 1723     		mov	r3, #23
 6937 0070 FB18     		add	r3, r7, r3
 6938 0072 0022     		mov	r2, #0
 6939 0074 1A70     		strb	r2, [r3]
 6940              	.L366:
3017:.\ff/ff.c     **** 			}
3018:.\ff/ff.c     **** 			if (res == FR_OK) {				/* A valid entry is found */
 6941              		.loc 1 3018 0
 6942 0076 1723     		mov	r3, #23
 6943 0078 FB18     		add	r3, r7, r3
 6944 007a 1B78     		ldrb	r3, [r3]
 6945 007c 002B     		cmp	r3, #0
 6946 007e 1AD1     		bne	.L364
3019:.\ff/ff.c     **** 				get_fileinfo(dj, fno);		/* Get the object information */
 6947              		.loc 1 3019 0
 6948 0080 7A68     		ldr	r2, [r7, #4]
 6949 0082 3B68     		ldr	r3, [r7]
 6950 0084 101C     		mov	r0, r2
 6951 0086 191C     		mov	r1, r3
 6952 0088 FFF7FEFF 		bl	get_fileinfo
3020:.\ff/ff.c     **** 				res = dir_next(dj, 0);		/* Increment index for next */
 6953              		.loc 1 3020 0
 6954 008c 1723     		mov	r3, #23
 6955 008e FC18     		add	r4, r7, r3
 6956 0090 7B68     		ldr	r3, [r7, #4]
 6957 0092 181C     		mov	r0, r3
 6958 0094 0021     		mov	r1, #0
 6959 0096 FFF7FEFF 		bl	dir_next
 6960 009a 031C     		mov	r3, r0
 6961 009c 2370     		strb	r3, [r4]
3021:.\ff/ff.c     **** 				if (res == FR_NO_FILE) {
 6962              		.loc 1 3021 0
 6963 009e 1723     		mov	r3, #23
 6964 00a0 FB18     		add	r3, r7, r3
 6965 00a2 1B78     		ldrb	r3, [r3]
 6966 00a4 042B     		cmp	r3, #4
 6967 00a6 06D1     		bne	.L364
3022:.\ff/ff.c     **** 					dj->sect = 0;
 6968              		.loc 1 3022 0
 6969 00a8 7B68     		ldr	r3, [r7, #4]
 6970 00aa 0022     		mov	r2, #0
 6971 00ac 1A61     		str	r2, [r3, #16]
3023:.\ff/ff.c     **** 					res = FR_OK;
 6972              		.loc 1 3023 0
 6973 00ae 1723     		mov	r3, #23
 6974 00b0 FB18     		add	r3, r7, r3
 6975 00b2 0022     		mov	r2, #0
 6976 00b4 1A70     		strb	r2, [r3]
 6977              	.L364:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 177


3024:.\ff/ff.c     **** 				}
3025:.\ff/ff.c     **** 			}
3026:.\ff/ff.c     **** 			FREE_BUF();
3027:.\ff/ff.c     **** 		}
3028:.\ff/ff.c     **** 	}
3029:.\ff/ff.c     **** 
3030:.\ff/ff.c     **** 	LEAVE_FF(dj->fs, res);
 6978              		.loc 1 3030 0
 6979 00b6 1723     		mov	r3, #23
 6980 00b8 FB18     		add	r3, r7, r3
 6981 00ba 1B78     		ldrb	r3, [r3]
3031:.\ff/ff.c     **** }
 6982              		.loc 1 3031 0
 6983 00bc 181C     		mov	r0, r3
 6984 00be BD46     		mov	sp, r7
 6985 00c0 07B0     		add	sp, sp, #28
 6986              		@ sp needed
 6987 00c2 90BD     		pop	{r4, r7, pc}
 6988              		.cfi_endproc
 6989              	.LFE33:
 6990              		.size	f_readdir, .-f_readdir
 6991              		.section	.text.f_stat,"ax",%progbits
 6992              		.align	2
 6993              		.global	f_stat
 6994              		.code	16
 6995              		.thumb_func
 6996              		.type	f_stat, %function
 6997              	f_stat:
 6998              	.LFB34:
3032:.\ff/ff.c     **** 
3033:.\ff/ff.c     **** 
3034:.\ff/ff.c     **** 
3035:.\ff/ff.c     **** #if _FS_MINIMIZE == 0
3036:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3037:.\ff/ff.c     **** /* Get File Status                                                       */
3038:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3039:.\ff/ff.c     **** 
3040:.\ff/ff.c     **** FRESULT f_stat (
3041:.\ff/ff.c     **** 	const TCHAR *path,	/* Pointer to the file path */
3042:.\ff/ff.c     **** 	FILINFO *fno		/* Pointer to file information to return */
3043:.\ff/ff.c     **** )
3044:.\ff/ff.c     **** {
 6999              		.loc 1 3044 0
 7000              		.cfi_startproc
 7001 0000 90B5     		push	{r4, r7, lr}
 7002              		.cfi_def_cfa_offset 12
 7003              		.cfi_offset 4, -12
 7004              		.cfi_offset 7, -8
 7005              		.cfi_offset 14, -4
 7006 0002 8FB0     		sub	sp, sp, #60
 7007              		.cfi_def_cfa_offset 72
 7008 0004 00AF     		add	r7, sp, #0
 7009              		.cfi_def_cfa_register 7
 7010 0006 7860     		str	r0, [r7, #4]
 7011 0008 3960     		str	r1, [r7]
3045:.\ff/ff.c     **** 	FRESULT res;
3046:.\ff/ff.c     **** 	DIR dj;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 178


3047:.\ff/ff.c     **** 	DEF_NAMEBUF;
3048:.\ff/ff.c     **** 
3049:.\ff/ff.c     **** 
3050:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
 7012              		.loc 1 3050 0
 7013 000a 3723     		mov	r3, #55
 7014 000c FC18     		add	r4, r7, r3
 7015 000e 3A1D     		add	r2, r7, #4
 7016 0010 1823     		mov	r3, #24
 7017 0012 FB18     		add	r3, r7, r3
 7018 0014 101C     		mov	r0, r2
 7019 0016 191C     		mov	r1, r3
 7020 0018 0022     		mov	r2, #0
 7021 001a FFF7FEFF 		bl	chk_mounted
 7022 001e 031C     		mov	r3, r0
 7023 0020 2370     		strb	r3, [r4]
3051:.\ff/ff.c     **** 	if (res == FR_OK) {
 7024              		.loc 1 3051 0
 7025 0022 3723     		mov	r3, #55
 7026 0024 FB18     		add	r3, r7, r3
 7027 0026 1B78     		ldrb	r3, [r3]
 7028 0028 002B     		cmp	r3, #0
 7029 002a 25D1     		bne	.L369
3052:.\ff/ff.c     **** 		INIT_BUF(dj);
 7030              		.loc 1 3052 0
 7031 002c 1823     		mov	r3, #24
 7032 002e FB18     		add	r3, r7, r3
 7033 0030 0C22     		mov	r2, #12
 7034 0032 BA18     		add	r2, r7, r2
 7035 0034 9A61     		str	r2, [r3, #24]
3053:.\ff/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 7036              		.loc 1 3053 0
 7037 0036 7B68     		ldr	r3, [r7, #4]
 7038 0038 3722     		mov	r2, #55
 7039 003a BC18     		add	r4, r7, r2
 7040 003c 1822     		mov	r2, #24
 7041 003e BA18     		add	r2, r7, r2
 7042 0040 101C     		mov	r0, r2
 7043 0042 191C     		mov	r1, r3
 7044 0044 FFF7FEFF 		bl	follow_path
 7045 0048 031C     		mov	r3, r0
 7046 004a 2370     		strb	r3, [r4]
3054:.\ff/ff.c     **** 		if (res == FR_OK) {				/* Follow completed */
 7047              		.loc 1 3054 0
 7048 004c 3723     		mov	r3, #55
 7049 004e FB18     		add	r3, r7, r3
 7050 0050 1B78     		ldrb	r3, [r3]
 7051 0052 002B     		cmp	r3, #0
 7052 0054 10D1     		bne	.L369
3055:.\ff/ff.c     **** 			if (dj.dir)		/* Found an object */
 7053              		.loc 1 3055 0
 7054 0056 1823     		mov	r3, #24
 7055 0058 FB18     		add	r3, r7, r3
 7056 005a 5B69     		ldr	r3, [r3, #20]
 7057 005c 002B     		cmp	r3, #0
 7058 005e 07D0     		beq	.L370
3056:.\ff/ff.c     **** 				get_fileinfo(&dj, fno);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 179


 7059              		.loc 1 3056 0
 7060 0060 1823     		mov	r3, #24
 7061 0062 FA18     		add	r2, r7, r3
 7062 0064 3B68     		ldr	r3, [r7]
 7063 0066 101C     		mov	r0, r2
 7064 0068 191C     		mov	r1, r3
 7065 006a FFF7FEFF 		bl	get_fileinfo
 7066 006e 03E0     		b	.L369
 7067              	.L370:
3057:.\ff/ff.c     **** 			else			/* It is root dir */
3058:.\ff/ff.c     **** 				res = FR_INVALID_NAME;
 7068              		.loc 1 3058 0
 7069 0070 3723     		mov	r3, #55
 7070 0072 FB18     		add	r3, r7, r3
 7071 0074 0622     		mov	r2, #6
 7072 0076 1A70     		strb	r2, [r3]
 7073              	.L369:
3059:.\ff/ff.c     **** 		}
3060:.\ff/ff.c     **** 		FREE_BUF();
3061:.\ff/ff.c     **** 	}
3062:.\ff/ff.c     **** 
3063:.\ff/ff.c     **** 	LEAVE_FF(dj.fs, res);
 7074              		.loc 1 3063 0
 7075 0078 3723     		mov	r3, #55
 7076 007a FB18     		add	r3, r7, r3
 7077 007c 1B78     		ldrb	r3, [r3]
3064:.\ff/ff.c     **** }
 7078              		.loc 1 3064 0
 7079 007e 181C     		mov	r0, r3
 7080 0080 BD46     		mov	sp, r7
 7081 0082 0FB0     		add	sp, sp, #60
 7082              		@ sp needed
 7083 0084 90BD     		pop	{r4, r7, pc}
 7084              		.cfi_endproc
 7085              	.LFE34:
 7086              		.size	f_stat, .-f_stat
 7087 0086 C046     		.section	.text.f_getfree,"ax",%progbits
 7088              		.align	2
 7089              		.global	f_getfree
 7090              		.code	16
 7091              		.thumb_func
 7092              		.type	f_getfree, %function
 7093              	f_getfree:
 7094              	.LFB35:
3065:.\ff/ff.c     **** 
3066:.\ff/ff.c     **** 
3067:.\ff/ff.c     **** 
3068:.\ff/ff.c     **** #if !_FS_READONLY
3069:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3070:.\ff/ff.c     **** /* Get Number of Free Clusters                                           */
3071:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3072:.\ff/ff.c     **** 
3073:.\ff/ff.c     **** FRESULT f_getfree (
3074:.\ff/ff.c     **** 	const TCHAR *path,	/* Pointer to the logical drive number (root dir) */
3075:.\ff/ff.c     **** 	DWORD *nclst,		/* Pointer to the variable to return number of free clusters */
3076:.\ff/ff.c     **** 	FATFS **fatfs		/* Pointer to pointer to corresponding file system object to return */
3077:.\ff/ff.c     **** )
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 180


3078:.\ff/ff.c     **** {
 7095              		.loc 1 3078 0
 7096              		.cfi_startproc
 7097 0000 90B5     		push	{r4, r7, lr}
 7098              		.cfi_def_cfa_offset 12
 7099              		.cfi_offset 4, -12
 7100              		.cfi_offset 7, -8
 7101              		.cfi_offset 14, -4
 7102 0002 8DB0     		sub	sp, sp, #52
 7103              		.cfi_def_cfa_offset 64
 7104 0004 00AF     		add	r7, sp, #0
 7105              		.cfi_def_cfa_register 7
 7106 0006 F860     		str	r0, [r7, #12]
 7107 0008 B960     		str	r1, [r7, #8]
 7108 000a 7A60     		str	r2, [r7, #4]
3079:.\ff/ff.c     **** 	FRESULT res;
3080:.\ff/ff.c     **** 	DWORD n, clst, sect, stat;
3081:.\ff/ff.c     **** 	UINT i;
3082:.\ff/ff.c     **** 	BYTE fat, *p;
3083:.\ff/ff.c     **** 
3084:.\ff/ff.c     **** 
3085:.\ff/ff.c     **** 	/* Get drive number */
3086:.\ff/ff.c     **** 	res = chk_mounted(&path, fatfs, 0);
 7109              		.loc 1 3086 0
 7110 000c 2F23     		mov	r3, #47
 7111 000e FC18     		add	r4, r7, r3
 7112 0010 0C23     		mov	r3, #12
 7113 0012 FA18     		add	r2, r7, r3
 7114 0014 7B68     		ldr	r3, [r7, #4]
 7115 0016 101C     		mov	r0, r2
 7116 0018 191C     		mov	r1, r3
 7117 001a 0022     		mov	r2, #0
 7118 001c FFF7FEFF 		bl	chk_mounted
 7119 0020 031C     		mov	r3, r0
 7120 0022 2370     		strb	r3, [r4]
3087:.\ff/ff.c     **** 	if (res == FR_OK) {
 7121              		.loc 1 3087 0
 7122 0024 2F23     		mov	r3, #47
 7123 0026 FB18     		add	r3, r7, r3
 7124 0028 1B78     		ldrb	r3, [r3]
 7125 002a 002B     		cmp	r3, #0
 7126 002c 00D0     		beq	.LCB6637
 7127 002e BEE0     		b	.L373	@long jump
 7128              	.LCB6637:
3088:.\ff/ff.c     **** 		/* If free_clust is valid, return it without full cluster scan */
3089:.\ff/ff.c     **** 		if ((*fatfs)->free_clust <= (*fatfs)->n_fatent - 2) {
 7129              		.loc 1 3089 0
 7130 0030 7B68     		ldr	r3, [r7, #4]
 7131 0032 1B68     		ldr	r3, [r3]
 7132 0034 1A69     		ldr	r2, [r3, #16]
 7133 0036 7B68     		ldr	r3, [r7, #4]
 7134 0038 1B68     		ldr	r3, [r3]
 7135 003a 9B69     		ldr	r3, [r3, #24]
 7136 003c 023B     		sub	r3, r3, #2
 7137 003e 9A42     		cmp	r2, r3
 7138 0040 05D8     		bhi	.L374
3090:.\ff/ff.c     **** 			*nclst = (*fatfs)->free_clust;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 181


 7139              		.loc 1 3090 0
 7140 0042 7B68     		ldr	r3, [r7, #4]
 7141 0044 1B68     		ldr	r3, [r3]
 7142 0046 1A69     		ldr	r2, [r3, #16]
 7143 0048 BB68     		ldr	r3, [r7, #8]
 7144 004a 1A60     		str	r2, [r3]
 7145 004c AFE0     		b	.L373
 7146              	.L374:
3091:.\ff/ff.c     **** 		} else {
3092:.\ff/ff.c     **** 			/* Get number of free clusters */
3093:.\ff/ff.c     **** 			fat = (*fatfs)->fs_type;
 7147              		.loc 1 3093 0
 7148 004e 7B68     		ldr	r3, [r7, #4]
 7149 0050 1A68     		ldr	r2, [r3]
 7150 0052 1723     		mov	r3, #23
 7151 0054 FB18     		add	r3, r7, r3
 7152 0056 1278     		ldrb	r2, [r2]
 7153 0058 1A70     		strb	r2, [r3]
3094:.\ff/ff.c     **** 			n = 0;
 7154              		.loc 1 3094 0
 7155 005a 0023     		mov	r3, #0
 7156 005c BB62     		str	r3, [r7, #40]
3095:.\ff/ff.c     **** 			if (fat == FS_FAT12) {
 7157              		.loc 1 3095 0
 7158 005e 1723     		mov	r3, #23
 7159 0060 FB18     		add	r3, r7, r3
 7160 0062 1B78     		ldrb	r3, [r3]
 7161 0064 012B     		cmp	r3, #1
 7162 0066 2BD1     		bne	.L375
3096:.\ff/ff.c     **** 				clst = 2;
 7163              		.loc 1 3096 0
 7164 0068 0223     		mov	r3, #2
 7165 006a 7B62     		str	r3, [r7, #36]
 7166              	.L380:
3097:.\ff/ff.c     **** 				do {
3098:.\ff/ff.c     **** 					stat = get_fat(*fatfs, clst);
 7167              		.loc 1 3098 0
 7168 006c 7B68     		ldr	r3, [r7, #4]
 7169 006e 1A68     		ldr	r2, [r3]
 7170 0070 7B6A     		ldr	r3, [r7, #36]
 7171 0072 101C     		mov	r0, r2
 7172 0074 191C     		mov	r1, r3
 7173 0076 FFF7FEFF 		bl	get_fat
 7174 007a 031C     		mov	r3, r0
 7175 007c 3B61     		str	r3, [r7, #16]
3099:.\ff/ff.c     **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 7176              		.loc 1 3099 0
 7177 007e 3B69     		ldr	r3, [r7, #16]
 7178 0080 0133     		add	r3, r3, #1
 7179 0082 04D1     		bne	.L376
 7180              		.loc 1 3099 0 is_stmt 0 discriminator 1
 7181 0084 2F23     		mov	r3, #47
 7182 0086 FB18     		add	r3, r7, r3
 7183 0088 0122     		mov	r2, #1
 7184 008a 1A70     		strb	r2, [r3]
 7185 008c 17E0     		b	.L377
 7186              	.L376:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 182


3100:.\ff/ff.c     **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 7187              		.loc 1 3100 0 is_stmt 1
 7188 008e 3B69     		ldr	r3, [r7, #16]
 7189 0090 012B     		cmp	r3, #1
 7190 0092 04D1     		bne	.L378
 7191              		.loc 1 3100 0 is_stmt 0 discriminator 1
 7192 0094 2F23     		mov	r3, #47
 7193 0096 FB18     		add	r3, r7, r3
 7194 0098 0222     		mov	r2, #2
 7195 009a 1A70     		strb	r2, [r3]
 7196 009c 0FE0     		b	.L377
 7197              	.L378:
3101:.\ff/ff.c     **** 					if (stat == 0) n++;
 7198              		.loc 1 3101 0 is_stmt 1
 7199 009e 3B69     		ldr	r3, [r7, #16]
 7200 00a0 002B     		cmp	r3, #0
 7201 00a2 02D1     		bne	.L379
 7202              		.loc 1 3101 0 is_stmt 0 discriminator 1
 7203 00a4 BB6A     		ldr	r3, [r7, #40]
 7204 00a6 0133     		add	r3, r3, #1
 7205 00a8 BB62     		str	r3, [r7, #40]
 7206              	.L379:
3102:.\ff/ff.c     **** 				} while (++clst < (*fatfs)->n_fatent);
 7207              		.loc 1 3102 0 is_stmt 1
 7208 00aa 7B6A     		ldr	r3, [r7, #36]
 7209 00ac 0133     		add	r3, r3, #1
 7210 00ae 7B62     		str	r3, [r7, #36]
 7211 00b0 7B68     		ldr	r3, [r7, #4]
 7212 00b2 1B68     		ldr	r3, [r3]
 7213 00b4 9B69     		ldr	r3, [r3, #24]
 7214 00b6 7A6A     		ldr	r2, [r7, #36]
 7215 00b8 9A42     		cmp	r2, r3
 7216 00ba D7D3     		bcc	.L380
 7217 00bc 67E0     		b	.L381
 7218              	.L377:
 7219 00be 66E0     		b	.L381
 7220              	.L375:
3103:.\ff/ff.c     **** 			} else {
3104:.\ff/ff.c     **** 				clst = (*fatfs)->n_fatent;
 7221              		.loc 1 3104 0
 7222 00c0 7B68     		ldr	r3, [r7, #4]
 7223 00c2 1B68     		ldr	r3, [r3]
 7224 00c4 9B69     		ldr	r3, [r3, #24]
 7225 00c6 7B62     		str	r3, [r7, #36]
3105:.\ff/ff.c     **** 				sect = (*fatfs)->fatbase;
 7226              		.loc 1 3105 0
 7227 00c8 7B68     		ldr	r3, [r7, #4]
 7228 00ca 1B68     		ldr	r3, [r3]
 7229 00cc 1B6A     		ldr	r3, [r3, #32]
 7230 00ce 3B62     		str	r3, [r7, #32]
3106:.\ff/ff.c     **** 				i = 0; p = 0;
 7231              		.loc 1 3106 0
 7232 00d0 0023     		mov	r3, #0
 7233 00d2 FB61     		str	r3, [r7, #28]
 7234 00d4 0023     		mov	r3, #0
 7235 00d6 BB61     		str	r3, [r7, #24]
 7236              	.L388:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 183


3107:.\ff/ff.c     **** 				do {
3108:.\ff/ff.c     **** 					if (!i) {
 7237              		.loc 1 3108 0
 7238 00d8 FB69     		ldr	r3, [r7, #28]
 7239 00da 002B     		cmp	r3, #0
 7240 00dc 19D1     		bne	.L382
3109:.\ff/ff.c     **** 						res = move_window(*fatfs, sect++);
 7241              		.loc 1 3109 0
 7242 00de 7B68     		ldr	r3, [r7, #4]
 7243 00e0 1968     		ldr	r1, [r3]
 7244 00e2 3B6A     		ldr	r3, [r7, #32]
 7245 00e4 5A1C     		add	r2, r3, #1
 7246 00e6 3A62     		str	r2, [r7, #32]
 7247 00e8 2F22     		mov	r2, #47
 7248 00ea BC18     		add	r4, r7, r2
 7249 00ec 081C     		mov	r0, r1
 7250 00ee 191C     		mov	r1, r3
 7251 00f0 FFF7FEFF 		bl	move_window
 7252 00f4 031C     		mov	r3, r0
 7253 00f6 2370     		strb	r3, [r4]
3110:.\ff/ff.c     **** 						if (res != FR_OK) break;
 7254              		.loc 1 3110 0
 7255 00f8 2F23     		mov	r3, #47
 7256 00fa FB18     		add	r3, r7, r3
 7257 00fc 1B78     		ldrb	r3, [r3]
 7258 00fe 002B     		cmp	r3, #0
 7259 0100 00D0     		beq	.L383
 7260 0102 44E0     		b	.L381
 7261              	.L383:
3111:.\ff/ff.c     **** 						p = (*fatfs)->win;
 7262              		.loc 1 3111 0
 7263 0104 7B68     		ldr	r3, [r7, #4]
 7264 0106 1B68     		ldr	r3, [r3]
 7265 0108 3033     		add	r3, r3, #48
 7266 010a BB61     		str	r3, [r7, #24]
3112:.\ff/ff.c     **** 						i = SS(*fatfs);
 7267              		.loc 1 3112 0
 7268 010c 8023     		mov	r3, #128
 7269 010e 9B00     		lsl	r3, r3, #2
 7270 0110 FB61     		str	r3, [r7, #28]
 7271              	.L382:
3113:.\ff/ff.c     **** 					}
3114:.\ff/ff.c     **** 					if (fat == FS_FAT16) {
 7272              		.loc 1 3114 0
 7273 0112 1723     		mov	r3, #23
 7274 0114 FB18     		add	r3, r7, r3
 7275 0116 1B78     		ldrb	r3, [r3]
 7276 0118 022B     		cmp	r3, #2
 7277 011a 15D1     		bne	.L384
3115:.\ff/ff.c     **** 						if (LD_WORD(p) == 0) n++;
 7278              		.loc 1 3115 0
 7279 011c BB69     		ldr	r3, [r7, #24]
 7280 011e 0133     		add	r3, r3, #1
 7281 0120 1B78     		ldrb	r3, [r3]
 7282 0122 1B02     		lsl	r3, r3, #8
 7283 0124 9AB2     		uxth	r2, r3
 7284 0126 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 184


 7285 0128 1B78     		ldrb	r3, [r3]
 7286 012a 9BB2     		uxth	r3, r3
 7287 012c 1343     		orr	r3, r2
 7288 012e 9BB2     		uxth	r3, r3
 7289 0130 002B     		cmp	r3, #0
 7290 0132 02D1     		bne	.L385
 7291              		.loc 1 3115 0 is_stmt 0 discriminator 1
 7292 0134 BB6A     		ldr	r3, [r7, #40]
 7293 0136 0133     		add	r3, r3, #1
 7294 0138 BB62     		str	r3, [r7, #40]
 7295              	.L385:
3116:.\ff/ff.c     **** 						p += 2; i -= 2;
 7296              		.loc 1 3116 0 is_stmt 1
 7297 013a BB69     		ldr	r3, [r7, #24]
 7298 013c 0233     		add	r3, r3, #2
 7299 013e BB61     		str	r3, [r7, #24]
 7300 0140 FB69     		ldr	r3, [r7, #28]
 7301 0142 023B     		sub	r3, r3, #2
 7302 0144 FB61     		str	r3, [r7, #28]
 7303 0146 1CE0     		b	.L386
 7304              	.L384:
3117:.\ff/ff.c     **** 					} else {
3118:.\ff/ff.c     **** 						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
 7305              		.loc 1 3118 0
 7306 0148 BB69     		ldr	r3, [r7, #24]
 7307 014a 0333     		add	r3, r3, #3
 7308 014c 1B78     		ldrb	r3, [r3]
 7309 014e 1A06     		lsl	r2, r3, #24
 7310 0150 BB69     		ldr	r3, [r7, #24]
 7311 0152 0233     		add	r3, r3, #2
 7312 0154 1B78     		ldrb	r3, [r3]
 7313 0156 1B04     		lsl	r3, r3, #16
 7314 0158 1343     		orr	r3, r2
 7315 015a BA69     		ldr	r2, [r7, #24]
 7316 015c 0132     		add	r2, r2, #1
 7317 015e 1278     		ldrb	r2, [r2]
 7318 0160 1202     		lsl	r2, r2, #8
 7319 0162 1343     		orr	r3, r2
 7320 0164 BA69     		ldr	r2, [r7, #24]
 7321 0166 1278     		ldrb	r2, [r2]
 7322 0168 1343     		orr	r3, r2
 7323 016a 1B01     		lsl	r3, r3, #4
 7324 016c 1B09     		lsr	r3, r3, #4
 7325 016e 02D1     		bne	.L387
 7326              		.loc 1 3118 0 is_stmt 0 discriminator 1
 7327 0170 BB6A     		ldr	r3, [r7, #40]
 7328 0172 0133     		add	r3, r3, #1
 7329 0174 BB62     		str	r3, [r7, #40]
 7330              	.L387:
3119:.\ff/ff.c     **** 						p += 4; i -= 4;
 7331              		.loc 1 3119 0 is_stmt 1
 7332 0176 BB69     		ldr	r3, [r7, #24]
 7333 0178 0433     		add	r3, r3, #4
 7334 017a BB61     		str	r3, [r7, #24]
 7335 017c FB69     		ldr	r3, [r7, #28]
 7336 017e 043B     		sub	r3, r3, #4
 7337 0180 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 185


 7338              	.L386:
3120:.\ff/ff.c     **** 					}
3121:.\ff/ff.c     **** 				} while (--clst);
 7339              		.loc 1 3121 0
 7340 0182 7B6A     		ldr	r3, [r7, #36]
 7341 0184 013B     		sub	r3, r3, #1
 7342 0186 7B62     		str	r3, [r7, #36]
 7343 0188 7B6A     		ldr	r3, [r7, #36]
 7344 018a 002B     		cmp	r3, #0
 7345 018c A4D1     		bne	.L388
 7346              	.L381:
3122:.\ff/ff.c     **** 			}
3123:.\ff/ff.c     **** 			(*fatfs)->free_clust = n;
 7347              		.loc 1 3123 0
 7348 018e 7B68     		ldr	r3, [r7, #4]
 7349 0190 1B68     		ldr	r3, [r3]
 7350 0192 BA6A     		ldr	r2, [r7, #40]
 7351 0194 1A61     		str	r2, [r3, #16]
3124:.\ff/ff.c     **** 			if (fat == FS_FAT32) (*fatfs)->fsi_flag = 1;
 7352              		.loc 1 3124 0
 7353 0196 1723     		mov	r3, #23
 7354 0198 FB18     		add	r3, r7, r3
 7355 019a 1B78     		ldrb	r3, [r3]
 7356 019c 032B     		cmp	r3, #3
 7357 019e 03D1     		bne	.L389
 7358              		.loc 1 3124 0 is_stmt 0 discriminator 1
 7359 01a0 7B68     		ldr	r3, [r7, #4]
 7360 01a2 1B68     		ldr	r3, [r3]
 7361 01a4 0122     		mov	r2, #1
 7362 01a6 5A71     		strb	r2, [r3, #5]
 7363              	.L389:
3125:.\ff/ff.c     **** 			*nclst = n;
 7364              		.loc 1 3125 0 is_stmt 1
 7365 01a8 BB68     		ldr	r3, [r7, #8]
 7366 01aa BA6A     		ldr	r2, [r7, #40]
 7367 01ac 1A60     		str	r2, [r3]
 7368              	.L373:
3126:.\ff/ff.c     **** 		}
3127:.\ff/ff.c     **** 	}
3128:.\ff/ff.c     **** 	LEAVE_FF(*fatfs, res);
 7369              		.loc 1 3128 0
 7370 01ae 2F23     		mov	r3, #47
 7371 01b0 FB18     		add	r3, r7, r3
 7372 01b2 1B78     		ldrb	r3, [r3]
3129:.\ff/ff.c     **** }
 7373              		.loc 1 3129 0
 7374 01b4 181C     		mov	r0, r3
 7375 01b6 BD46     		mov	sp, r7
 7376 01b8 0DB0     		add	sp, sp, #52
 7377              		@ sp needed
 7378 01ba 90BD     		pop	{r4, r7, pc}
 7379              		.cfi_endproc
 7380              	.LFE35:
 7381              		.size	f_getfree, .-f_getfree
 7382              		.section	.text.f_truncate,"ax",%progbits
 7383              		.align	2
 7384              		.global	f_truncate
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 186


 7385              		.code	16
 7386              		.thumb_func
 7387              		.type	f_truncate, %function
 7388              	f_truncate:
 7389              	.LFB36:
3130:.\ff/ff.c     **** 
3131:.\ff/ff.c     **** 
3132:.\ff/ff.c     **** 
3133:.\ff/ff.c     **** 
3134:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3135:.\ff/ff.c     **** /* Truncate File                                                         */
3136:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3137:.\ff/ff.c     **** 
3138:.\ff/ff.c     **** FRESULT f_truncate (
3139:.\ff/ff.c     **** 	FIL *fp		/* Pointer to the file object */
3140:.\ff/ff.c     **** )
3141:.\ff/ff.c     **** {
 7390              		.loc 1 3141 0
 7391              		.cfi_startproc
 7392 0000 B0B5     		push	{r4, r5, r7, lr}
 7393              		.cfi_def_cfa_offset 16
 7394              		.cfi_offset 4, -16
 7395              		.cfi_offset 5, -12
 7396              		.cfi_offset 7, -8
 7397              		.cfi_offset 14, -4
 7398 0002 84B0     		sub	sp, sp, #16
 7399              		.cfi_def_cfa_offset 32
 7400 0004 00AF     		add	r7, sp, #0
 7401              		.cfi_def_cfa_register 7
 7402 0006 7860     		str	r0, [r7, #4]
3142:.\ff/ff.c     **** 	FRESULT res;
3143:.\ff/ff.c     **** 	DWORD ncl;
3144:.\ff/ff.c     **** 
3145:.\ff/ff.c     **** 
3146:.\ff/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 7403              		.loc 1 3146 0
 7404 0008 7B68     		ldr	r3, [r7, #4]
 7405 000a 1A68     		ldr	r2, [r3]
 7406 000c 7B68     		ldr	r3, [r7, #4]
 7407 000e 9B88     		ldrh	r3, [r3, #4]
 7408 0010 0F21     		mov	r1, #15
 7409 0012 7C18     		add	r4, r7, r1
 7410 0014 101C     		mov	r0, r2
 7411 0016 191C     		mov	r1, r3
 7412 0018 FFF7FEFF 		bl	validate
 7413 001c 031C     		mov	r3, r0
 7414 001e 2370     		strb	r3, [r4]
3147:.\ff/ff.c     **** 	if (res == FR_OK) {
 7415              		.loc 1 3147 0
 7416 0020 0F23     		mov	r3, #15
 7417 0022 FB18     		add	r3, r7, r3
 7418 0024 1B78     		ldrb	r3, [r3]
 7419 0026 002B     		cmp	r3, #0
 7420 0028 14D1     		bne	.L392
3148:.\ff/ff.c     **** 		if (fp->flag & FA__ERROR) {			/* Check abort flag */
 7421              		.loc 1 3148 0
 7422 002a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 187


 7423 002c 9B79     		ldrb	r3, [r3, #6]
 7424 002e DBB2     		uxtb	r3, r3
 7425 0030 5BB2     		sxtb	r3, r3
 7426 0032 002B     		cmp	r3, #0
 7427 0034 04DA     		bge	.L393
3149:.\ff/ff.c     **** 			res = FR_INT_ERR;
 7428              		.loc 1 3149 0
 7429 0036 0F23     		mov	r3, #15
 7430 0038 FB18     		add	r3, r7, r3
 7431 003a 0222     		mov	r2, #2
 7432 003c 1A70     		strb	r2, [r3]
 7433 003e 09E0     		b	.L392
 7434              	.L393:
3150:.\ff/ff.c     **** 		} else {
3151:.\ff/ff.c     **** 			if (!(fp->flag & FA_WRITE))		/* Check access mode */
 7435              		.loc 1 3151 0
 7436 0040 7B68     		ldr	r3, [r7, #4]
 7437 0042 9B79     		ldrb	r3, [r3, #6]
 7438 0044 1A1C     		mov	r2, r3
 7439 0046 0223     		mov	r3, #2
 7440 0048 1340     		and	r3, r2
 7441 004a 03D1     		bne	.L392
3152:.\ff/ff.c     **** 				res = FR_DENIED;
 7442              		.loc 1 3152 0
 7443 004c 0F23     		mov	r3, #15
 7444 004e FB18     		add	r3, r7, r3
 7445 0050 0722     		mov	r2, #7
 7446 0052 1A70     		strb	r2, [r3]
 7447              	.L392:
3153:.\ff/ff.c     **** 		}
3154:.\ff/ff.c     **** 	}
3155:.\ff/ff.c     **** 	if (res == FR_OK) {
 7448              		.loc 1 3155 0
 7449 0054 0F23     		mov	r3, #15
 7450 0056 FB18     		add	r3, r7, r3
 7451 0058 1B78     		ldrb	r3, [r3]
 7452 005a 002B     		cmp	r3, #0
 7453 005c 00D0     		beq	.LCB6945
 7454 005e 76E0     		b	.L394	@long jump
 7455              	.LCB6945:
3156:.\ff/ff.c     **** 		if (fp->fsize > fp->fptr) {
 7456              		.loc 1 3156 0
 7457 0060 7B68     		ldr	r3, [r7, #4]
 7458 0062 DA68     		ldr	r2, [r3, #12]
 7459 0064 7B68     		ldr	r3, [r7, #4]
 7460 0066 9B68     		ldr	r3, [r3, #8]
 7461 0068 9A42     		cmp	r2, r3
 7462 006a 63D9     		bls	.L395
3157:.\ff/ff.c     **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
 7463              		.loc 1 3157 0
 7464 006c 7B68     		ldr	r3, [r7, #4]
 7465 006e 9A68     		ldr	r2, [r3, #8]
 7466 0070 7B68     		ldr	r3, [r7, #4]
 7467 0072 DA60     		str	r2, [r3, #12]
3158:.\ff/ff.c     **** 			fp->flag |= FA__WRITTEN;
 7468              		.loc 1 3158 0
 7469 0074 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 188


 7470 0076 9B79     		ldrb	r3, [r3, #6]
 7471 0078 2022     		mov	r2, #32
 7472 007a 1343     		orr	r3, r2
 7473 007c DAB2     		uxtb	r2, r3
 7474 007e 7B68     		ldr	r3, [r7, #4]
 7475 0080 9A71     		strb	r2, [r3, #6]
3159:.\ff/ff.c     **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 7476              		.loc 1 3159 0
 7477 0082 7B68     		ldr	r3, [r7, #4]
 7478 0084 9B68     		ldr	r3, [r3, #8]
 7479 0086 002B     		cmp	r3, #0
 7480 0088 0FD1     		bne	.L396
3160:.\ff/ff.c     **** 				res = remove_chain(fp->fs, fp->sclust);
 7481              		.loc 1 3160 0
 7482 008a 7B68     		ldr	r3, [r7, #4]
 7483 008c 1A68     		ldr	r2, [r3]
 7484 008e 7B68     		ldr	r3, [r7, #4]
 7485 0090 1B69     		ldr	r3, [r3, #16]
 7486 0092 0F21     		mov	r1, #15
 7487 0094 7C18     		add	r4, r7, r1
 7488 0096 101C     		mov	r0, r2
 7489 0098 191C     		mov	r1, r3
 7490 009a FFF7FEFF 		bl	remove_chain
 7491 009e 031C     		mov	r3, r0
 7492 00a0 2370     		strb	r3, [r4]
3161:.\ff/ff.c     **** 				fp->sclust = 0;
 7493              		.loc 1 3161 0
 7494 00a2 7B68     		ldr	r3, [r7, #4]
 7495 00a4 0022     		mov	r2, #0
 7496 00a6 1A61     		str	r2, [r3, #16]
 7497 00a8 44E0     		b	.L395
 7498              	.L396:
3162:.\ff/ff.c     **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
3163:.\ff/ff.c     **** 				ncl = get_fat(fp->fs, fp->clust);
 7499              		.loc 1 3163 0
 7500 00aa 7B68     		ldr	r3, [r7, #4]
 7501 00ac 1A68     		ldr	r2, [r3]
 7502 00ae 7B68     		ldr	r3, [r7, #4]
 7503 00b0 5B69     		ldr	r3, [r3, #20]
 7504 00b2 101C     		mov	r0, r2
 7505 00b4 191C     		mov	r1, r3
 7506 00b6 FFF7FEFF 		bl	get_fat
 7507 00ba 031C     		mov	r3, r0
 7508 00bc BB60     		str	r3, [r7, #8]
3164:.\ff/ff.c     **** 				res = FR_OK;
 7509              		.loc 1 3164 0
 7510 00be 0F23     		mov	r3, #15
 7511 00c0 FB18     		add	r3, r7, r3
 7512 00c2 0022     		mov	r2, #0
 7513 00c4 1A70     		strb	r2, [r3]
3165:.\ff/ff.c     **** 				if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7514              		.loc 1 3165 0
 7515 00c6 BB68     		ldr	r3, [r7, #8]
 7516 00c8 0133     		add	r3, r3, #1
 7517 00ca 03D1     		bne	.L397
 7518              		.loc 1 3165 0 is_stmt 0 discriminator 1
 7519 00cc 0F23     		mov	r3, #15
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 189


 7520 00ce FB18     		add	r3, r7, r3
 7521 00d0 0122     		mov	r2, #1
 7522 00d2 1A70     		strb	r2, [r3]
 7523              	.L397:
3166:.\ff/ff.c     **** 				if (ncl == 1) res = FR_INT_ERR;
 7524              		.loc 1 3166 0 is_stmt 1
 7525 00d4 BB68     		ldr	r3, [r7, #8]
 7526 00d6 012B     		cmp	r3, #1
 7527 00d8 03D1     		bne	.L398
 7528              		.loc 1 3166 0 is_stmt 0 discriminator 1
 7529 00da 0F23     		mov	r3, #15
 7530 00dc FB18     		add	r3, r7, r3
 7531 00de 0222     		mov	r2, #2
 7532 00e0 1A70     		strb	r2, [r3]
 7533              	.L398:
3167:.\ff/ff.c     **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 7534              		.loc 1 3167 0 is_stmt 1
 7535 00e2 0F23     		mov	r3, #15
 7536 00e4 FB18     		add	r3, r7, r3
 7537 00e6 1B78     		ldrb	r3, [r3]
 7538 00e8 002B     		cmp	r3, #0
 7539 00ea 23D1     		bne	.L395
 7540              		.loc 1 3167 0 is_stmt 0 discriminator 1
 7541 00ec 7B68     		ldr	r3, [r7, #4]
 7542 00ee 1B68     		ldr	r3, [r3]
 7543 00f0 9A69     		ldr	r2, [r3, #24]
 7544 00f2 BB68     		ldr	r3, [r7, #8]
 7545 00f4 9A42     		cmp	r2, r3
 7546 00f6 1DD9     		bls	.L395
3168:.\ff/ff.c     **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 7547              		.loc 1 3168 0 is_stmt 1
 7548 00f8 7B68     		ldr	r3, [r7, #4]
 7549 00fa 1A68     		ldr	r2, [r3]
 7550 00fc 7B68     		ldr	r3, [r7, #4]
 7551 00fe 5B69     		ldr	r3, [r3, #20]
 7552 0100 0F21     		mov	r1, #15
 7553 0102 7C18     		add	r4, r7, r1
 7554 0104 154D     		ldr	r5, .L400
 7555 0106 101C     		mov	r0, r2
 7556 0108 191C     		mov	r1, r3
 7557 010a 2A1C     		mov	r2, r5
 7558 010c FFF7FEFF 		bl	put_fat
 7559 0110 031C     		mov	r3, r0
 7560 0112 2370     		strb	r3, [r4]
3169:.\ff/ff.c     **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 7561              		.loc 1 3169 0
 7562 0114 0F23     		mov	r3, #15
 7563 0116 FB18     		add	r3, r7, r3
 7564 0118 1B78     		ldrb	r3, [r3]
 7565 011a 002B     		cmp	r3, #0
 7566 011c 0AD1     		bne	.L395
 7567              		.loc 1 3169 0 is_stmt 0 discriminator 1
 7568 011e 7B68     		ldr	r3, [r7, #4]
 7569 0120 1A68     		ldr	r2, [r3]
 7570 0122 0F23     		mov	r3, #15
 7571 0124 FC18     		add	r4, r7, r3
 7572 0126 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 190


 7573 0128 101C     		mov	r0, r2
 7574 012a 191C     		mov	r1, r3
 7575 012c FFF7FEFF 		bl	remove_chain
 7576 0130 031C     		mov	r3, r0
 7577 0132 2370     		strb	r3, [r4]
 7578              	.L395:
3170:.\ff/ff.c     **** 				}
3171:.\ff/ff.c     **** 			}
3172:.\ff/ff.c     **** 		}
3173:.\ff/ff.c     **** 		if (res != FR_OK) fp->flag |= FA__ERROR;
 7579              		.loc 1 3173 0 is_stmt 1
 7580 0134 0F23     		mov	r3, #15
 7581 0136 FB18     		add	r3, r7, r3
 7582 0138 1B78     		ldrb	r3, [r3]
 7583 013a 002B     		cmp	r3, #0
 7584 013c 07D0     		beq	.L394
 7585              		.loc 1 3173 0 is_stmt 0 discriminator 1
 7586 013e 7B68     		ldr	r3, [r7, #4]
 7587 0140 9B79     		ldrb	r3, [r3, #6]
 7588 0142 8022     		mov	r2, #128
 7589 0144 5242     		neg	r2, r2
 7590 0146 1343     		orr	r3, r2
 7591 0148 DAB2     		uxtb	r2, r3
 7592 014a 7B68     		ldr	r3, [r7, #4]
 7593 014c 9A71     		strb	r2, [r3, #6]
 7594              	.L394:
3174:.\ff/ff.c     **** 	}
3175:.\ff/ff.c     **** 
3176:.\ff/ff.c     **** 	LEAVE_FF(fp->fs, res);
 7595              		.loc 1 3176 0 is_stmt 1
 7596 014e 0F23     		mov	r3, #15
 7597 0150 FB18     		add	r3, r7, r3
 7598 0152 1B78     		ldrb	r3, [r3]
3177:.\ff/ff.c     **** }
 7599              		.loc 1 3177 0
 7600 0154 181C     		mov	r0, r3
 7601 0156 BD46     		mov	sp, r7
 7602 0158 04B0     		add	sp, sp, #16
 7603              		@ sp needed
 7604 015a B0BD     		pop	{r4, r5, r7, pc}
 7605              	.L401:
 7606              		.align	2
 7607              	.L400:
 7608 015c FFFFFF0F 		.word	268435455
 7609              		.cfi_endproc
 7610              	.LFE36:
 7611              		.size	f_truncate, .-f_truncate
 7612              		.section	.text.f_unlink,"ax",%progbits
 7613              		.align	2
 7614              		.global	f_unlink
 7615              		.code	16
 7616              		.thumb_func
 7617              		.type	f_unlink, %function
 7618              	f_unlink:
 7619              	.LFB37:
3178:.\ff/ff.c     **** 
3179:.\ff/ff.c     **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 191


3180:.\ff/ff.c     **** 
3181:.\ff/ff.c     **** 
3182:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3183:.\ff/ff.c     **** /* Delete a File or Directory                                            */
3184:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3185:.\ff/ff.c     **** 
3186:.\ff/ff.c     **** FRESULT f_unlink (
3187:.\ff/ff.c     **** 	const TCHAR *path		/* Pointer to the file or directory path */
3188:.\ff/ff.c     **** )
3189:.\ff/ff.c     **** {
 7620              		.loc 1 3189 0
 7621              		.cfi_startproc
 7622 0000 90B5     		push	{r4, r7, lr}
 7623              		.cfi_def_cfa_offset 12
 7624              		.cfi_offset 4, -12
 7625              		.cfi_offset 7, -8
 7626              		.cfi_offset 14, -4
 7627 0002 97B0     		sub	sp, sp, #92
 7628              		.cfi_def_cfa_offset 104
 7629 0004 00AF     		add	r7, sp, #0
 7630              		.cfi_def_cfa_register 7
 7631 0006 7860     		str	r0, [r7, #4]
3190:.\ff/ff.c     **** 	FRESULT res;
3191:.\ff/ff.c     **** 	DIR dj, sdj;
3192:.\ff/ff.c     **** 	BYTE *dir;
3193:.\ff/ff.c     **** 	DWORD dclst;
3194:.\ff/ff.c     **** 	DEF_NAMEBUF;
3195:.\ff/ff.c     **** 
3196:.\ff/ff.c     **** 
3197:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 7632              		.loc 1 3197 0
 7633 0008 5723     		mov	r3, #87
 7634 000a FC18     		add	r4, r7, r3
 7635 000c 3A1D     		add	r2, r7, #4
 7636 000e 3023     		mov	r3, #48
 7637 0010 FB18     		add	r3, r7, r3
 7638 0012 101C     		mov	r0, r2
 7639 0014 191C     		mov	r1, r3
 7640 0016 0122     		mov	r2, #1
 7641 0018 FFF7FEFF 		bl	chk_mounted
 7642 001c 031C     		mov	r3, r0
 7643 001e 2370     		strb	r3, [r4]
3198:.\ff/ff.c     **** 	if (res == FR_OK) {
 7644              		.loc 1 3198 0
 7645 0020 5723     		mov	r3, #87
 7646 0022 FB18     		add	r3, r7, r3
 7647 0024 1B78     		ldrb	r3, [r3]
 7648 0026 002B     		cmp	r3, #0
 7649 0028 00D0     		beq	.LCB7123
 7650 002a C3E0     		b	.L403	@long jump
 7651              	.LCB7123:
3199:.\ff/ff.c     **** 		INIT_BUF(dj);
 7652              		.loc 1 3199 0
 7653 002c 3023     		mov	r3, #48
 7654 002e FB18     		add	r3, r7, r3
 7655 0030 0822     		mov	r2, #8
 7656 0032 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 192


 7657 0034 9A61     		str	r2, [r3, #24]
3200:.\ff/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the file path */
 7658              		.loc 1 3200 0
 7659 0036 7B68     		ldr	r3, [r7, #4]
 7660 0038 5722     		mov	r2, #87
 7661 003a BC18     		add	r4, r7, r2
 7662 003c 3022     		mov	r2, #48
 7663 003e BA18     		add	r2, r7, r2
 7664 0040 101C     		mov	r0, r2
 7665 0042 191C     		mov	r1, r3
 7666 0044 FFF7FEFF 		bl	follow_path
 7667 0048 031C     		mov	r3, r0
 7668 004a 2370     		strb	r3, [r4]
3201:.\ff/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3202:.\ff/ff.c     **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
3203:.\ff/ff.c     **** #if _FS_SHARE
3204:.\ff/ff.c     **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open file */
3205:.\ff/ff.c     **** #endif
3206:.\ff/ff.c     **** 		if (res == FR_OK) {					/* The object is accessible */
 7669              		.loc 1 3206 0
 7670 004c 5723     		mov	r3, #87
 7671 004e FB18     		add	r3, r7, r3
 7672 0050 1B78     		ldrb	r3, [r3]
 7673 0052 002B     		cmp	r3, #0
 7674 0054 00D0     		beq	.LCB7143
 7675 0056 ADE0     		b	.L403	@long jump
 7676              	.LCB7143:
3207:.\ff/ff.c     **** 			dir = dj.dir;
 7677              		.loc 1 3207 0
 7678 0058 3023     		mov	r3, #48
 7679 005a FB18     		add	r3, r7, r3
 7680 005c 5B69     		ldr	r3, [r3, #20]
 7681 005e 3B65     		str	r3, [r7, #80]
3208:.\ff/ff.c     **** 			if (!dir) {
 7682              		.loc 1 3208 0
 7683 0060 3B6D     		ldr	r3, [r7, #80]
 7684 0062 002B     		cmp	r3, #0
 7685 0064 04D1     		bne	.L404
3209:.\ff/ff.c     **** 				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
 7686              		.loc 1 3209 0
 7687 0066 5723     		mov	r3, #87
 7688 0068 FB18     		add	r3, r7, r3
 7689 006a 0622     		mov	r2, #6
 7690 006c 1A70     		strb	r2, [r3]
 7691 006e 0AE0     		b	.L405
 7692              	.L404:
3210:.\ff/ff.c     **** 			} else {
3211:.\ff/ff.c     **** 				if (dir[DIR_Attr] & AM_RDO)
 7693              		.loc 1 3211 0
 7694 0070 3B6D     		ldr	r3, [r7, #80]
 7695 0072 0B33     		add	r3, r3, #11
 7696 0074 1B78     		ldrb	r3, [r3]
 7697 0076 1A1C     		mov	r2, r3
 7698 0078 0123     		mov	r3, #1
 7699 007a 1340     		and	r3, r2
 7700 007c 03D0     		beq	.L405
3212:.\ff/ff.c     **** 					res = FR_DENIED;		/* Cannot remove R/O object */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 193


 7701              		.loc 1 3212 0
 7702 007e 5723     		mov	r3, #87
 7703 0080 FB18     		add	r3, r7, r3
 7704 0082 0722     		mov	r2, #7
 7705 0084 1A70     		strb	r2, [r3]
 7706              	.L405:
3213:.\ff/ff.c     **** 			}
3214:.\ff/ff.c     **** 			dclst = LD_CLUST(dir);
 7707              		.loc 1 3214 0
 7708 0086 3B6D     		ldr	r3, [r7, #80]
 7709 0088 1533     		add	r3, r3, #21
 7710 008a 1B78     		ldrb	r3, [r3]
 7711 008c 1B02     		lsl	r3, r3, #8
 7712 008e 9AB2     		uxth	r2, r3
 7713 0090 3B6D     		ldr	r3, [r7, #80]
 7714 0092 1433     		add	r3, r3, #20
 7715 0094 1B78     		ldrb	r3, [r3]
 7716 0096 9BB2     		uxth	r3, r3
 7717 0098 1343     		orr	r3, r2
 7718 009a 9BB2     		uxth	r3, r3
 7719 009c 9BB2     		uxth	r3, r3
 7720 009e 1B04     		lsl	r3, r3, #16
 7721 00a0 3A6D     		ldr	r2, [r7, #80]
 7722 00a2 1B32     		add	r2, r2, #27
 7723 00a4 1278     		ldrb	r2, [r2]
 7724 00a6 1202     		lsl	r2, r2, #8
 7725 00a8 91B2     		uxth	r1, r2
 7726 00aa 3A6D     		ldr	r2, [r7, #80]
 7727 00ac 1A32     		add	r2, r2, #26
 7728 00ae 1278     		ldrb	r2, [r2]
 7729 00b0 92B2     		uxth	r2, r2
 7730 00b2 0A43     		orr	r2, r1
 7731 00b4 92B2     		uxth	r2, r2
 7732 00b6 92B2     		uxth	r2, r2
 7733 00b8 1343     		orr	r3, r2
 7734 00ba FB64     		str	r3, [r7, #76]
3215:.\ff/ff.c     **** 			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
 7735              		.loc 1 3215 0
 7736 00bc 5723     		mov	r3, #87
 7737 00be FB18     		add	r3, r7, r3
 7738 00c0 1B78     		ldrb	r3, [r3]
 7739 00c2 002B     		cmp	r3, #0
 7740 00c4 45D1     		bne	.L406
 7741              		.loc 1 3215 0 is_stmt 0 discriminator 1
 7742 00c6 3B6D     		ldr	r3, [r7, #80]
 7743 00c8 0B33     		add	r3, r3, #11
 7744 00ca 1B78     		ldrb	r3, [r3]
 7745 00cc 1A1C     		mov	r2, r3
 7746 00ce 1023     		mov	r3, #16
 7747 00d0 1340     		and	r3, r2
 7748 00d2 3ED0     		beq	.L406
3216:.\ff/ff.c     **** 				if (dclst < 2) {
 7749              		.loc 1 3216 0 is_stmt 1
 7750 00d4 FB6C     		ldr	r3, [r7, #76]
 7751 00d6 012B     		cmp	r3, #1
 7752 00d8 04D8     		bhi	.L407
3217:.\ff/ff.c     **** 					res = FR_INT_ERR;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 194


 7753              		.loc 1 3217 0
 7754 00da 5723     		mov	r3, #87
 7755 00dc FB18     		add	r3, r7, r3
 7756 00de 0222     		mov	r2, #2
 7757 00e0 1A70     		strb	r2, [r3]
 7758 00e2 36E0     		b	.L406
 7759              	.L407:
3218:.\ff/ff.c     **** 				} else {
3219:.\ff/ff.c     **** 					mem_cpy(&sdj, &dj, sizeof(DIR));	/* Check if the sub-dir is empty or not */
 7760              		.loc 1 3219 0
 7761 00e4 1423     		mov	r3, #20
 7762 00e6 FA18     		add	r2, r7, r3
 7763 00e8 3023     		mov	r3, #48
 7764 00ea FB18     		add	r3, r7, r3
 7765 00ec 101C     		mov	r0, r2
 7766 00ee 191C     		mov	r1, r3
 7767 00f0 1C22     		mov	r2, #28
 7768 00f2 FFF7FEFF 		bl	mem_cpy
3220:.\ff/ff.c     **** 					sdj.sclust = dclst;
 7769              		.loc 1 3220 0
 7770 00f6 1423     		mov	r3, #20
 7771 00f8 FB18     		add	r3, r7, r3
 7772 00fa FA6C     		ldr	r2, [r7, #76]
 7773 00fc 9A60     		str	r2, [r3, #8]
3221:.\ff/ff.c     **** 					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
 7774              		.loc 1 3221 0
 7775 00fe 5723     		mov	r3, #87
 7776 0100 FC18     		add	r4, r7, r3
 7777 0102 1423     		mov	r3, #20
 7778 0104 FB18     		add	r3, r7, r3
 7779 0106 181C     		mov	r0, r3
 7780 0108 0221     		mov	r1, #2
 7781 010a FFF7FEFF 		bl	dir_sdi
 7782 010e 031C     		mov	r3, r0
 7783 0110 2370     		strb	r3, [r4]
3222:.\ff/ff.c     **** 					if (res == FR_OK) {
 7784              		.loc 1 3222 0
 7785 0112 5723     		mov	r3, #87
 7786 0114 FB18     		add	r3, r7, r3
 7787 0116 1B78     		ldrb	r3, [r3]
 7788 0118 002B     		cmp	r3, #0
 7789 011a 1AD1     		bne	.L406
3223:.\ff/ff.c     **** 						res = dir_read(&sdj);
 7790              		.loc 1 3223 0
 7791 011c 5723     		mov	r3, #87
 7792 011e FC18     		add	r4, r7, r3
 7793 0120 1423     		mov	r3, #20
 7794 0122 FB18     		add	r3, r7, r3
 7795 0124 181C     		mov	r0, r3
 7796 0126 FFF7FEFF 		bl	dir_read
 7797 012a 031C     		mov	r3, r0
 7798 012c 2370     		strb	r3, [r4]
3224:.\ff/ff.c     **** 						if (res == FR_OK			/* Not empty dir */
 7799              		.loc 1 3224 0
 7800 012e 5723     		mov	r3, #87
 7801 0130 FB18     		add	r3, r7, r3
 7802 0132 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 195


 7803 0134 002B     		cmp	r3, #0
 7804 0136 03D1     		bne	.L408
3225:.\ff/ff.c     **** #if _FS_RPATH
3226:.\ff/ff.c     **** 						|| dclst == sdj.fs->cdir	/* Current dir */
3227:.\ff/ff.c     **** #endif
3228:.\ff/ff.c     **** 						) res = FR_DENIED;
 7805              		.loc 1 3228 0
 7806 0138 5723     		mov	r3, #87
 7807 013a FB18     		add	r3, r7, r3
 7808 013c 0722     		mov	r2, #7
 7809 013e 1A70     		strb	r2, [r3]
 7810              	.L408:
3229:.\ff/ff.c     **** 						if (res == FR_NO_FILE) res = FR_OK;	/* Empty */
 7811              		.loc 1 3229 0
 7812 0140 5723     		mov	r3, #87
 7813 0142 FB18     		add	r3, r7, r3
 7814 0144 1B78     		ldrb	r3, [r3]
 7815 0146 042B     		cmp	r3, #4
 7816 0148 03D1     		bne	.L406
 7817              		.loc 1 3229 0 is_stmt 0 discriminator 1
 7818 014a 5723     		mov	r3, #87
 7819 014c FB18     		add	r3, r7, r3
 7820 014e 0022     		mov	r2, #0
 7821 0150 1A70     		strb	r2, [r3]
 7822              	.L406:
3230:.\ff/ff.c     **** 					}
3231:.\ff/ff.c     **** 				}
3232:.\ff/ff.c     **** 			}
3233:.\ff/ff.c     **** 			if (res == FR_OK) {
 7823              		.loc 1 3233 0 is_stmt 1
 7824 0152 5723     		mov	r3, #87
 7825 0154 FB18     		add	r3, r7, r3
 7826 0156 1B78     		ldrb	r3, [r3]
 7827 0158 002B     		cmp	r3, #0
 7828 015a 2BD1     		bne	.L403
3234:.\ff/ff.c     **** 				res = dir_remove(&dj);		/* Remove the directory entry */
 7829              		.loc 1 3234 0
 7830 015c 5723     		mov	r3, #87
 7831 015e FC18     		add	r4, r7, r3
 7832 0160 3023     		mov	r3, #48
 7833 0162 FB18     		add	r3, r7, r3
 7834 0164 181C     		mov	r0, r3
 7835 0166 FFF7FEFF 		bl	dir_remove
 7836 016a 031C     		mov	r3, r0
 7837 016c 2370     		strb	r3, [r4]
3235:.\ff/ff.c     **** 				if (res == FR_OK) {
 7838              		.loc 1 3235 0
 7839 016e 5723     		mov	r3, #87
 7840 0170 FB18     		add	r3, r7, r3
 7841 0172 1B78     		ldrb	r3, [r3]
 7842 0174 002B     		cmp	r3, #0
 7843 0176 1DD1     		bne	.L403
3236:.\ff/ff.c     **** 					if (dclst)				/* Remove the cluster chain if exist */
 7844              		.loc 1 3236 0
 7845 0178 FB6C     		ldr	r3, [r7, #76]
 7846 017a 002B     		cmp	r3, #0
 7847 017c 0BD0     		beq	.L409
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 196


3237:.\ff/ff.c     **** 						res = remove_chain(dj.fs, dclst);
 7848              		.loc 1 3237 0
 7849 017e 3023     		mov	r3, #48
 7850 0180 FB18     		add	r3, r7, r3
 7851 0182 1A68     		ldr	r2, [r3]
 7852 0184 5723     		mov	r3, #87
 7853 0186 FC18     		add	r4, r7, r3
 7854 0188 FB6C     		ldr	r3, [r7, #76]
 7855 018a 101C     		mov	r0, r2
 7856 018c 191C     		mov	r1, r3
 7857 018e FFF7FEFF 		bl	remove_chain
 7858 0192 031C     		mov	r3, r0
 7859 0194 2370     		strb	r3, [r4]
 7860              	.L409:
3238:.\ff/ff.c     **** 					if (res == FR_OK) res = sync(dj.fs);
 7861              		.loc 1 3238 0
 7862 0196 5723     		mov	r3, #87
 7863 0198 FB18     		add	r3, r7, r3
 7864 019a 1B78     		ldrb	r3, [r3]
 7865 019c 002B     		cmp	r3, #0
 7866 019e 09D1     		bne	.L403
 7867              		.loc 1 3238 0 is_stmt 0 discriminator 1
 7868 01a0 3023     		mov	r3, #48
 7869 01a2 FB18     		add	r3, r7, r3
 7870 01a4 1B68     		ldr	r3, [r3]
 7871 01a6 5722     		mov	r2, #87
 7872 01a8 BC18     		add	r4, r7, r2
 7873 01aa 181C     		mov	r0, r3
 7874 01ac FFF7FEFF 		bl	sync
 7875 01b0 031C     		mov	r3, r0
 7876 01b2 2370     		strb	r3, [r4]
 7877              	.L403:
3239:.\ff/ff.c     **** 				}
3240:.\ff/ff.c     **** 			}
3241:.\ff/ff.c     **** 		}
3242:.\ff/ff.c     **** 		FREE_BUF();
3243:.\ff/ff.c     **** 	}
3244:.\ff/ff.c     **** 	LEAVE_FF(dj.fs, res);
 7878              		.loc 1 3244 0 is_stmt 1
 7879 01b4 5723     		mov	r3, #87
 7880 01b6 FB18     		add	r3, r7, r3
 7881 01b8 1B78     		ldrb	r3, [r3]
3245:.\ff/ff.c     **** }
 7882              		.loc 1 3245 0
 7883 01ba 181C     		mov	r0, r3
 7884 01bc BD46     		mov	sp, r7
 7885 01be 17B0     		add	sp, sp, #92
 7886              		@ sp needed
 7887 01c0 90BD     		pop	{r4, r7, pc}
 7888              		.cfi_endproc
 7889              	.LFE37:
 7890              		.size	f_unlink, .-f_unlink
 7891 01c2 C046     		.section	.text.f_mkdir,"ax",%progbits
 7892              		.align	2
 7893              		.global	f_mkdir
 7894              		.code	16
 7895              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 197


 7896              		.type	f_mkdir, %function
 7897              	f_mkdir:
 7898              	.LFB38:
3246:.\ff/ff.c     **** 
3247:.\ff/ff.c     **** 
3248:.\ff/ff.c     **** 
3249:.\ff/ff.c     **** 
3250:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3251:.\ff/ff.c     **** /* Create a Directory                                                    */
3252:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3253:.\ff/ff.c     **** 
3254:.\ff/ff.c     **** FRESULT f_mkdir (
3255:.\ff/ff.c     **** 	const TCHAR *path		/* Pointer to the directory path */
3256:.\ff/ff.c     **** )
3257:.\ff/ff.c     **** {
 7899              		.loc 1 3257 0
 7900              		.cfi_startproc
 7901 0000 90B5     		push	{r4, r7, lr}
 7902              		.cfi_def_cfa_offset 12
 7903              		.cfi_offset 4, -12
 7904              		.cfi_offset 7, -8
 7905              		.cfi_offset 14, -4
 7906 0002 93B0     		sub	sp, sp, #76
 7907              		.cfi_def_cfa_offset 88
 7908 0004 00AF     		add	r7, sp, #0
 7909              		.cfi_def_cfa_register 7
 7910 0006 7860     		str	r0, [r7, #4]
3258:.\ff/ff.c     **** 	FRESULT res;
3259:.\ff/ff.c     **** 	DIR dj;
3260:.\ff/ff.c     **** 	BYTE *dir, n;
3261:.\ff/ff.c     **** 	DWORD dsc, dcl, pcl, tim = get_fattime();
 7911              		.loc 1 3261 0
 7912 0008 FFF7FEFF 		bl	get_fattime
 7913 000c 031C     		mov	r3, r0
 7914 000e BB63     		str	r3, [r7, #56]
3262:.\ff/ff.c     **** 	DEF_NAMEBUF;
3263:.\ff/ff.c     **** 
3264:.\ff/ff.c     **** 
3265:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 7915              		.loc 1 3265 0
 7916 0010 4723     		mov	r3, #71
 7917 0012 FC18     		add	r4, r7, r3
 7918 0014 3A1D     		add	r2, r7, #4
 7919 0016 1423     		mov	r3, #20
 7920 0018 FB18     		add	r3, r7, r3
 7921 001a 101C     		mov	r0, r2
 7922 001c 191C     		mov	r1, r3
 7923 001e 0122     		mov	r2, #1
 7924 0020 FFF7FEFF 		bl	chk_mounted
 7925 0024 031C     		mov	r3, r0
 7926 0026 2370     		strb	r3, [r4]
3266:.\ff/ff.c     **** 	if (res == FR_OK) {
 7927              		.loc 1 3266 0
 7928 0028 4723     		mov	r3, #71
 7929 002a FB18     		add	r3, r7, r3
 7930 002c 1B78     		ldrb	r3, [r3]
 7931 002e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 198


 7932 0030 00D0     		beq	.LCB7377
 7933 0032 8CE1     		b	.L412	@long jump
 7934              	.LCB7377:
3267:.\ff/ff.c     **** 		INIT_BUF(dj);
 7935              		.loc 1 3267 0
 7936 0034 1423     		mov	r3, #20
 7937 0036 FB18     		add	r3, r7, r3
 7938 0038 0822     		mov	r2, #8
 7939 003a BA18     		add	r2, r7, r2
 7940 003c 9A61     		str	r2, [r3, #24]
3268:.\ff/ff.c     **** 		res = follow_path(&dj, path);			/* Follow the file path */
 7941              		.loc 1 3268 0
 7942 003e 7B68     		ldr	r3, [r7, #4]
 7943 0040 4722     		mov	r2, #71
 7944 0042 BC18     		add	r4, r7, r2
 7945 0044 1422     		mov	r2, #20
 7946 0046 BA18     		add	r2, r7, r2
 7947 0048 101C     		mov	r0, r2
 7948 004a 191C     		mov	r1, r3
 7949 004c FFF7FEFF 		bl	follow_path
 7950 0050 031C     		mov	r3, r0
 7951 0052 2370     		strb	r3, [r4]
3269:.\ff/ff.c     **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7952              		.loc 1 3269 0
 7953 0054 4723     		mov	r3, #71
 7954 0056 FB18     		add	r3, r7, r3
 7955 0058 1B78     		ldrb	r3, [r3]
 7956 005a 002B     		cmp	r3, #0
 7957 005c 03D1     		bne	.L426
 7958              		.loc 1 3269 0 is_stmt 0 discriminator 1
 7959 005e 4723     		mov	r3, #71
 7960 0060 FB18     		add	r3, r7, r3
 7961 0062 0822     		mov	r2, #8
 7962 0064 1A70     		strb	r2, [r3]
 7963              	.L426:
3270:.\ff/ff.c     **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NS] & NS_DOT))
3271:.\ff/ff.c     **** 			res = FR_INVALID_NAME;
3272:.\ff/ff.c     **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
 7964              		.loc 1 3272 0 is_stmt 1
 7965 0066 4723     		mov	r3, #71
 7966 0068 FB18     		add	r3, r7, r3
 7967 006a 1B78     		ldrb	r3, [r3]
 7968 006c 042B     		cmp	r3, #4
 7969 006e 00D0     		beq	.LCB7408
 7970 0070 6DE1     		b	.L412	@long jump
 7971              	.LCB7408:
3273:.\ff/ff.c     **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
 7972              		.loc 1 3273 0
 7973 0072 1423     		mov	r3, #20
 7974 0074 FB18     		add	r3, r7, r3
 7975 0076 1B68     		ldr	r3, [r3]
 7976 0078 181C     		mov	r0, r3
 7977 007a 0021     		mov	r1, #0
 7978 007c FFF7FEFF 		bl	create_chain
 7979 0080 031C     		mov	r3, r0
 7980 0082 7B63     		str	r3, [r7, #52]
3274:.\ff/ff.c     **** 			res = FR_OK;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 199


 7981              		.loc 1 3274 0
 7982 0084 4723     		mov	r3, #71
 7983 0086 FB18     		add	r3, r7, r3
 7984 0088 0022     		mov	r2, #0
 7985 008a 1A70     		strb	r2, [r3]
3275:.\ff/ff.c     **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
 7986              		.loc 1 3275 0
 7987 008c 7B6B     		ldr	r3, [r7, #52]
 7988 008e 002B     		cmp	r3, #0
 7989 0090 03D1     		bne	.L414
 7990              		.loc 1 3275 0 is_stmt 0 discriminator 1
 7991 0092 4723     		mov	r3, #71
 7992 0094 FB18     		add	r3, r7, r3
 7993 0096 0722     		mov	r2, #7
 7994 0098 1A70     		strb	r2, [r3]
 7995              	.L414:
3276:.\ff/ff.c     **** 			if (dcl == 1) res = FR_INT_ERR;
 7996              		.loc 1 3276 0 is_stmt 1
 7997 009a 7B6B     		ldr	r3, [r7, #52]
 7998 009c 012B     		cmp	r3, #1
 7999 009e 03D1     		bne	.L415
 8000              		.loc 1 3276 0 is_stmt 0 discriminator 1
 8001 00a0 4723     		mov	r3, #71
 8002 00a2 FB18     		add	r3, r7, r3
 8003 00a4 0222     		mov	r2, #2
 8004 00a6 1A70     		strb	r2, [r3]
 8005              	.L415:
3277:.\ff/ff.c     **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 8006              		.loc 1 3277 0 is_stmt 1
 8007 00a8 7B6B     		ldr	r3, [r7, #52]
 8008 00aa 0133     		add	r3, r3, #1
 8009 00ac 03D1     		bne	.L416
 8010              		.loc 1 3277 0 is_stmt 0 discriminator 1
 8011 00ae 4723     		mov	r3, #71
 8012 00b0 FB18     		add	r3, r7, r3
 8013 00b2 0122     		mov	r2, #1
 8014 00b4 1A70     		strb	r2, [r3]
 8015              	.L416:
3278:.\ff/ff.c     **** 			if (res == FR_OK)					/* Flush FAT */
 8016              		.loc 1 3278 0 is_stmt 1
 8017 00b6 4723     		mov	r3, #71
 8018 00b8 FB18     		add	r3, r7, r3
 8019 00ba 1B78     		ldrb	r3, [r3]
 8020 00bc 002B     		cmp	r3, #0
 8021 00be 0AD1     		bne	.L417
3279:.\ff/ff.c     **** 				res = move_window(dj.fs, 0);
 8022              		.loc 1 3279 0
 8023 00c0 1423     		mov	r3, #20
 8024 00c2 FB18     		add	r3, r7, r3
 8025 00c4 1B68     		ldr	r3, [r3]
 8026 00c6 4722     		mov	r2, #71
 8027 00c8 BC18     		add	r4, r7, r2
 8028 00ca 181C     		mov	r0, r3
 8029 00cc 0021     		mov	r1, #0
 8030 00ce FFF7FEFF 		bl	move_window
 8031 00d2 031C     		mov	r3, r0
 8032 00d4 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 200


 8033              	.L417:
3280:.\ff/ff.c     **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 8034              		.loc 1 3280 0
 8035 00d6 4723     		mov	r3, #71
 8036 00d8 FB18     		add	r3, r7, r3
 8037 00da 1B78     		ldrb	r3, [r3]
 8038 00dc 002B     		cmp	r3, #0
 8039 00de 00D0     		beq	.LCB7469
 8040 00e0 CDE0     		b	.L418	@long jump
 8041              	.LCB7469:
3281:.\ff/ff.c     **** 				dsc = clust2sect(dj.fs, dcl);
 8042              		.loc 1 3281 0
 8043 00e2 1423     		mov	r3, #20
 8044 00e4 FB18     		add	r3, r7, r3
 8045 00e6 1A68     		ldr	r2, [r3]
 8046 00e8 7B6B     		ldr	r3, [r7, #52]
 8047 00ea 101C     		mov	r0, r2
 8048 00ec 191C     		mov	r1, r3
 8049 00ee FFF7FEFF 		bl	clust2sect
 8050 00f2 031C     		mov	r3, r0
 8051 00f4 3B64     		str	r3, [r7, #64]
3282:.\ff/ff.c     **** 				dir = dj.fs->win;
 8052              		.loc 1 3282 0
 8053 00f6 1423     		mov	r3, #20
 8054 00f8 FB18     		add	r3, r7, r3
 8055 00fa 1B68     		ldr	r3, [r3]
 8056 00fc 3033     		add	r3, r3, #48
 8057 00fe 3B63     		str	r3, [r7, #48]
3283:.\ff/ff.c     **** 				mem_set(dir, 0, SS(dj.fs));
 8058              		.loc 1 3283 0
 8059 0100 3A6B     		ldr	r2, [r7, #48]
 8060 0102 8023     		mov	r3, #128
 8061 0104 9B00     		lsl	r3, r3, #2
 8062 0106 101C     		mov	r0, r2
 8063 0108 0021     		mov	r1, #0
 8064 010a 1A1C     		mov	r2, r3
 8065 010c FFF7FEFF 		bl	mem_set
3284:.\ff/ff.c     **** 				mem_set(dir+DIR_Name, ' ', 8+3);	/* Create "." entry */
 8066              		.loc 1 3284 0
 8067 0110 3B6B     		ldr	r3, [r7, #48]
 8068 0112 181C     		mov	r0, r3
 8069 0114 2021     		mov	r1, #32
 8070 0116 0B22     		mov	r2, #11
 8071 0118 FFF7FEFF 		bl	mem_set
3285:.\ff/ff.c     **** 				dir[DIR_Name] = '.';
 8072              		.loc 1 3285 0
 8073 011c 3B6B     		ldr	r3, [r7, #48]
 8074 011e 2E22     		mov	r2, #46
 8075 0120 1A70     		strb	r2, [r3]
3286:.\ff/ff.c     **** 				dir[DIR_Attr] = AM_DIR;
 8076              		.loc 1 3286 0
 8077 0122 3B6B     		ldr	r3, [r7, #48]
 8078 0124 0B33     		add	r3, r3, #11
 8079 0126 1022     		mov	r2, #16
 8080 0128 1A70     		strb	r2, [r3]
3287:.\ff/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);
 8081              		.loc 1 3287 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 201


 8082 012a 3B6B     		ldr	r3, [r7, #48]
 8083 012c 1633     		add	r3, r3, #22
 8084 012e BA6B     		ldr	r2, [r7, #56]
 8085 0130 D2B2     		uxtb	r2, r2
 8086 0132 1A70     		strb	r2, [r3]
 8087 0134 3B6B     		ldr	r3, [r7, #48]
 8088 0136 1733     		add	r3, r3, #23
 8089 0138 BA6B     		ldr	r2, [r7, #56]
 8090 013a 92B2     		uxth	r2, r2
 8091 013c 120A     		lsr	r2, r2, #8
 8092 013e 92B2     		uxth	r2, r2
 8093 0140 D2B2     		uxtb	r2, r2
 8094 0142 1A70     		strb	r2, [r3]
 8095 0144 3B6B     		ldr	r3, [r7, #48]
 8096 0146 1833     		add	r3, r3, #24
 8097 0148 BA6B     		ldr	r2, [r7, #56]
 8098 014a 120C     		lsr	r2, r2, #16
 8099 014c D2B2     		uxtb	r2, r2
 8100 014e 1A70     		strb	r2, [r3]
 8101 0150 3B6B     		ldr	r3, [r7, #48]
 8102 0152 1933     		add	r3, r3, #25
 8103 0154 BA6B     		ldr	r2, [r7, #56]
 8104 0156 120E     		lsr	r2, r2, #24
 8105 0158 D2B2     		uxtb	r2, r2
 8106 015a 1A70     		strb	r2, [r3]
3288:.\ff/ff.c     **** 				ST_CLUST(dir, dcl);
 8107              		.loc 1 3288 0
 8108 015c 3B6B     		ldr	r3, [r7, #48]
 8109 015e 1A33     		add	r3, r3, #26
 8110 0160 7A6B     		ldr	r2, [r7, #52]
 8111 0162 D2B2     		uxtb	r2, r2
 8112 0164 1A70     		strb	r2, [r3]
 8113 0166 3B6B     		ldr	r3, [r7, #48]
 8114 0168 1B33     		add	r3, r3, #27
 8115 016a 7A6B     		ldr	r2, [r7, #52]
 8116 016c 92B2     		uxth	r2, r2
 8117 016e 120A     		lsr	r2, r2, #8
 8118 0170 92B2     		uxth	r2, r2
 8119 0172 D2B2     		uxtb	r2, r2
 8120 0174 1A70     		strb	r2, [r3]
 8121 0176 3B6B     		ldr	r3, [r7, #48]
 8122 0178 1433     		add	r3, r3, #20
 8123 017a 7A6B     		ldr	r2, [r7, #52]
 8124 017c 120C     		lsr	r2, r2, #16
 8125 017e D2B2     		uxtb	r2, r2
 8126 0180 1A70     		strb	r2, [r3]
 8127 0182 3B6B     		ldr	r3, [r7, #48]
 8128 0184 1533     		add	r3, r3, #21
 8129 0186 7A6B     		ldr	r2, [r7, #52]
 8130 0188 120C     		lsr	r2, r2, #16
 8131 018a 92B2     		uxth	r2, r2
 8132 018c 120A     		lsr	r2, r2, #8
 8133 018e 92B2     		uxth	r2, r2
 8134 0190 D2B2     		uxtb	r2, r2
 8135 0192 1A70     		strb	r2, [r3]
3289:.\ff/ff.c     **** 				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
 8136              		.loc 1 3289 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 202


 8137 0194 3B6B     		ldr	r3, [r7, #48]
 8138 0196 2033     		add	r3, r3, #32
 8139 0198 1A1C     		mov	r2, r3
 8140 019a 3B6B     		ldr	r3, [r7, #48]
 8141 019c 101C     		mov	r0, r2
 8142 019e 191C     		mov	r1, r3
 8143 01a0 2022     		mov	r2, #32
 8144 01a2 FFF7FEFF 		bl	mem_cpy
3290:.\ff/ff.c     **** 				dir[33] = '.'; pcl = dj.sclust;
 8145              		.loc 1 3290 0
 8146 01a6 3B6B     		ldr	r3, [r7, #48]
 8147 01a8 2133     		add	r3, r3, #33
 8148 01aa 2E22     		mov	r2, #46
 8149 01ac 1A70     		strb	r2, [r3]
 8150 01ae 1423     		mov	r3, #20
 8151 01b0 FB18     		add	r3, r7, r3
 8152 01b2 9B68     		ldr	r3, [r3, #8]
 8153 01b4 FB63     		str	r3, [r7, #60]
3291:.\ff/ff.c     **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 8154              		.loc 1 3291 0
 8155 01b6 1423     		mov	r3, #20
 8156 01b8 FB18     		add	r3, r7, r3
 8157 01ba 1B68     		ldr	r3, [r3]
 8158 01bc 1B78     		ldrb	r3, [r3]
 8159 01be 032B     		cmp	r3, #3
 8160 01c0 08D1     		bne	.L419
 8161              		.loc 1 3291 0 is_stmt 0 discriminator 1
 8162 01c2 1423     		mov	r3, #20
 8163 01c4 FB18     		add	r3, r7, r3
 8164 01c6 1B68     		ldr	r3, [r3]
 8165 01c8 5A6A     		ldr	r2, [r3, #36]
 8166 01ca FB6B     		ldr	r3, [r7, #60]
 8167 01cc 9A42     		cmp	r2, r3
 8168 01ce 01D1     		bne	.L419
3292:.\ff/ff.c     **** 					pcl = 0;
 8169              		.loc 1 3292 0 is_stmt 1
 8170 01d0 0023     		mov	r3, #0
 8171 01d2 FB63     		str	r3, [r7, #60]
 8172              	.L419:
3293:.\ff/ff.c     **** 				ST_CLUST(dir+SZ_DIR, pcl);
 8173              		.loc 1 3293 0
 8174 01d4 3B6B     		ldr	r3, [r7, #48]
 8175 01d6 3A33     		add	r3, r3, #58
 8176 01d8 FA6B     		ldr	r2, [r7, #60]
 8177 01da D2B2     		uxtb	r2, r2
 8178 01dc 1A70     		strb	r2, [r3]
 8179 01de 3B6B     		ldr	r3, [r7, #48]
 8180 01e0 3B33     		add	r3, r3, #59
 8181 01e2 FA6B     		ldr	r2, [r7, #60]
 8182 01e4 92B2     		uxth	r2, r2
 8183 01e6 120A     		lsr	r2, r2, #8
 8184 01e8 92B2     		uxth	r2, r2
 8185 01ea D2B2     		uxtb	r2, r2
 8186 01ec 1A70     		strb	r2, [r3]
 8187 01ee 3B6B     		ldr	r3, [r7, #48]
 8188 01f0 3433     		add	r3, r3, #52
 8189 01f2 FA6B     		ldr	r2, [r7, #60]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 203


 8190 01f4 120C     		lsr	r2, r2, #16
 8191 01f6 D2B2     		uxtb	r2, r2
 8192 01f8 1A70     		strb	r2, [r3]
 8193 01fa 3B6B     		ldr	r3, [r7, #48]
 8194 01fc 3533     		add	r3, r3, #53
 8195 01fe FA6B     		ldr	r2, [r7, #60]
 8196 0200 120C     		lsr	r2, r2, #16
 8197 0202 92B2     		uxth	r2, r2
 8198 0204 120A     		lsr	r2, r2, #8
 8199 0206 92B2     		uxth	r2, r2
 8200 0208 D2B2     		uxtb	r2, r2
 8201 020a 1A70     		strb	r2, [r3]
3294:.\ff/ff.c     **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 8202              		.loc 1 3294 0
 8203 020c 1423     		mov	r3, #20
 8204 020e FB18     		add	r3, r7, r3
 8205 0210 1A68     		ldr	r2, [r3]
 8206 0212 4623     		mov	r3, #70
 8207 0214 FB18     		add	r3, r7, r3
 8208 0216 9278     		ldrb	r2, [r2, #2]
 8209 0218 1A70     		strb	r2, [r3]
 8210 021a 2BE0     		b	.L420
 8211              	.L422:
3295:.\ff/ff.c     **** 					dj.fs->winsect = dsc++;
 8212              		.loc 1 3295 0
 8213 021c 1423     		mov	r3, #20
 8214 021e FB18     		add	r3, r7, r3
 8215 0220 1B68     		ldr	r3, [r3]
 8216 0222 3A6C     		ldr	r2, [r7, #64]
 8217 0224 511C     		add	r1, r2, #1
 8218 0226 3964     		str	r1, [r7, #64]
 8219 0228 DA62     		str	r2, [r3, #44]
3296:.\ff/ff.c     **** 					dj.fs->wflag = 1;
 8220              		.loc 1 3296 0
 8221 022a 1423     		mov	r3, #20
 8222 022c FB18     		add	r3, r7, r3
 8223 022e 1B68     		ldr	r3, [r3]
 8224 0230 0122     		mov	r2, #1
 8225 0232 1A71     		strb	r2, [r3, #4]
3297:.\ff/ff.c     **** 					res = move_window(dj.fs, 0);
 8226              		.loc 1 3297 0
 8227 0234 1423     		mov	r3, #20
 8228 0236 FB18     		add	r3, r7, r3
 8229 0238 1B68     		ldr	r3, [r3]
 8230 023a 4722     		mov	r2, #71
 8231 023c BC18     		add	r4, r7, r2
 8232 023e 181C     		mov	r0, r3
 8233 0240 0021     		mov	r1, #0
 8234 0242 FFF7FEFF 		bl	move_window
 8235 0246 031C     		mov	r3, r0
 8236 0248 2370     		strb	r3, [r4]
3298:.\ff/ff.c     **** 					if (res != FR_OK) break;
 8237              		.loc 1 3298 0
 8238 024a 4723     		mov	r3, #71
 8239 024c FB18     		add	r3, r7, r3
 8240 024e 1B78     		ldrb	r3, [r3]
 8241 0250 002B     		cmp	r3, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 204


 8242 0252 00D0     		beq	.L421
 8243 0254 13E0     		b	.L418
 8244              	.L421:
3299:.\ff/ff.c     **** 					mem_set(dir, 0, SS(dj.fs));
 8245              		.loc 1 3299 0 discriminator 2
 8246 0256 3A6B     		ldr	r2, [r7, #48]
 8247 0258 8023     		mov	r3, #128
 8248 025a 9B00     		lsl	r3, r3, #2
 8249 025c 101C     		mov	r0, r2
 8250 025e 0021     		mov	r1, #0
 8251 0260 1A1C     		mov	r2, r3
 8252 0262 FFF7FEFF 		bl	mem_set
3294:.\ff/ff.c     **** 					dj.fs->winsect = dsc++;
 8253              		.loc 1 3294 0 discriminator 2
 8254 0266 4623     		mov	r3, #70
 8255 0268 FB18     		add	r3, r7, r3
 8256 026a 1A78     		ldrb	r2, [r3]
 8257 026c 4623     		mov	r3, #70
 8258 026e FB18     		add	r3, r7, r3
 8259 0270 013A     		sub	r2, r2, #1
 8260 0272 1A70     		strb	r2, [r3]
 8261              	.L420:
3294:.\ff/ff.c     **** 					dj.fs->winsect = dsc++;
 8262              		.loc 1 3294 0 is_stmt 0 discriminator 1
 8263 0274 4623     		mov	r3, #70
 8264 0276 FB18     		add	r3, r7, r3
 8265 0278 1B78     		ldrb	r3, [r3]
 8266 027a 002B     		cmp	r3, #0
 8267 027c CED1     		bne	.L422
 8268              	.L418:
3300:.\ff/ff.c     **** 				}
3301:.\ff/ff.c     **** 			}
3302:.\ff/ff.c     **** 			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
 8269              		.loc 1 3302 0 is_stmt 1
 8270 027e 4723     		mov	r3, #71
 8271 0280 FB18     		add	r3, r7, r3
 8272 0282 1B78     		ldrb	r3, [r3]
 8273 0284 002B     		cmp	r3, #0
 8274 0286 08D1     		bne	.L423
 8275              		.loc 1 3302 0 is_stmt 0 discriminator 1
 8276 0288 4723     		mov	r3, #71
 8277 028a FC18     		add	r4, r7, r3
 8278 028c 1423     		mov	r3, #20
 8279 028e FB18     		add	r3, r7, r3
 8280 0290 181C     		mov	r0, r3
 8281 0292 FFF7FEFF 		bl	dir_register
 8282 0296 031C     		mov	r3, r0
 8283 0298 2370     		strb	r3, [r4]
 8284              	.L423:
3303:.\ff/ff.c     **** 			if (res != FR_OK) {
 8285              		.loc 1 3303 0 is_stmt 1
 8286 029a 4723     		mov	r3, #71
 8287 029c FB18     		add	r3, r7, r3
 8288 029e 1B78     		ldrb	r3, [r3]
 8289 02a0 002B     		cmp	r3, #0
 8290 02a2 08D0     		beq	.L424
3304:.\ff/ff.c     **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 205


 8291              		.loc 1 3304 0
 8292 02a4 1423     		mov	r3, #20
 8293 02a6 FB18     		add	r3, r7, r3
 8294 02a8 1A68     		ldr	r2, [r3]
 8295 02aa 7B6B     		ldr	r3, [r7, #52]
 8296 02ac 101C     		mov	r0, r2
 8297 02ae 191C     		mov	r1, r3
 8298 02b0 FFF7FEFF 		bl	remove_chain
 8299 02b4 4BE0     		b	.L412
 8300              	.L424:
3305:.\ff/ff.c     **** 			} else {
3306:.\ff/ff.c     **** 				dir = dj.dir;
 8301              		.loc 1 3306 0
 8302 02b6 1423     		mov	r3, #20
 8303 02b8 FB18     		add	r3, r7, r3
 8304 02ba 5B69     		ldr	r3, [r3, #20]
 8305 02bc 3B63     		str	r3, [r7, #48]
3307:.\ff/ff.c     **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 8306              		.loc 1 3307 0
 8307 02be 3B6B     		ldr	r3, [r7, #48]
 8308 02c0 0B33     		add	r3, r3, #11
 8309 02c2 1022     		mov	r2, #16
 8310 02c4 1A70     		strb	r2, [r3]
3308:.\ff/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);		/* Created time */
 8311              		.loc 1 3308 0
 8312 02c6 3B6B     		ldr	r3, [r7, #48]
 8313 02c8 1633     		add	r3, r3, #22
 8314 02ca BA6B     		ldr	r2, [r7, #56]
 8315 02cc D2B2     		uxtb	r2, r2
 8316 02ce 1A70     		strb	r2, [r3]
 8317 02d0 3B6B     		ldr	r3, [r7, #48]
 8318 02d2 1733     		add	r3, r3, #23
 8319 02d4 BA6B     		ldr	r2, [r7, #56]
 8320 02d6 92B2     		uxth	r2, r2
 8321 02d8 120A     		lsr	r2, r2, #8
 8322 02da 92B2     		uxth	r2, r2
 8323 02dc D2B2     		uxtb	r2, r2
 8324 02de 1A70     		strb	r2, [r3]
 8325 02e0 3B6B     		ldr	r3, [r7, #48]
 8326 02e2 1833     		add	r3, r3, #24
 8327 02e4 BA6B     		ldr	r2, [r7, #56]
 8328 02e6 120C     		lsr	r2, r2, #16
 8329 02e8 D2B2     		uxtb	r2, r2
 8330 02ea 1A70     		strb	r2, [r3]
 8331 02ec 3B6B     		ldr	r3, [r7, #48]
 8332 02ee 1933     		add	r3, r3, #25
 8333 02f0 BA6B     		ldr	r2, [r7, #56]
 8334 02f2 120E     		lsr	r2, r2, #24
 8335 02f4 D2B2     		uxtb	r2, r2
 8336 02f6 1A70     		strb	r2, [r3]
3309:.\ff/ff.c     **** 				ST_CLUST(dir, dcl);					/* Table start cluster */
 8337              		.loc 1 3309 0
 8338 02f8 3B6B     		ldr	r3, [r7, #48]
 8339 02fa 1A33     		add	r3, r3, #26
 8340 02fc 7A6B     		ldr	r2, [r7, #52]
 8341 02fe D2B2     		uxtb	r2, r2
 8342 0300 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 206


 8343 0302 3B6B     		ldr	r3, [r7, #48]
 8344 0304 1B33     		add	r3, r3, #27
 8345 0306 7A6B     		ldr	r2, [r7, #52]
 8346 0308 92B2     		uxth	r2, r2
 8347 030a 120A     		lsr	r2, r2, #8
 8348 030c 92B2     		uxth	r2, r2
 8349 030e D2B2     		uxtb	r2, r2
 8350 0310 1A70     		strb	r2, [r3]
 8351 0312 3B6B     		ldr	r3, [r7, #48]
 8352 0314 1433     		add	r3, r3, #20
 8353 0316 7A6B     		ldr	r2, [r7, #52]
 8354 0318 120C     		lsr	r2, r2, #16
 8355 031a D2B2     		uxtb	r2, r2
 8356 031c 1A70     		strb	r2, [r3]
 8357 031e 3B6B     		ldr	r3, [r7, #48]
 8358 0320 1533     		add	r3, r3, #21
 8359 0322 7A6B     		ldr	r2, [r7, #52]
 8360 0324 120C     		lsr	r2, r2, #16
 8361 0326 92B2     		uxth	r2, r2
 8362 0328 120A     		lsr	r2, r2, #8
 8363 032a 92B2     		uxth	r2, r2
 8364 032c D2B2     		uxtb	r2, r2
 8365 032e 1A70     		strb	r2, [r3]
3310:.\ff/ff.c     **** 				dj.fs->wflag = 1;
 8366              		.loc 1 3310 0
 8367 0330 1423     		mov	r3, #20
 8368 0332 FB18     		add	r3, r7, r3
 8369 0334 1B68     		ldr	r3, [r3]
 8370 0336 0122     		mov	r2, #1
 8371 0338 1A71     		strb	r2, [r3, #4]
3311:.\ff/ff.c     **** 				res = sync(dj.fs);
 8372              		.loc 1 3311 0
 8373 033a 1423     		mov	r3, #20
 8374 033c FB18     		add	r3, r7, r3
 8375 033e 1B68     		ldr	r3, [r3]
 8376 0340 4722     		mov	r2, #71
 8377 0342 BC18     		add	r4, r7, r2
 8378 0344 181C     		mov	r0, r3
 8379 0346 FFF7FEFF 		bl	sync
 8380 034a 031C     		mov	r3, r0
 8381 034c 2370     		strb	r3, [r4]
 8382              	.L412:
3312:.\ff/ff.c     **** 			}
3313:.\ff/ff.c     **** 		}
3314:.\ff/ff.c     **** 		FREE_BUF();
3315:.\ff/ff.c     **** 	}
3316:.\ff/ff.c     **** 
3317:.\ff/ff.c     **** 	LEAVE_FF(dj.fs, res);
 8383              		.loc 1 3317 0
 8384 034e 4723     		mov	r3, #71
 8385 0350 FB18     		add	r3, r7, r3
 8386 0352 1B78     		ldrb	r3, [r3]
3318:.\ff/ff.c     **** }
 8387              		.loc 1 3318 0
 8388 0354 181C     		mov	r0, r3
 8389 0356 BD46     		mov	sp, r7
 8390 0358 13B0     		add	sp, sp, #76
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 207


 8391              		@ sp needed
 8392 035a 90BD     		pop	{r4, r7, pc}
 8393              		.cfi_endproc
 8394              	.LFE38:
 8395              		.size	f_mkdir, .-f_mkdir
 8396              		.section	.text.f_chmod,"ax",%progbits
 8397              		.align	2
 8398              		.global	f_chmod
 8399              		.code	16
 8400              		.thumb_func
 8401              		.type	f_chmod, %function
 8402              	f_chmod:
 8403              	.LFB39:
3319:.\ff/ff.c     **** 
3320:.\ff/ff.c     **** 
3321:.\ff/ff.c     **** 
3322:.\ff/ff.c     **** 
3323:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3324:.\ff/ff.c     **** /* Change Attribute                                                      */
3325:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3326:.\ff/ff.c     **** 
3327:.\ff/ff.c     **** FRESULT f_chmod (
3328:.\ff/ff.c     **** 	const TCHAR *path,	/* Pointer to the file path */
3329:.\ff/ff.c     **** 	BYTE value,			/* Attribute bits */
3330:.\ff/ff.c     **** 	BYTE mask			/* Attribute mask to change */
3331:.\ff/ff.c     **** )
3332:.\ff/ff.c     **** {
 8404              		.loc 1 3332 0
 8405              		.cfi_startproc
 8406 0000 90B5     		push	{r4, r7, lr}
 8407              		.cfi_def_cfa_offset 12
 8408              		.cfi_offset 4, -12
 8409              		.cfi_offset 7, -8
 8410              		.cfi_offset 14, -4
 8411 0002 8FB0     		sub	sp, sp, #60
 8412              		.cfi_def_cfa_offset 72
 8413 0004 00AF     		add	r7, sp, #0
 8414              		.cfi_def_cfa_register 7
 8415 0006 7860     		str	r0, [r7, #4]
 8416 0008 081C     		mov	r0, r1
 8417 000a 111C     		mov	r1, r2
 8418 000c FB1C     		add	r3, r7, #3
 8419 000e 021C     		add	r2, r0, #0
 8420 0010 1A70     		strb	r2, [r3]
 8421 0012 BB1C     		add	r3, r7, #2
 8422 0014 0A1C     		add	r2, r1, #0
 8423 0016 1A70     		strb	r2, [r3]
3333:.\ff/ff.c     **** 	FRESULT res;
3334:.\ff/ff.c     **** 	DIR dj;
3335:.\ff/ff.c     **** 	BYTE *dir;
3336:.\ff/ff.c     **** 	DEF_NAMEBUF;
3337:.\ff/ff.c     **** 
3338:.\ff/ff.c     **** 
3339:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 8424              		.loc 1 3339 0
 8425 0018 3723     		mov	r3, #55
 8426 001a FC18     		add	r4, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 208


 8427 001c 3A1D     		add	r2, r7, #4
 8428 001e 1423     		mov	r3, #20
 8429 0020 FB18     		add	r3, r7, r3
 8430 0022 101C     		mov	r0, r2
 8431 0024 191C     		mov	r1, r3
 8432 0026 0122     		mov	r2, #1
 8433 0028 FFF7FEFF 		bl	chk_mounted
 8434 002c 031C     		mov	r3, r0
 8435 002e 2370     		strb	r3, [r4]
3340:.\ff/ff.c     **** 	if (res == FR_OK) {
 8436              		.loc 1 3340 0
 8437 0030 3723     		mov	r3, #55
 8438 0032 FB18     		add	r3, r7, r3
 8439 0034 1B78     		ldrb	r3, [r3]
 8440 0036 002B     		cmp	r3, #0
 8441 0038 49D1     		bne	.L428
3341:.\ff/ff.c     **** 		INIT_BUF(dj);
 8442              		.loc 1 3341 0
 8443 003a 1423     		mov	r3, #20
 8444 003c FB18     		add	r3, r7, r3
 8445 003e 0822     		mov	r2, #8
 8446 0040 BA18     		add	r2, r7, r2
 8447 0042 9A61     		str	r2, [r3, #24]
3342:.\ff/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the file path */
 8448              		.loc 1 3342 0
 8449 0044 7B68     		ldr	r3, [r7, #4]
 8450 0046 3722     		mov	r2, #55
 8451 0048 BC18     		add	r4, r7, r2
 8452 004a 1422     		mov	r2, #20
 8453 004c BA18     		add	r2, r7, r2
 8454 004e 101C     		mov	r0, r2
 8455 0050 191C     		mov	r1, r3
 8456 0052 FFF7FEFF 		bl	follow_path
 8457 0056 031C     		mov	r3, r0
 8458 0058 2370     		strb	r3, [r4]
3343:.\ff/ff.c     **** 		FREE_BUF();
3344:.\ff/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3345:.\ff/ff.c     **** 			res = FR_INVALID_NAME;
3346:.\ff/ff.c     **** 		if (res == FR_OK) {
 8459              		.loc 1 3346 0
 8460 005a 3723     		mov	r3, #55
 8461 005c FB18     		add	r3, r7, r3
 8462 005e 1B78     		ldrb	r3, [r3]
 8463 0060 002B     		cmp	r3, #0
 8464 0062 34D1     		bne	.L428
3347:.\ff/ff.c     **** 			dir = dj.dir;
 8465              		.loc 1 3347 0
 8466 0064 1423     		mov	r3, #20
 8467 0066 FB18     		add	r3, r7, r3
 8468 0068 5B69     		ldr	r3, [r3, #20]
 8469 006a 3B63     		str	r3, [r7, #48]
3348:.\ff/ff.c     **** 			if (!dir) {						/* Is it a root directory? */
 8470              		.loc 1 3348 0
 8471 006c 3B6B     		ldr	r3, [r7, #48]
 8472 006e 002B     		cmp	r3, #0
 8473 0070 04D1     		bne	.L429
3349:.\ff/ff.c     **** 				res = FR_INVALID_NAME;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 209


 8474              		.loc 1 3349 0
 8475 0072 3723     		mov	r3, #55
 8476 0074 FB18     		add	r3, r7, r3
 8477 0076 0622     		mov	r2, #6
 8478 0078 1A70     		strb	r2, [r3]
 8479 007a 28E0     		b	.L428
 8480              	.L429:
3350:.\ff/ff.c     **** 			} else {						/* File or sub directory */
3351:.\ff/ff.c     **** 				mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
 8481              		.loc 1 3351 0
 8482 007c BB1C     		add	r3, r7, #2
 8483 007e BA1C     		add	r2, r7, #2
 8484 0080 1278     		ldrb	r2, [r2]
 8485 0082 2721     		mov	r1, #39
 8486 0084 0A40     		and	r2, r1
 8487 0086 1A70     		strb	r2, [r3]
3352:.\ff/ff.c     **** 				dir[DIR_Attr] = (value & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
 8488              		.loc 1 3352 0
 8489 0088 3B6B     		ldr	r3, [r7, #48]
 8490 008a 0B33     		add	r3, r3, #11
 8491 008c FA1C     		add	r2, r7, #3
 8492 008e B91C     		add	r1, r7, #2
 8493 0090 1278     		ldrb	r2, [r2]
 8494 0092 0978     		ldrb	r1, [r1]
 8495 0094 0A40     		and	r2, r1
 8496 0096 D1B2     		uxtb	r1, r2
 8497 0098 3A6B     		ldr	r2, [r7, #48]
 8498 009a 0B32     		add	r2, r2, #11
 8499 009c 1278     		ldrb	r2, [r2]
 8500 009e B81C     		add	r0, r7, #2
 8501 00a0 0078     		ldrb	r0, [r0]
 8502 00a2 C043     		mvn	r0, r0
 8503 00a4 C0B2     		uxtb	r0, r0
 8504 00a6 0240     		and	r2, r0
 8505 00a8 D2B2     		uxtb	r2, r2
 8506 00aa 0A43     		orr	r2, r1
 8507 00ac D2B2     		uxtb	r2, r2
 8508 00ae 1A70     		strb	r2, [r3]
3353:.\ff/ff.c     **** 				dj.fs->wflag = 1;
 8509              		.loc 1 3353 0
 8510 00b0 1423     		mov	r3, #20
 8511 00b2 FB18     		add	r3, r7, r3
 8512 00b4 1B68     		ldr	r3, [r3]
 8513 00b6 0122     		mov	r2, #1
 8514 00b8 1A71     		strb	r2, [r3, #4]
3354:.\ff/ff.c     **** 				res = sync(dj.fs);
 8515              		.loc 1 3354 0
 8516 00ba 1423     		mov	r3, #20
 8517 00bc FB18     		add	r3, r7, r3
 8518 00be 1B68     		ldr	r3, [r3]
 8519 00c0 3722     		mov	r2, #55
 8520 00c2 BC18     		add	r4, r7, r2
 8521 00c4 181C     		mov	r0, r3
 8522 00c6 FFF7FEFF 		bl	sync
 8523 00ca 031C     		mov	r3, r0
 8524 00cc 2370     		strb	r3, [r4]
 8525              	.L428:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 210


3355:.\ff/ff.c     **** 			}
3356:.\ff/ff.c     **** 		}
3357:.\ff/ff.c     **** 	}
3358:.\ff/ff.c     **** 
3359:.\ff/ff.c     **** 	LEAVE_FF(dj.fs, res);
 8526              		.loc 1 3359 0
 8527 00ce 3723     		mov	r3, #55
 8528 00d0 FB18     		add	r3, r7, r3
 8529 00d2 1B78     		ldrb	r3, [r3]
3360:.\ff/ff.c     **** }
 8530              		.loc 1 3360 0
 8531 00d4 181C     		mov	r0, r3
 8532 00d6 BD46     		mov	sp, r7
 8533 00d8 0FB0     		add	sp, sp, #60
 8534              		@ sp needed
 8535 00da 90BD     		pop	{r4, r7, pc}
 8536              		.cfi_endproc
 8537              	.LFE39:
 8538              		.size	f_chmod, .-f_chmod
 8539              		.section	.text.f_utime,"ax",%progbits
 8540              		.align	2
 8541              		.global	f_utime
 8542              		.code	16
 8543              		.thumb_func
 8544              		.type	f_utime, %function
 8545              	f_utime:
 8546              	.LFB40:
3361:.\ff/ff.c     **** 
3362:.\ff/ff.c     **** 
3363:.\ff/ff.c     **** 
3364:.\ff/ff.c     **** 
3365:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3366:.\ff/ff.c     **** /* Change Timestamp                                                      */
3367:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3368:.\ff/ff.c     **** 
3369:.\ff/ff.c     **** FRESULT f_utime (
3370:.\ff/ff.c     **** 	const TCHAR *path,	/* Pointer to the file/directory name */
3371:.\ff/ff.c     **** 	const FILINFO *fno	/* Pointer to the time stamp to be set */
3372:.\ff/ff.c     **** )
3373:.\ff/ff.c     **** {
 8547              		.loc 1 3373 0
 8548              		.cfi_startproc
 8549 0000 90B5     		push	{r4, r7, lr}
 8550              		.cfi_def_cfa_offset 12
 8551              		.cfi_offset 4, -12
 8552              		.cfi_offset 7, -8
 8553              		.cfi_offset 14, -4
 8554 0002 8FB0     		sub	sp, sp, #60
 8555              		.cfi_def_cfa_offset 72
 8556 0004 00AF     		add	r7, sp, #0
 8557              		.cfi_def_cfa_register 7
 8558 0006 7860     		str	r0, [r7, #4]
 8559 0008 3960     		str	r1, [r7]
3374:.\ff/ff.c     **** 	FRESULT res;
3375:.\ff/ff.c     **** 	DIR dj;
3376:.\ff/ff.c     **** 	BYTE *dir;
3377:.\ff/ff.c     **** 	DEF_NAMEBUF;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 211


3378:.\ff/ff.c     **** 
3379:.\ff/ff.c     **** 
3380:.\ff/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 8560              		.loc 1 3380 0
 8561 000a 3723     		mov	r3, #55
 8562 000c FC18     		add	r4, r7, r3
 8563 000e 3A1D     		add	r2, r7, #4
 8564 0010 1423     		mov	r3, #20
 8565 0012 FB18     		add	r3, r7, r3
 8566 0014 101C     		mov	r0, r2
 8567 0016 191C     		mov	r1, r3
 8568 0018 0122     		mov	r2, #1
 8569 001a FFF7FEFF 		bl	chk_mounted
 8570 001e 031C     		mov	r3, r0
 8571 0020 2370     		strb	r3, [r4]
3381:.\ff/ff.c     **** 	if (res == FR_OK) {
 8572              		.loc 1 3381 0
 8573 0022 3723     		mov	r3, #55
 8574 0024 FB18     		add	r3, r7, r3
 8575 0026 1B78     		ldrb	r3, [r3]
 8576 0028 002B     		cmp	r3, #0
 8577 002a 4BD1     		bne	.L432
3382:.\ff/ff.c     **** 		INIT_BUF(dj);
 8578              		.loc 1 3382 0
 8579 002c 1423     		mov	r3, #20
 8580 002e FB18     		add	r3, r7, r3
 8581 0030 0822     		mov	r2, #8
 8582 0032 BA18     		add	r2, r7, r2
 8583 0034 9A61     		str	r2, [r3, #24]
3383:.\ff/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 8584              		.loc 1 3383 0
 8585 0036 7B68     		ldr	r3, [r7, #4]
 8586 0038 3722     		mov	r2, #55
 8587 003a BC18     		add	r4, r7, r2
 8588 003c 1422     		mov	r2, #20
 8589 003e BA18     		add	r2, r7, r2
 8590 0040 101C     		mov	r0, r2
 8591 0042 191C     		mov	r1, r3
 8592 0044 FFF7FEFF 		bl	follow_path
 8593 0048 031C     		mov	r3, r0
 8594 004a 2370     		strb	r3, [r4]
3384:.\ff/ff.c     **** 		FREE_BUF();
3385:.\ff/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3386:.\ff/ff.c     **** 			res = FR_INVALID_NAME;
3387:.\ff/ff.c     **** 		if (res == FR_OK) {
 8595              		.loc 1 3387 0
 8596 004c 3723     		mov	r3, #55
 8597 004e FB18     		add	r3, r7, r3
 8598 0050 1B78     		ldrb	r3, [r3]
 8599 0052 002B     		cmp	r3, #0
 8600 0054 36D1     		bne	.L432
3388:.\ff/ff.c     **** 			dir = dj.dir;
 8601              		.loc 1 3388 0
 8602 0056 1423     		mov	r3, #20
 8603 0058 FB18     		add	r3, r7, r3
 8604 005a 5B69     		ldr	r3, [r3, #20]
 8605 005c 3B63     		str	r3, [r7, #48]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 212


3389:.\ff/ff.c     **** 			if (!dir) {					/* Root directory */
 8606              		.loc 1 3389 0
 8607 005e 3B6B     		ldr	r3, [r7, #48]
 8608 0060 002B     		cmp	r3, #0
 8609 0062 04D1     		bne	.L433
3390:.\ff/ff.c     **** 				res = FR_INVALID_NAME;
 8610              		.loc 1 3390 0
 8611 0064 3723     		mov	r3, #55
 8612 0066 FB18     		add	r3, r7, r3
 8613 0068 0622     		mov	r2, #6
 8614 006a 1A70     		strb	r2, [r3]
 8615 006c 2AE0     		b	.L432
 8616              	.L433:
3391:.\ff/ff.c     **** 			} else {					/* File or sub-directory */
3392:.\ff/ff.c     **** 				ST_WORD(dir+DIR_WrtTime, fno->ftime);
 8617              		.loc 1 3392 0
 8618 006e 3B6B     		ldr	r3, [r7, #48]
 8619 0070 1633     		add	r3, r3, #22
 8620 0072 3A68     		ldr	r2, [r7]
 8621 0074 D288     		ldrh	r2, [r2, #6]
 8622 0076 D2B2     		uxtb	r2, r2
 8623 0078 1A70     		strb	r2, [r3]
 8624 007a 3B6B     		ldr	r3, [r7, #48]
 8625 007c 1733     		add	r3, r3, #23
 8626 007e 3A68     		ldr	r2, [r7]
 8627 0080 D288     		ldrh	r2, [r2, #6]
 8628 0082 120A     		lsr	r2, r2, #8
 8629 0084 92B2     		uxth	r2, r2
 8630 0086 D2B2     		uxtb	r2, r2
 8631 0088 1A70     		strb	r2, [r3]
3393:.\ff/ff.c     **** 				ST_WORD(dir+DIR_WrtDate, fno->fdate);
 8632              		.loc 1 3393 0
 8633 008a 3B6B     		ldr	r3, [r7, #48]
 8634 008c 1833     		add	r3, r3, #24
 8635 008e 3A68     		ldr	r2, [r7]
 8636 0090 9288     		ldrh	r2, [r2, #4]
 8637 0092 D2B2     		uxtb	r2, r2
 8638 0094 1A70     		strb	r2, [r3]
 8639 0096 3B6B     		ldr	r3, [r7, #48]
 8640 0098 1933     		add	r3, r3, #25
 8641 009a 3A68     		ldr	r2, [r7]
 8642 009c 9288     		ldrh	r2, [r2, #4]
 8643 009e 120A     		lsr	r2, r2, #8
 8644 00a0 92B2     		uxth	r2, r2
 8645 00a2 D2B2     		uxtb	r2, r2
 8646 00a4 1A70     		strb	r2, [r3]
3394:.\ff/ff.c     **** 				dj.fs->wflag = 1;
 8647              		.loc 1 3394 0
 8648 00a6 1423     		mov	r3, #20
 8649 00a8 FB18     		add	r3, r7, r3
 8650 00aa 1B68     		ldr	r3, [r3]
 8651 00ac 0122     		mov	r2, #1
 8652 00ae 1A71     		strb	r2, [r3, #4]
3395:.\ff/ff.c     **** 				res = sync(dj.fs);
 8653              		.loc 1 3395 0
 8654 00b0 1423     		mov	r3, #20
 8655 00b2 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 213


 8656 00b4 1B68     		ldr	r3, [r3]
 8657 00b6 3722     		mov	r2, #55
 8658 00b8 BC18     		add	r4, r7, r2
 8659 00ba 181C     		mov	r0, r3
 8660 00bc FFF7FEFF 		bl	sync
 8661 00c0 031C     		mov	r3, r0
 8662 00c2 2370     		strb	r3, [r4]
 8663              	.L432:
3396:.\ff/ff.c     **** 			}
3397:.\ff/ff.c     **** 		}
3398:.\ff/ff.c     **** 	}
3399:.\ff/ff.c     **** 
3400:.\ff/ff.c     **** 	LEAVE_FF(dj.fs, res);
 8664              		.loc 1 3400 0
 8665 00c4 3723     		mov	r3, #55
 8666 00c6 FB18     		add	r3, r7, r3
 8667 00c8 1B78     		ldrb	r3, [r3]
3401:.\ff/ff.c     **** }
 8668              		.loc 1 3401 0
 8669 00ca 181C     		mov	r0, r3
 8670 00cc BD46     		mov	sp, r7
 8671 00ce 0FB0     		add	sp, sp, #60
 8672              		@ sp needed
 8673 00d0 90BD     		pop	{r4, r7, pc}
 8674              		.cfi_endproc
 8675              	.LFE40:
 8676              		.size	f_utime, .-f_utime
 8677 00d2 C046     		.section	.text.f_rename,"ax",%progbits
 8678              		.align	2
 8679              		.global	f_rename
 8680              		.code	16
 8681              		.thumb_func
 8682              		.type	f_rename, %function
 8683              	f_rename:
 8684              	.LFB41:
3402:.\ff/ff.c     **** 
3403:.\ff/ff.c     **** 
3404:.\ff/ff.c     **** 
3405:.\ff/ff.c     **** 
3406:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3407:.\ff/ff.c     **** /* Rename File/Directory                                                 */
3408:.\ff/ff.c     **** /*-----------------------------------------------------------------------*/
3409:.\ff/ff.c     **** 
3410:.\ff/ff.c     **** FRESULT f_rename (
3411:.\ff/ff.c     **** 	const TCHAR *path_old,	/* Pointer to the old name */
3412:.\ff/ff.c     **** 	const TCHAR *path_new	/* Pointer to the new name */
3413:.\ff/ff.c     **** )
3414:.\ff/ff.c     **** {
 8685              		.loc 1 3414 0
 8686              		.cfi_startproc
 8687 0000 90B5     		push	{r4, r7, lr}
 8688              		.cfi_def_cfa_offset 12
 8689              		.cfi_offset 4, -12
 8690              		.cfi_offset 7, -8
 8691              		.cfi_offset 14, -4
 8692 0002 9DB0     		sub	sp, sp, #116
 8693              		.cfi_def_cfa_offset 128
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 214


 8694 0004 00AF     		add	r7, sp, #0
 8695              		.cfi_def_cfa_register 7
 8696 0006 7860     		str	r0, [r7, #4]
 8697 0008 3960     		str	r1, [r7]
3415:.\ff/ff.c     **** 	FRESULT res;
3416:.\ff/ff.c     **** 	DIR djo, djn;
3417:.\ff/ff.c     **** 	BYTE buf[21], *dir;
3418:.\ff/ff.c     **** 	DWORD dw;
3419:.\ff/ff.c     **** 	DEF_NAMEBUF;
3420:.\ff/ff.c     **** 
3421:.\ff/ff.c     **** 
3422:.\ff/ff.c     **** 	res = chk_mounted(&path_old, &djo.fs, 1);
 8698              		.loc 1 3422 0
 8699 000a 6F23     		mov	r3, #111
 8700 000c FC18     		add	r4, r7, r3
 8701 000e 3A1D     		add	r2, r7, #4
 8702 0010 4823     		mov	r3, #72
 8703 0012 FB18     		add	r3, r7, r3
 8704 0014 101C     		mov	r0, r2
 8705 0016 191C     		mov	r1, r3
 8706 0018 0122     		mov	r2, #1
 8707 001a FFF7FEFF 		bl	chk_mounted
 8708 001e 031C     		mov	r3, r0
 8709 0020 2370     		strb	r3, [r4]
3423:.\ff/ff.c     **** 	if (res == FR_OK) {
 8710              		.loc 1 3423 0
 8711 0022 6F23     		mov	r3, #111
 8712 0024 FB18     		add	r3, r7, r3
 8713 0026 1B78     		ldrb	r3, [r3]
 8714 0028 002B     		cmp	r3, #0
 8715 002a 00D0     		beq	.LCB8089
 8716 002c 29E1     		b	.L436	@long jump
 8717              	.LCB8089:
3424:.\ff/ff.c     **** 		djn.fs = djo.fs;
 8718              		.loc 1 3424 0
 8719 002e 4823     		mov	r3, #72
 8720 0030 FB18     		add	r3, r7, r3
 8721 0032 1A68     		ldr	r2, [r3]
 8722 0034 2C23     		mov	r3, #44
 8723 0036 FB18     		add	r3, r7, r3
 8724 0038 1A60     		str	r2, [r3]
3425:.\ff/ff.c     **** 		INIT_BUF(djo);
 8725              		.loc 1 3425 0
 8726 003a 4823     		mov	r3, #72
 8727 003c FB18     		add	r3, r7, r3
 8728 003e 0822     		mov	r2, #8
 8729 0040 BA18     		add	r2, r7, r2
 8730 0042 9A61     		str	r2, [r3, #24]
3426:.\ff/ff.c     **** 		res = follow_path(&djo, path_old);		/* Check old object */
 8731              		.loc 1 3426 0
 8732 0044 7B68     		ldr	r3, [r7, #4]
 8733 0046 6F22     		mov	r2, #111
 8734 0048 BC18     		add	r4, r7, r2
 8735 004a 4822     		mov	r2, #72
 8736 004c BA18     		add	r2, r7, r2
 8737 004e 101C     		mov	r0, r2
 8738 0050 191C     		mov	r1, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 215


 8739 0052 FFF7FEFF 		bl	follow_path
 8740 0056 031C     		mov	r3, r0
 8741 0058 2370     		strb	r3, [r4]
3427:.\ff/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NS] & NS_DOT))
3428:.\ff/ff.c     **** 			res = FR_INVALID_NAME;
3429:.\ff/ff.c     **** #if _FS_SHARE
3430:.\ff/ff.c     **** 		if (res == FR_OK) res = chk_lock(&djo, 2);
3431:.\ff/ff.c     **** #endif
3432:.\ff/ff.c     **** 		if (res == FR_OK) {						/* Old object is found */
 8742              		.loc 1 3432 0
 8743 005a 6F23     		mov	r3, #111
 8744 005c FB18     		add	r3, r7, r3
 8745 005e 1B78     		ldrb	r3, [r3]
 8746 0060 002B     		cmp	r3, #0
 8747 0062 00D0     		beq	.LCB8115
 8748 0064 0DE1     		b	.L436	@long jump
 8749              	.LCB8115:
3433:.\ff/ff.c     **** 			if (!djo.dir) {						/* Is root dir? */
 8750              		.loc 1 3433 0
 8751 0066 4823     		mov	r3, #72
 8752 0068 FB18     		add	r3, r7, r3
 8753 006a 5B69     		ldr	r3, [r3, #20]
 8754 006c 002B     		cmp	r3, #0
 8755 006e 04D1     		bne	.L437
3434:.\ff/ff.c     **** 				res = FR_NO_FILE;
 8756              		.loc 1 3434 0
 8757 0070 6F23     		mov	r3, #111
 8758 0072 FB18     		add	r3, r7, r3
 8759 0074 0422     		mov	r2, #4
 8760 0076 1A70     		strb	r2, [r3]
 8761 0078 03E1     		b	.L436
 8762              	.L437:
3435:.\ff/ff.c     **** 			} else {
3436:.\ff/ff.c     **** 				mem_cpy(buf, djo.dir+DIR_Attr, 21);		/* Save the object information except for name */
 8763              		.loc 1 3436 0
 8764 007a 4823     		mov	r3, #72
 8765 007c FB18     		add	r3, r7, r3
 8766 007e 5B69     		ldr	r3, [r3, #20]
 8767 0080 0B33     		add	r3, r3, #11
 8768 0082 1422     		mov	r2, #20
 8769 0084 BA18     		add	r2, r7, r2
 8770 0086 101C     		mov	r0, r2
 8771 0088 191C     		mov	r1, r3
 8772 008a 1522     		mov	r2, #21
 8773 008c FFF7FEFF 		bl	mem_cpy
3437:.\ff/ff.c     **** 				mem_cpy(&djn, &djo, sizeof(DIR));		/* Check new object */
 8774              		.loc 1 3437 0
 8775 0090 2C23     		mov	r3, #44
 8776 0092 FA18     		add	r2, r7, r3
 8777 0094 4823     		mov	r3, #72
 8778 0096 FB18     		add	r3, r7, r3
 8779 0098 101C     		mov	r0, r2
 8780 009a 191C     		mov	r1, r3
 8781 009c 1C22     		mov	r2, #28
 8782 009e FFF7FEFF 		bl	mem_cpy
3438:.\ff/ff.c     **** 				res = follow_path(&djn, path_new);
 8783              		.loc 1 3438 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 216


 8784 00a2 6F23     		mov	r3, #111
 8785 00a4 FC18     		add	r4, r7, r3
 8786 00a6 2C23     		mov	r3, #44
 8787 00a8 FA18     		add	r2, r7, r3
 8788 00aa 3B68     		ldr	r3, [r7]
 8789 00ac 101C     		mov	r0, r2
 8790 00ae 191C     		mov	r1, r3
 8791 00b0 FFF7FEFF 		bl	follow_path
 8792 00b4 031C     		mov	r3, r0
 8793 00b6 2370     		strb	r3, [r4]
3439:.\ff/ff.c     **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
 8794              		.loc 1 3439 0
 8795 00b8 6F23     		mov	r3, #111
 8796 00ba FB18     		add	r3, r7, r3
 8797 00bc 1B78     		ldrb	r3, [r3]
 8798 00be 002B     		cmp	r3, #0
 8799 00c0 03D1     		bne	.L438
 8800              		.loc 1 3439 0 is_stmt 0 discriminator 1
 8801 00c2 6F23     		mov	r3, #111
 8802 00c4 FB18     		add	r3, r7, r3
 8803 00c6 0822     		mov	r2, #8
 8804 00c8 1A70     		strb	r2, [r3]
 8805              	.L438:
3440:.\ff/ff.c     **** 				if (res == FR_NO_FILE) { 				/* Is it a valid path and no name collision? */
 8806              		.loc 1 3440 0 is_stmt 1
 8807 00ca 6F23     		mov	r3, #111
 8808 00cc FB18     		add	r3, r7, r3
 8809 00ce 1B78     		ldrb	r3, [r3]
 8810 00d0 042B     		cmp	r3, #4
 8811 00d2 00D0     		beq	.LCB8172
 8812 00d4 D5E0     		b	.L436	@long jump
 8813              	.LCB8172:
3441:.\ff/ff.c     **** /* Start critical section that any interruption or error can cause cross-link */
3442:.\ff/ff.c     **** 					res = dir_register(&djn);			/* Register the new entry */
 8814              		.loc 1 3442 0
 8815 00d6 6F23     		mov	r3, #111
 8816 00d8 FC18     		add	r4, r7, r3
 8817 00da 2C23     		mov	r3, #44
 8818 00dc FB18     		add	r3, r7, r3
 8819 00de 181C     		mov	r0, r3
 8820 00e0 FFF7FEFF 		bl	dir_register
 8821 00e4 031C     		mov	r3, r0
 8822 00e6 2370     		strb	r3, [r4]
3443:.\ff/ff.c     **** 					if (res == FR_OK) {
 8823              		.loc 1 3443 0
 8824 00e8 6F23     		mov	r3, #111
 8825 00ea FB18     		add	r3, r7, r3
 8826 00ec 1B78     		ldrb	r3, [r3]
 8827 00ee 002B     		cmp	r3, #0
 8828 00f0 00D0     		beq	.LCB8185
 8829 00f2 C6E0     		b	.L436	@long jump
 8830              	.LCB8185:
3444:.\ff/ff.c     **** 						dir = djn.dir;					/* Copy object information except for name */
 8831              		.loc 1 3444 0
 8832 00f4 2C23     		mov	r3, #44
 8833 00f6 FB18     		add	r3, r7, r3
 8834 00f8 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 217


 8835 00fa BB66     		str	r3, [r7, #104]
3445:.\ff/ff.c     **** 						mem_cpy(dir+13, buf+2, 19);
 8836              		.loc 1 3445 0
 8837 00fc BB6E     		ldr	r3, [r7, #104]
 8838 00fe 0D33     		add	r3, r3, #13
 8839 0100 1A1C     		mov	r2, r3
 8840 0102 1423     		mov	r3, #20
 8841 0104 FB18     		add	r3, r7, r3
 8842 0106 0233     		add	r3, r3, #2
 8843 0108 101C     		mov	r0, r2
 8844 010a 191C     		mov	r1, r3
 8845 010c 1322     		mov	r2, #19
 8846 010e FFF7FEFF 		bl	mem_cpy
3446:.\ff/ff.c     **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 8847              		.loc 1 3446 0
 8848 0112 BB6E     		ldr	r3, [r7, #104]
 8849 0114 0B33     		add	r3, r3, #11
 8850 0116 1422     		mov	r2, #20
 8851 0118 BA18     		add	r2, r7, r2
 8852 011a 1278     		ldrb	r2, [r2]
 8853 011c 2021     		mov	r1, #32
 8854 011e 0A43     		orr	r2, r1
 8855 0120 D2B2     		uxtb	r2, r2
 8856 0122 1A70     		strb	r2, [r3]
3447:.\ff/ff.c     **** 						djo.fs->wflag = 1;
 8857              		.loc 1 3447 0
 8858 0124 4823     		mov	r3, #72
 8859 0126 FB18     		add	r3, r7, r3
 8860 0128 1B68     		ldr	r3, [r3]
 8861 012a 0122     		mov	r2, #1
 8862 012c 1A71     		strb	r2, [r3, #4]
3448:.\ff/ff.c     **** 						if (djo.sclust != djn.sclust && (dir[DIR_Attr] & AM_DIR)) {		/* Update .. entry in the direct
 8863              		.loc 1 3448 0
 8864 012e 4823     		mov	r3, #72
 8865 0130 FB18     		add	r3, r7, r3
 8866 0132 9A68     		ldr	r2, [r3, #8]
 8867 0134 2C23     		mov	r3, #44
 8868 0136 FB18     		add	r3, r7, r3
 8869 0138 9B68     		ldr	r3, [r3, #8]
 8870 013a 9A42     		cmp	r2, r3
 8871 013c 00D1     		bne	.LCB8221
 8872 013e 83E0     		b	.L439	@long jump
 8873              	.LCB8221:
 8874              		.loc 1 3448 0 is_stmt 0 discriminator 1
 8875 0140 BB6E     		ldr	r3, [r7, #104]
 8876 0142 0B33     		add	r3, r3, #11
 8877 0144 1B78     		ldrb	r3, [r3]
 8878 0146 1A1C     		mov	r2, r3
 8879 0148 1023     		mov	r3, #16
 8880 014a 1340     		and	r3, r2
 8881 014c 00D1     		bne	.LCB8229
 8882 014e 7BE0     		b	.L439	@long jump
 8883              	.LCB8229:
3449:.\ff/ff.c     **** 							dw = clust2sect(djn.fs, LD_CLUST(dir));
 8884              		.loc 1 3449 0 is_stmt 1
 8885 0150 2C23     		mov	r3, #44
 8886 0152 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 218


 8887 0154 1968     		ldr	r1, [r3]
 8888 0156 BB6E     		ldr	r3, [r7, #104]
 8889 0158 1533     		add	r3, r3, #21
 8890 015a 1B78     		ldrb	r3, [r3]
 8891 015c 1B02     		lsl	r3, r3, #8
 8892 015e 9AB2     		uxth	r2, r3
 8893 0160 BB6E     		ldr	r3, [r7, #104]
 8894 0162 1433     		add	r3, r3, #20
 8895 0164 1B78     		ldrb	r3, [r3]
 8896 0166 9BB2     		uxth	r3, r3
 8897 0168 1343     		orr	r3, r2
 8898 016a 9BB2     		uxth	r3, r3
 8899 016c 9BB2     		uxth	r3, r3
 8900 016e 1B04     		lsl	r3, r3, #16
 8901 0170 BA6E     		ldr	r2, [r7, #104]
 8902 0172 1B32     		add	r2, r2, #27
 8903 0174 1278     		ldrb	r2, [r2]
 8904 0176 1202     		lsl	r2, r2, #8
 8905 0178 90B2     		uxth	r0, r2
 8906 017a BA6E     		ldr	r2, [r7, #104]
 8907 017c 1A32     		add	r2, r2, #26
 8908 017e 1278     		ldrb	r2, [r2]
 8909 0180 92B2     		uxth	r2, r2
 8910 0182 0243     		orr	r2, r0
 8911 0184 92B2     		uxth	r2, r2
 8912 0186 92B2     		uxth	r2, r2
 8913 0188 1343     		orr	r3, r2
 8914 018a 081C     		mov	r0, r1
 8915 018c 191C     		mov	r1, r3
 8916 018e FFF7FEFF 		bl	clust2sect
 8917 0192 031C     		mov	r3, r0
 8918 0194 7B66     		str	r3, [r7, #100]
3450:.\ff/ff.c     **** 							if (!dw) {
 8919              		.loc 1 3450 0
 8920 0196 7B6E     		ldr	r3, [r7, #100]
 8921 0198 002B     		cmp	r3, #0
 8922 019a 04D1     		bne	.L440
3451:.\ff/ff.c     **** 								res = FR_INT_ERR;
 8923              		.loc 1 3451 0
 8924 019c 6F23     		mov	r3, #111
 8925 019e FB18     		add	r3, r7, r3
 8926 01a0 0222     		mov	r2, #2
 8927 01a2 1A70     		strb	r2, [r3]
 8928 01a4 50E0     		b	.L439
 8929              	.L440:
3452:.\ff/ff.c     **** 							} else {
3453:.\ff/ff.c     **** 								res = move_window(djn.fs, dw);
 8930              		.loc 1 3453 0
 8931 01a6 2C23     		mov	r3, #44
 8932 01a8 FB18     		add	r3, r7, r3
 8933 01aa 1A68     		ldr	r2, [r3]
 8934 01ac 6F23     		mov	r3, #111
 8935 01ae FC18     		add	r4, r7, r3
 8936 01b0 7B6E     		ldr	r3, [r7, #100]
 8937 01b2 101C     		mov	r0, r2
 8938 01b4 191C     		mov	r1, r3
 8939 01b6 FFF7FEFF 		bl	move_window
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 219


 8940 01ba 031C     		mov	r3, r0
 8941 01bc 2370     		strb	r3, [r4]
3454:.\ff/ff.c     **** 								dir = djn.fs->win+SZ_DIR;	/* .. entry */
 8942              		.loc 1 3454 0
 8943 01be 2C23     		mov	r3, #44
 8944 01c0 FB18     		add	r3, r7, r3
 8945 01c2 1B68     		ldr	r3, [r3]
 8946 01c4 5033     		add	r3, r3, #80
 8947 01c6 BB66     		str	r3, [r7, #104]
3455:.\ff/ff.c     **** 								if (res == FR_OK && dir[1] == '.') {
 8948              		.loc 1 3455 0
 8949 01c8 6F23     		mov	r3, #111
 8950 01ca FB18     		add	r3, r7, r3
 8951 01cc 1B78     		ldrb	r3, [r3]
 8952 01ce 002B     		cmp	r3, #0
 8953 01d0 3AD1     		bne	.L439
 8954              		.loc 1 3455 0 is_stmt 0 discriminator 1
 8955 01d2 BB6E     		ldr	r3, [r7, #104]
 8956 01d4 0133     		add	r3, r3, #1
 8957 01d6 1B78     		ldrb	r3, [r3]
 8958 01d8 2E2B     		cmp	r3, #46
 8959 01da 35D1     		bne	.L439
3456:.\ff/ff.c     **** 									dw = (djn.fs->fs_type == FS_FAT32 && djn.sclust == djn.fs->dirbase) ? 0 : djn.sclust;
 8960              		.loc 1 3456 0 is_stmt 1
 8961 01dc 2C23     		mov	r3, #44
 8962 01de FB18     		add	r3, r7, r3
 8963 01e0 1B68     		ldr	r3, [r3]
 8964 01e2 1B78     		ldrb	r3, [r3]
 8965 01e4 032B     		cmp	r3, #3
 8966 01e6 08D1     		bne	.L441
 8967              		.loc 1 3456 0 is_stmt 0 discriminator 2
 8968 01e8 2C23     		mov	r3, #44
 8969 01ea FB18     		add	r3, r7, r3
 8970 01ec 9A68     		ldr	r2, [r3, #8]
 8971 01ee 2C23     		mov	r3, #44
 8972 01f0 FB18     		add	r3, r7, r3
 8973 01f2 1B68     		ldr	r3, [r3]
 8974 01f4 5B6A     		ldr	r3, [r3, #36]
 8975 01f6 9A42     		cmp	r2, r3
 8976 01f8 03D0     		beq	.L442
 8977              	.L441:
 8978              		.loc 1 3456 0 discriminator 3
 8979 01fa 2C23     		mov	r3, #44
 8980 01fc FB18     		add	r3, r7, r3
 8981 01fe 9B68     		ldr	r3, [r3, #8]
 8982 0200 00E0     		b	.L443
 8983              	.L442:
 8984              		.loc 1 3456 0 discriminator 4
 8985 0202 0023     		mov	r3, #0
 8986              	.L443:
 8987              		.loc 1 3456 0 discriminator 6
 8988 0204 7B66     		str	r3, [r7, #100]
3457:.\ff/ff.c     **** 									ST_CLUST(dir, dw);
 8989              		.loc 1 3457 0 is_stmt 1 discriminator 6
 8990 0206 BB6E     		ldr	r3, [r7, #104]
 8991 0208 1A33     		add	r3, r3, #26
 8992 020a 7A6E     		ldr	r2, [r7, #100]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 220


 8993 020c D2B2     		uxtb	r2, r2
 8994 020e 1A70     		strb	r2, [r3]
 8995 0210 BB6E     		ldr	r3, [r7, #104]
 8996 0212 1B33     		add	r3, r3, #27
 8997 0214 7A6E     		ldr	r2, [r7, #100]
 8998 0216 92B2     		uxth	r2, r2
 8999 0218 120A     		lsr	r2, r2, #8
 9000 021a 92B2     		uxth	r2, r2
 9001 021c D2B2     		uxtb	r2, r2
 9002 021e 1A70     		strb	r2, [r3]
 9003 0220 BB6E     		ldr	r3, [r7, #104]
 9004 0222 1433     		add	r3, r3, #20
 9005 0224 7A6E     		ldr	r2, [r7, #100]
 9006 0226 120C     		lsr	r2, r2, #16
 9007 0228 D2B2     		uxtb	r2, r2
 9008 022a 1A70     		strb	r2, [r3]
 9009 022c BB6E     		ldr	r3, [r7, #104]
 9010 022e 1533     		add	r3, r3, #21
 9011 0230 7A6E     		ldr	r2, [r7, #100]
 9012 0232 120C     		lsr	r2, r2, #16
 9013 0234 92B2     		uxth	r2, r2
 9014 0236 120A     		lsr	r2, r2, #8
 9015 0238 92B2     		uxth	r2, r2
 9016 023a D2B2     		uxtb	r2, r2
 9017 023c 1A70     		strb	r2, [r3]
3458:.\ff/ff.c     **** 									djn.fs->wflag = 1;
 9018              		.loc 1 3458 0 discriminator 6
 9019 023e 2C23     		mov	r3, #44
 9020 0240 FB18     		add	r3, r7, r3
 9021 0242 1B68     		ldr	r3, [r3]
 9022 0244 0122     		mov	r2, #1
 9023 0246 1A71     		strb	r2, [r3, #4]
 9024              	.L439:
3459:.\ff/ff.c     **** 								}
3460:.\ff/ff.c     **** 							}
3461:.\ff/ff.c     **** 						}
3462:.\ff/ff.c     **** 						if (res == FR_OK) {
 9025              		.loc 1 3462 0
 9026 0248 6F23     		mov	r3, #111
 9027 024a FB18     		add	r3, r7, r3
 9028 024c 1B78     		ldrb	r3, [r3]
 9029 024e 002B     		cmp	r3, #0
 9030 0250 17D1     		bne	.L436
3463:.\ff/ff.c     **** 							res = dir_remove(&djo);		/* Remove old entry */
 9031              		.loc 1 3463 0
 9032 0252 6F23     		mov	r3, #111
 9033 0254 FC18     		add	r4, r7, r3
 9034 0256 4823     		mov	r3, #72
 9035 0258 FB18     		add	r3, r7, r3
 9036 025a 181C     		mov	r0, r3
 9037 025c FFF7FEFF 		bl	dir_remove
 9038 0260 031C     		mov	r3, r0
 9039 0262 2370     		strb	r3, [r4]
3464:.\ff/ff.c     **** 							if (res == FR_OK)
 9040              		.loc 1 3464 0
 9041 0264 6F23     		mov	r3, #111
 9042 0266 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 221


 9043 0268 1B78     		ldrb	r3, [r3]
 9044 026a 002B     		cmp	r3, #0
 9045 026c 09D1     		bne	.L436
3465:.\ff/ff.c     **** 								res = sync(djo.fs);
 9046              		.loc 1 3465 0
 9047 026e 4823     		mov	r3, #72
 9048 0270 FB18     		add	r3, r7, r3
 9049 0272 1B68     		ldr	r3, [r3]
 9050 0274 6F22     		mov	r2, #111
 9051 0276 BC18     		add	r4, r7, r2
 9052 0278 181C     		mov	r0, r3
 9053 027a FFF7FEFF 		bl	sync
 9054 027e 031C     		mov	r3, r0
 9055 0280 2370     		strb	r3, [r4]
 9056              	.L436:
3466:.\ff/ff.c     **** 						}
3467:.\ff/ff.c     **** 					}
3468:.\ff/ff.c     **** /* End critical section */
3469:.\ff/ff.c     **** 				}
3470:.\ff/ff.c     **** 			}
3471:.\ff/ff.c     **** 		}
3472:.\ff/ff.c     **** 		FREE_BUF();
3473:.\ff/ff.c     **** 	}
3474:.\ff/ff.c     **** 	LEAVE_FF(djo.fs, res);
 9057              		.loc 1 3474 0
 9058 0282 6F23     		mov	r3, #111
 9059 0284 FB18     		add	r3, r7, r3
 9060 0286 1B78     		ldrb	r3, [r3]
3475:.\ff/ff.c     **** }
 9061              		.loc 1 3475 0
 9062 0288 181C     		mov	r0, r3
 9063 028a BD46     		mov	sp, r7
 9064 028c 1DB0     		add	sp, sp, #116
 9065              		@ sp needed
 9066 028e 90BD     		pop	{r4, r7, pc}
 9067              		.cfi_endproc
 9068              	.LFE41:
 9069              		.size	f_rename, .-f_rename
 9070              		.section	.rodata
 9071 000f 00       		.align	2
 9072              		.type	excvt.5064, %object
 9073              		.size	excvt.5064, 128
 9074              	excvt.5064:
 9075 0010 80       		.byte	-128
 9076 0011 81       		.byte	-127
 9077 0012 82       		.byte	-126
 9078 0013 82       		.byte	-126
 9079 0014 84       		.byte	-124
 9080 0015 85       		.byte	-123
 9081 0016 86       		.byte	-122
 9082 0017 87       		.byte	-121
 9083 0018 88       		.byte	-120
 9084 0019 89       		.byte	-119
 9085 001a 8A       		.byte	-118
 9086 001b 8B       		.byte	-117
 9087 001c 8C       		.byte	-116
 9088 001d 8D       		.byte	-115
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 222


 9089 001e 8E       		.byte	-114
 9090 001f 8F       		.byte	-113
 9091 0020 80       		.byte	-128
 9092 0021 91       		.byte	-111
 9093 0022 92       		.byte	-110
 9094 0023 93       		.byte	-109
 9095 0024 94       		.byte	-108
 9096 0025 95       		.byte	-107
 9097 0026 96       		.byte	-106
 9098 0027 97       		.byte	-105
 9099 0028 98       		.byte	-104
 9100 0029 99       		.byte	-103
 9101 002a 8A       		.byte	-118
 9102 002b 9B       		.byte	-101
 9103 002c 8C       		.byte	-116
 9104 002d 8D       		.byte	-115
 9105 002e 8E       		.byte	-114
 9106 002f 8F       		.byte	-113
 9107 0030 A0       		.byte	-96
 9108 0031 A2       		.byte	-94
 9109 0032 A2       		.byte	-94
 9110 0033 A3       		.byte	-93
 9111 0034 A4       		.byte	-92
 9112 0035 A5       		.byte	-91
 9113 0036 A6       		.byte	-90
 9114 0037 A7       		.byte	-89
 9115 0038 A8       		.byte	-88
 9116 0039 A9       		.byte	-87
 9117 003a AA       		.byte	-86
 9118 003b AB       		.byte	-85
 9119 003c AC       		.byte	-84
 9120 003d AD       		.byte	-83
 9121 003e AE       		.byte	-82
 9122 003f AF       		.byte	-81
 9123 0040 B0       		.byte	-80
 9124 0041 B1       		.byte	-79
 9125 0042 B2       		.byte	-78
 9126 0043 B2       		.byte	-78
 9127 0044 A5       		.byte	-91
 9128 0045 B5       		.byte	-75
 9129 0046 B6       		.byte	-74
 9130 0047 B7       		.byte	-73
 9131 0048 A8       		.byte	-88
 9132 0049 B9       		.byte	-71
 9133 004a AA       		.byte	-86
 9134 004b BB       		.byte	-69
 9135 004c A3       		.byte	-93
 9136 004d BD       		.byte	-67
 9137 004e BD       		.byte	-67
 9138 004f AF       		.byte	-81
 9139 0050 C0       		.byte	-64
 9140 0051 C1       		.byte	-63
 9141 0052 C2       		.byte	-62
 9142 0053 C3       		.byte	-61
 9143 0054 C4       		.byte	-60
 9144 0055 C5       		.byte	-59
 9145 0056 C6       		.byte	-58
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 223


 9146 0057 C7       		.byte	-57
 9147 0058 C8       		.byte	-56
 9148 0059 C9       		.byte	-55
 9149 005a CA       		.byte	-54
 9150 005b CB       		.byte	-53
 9151 005c CC       		.byte	-52
 9152 005d CD       		.byte	-51
 9153 005e CE       		.byte	-50
 9154 005f CF       		.byte	-49
 9155 0060 D0       		.byte	-48
 9156 0061 D1       		.byte	-47
 9157 0062 D2       		.byte	-46
 9158 0063 D3       		.byte	-45
 9159 0064 D4       		.byte	-44
 9160 0065 D5       		.byte	-43
 9161 0066 D6       		.byte	-42
 9162 0067 D7       		.byte	-41
 9163 0068 D8       		.byte	-40
 9164 0069 D9       		.byte	-39
 9165 006a DA       		.byte	-38
 9166 006b DB       		.byte	-37
 9167 006c DC       		.byte	-36
 9168 006d DD       		.byte	-35
 9169 006e DE       		.byte	-34
 9170 006f DF       		.byte	-33
 9171 0070 C0       		.byte	-64
 9172 0071 C1       		.byte	-63
 9173 0072 C2       		.byte	-62
 9174 0073 C3       		.byte	-61
 9175 0074 C4       		.byte	-60
 9176 0075 C5       		.byte	-59
 9177 0076 C6       		.byte	-58
 9178 0077 C7       		.byte	-57
 9179 0078 C8       		.byte	-56
 9180 0079 C9       		.byte	-55
 9181 007a CA       		.byte	-54
 9182 007b CB       		.byte	-53
 9183 007c CC       		.byte	-52
 9184 007d CD       		.byte	-51
 9185 007e CE       		.byte	-50
 9186 007f CF       		.byte	-49
 9187 0080 D0       		.byte	-48
 9188 0081 D1       		.byte	-47
 9189 0082 D2       		.byte	-46
 9190 0083 D3       		.byte	-45
 9191 0084 D4       		.byte	-44
 9192 0085 D5       		.byte	-43
 9193 0086 D6       		.byte	-42
 9194 0087 D7       		.byte	-41
 9195 0088 D8       		.byte	-40
 9196 0089 D9       		.byte	-39
 9197 008a DA       		.byte	-38
 9198 008b DB       		.byte	-37
 9199 008c DC       		.byte	-36
 9200 008d DD       		.byte	-35
 9201 008e DE       		.byte	-34
 9202 008f DF       		.byte	-33
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 224


 9203              		.text
 9204              	.Letext0:
 9205              		.file 2 ".\\ff\\integer.h"
 9206              		.file 3 ".\\ff\\ff.h"
 9207              		.file 4 ".\\ff\\diskio.h"
 9208              		.section	.debug_info,"",%progbits
 9209              	.Ldebug_info0:
 9210 0000 01160000 		.4byte	0x1601
 9211 0004 0400     		.2byte	0x4
 9212 0006 00000000 		.4byte	.Ldebug_abbrev0
 9213 000a 04       		.byte	0x4
 9214 000b 01       		.uleb128 0x1
 9215 000c C8020000 		.4byte	.LASF148
 9216 0010 01       		.byte	0x1
 9217 0011 AB030000 		.4byte	.LASF149
 9218 0015 BB030000 		.4byte	.LASF150
 9219 0019 00000000 		.4byte	.Ldebug_ranges0+0
 9220 001d 00000000 		.4byte	0
 9221 0021 00000000 		.4byte	.Ldebug_line0
 9222 0025 02       		.uleb128 0x2
 9223 0026 04       		.byte	0x4
 9224 0027 05       		.byte	0x5
 9225 0028 696E7400 		.ascii	"int\000"
 9226 002c 03       		.uleb128 0x3
 9227 002d C0040000 		.4byte	.LASF3
 9228 0031 02       		.byte	0x2
 9229 0032 11       		.byte	0x11
 9230 0033 37000000 		.4byte	0x37
 9231 0037 04       		.uleb128 0x4
 9232 0038 04       		.byte	0x4
 9233 0039 07       		.byte	0x7
 9234 003a 58000000 		.4byte	.LASF0
 9235 003e 04       		.uleb128 0x4
 9236 003f 01       		.byte	0x1
 9237 0040 08       		.byte	0x8
 9238 0041 FC010000 		.4byte	.LASF1
 9239 0045 04       		.uleb128 0x4
 9240 0046 01       		.byte	0x1
 9241 0047 08       		.byte	0x8
 9242 0048 2D050000 		.4byte	.LASF2
 9243 004c 03       		.uleb128 0x3
 9244 004d C3020000 		.4byte	.LASF4
 9245 0051 02       		.byte	0x2
 9246 0052 16       		.byte	0x16
 9247 0053 45000000 		.4byte	0x45
 9248 0057 04       		.uleb128 0x4
 9249 0058 02       		.byte	0x2
 9250 0059 05       		.byte	0x5
 9251 005a 42040000 		.4byte	.LASF5
 9252 005e 04       		.uleb128 0x4
 9253 005f 02       		.byte	0x2
 9254 0060 07       		.byte	0x7
 9255 0061 86050000 		.4byte	.LASF6
 9256 0065 03       		.uleb128 0x3
 9257 0066 56030000 		.4byte	.LASF7
 9258 006a 02       		.byte	0x2
 9259 006b 1B       		.byte	0x1b
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 225


 9260 006c 5E000000 		.4byte	0x5e
 9261 0070 04       		.uleb128 0x4
 9262 0071 04       		.byte	0x4
 9263 0072 05       		.byte	0x5
 9264 0073 67040000 		.4byte	.LASF8
 9265 0077 04       		.uleb128 0x4
 9266 0078 04       		.byte	0x4
 9267 0079 07       		.byte	0x7
 9268 007a DA040000 		.4byte	.LASF9
 9269 007e 03       		.uleb128 0x3
 9270 007f 0F010000 		.4byte	.LASF10
 9271 0083 02       		.byte	0x2
 9272 0084 21       		.byte	0x21
 9273 0085 77000000 		.4byte	0x77
 9274 0089 03       		.uleb128 0x3
 9275 008a 15010000 		.4byte	.LASF11
 9276 008e 03       		.byte	0x3
 9277 008f 42       		.byte	0x42
 9278 0090 3E000000 		.4byte	0x3e
 9279 0094 05       		.uleb128 0x5
 9280 0095 3002     		.2byte	0x230
 9281 0097 03       		.byte	0x3
 9282 0098 4D       		.byte	0x4d
 9283 0099 75010000 		.4byte	0x175
 9284 009d 06       		.uleb128 0x6
 9285 009e 5A010000 		.4byte	.LASF12
 9286 00a2 03       		.byte	0x3
 9287 00a3 4E       		.byte	0x4e
 9288 00a4 4C000000 		.4byte	0x4c
 9289 00a8 00       		.byte	0
 9290 00a9 07       		.uleb128 0x7
 9291 00aa 64727600 		.ascii	"drv\000"
 9292 00ae 03       		.byte	0x3
 9293 00af 4F       		.byte	0x4f
 9294 00b0 4C000000 		.4byte	0x4c
 9295 00b4 01       		.byte	0x1
 9296 00b5 06       		.uleb128 0x6
 9297 00b6 5B030000 		.4byte	.LASF13
 9298 00ba 03       		.byte	0x3
 9299 00bb 50       		.byte	0x50
 9300 00bc 4C000000 		.4byte	0x4c
 9301 00c0 02       		.byte	0x2
 9302 00c1 06       		.uleb128 0x6
 9303 00c2 76000000 		.4byte	.LASF14
 9304 00c6 03       		.byte	0x3
 9305 00c7 51       		.byte	0x51
 9306 00c8 4C000000 		.4byte	0x4c
 9307 00cc 03       		.byte	0x3
 9308 00cd 06       		.uleb128 0x6
 9309 00ce B2020000 		.4byte	.LASF15
 9310 00d2 03       		.byte	0x3
 9311 00d3 52       		.byte	0x52
 9312 00d4 4C000000 		.4byte	0x4c
 9313 00d8 04       		.byte	0x4
 9314 00d9 06       		.uleb128 0x6
 9315 00da E5000000 		.4byte	.LASF16
 9316 00de 03       		.byte	0x3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 226


 9317 00df 53       		.byte	0x53
 9318 00e0 4C000000 		.4byte	0x4c
 9319 00e4 05       		.byte	0x5
 9320 00e5 07       		.uleb128 0x7
 9321 00e6 696400   		.ascii	"id\000"
 9322 00e9 03       		.byte	0x3
 9323 00ea 54       		.byte	0x54
 9324 00eb 65000000 		.4byte	0x65
 9325 00ef 06       		.byte	0x6
 9326 00f0 06       		.uleb128 0x6
 9327 00f1 AE040000 		.4byte	.LASF17
 9328 00f5 03       		.byte	0x3
 9329 00f6 55       		.byte	0x55
 9330 00f7 65000000 		.4byte	0x65
 9331 00fb 08       		.byte	0x8
 9332 00fc 06       		.uleb128 0x6
 9333 00fd 3D020000 		.4byte	.LASF18
 9334 0101 03       		.byte	0x3
 9335 0102 5D       		.byte	0x5d
 9336 0103 7E000000 		.4byte	0x7e
 9337 0107 0C       		.byte	0xc
 9338 0108 06       		.uleb128 0x6
 9339 0109 62020000 		.4byte	.LASF19
 9340 010d 03       		.byte	0x3
 9341 010e 5E       		.byte	0x5e
 9342 010f 7E000000 		.4byte	0x7e
 9343 0113 10       		.byte	0x10
 9344 0114 06       		.uleb128 0x6
 9345 0115 48020000 		.4byte	.LASF20
 9346 0119 03       		.byte	0x3
 9347 011a 5F       		.byte	0x5f
 9348 011b 7E000000 		.4byte	0x7e
 9349 011f 14       		.byte	0x14
 9350 0120 06       		.uleb128 0x6
 9351 0121 82030000 		.4byte	.LASF21
 9352 0125 03       		.byte	0x3
 9353 0126 64       		.byte	0x64
 9354 0127 7E000000 		.4byte	0x7e
 9355 012b 18       		.byte	0x18
 9356 012c 06       		.uleb128 0x6
 9357 012d 9C020000 		.4byte	.LASF22
 9358 0131 03       		.byte	0x3
 9359 0132 65       		.byte	0x65
 9360 0133 7E000000 		.4byte	0x7e
 9361 0137 1C       		.byte	0x1c
 9362 0138 06       		.uleb128 0x6
 9363 0139 62010000 		.4byte	.LASF23
 9364 013d 03       		.byte	0x3
 9365 013e 66       		.byte	0x66
 9366 013f 7E000000 		.4byte	0x7e
 9367 0143 20       		.byte	0x20
 9368 0144 06       		.uleb128 0x6
 9369 0145 95030000 		.4byte	.LASF24
 9370 0149 03       		.byte	0x3
 9371 014a 67       		.byte	0x67
 9372 014b 7E000000 		.4byte	0x7e
 9373 014f 24       		.byte	0x24
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 227


 9374 0150 06       		.uleb128 0x6
 9375 0151 99050000 		.4byte	.LASF25
 9376 0155 03       		.byte	0x3
 9377 0156 68       		.byte	0x68
 9378 0157 7E000000 		.4byte	0x7e
 9379 015b 28       		.byte	0x28
 9380 015c 06       		.uleb128 0x6
 9381 015d 9F000000 		.4byte	.LASF26
 9382 0161 03       		.byte	0x3
 9383 0162 69       		.byte	0x69
 9384 0163 7E000000 		.4byte	0x7e
 9385 0167 2C       		.byte	0x2c
 9386 0168 07       		.uleb128 0x7
 9387 0169 77696E00 		.ascii	"win\000"
 9388 016d 03       		.byte	0x3
 9389 016e 6A       		.byte	0x6a
 9390 016f 75010000 		.4byte	0x175
 9391 0173 30       		.byte	0x30
 9392 0174 00       		.byte	0
 9393 0175 08       		.uleb128 0x8
 9394 0176 4C000000 		.4byte	0x4c
 9395 017a 86010000 		.4byte	0x186
 9396 017e 09       		.uleb128 0x9
 9397 017f 86010000 		.4byte	0x186
 9398 0183 FF01     		.2byte	0x1ff
 9399 0185 00       		.byte	0
 9400 0186 04       		.uleb128 0x4
 9401 0187 04       		.byte	0x4
 9402 0188 07       		.byte	0x7
 9403 0189 D1040000 		.4byte	.LASF27
 9404 018d 03       		.uleb128 0x3
 9405 018e 4A000000 		.4byte	.LASF28
 9406 0192 03       		.byte	0x3
 9407 0193 6B       		.byte	0x6b
 9408 0194 94000000 		.4byte	0x94
 9409 0198 0A       		.uleb128 0xa
 9410 0199 24       		.byte	0x24
 9411 019a 03       		.byte	0x3
 9412 019b 71       		.byte	0x71
 9413 019c 23020000 		.4byte	0x223
 9414 01a0 07       		.uleb128 0x7
 9415 01a1 667300   		.ascii	"fs\000"
 9416 01a4 03       		.byte	0x3
 9417 01a5 72       		.byte	0x72
 9418 01a6 23020000 		.4byte	0x223
 9419 01aa 00       		.byte	0
 9420 01ab 07       		.uleb128 0x7
 9421 01ac 696400   		.ascii	"id\000"
 9422 01af 03       		.byte	0x3
 9423 01b0 73       		.byte	0x73
 9424 01b1 65000000 		.4byte	0x65
 9425 01b5 04       		.byte	0x4
 9426 01b6 06       		.uleb128 0x6
 9427 01b7 97040000 		.4byte	.LASF29
 9428 01bb 03       		.byte	0x3
 9429 01bc 74       		.byte	0x74
 9430 01bd 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 228


 9431 01c1 06       		.byte	0x6
 9432 01c2 06       		.uleb128 0x6
 9433 01c3 4C010000 		.4byte	.LASF30
 9434 01c7 03       		.byte	0x3
 9435 01c8 75       		.byte	0x75
 9436 01c9 4C000000 		.4byte	0x4c
 9437 01cd 07       		.byte	0x7
 9438 01ce 06       		.uleb128 0x6
 9439 01cf 78030000 		.4byte	.LASF31
 9440 01d3 03       		.byte	0x3
 9441 01d4 76       		.byte	0x76
 9442 01d5 7E000000 		.4byte	0x7e
 9443 01d9 08       		.byte	0x8
 9444 01da 06       		.uleb128 0x6
 9445 01db 9C020000 		.4byte	.LASF22
 9446 01df 03       		.byte	0x3
 9447 01e0 77       		.byte	0x77
 9448 01e1 7E000000 		.4byte	0x7e
 9449 01e5 0C       		.byte	0xc
 9450 01e6 06       		.uleb128 0x6
 9451 01e7 F1050000 		.4byte	.LASF32
 9452 01eb 03       		.byte	0x3
 9453 01ec 78       		.byte	0x78
 9454 01ed 7E000000 		.4byte	0x7e
 9455 01f1 10       		.byte	0x10
 9456 01f2 06       		.uleb128 0x6
 9457 01f3 22050000 		.4byte	.LASF33
 9458 01f7 03       		.byte	0x3
 9459 01f8 79       		.byte	0x79
 9460 01f9 7E000000 		.4byte	0x7e
 9461 01fd 14       		.byte	0x14
 9462 01fe 06       		.uleb128 0x6
 9463 01ff 99000000 		.4byte	.LASF34
 9464 0203 03       		.byte	0x3
 9465 0204 7A       		.byte	0x7a
 9466 0205 7E000000 		.4byte	0x7e
 9467 0209 18       		.byte	0x18
 9468 020a 06       		.uleb128 0x6
 9469 020b EE000000 		.4byte	.LASF35
 9470 020f 03       		.byte	0x3
 9471 0210 7C       		.byte	0x7c
 9472 0211 7E000000 		.4byte	0x7e
 9473 0215 1C       		.byte	0x1c
 9474 0216 06       		.uleb128 0x6
 9475 0217 35000000 		.4byte	.LASF36
 9476 021b 03       		.byte	0x3
 9477 021c 7D       		.byte	0x7d
 9478 021d 29020000 		.4byte	0x229
 9479 0221 20       		.byte	0x20
 9480 0222 00       		.byte	0
 9481 0223 0B       		.uleb128 0xb
 9482 0224 04       		.byte	0x4
 9483 0225 8D010000 		.4byte	0x18d
 9484 0229 0B       		.uleb128 0xb
 9485 022a 04       		.byte	0x4
 9486 022b 4C000000 		.4byte	0x4c
 9487 022f 0C       		.uleb128 0xc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 229


 9488 0230 46494C00 		.ascii	"FIL\000"
 9489 0234 03       		.byte	0x3
 9490 0235 88       		.byte	0x88
 9491 0236 98010000 		.4byte	0x198
 9492 023a 0A       		.uleb128 0xa
 9493 023b 1C       		.byte	0x1c
 9494 023c 03       		.byte	0x3
 9495 023d 8E       		.byte	0x8e
 9496 023e A0020000 		.4byte	0x2a0
 9497 0242 07       		.uleb128 0x7
 9498 0243 667300   		.ascii	"fs\000"
 9499 0246 03       		.byte	0x3
 9500 0247 8F       		.byte	0x8f
 9501 0248 23020000 		.4byte	0x223
 9502 024c 00       		.byte	0
 9503 024d 07       		.uleb128 0x7
 9504 024e 696400   		.ascii	"id\000"
 9505 0251 03       		.byte	0x3
 9506 0252 90       		.byte	0x90
 9507 0253 65000000 		.4byte	0x65
 9508 0257 04       		.byte	0x4
 9509 0258 06       		.uleb128 0x6
 9510 0259 09010000 		.4byte	.LASF37
 9511 025d 03       		.byte	0x3
 9512 025e 91       		.byte	0x91
 9513 025f 65000000 		.4byte	0x65
 9514 0263 06       		.byte	0x6
 9515 0264 06       		.uleb128 0x6
 9516 0265 F1050000 		.4byte	.LASF32
 9517 0269 03       		.byte	0x3
 9518 026a 92       		.byte	0x92
 9519 026b 7E000000 		.4byte	0x7e
 9520 026f 08       		.byte	0x8
 9521 0270 06       		.uleb128 0x6
 9522 0271 22050000 		.4byte	.LASF33
 9523 0275 03       		.byte	0x3
 9524 0276 93       		.byte	0x93
 9525 0277 7E000000 		.4byte	0x7e
 9526 027b 0C       		.byte	0xc
 9527 027c 06       		.uleb128 0x6
 9528 027d 5D020000 		.4byte	.LASF38
 9529 0281 03       		.byte	0x3
 9530 0282 94       		.byte	0x94
 9531 0283 7E000000 		.4byte	0x7e
 9532 0287 10       		.byte	0x10
 9533 0288 07       		.uleb128 0x7
 9534 0289 64697200 		.ascii	"dir\000"
 9535 028d 03       		.byte	0x3
 9536 028e 95       		.byte	0x95
 9537 028f 29020000 		.4byte	0x229
 9538 0293 14       		.byte	0x14
 9539 0294 07       		.uleb128 0x7
 9540 0295 666E00   		.ascii	"fn\000"
 9541 0298 03       		.byte	0x3
 9542 0299 96       		.byte	0x96
 9543 029a 29020000 		.4byte	0x229
 9544 029e 18       		.byte	0x18
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 230


 9545 029f 00       		.byte	0
 9546 02a0 0C       		.uleb128 0xc
 9547 02a1 44495200 		.ascii	"DIR\000"
 9548 02a5 03       		.byte	0x3
 9549 02a6 9B       		.byte	0x9b
 9550 02a7 3A020000 		.4byte	0x23a
 9551 02ab 0A       		.uleb128 0xa
 9552 02ac 18       		.byte	0x18
 9553 02ad 03       		.byte	0x3
 9554 02ae A1       		.byte	0xa1
 9555 02af F0020000 		.4byte	0x2f0
 9556 02b3 06       		.uleb128 0x6
 9557 02b4 9C020000 		.4byte	.LASF22
 9558 02b8 03       		.byte	0x3
 9559 02b9 A2       		.byte	0xa2
 9560 02ba 7E000000 		.4byte	0x7e
 9561 02be 00       		.byte	0
 9562 02bf 06       		.uleb128 0x6
 9563 02c0 D9000000 		.4byte	.LASF39
 9564 02c4 03       		.byte	0x3
 9565 02c5 A3       		.byte	0xa3
 9566 02c6 65000000 		.4byte	0x65
 9567 02ca 04       		.byte	0x4
 9568 02cb 06       		.uleb128 0x6
 9569 02cc FD000000 		.4byte	.LASF40
 9570 02d0 03       		.byte	0x3
 9571 02d1 A4       		.byte	0xa4
 9572 02d2 65000000 		.4byte	0x65
 9573 02d6 06       		.byte	0x6
 9574 02d7 06       		.uleb128 0x6
 9575 02d8 B8040000 		.4byte	.LASF41
 9576 02dc 03       		.byte	0x3
 9577 02dd A5       		.byte	0xa5
 9578 02de 4C000000 		.4byte	0x4c
 9579 02e2 08       		.byte	0x8
 9580 02e3 06       		.uleb128 0x6
 9581 02e4 9D030000 		.4byte	.LASF42
 9582 02e8 03       		.byte	0x3
 9583 02e9 A6       		.byte	0xa6
 9584 02ea F0020000 		.4byte	0x2f0
 9585 02ee 09       		.byte	0x9
 9586 02ef 00       		.byte	0
 9587 02f0 08       		.uleb128 0x8
 9588 02f1 89000000 		.4byte	0x89
 9589 02f5 00030000 		.4byte	0x300
 9590 02f9 0D       		.uleb128 0xd
 9591 02fa 86010000 		.4byte	0x186
 9592 02fe 0C       		.byte	0xc
 9593 02ff 00       		.byte	0
 9594 0300 03       		.uleb128 0x3
 9595 0301 E9050000 		.4byte	.LASF43
 9596 0305 03       		.byte	0x3
 9597 0306 AB       		.byte	0xab
 9598 0307 AB020000 		.4byte	0x2ab
 9599 030b 0E       		.uleb128 0xe
 9600 030c 01       		.byte	0x1
 9601 030d 03       		.byte	0x3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 231


 9602 030e B1       		.byte	0xb1
 9603 030f 86030000 		.4byte	0x386
 9604 0313 0F       		.uleb128 0xf
 9605 0314 09050000 		.4byte	.LASF44
 9606 0318 00       		.sleb128 0
 9607 0319 0F       		.uleb128 0xf
 9608 031a 36040000 		.4byte	.LASF45
 9609 031e 01       		.sleb128 1
 9610 031f 0F       		.uleb128 0xf
 9611 0320 41010000 		.4byte	.LASF46
 9612 0324 02       		.sleb128 2
 9613 0325 0F       		.uleb128 0xf
 9614 0326 3D000000 		.4byte	.LASF47
 9615 032a 03       		.sleb128 3
 9616 032b 0F       		.uleb128 0xf
 9617 032c B8020000 		.4byte	.LASF48
 9618 0330 04       		.sleb128 4
 9619 0331 0F       		.uleb128 0xf
 9620 0332 1C040000 		.4byte	.LASF49
 9621 0336 05       		.sleb128 5
 9622 0337 0F       		.uleb128 0xf
 9623 0338 87040000 		.4byte	.LASF50
 9624 033c 06       		.sleb128 6
 9625 033d 0F       		.uleb128 0xf
 9626 033e 53020000 		.4byte	.LASF51
 9627 0342 07       		.sleb128 7
 9628 0343 0F       		.uleb128 0xf
 9629 0344 8B010000 		.4byte	.LASF52
 9630 0348 08       		.sleb128 8
 9631 0349 0F       		.uleb128 0xf
 9632 034a 9B010000 		.4byte	.LASF53
 9633 034e 09       		.sleb128 9
 9634 034f 0F       		.uleb128 0xf
 9635 0350 D6050000 		.4byte	.LASF54
 9636 0354 0A       		.sleb128 10
 9637 0355 0F       		.uleb128 0xf
 9638 0356 65000000 		.4byte	.LASF55
 9639 035a 0B       		.sleb128 11
 9640 035b 0F       		.uleb128 0xf
 9641 035c 27040000 		.4byte	.LASF56
 9642 0360 0C       		.sleb128 12
 9643 0361 0F       		.uleb128 0xf
 9644 0362 76020000 		.4byte	.LASF57
 9645 0366 0D       		.sleb128 13
 9646 0367 0F       		.uleb128 0xf
 9647 0368 89000000 		.4byte	.LASF58
 9648 036c 0E       		.sleb128 14
 9649 036d 0F       		.uleb128 0xf
 9650 036e 43050000 		.4byte	.LASF59
 9651 0372 0F       		.sleb128 15
 9652 0373 0F       		.uleb128 0xf
 9653 0374 C7010000 		.4byte	.LASF60
 9654 0378 10       		.sleb128 16
 9655 0379 0F       		.uleb128 0xf
 9656 037a 54040000 		.4byte	.LASF61
 9657 037e 11       		.sleb128 17
 9658 037f 0F       		.uleb128 0xf
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 232


 9659 0380 B7000000 		.4byte	.LASF62
 9660 0384 12       		.sleb128 18
 9661 0385 00       		.byte	0
 9662 0386 03       		.uleb128 0x3
 9663 0387 F3040000 		.4byte	.LASF63
 9664 038b 03       		.byte	0x3
 9665 038c C5       		.byte	0xc5
 9666 038d 0B030000 		.4byte	0x30b
 9667 0391 03       		.uleb128 0x3
 9668 0392 4E050000 		.4byte	.LASF64
 9669 0396 04       		.byte	0x4
 9670 0397 0E       		.byte	0xe
 9671 0398 4C000000 		.4byte	0x4c
 9672 039c 0E       		.uleb128 0xe
 9673 039d 01       		.byte	0x1
 9674 039e 04       		.byte	0x4
 9675 039f 11       		.byte	0x11
 9676 03a0 C3030000 		.4byte	0x3c3
 9677 03a4 0F       		.uleb128 0xf
 9678 03a5 56050000 		.4byte	.LASF65
 9679 03a9 00       		.sleb128 0
 9680 03aa 0F       		.uleb128 0xf
 9681 03ab 1F020000 		.4byte	.LASF66
 9682 03af 01       		.sleb128 1
 9683 03b0 0F       		.uleb128 0xf
 9684 03b1 8B030000 		.4byte	.LASF67
 9685 03b5 02       		.sleb128 2
 9686 03b6 0F       		.uleb128 0xf
 9687 03b7 6A050000 		.4byte	.LASF68
 9688 03bb 03       		.sleb128 3
 9689 03bc 0F       		.uleb128 0xf
 9690 03bd 6D030000 		.4byte	.LASF69
 9691 03c1 04       		.sleb128 4
 9692 03c2 00       		.byte	0
 9693 03c3 04       		.uleb128 0x4
 9694 03c4 01       		.byte	0x1
 9695 03c5 06       		.byte	0x6
 9696 03c6 7A050000 		.4byte	.LASF70
 9697 03ca 04       		.uleb128 0x4
 9698 03cb 08       		.byte	0x8
 9699 03cc 05       		.byte	0x5
 9700 03cd 87020000 		.4byte	.LASF71
 9701 03d1 04       		.uleb128 0x4
 9702 03d2 08       		.byte	0x8
 9703 03d3 07       		.byte	0x7
 9704 03d4 24010000 		.4byte	.LASF72
 9705 03d8 04       		.uleb128 0x4
 9706 03d9 04       		.byte	0x4
 9707 03da 04       		.byte	0x4
 9708 03db F7000000 		.4byte	.LASF73
 9709 03df 04       		.uleb128 0x4
 9710 03e0 08       		.byte	0x8
 9711 03e1 04       		.byte	0x4
 9712 03e2 B6050000 		.4byte	.LASF74
 9713 03e6 10       		.uleb128 0x10
 9714 03e7 04       		.byte	0x4
 9715 03e8 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 233


 9716 03e9 04       		.byte	0x4
 9717 03ea EE030000 		.4byte	0x3ee
 9718 03ee 11       		.uleb128 0x11
 9719 03ef 3E000000 		.4byte	0x3e
 9720 03f3 12       		.uleb128 0x12
 9721 03f4 09000000 		.4byte	.LASF75
 9722 03f8 01       		.byte	0x1
 9723 03f9 0902     		.2byte	0x209
 9724 03fb 00000000 		.4byte	.LFB2
 9725 03ff 36000000 		.4byte	.LFE2-.LFB2
 9726 0403 01       		.uleb128 0x1
 9727 0404 9C       		.byte	0x9c
 9728 0405 51040000 		.4byte	0x451
 9729 0409 13       		.uleb128 0x13
 9730 040a 64737400 		.ascii	"dst\000"
 9731 040e 01       		.byte	0x1
 9732 040f 0902     		.2byte	0x209
 9733 0411 E6030000 		.4byte	0x3e6
 9734 0415 02       		.uleb128 0x2
 9735 0416 91       		.byte	0x91
 9736 0417 6C       		.sleb128 -20
 9737 0418 13       		.uleb128 0x13
 9738 0419 73726300 		.ascii	"src\000"
 9739 041d 01       		.byte	0x1
 9740 041e 0902     		.2byte	0x209
 9741 0420 51040000 		.4byte	0x451
 9742 0424 02       		.uleb128 0x2
 9743 0425 91       		.byte	0x91
 9744 0426 68       		.sleb128 -24
 9745 0427 13       		.uleb128 0x13
 9746 0428 636E7400 		.ascii	"cnt\000"
 9747 042c 01       		.byte	0x1
 9748 042d 0902     		.2byte	0x209
 9749 042f 2C000000 		.4byte	0x2c
 9750 0433 02       		.uleb128 0x2
 9751 0434 91       		.byte	0x91
 9752 0435 64       		.sleb128 -28
 9753 0436 14       		.uleb128 0x14
 9754 0437 6400     		.ascii	"d\000"
 9755 0439 01       		.byte	0x1
 9756 043a 0A02     		.2byte	0x20a
 9757 043c 29020000 		.4byte	0x229
 9758 0440 02       		.uleb128 0x2
 9759 0441 91       		.byte	0x91
 9760 0442 74       		.sleb128 -12
 9761 0443 14       		.uleb128 0x14
 9762 0444 7300     		.ascii	"s\000"
 9763 0446 01       		.byte	0x1
 9764 0447 0B02     		.2byte	0x20b
 9765 0449 58040000 		.4byte	0x458
 9766 044d 02       		.uleb128 0x2
 9767 044e 91       		.byte	0x91
 9768 044f 70       		.sleb128 -16
 9769 0450 00       		.byte	0
 9770 0451 0B       		.uleb128 0xb
 9771 0452 04       		.byte	0x4
 9772 0453 57040000 		.4byte	0x457
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 234


 9773 0457 15       		.uleb128 0x15
 9774 0458 0B       		.uleb128 0xb
 9775 0459 04       		.byte	0x4
 9776 045a 5E040000 		.4byte	0x45e
 9777 045e 11       		.uleb128 0x11
 9778 045f 4C000000 		.4byte	0x4c
 9779 0463 12       		.uleb128 0x12
 9780 0464 07040000 		.4byte	.LASF76
 9781 0468 01       		.byte	0x1
 9782 0469 1A02     		.2byte	0x21a
 9783 046b 00000000 		.4byte	.LFB3
 9784 046f 2E000000 		.4byte	.LFE3-.LFB3
 9785 0473 01       		.uleb128 0x1
 9786 0474 9C       		.byte	0x9c
 9787 0475 B4040000 		.4byte	0x4b4
 9788 0479 13       		.uleb128 0x13
 9789 047a 64737400 		.ascii	"dst\000"
 9790 047e 01       		.byte	0x1
 9791 047f 1A02     		.2byte	0x21a
 9792 0481 E6030000 		.4byte	0x3e6
 9793 0485 02       		.uleb128 0x2
 9794 0486 91       		.byte	0x91
 9795 0487 6C       		.sleb128 -20
 9796 0488 13       		.uleb128 0x13
 9797 0489 76616C00 		.ascii	"val\000"
 9798 048d 01       		.byte	0x1
 9799 048e 1A02     		.2byte	0x21a
 9800 0490 25000000 		.4byte	0x25
 9801 0494 02       		.uleb128 0x2
 9802 0495 91       		.byte	0x91
 9803 0496 68       		.sleb128 -24
 9804 0497 13       		.uleb128 0x13
 9805 0498 636E7400 		.ascii	"cnt\000"
 9806 049c 01       		.byte	0x1
 9807 049d 1A02     		.2byte	0x21a
 9808 049f 2C000000 		.4byte	0x2c
 9809 04a3 02       		.uleb128 0x2
 9810 04a4 91       		.byte	0x91
 9811 04a5 64       		.sleb128 -28
 9812 04a6 14       		.uleb128 0x14
 9813 04a7 6400     		.ascii	"d\000"
 9814 04a9 01       		.byte	0x1
 9815 04aa 1B02     		.2byte	0x21b
 9816 04ac 29020000 		.4byte	0x229
 9817 04b0 02       		.uleb128 0x2
 9818 04b1 91       		.byte	0x91
 9819 04b2 74       		.sleb128 -12
 9820 04b3 00       		.byte	0
 9821 04b4 16       		.uleb128 0x16
 9822 04b5 01050000 		.4byte	.LASF77
 9823 04b9 01       		.byte	0x1
 9824 04ba 2302     		.2byte	0x223
 9825 04bc 25000000 		.4byte	0x25
 9826 04c0 00000000 		.4byte	.LFB4
 9827 04c4 4A000000 		.4byte	.LFE4-.LFB4
 9828 04c8 01       		.uleb128 0x1
 9829 04c9 9C       		.byte	0x9c
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 235


 9830 04ca 23050000 		.4byte	0x523
 9831 04ce 13       		.uleb128 0x13
 9832 04cf 64737400 		.ascii	"dst\000"
 9833 04d3 01       		.byte	0x1
 9834 04d4 2302     		.2byte	0x223
 9835 04d6 51040000 		.4byte	0x451
 9836 04da 02       		.uleb128 0x2
 9837 04db 91       		.byte	0x91
 9838 04dc 64       		.sleb128 -28
 9839 04dd 13       		.uleb128 0x13
 9840 04de 73726300 		.ascii	"src\000"
 9841 04e2 01       		.byte	0x1
 9842 04e3 2302     		.2byte	0x223
 9843 04e5 51040000 		.4byte	0x451
 9844 04e9 02       		.uleb128 0x2
 9845 04ea 91       		.byte	0x91
 9846 04eb 60       		.sleb128 -32
 9847 04ec 13       		.uleb128 0x13
 9848 04ed 636E7400 		.ascii	"cnt\000"
 9849 04f1 01       		.byte	0x1
 9850 04f2 2302     		.2byte	0x223
 9851 04f4 2C000000 		.4byte	0x2c
 9852 04f8 02       		.uleb128 0x2
 9853 04f9 91       		.byte	0x91
 9854 04fa 5C       		.sleb128 -36
 9855 04fb 14       		.uleb128 0x14
 9856 04fc 6400     		.ascii	"d\000"
 9857 04fe 01       		.byte	0x1
 9858 04ff 2402     		.2byte	0x224
 9859 0501 58040000 		.4byte	0x458
 9860 0505 02       		.uleb128 0x2
 9861 0506 91       		.byte	0x91
 9862 0507 74       		.sleb128 -12
 9863 0508 14       		.uleb128 0x14
 9864 0509 7300     		.ascii	"s\000"
 9865 050b 01       		.byte	0x1
 9866 050c 2402     		.2byte	0x224
 9867 050e 58040000 		.4byte	0x458
 9868 0512 02       		.uleb128 0x2
 9869 0513 91       		.byte	0x91
 9870 0514 70       		.sleb128 -16
 9871 0515 14       		.uleb128 0x14
 9872 0516 7200     		.ascii	"r\000"
 9873 0518 01       		.byte	0x1
 9874 0519 2502     		.2byte	0x225
 9875 051b 25000000 		.4byte	0x25
 9876 051f 02       		.uleb128 0x2
 9877 0520 91       		.byte	0x91
 9878 0521 6C       		.sleb128 -20
 9879 0522 00       		.byte	0
 9880 0523 16       		.uleb128 0x16
 9881 0524 AD010000 		.4byte	.LASF78
 9882 0528 01       		.byte	0x1
 9883 0529 2D02     		.2byte	0x22d
 9884 052b 25000000 		.4byte	0x25
 9885 052f 00000000 		.4byte	.LFB5
 9886 0533 32000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 236


 9887 0537 01       		.uleb128 0x1
 9888 0538 9C       		.byte	0x9c
 9889 0539 5C050000 		.4byte	0x55c
 9890 053d 13       		.uleb128 0x13
 9891 053e 73747200 		.ascii	"str\000"
 9892 0542 01       		.byte	0x1
 9893 0543 2D02     		.2byte	0x22d
 9894 0545 E8030000 		.4byte	0x3e8
 9895 0549 02       		.uleb128 0x2
 9896 054a 91       		.byte	0x91
 9897 054b 74       		.sleb128 -12
 9898 054c 13       		.uleb128 0x13
 9899 054d 63687200 		.ascii	"chr\000"
 9900 0551 01       		.byte	0x1
 9901 0552 2D02     		.2byte	0x22d
 9902 0554 25000000 		.4byte	0x25
 9903 0558 02       		.uleb128 0x2
 9904 0559 91       		.byte	0x91
 9905 055a 70       		.sleb128 -16
 9906 055b 00       		.byte	0
 9907 055c 17       		.uleb128 0x17
 9908 055d 70040000 		.4byte	.LASF79
 9909 0561 01       		.byte	0x1
 9910 0562 C902     		.2byte	0x2c9
 9911 0564 86030000 		.4byte	0x386
 9912 0568 00000000 		.4byte	.LFB6
 9913 056c D8000000 		.4byte	.LFE6-.LFB6
 9914 0570 01       		.uleb128 0x1
 9915 0571 9C       		.byte	0x9c
 9916 0572 BB050000 		.4byte	0x5bb
 9917 0576 13       		.uleb128 0x13
 9918 0577 667300   		.ascii	"fs\000"
 9919 057a 01       		.byte	0x1
 9920 057b CA02     		.2byte	0x2ca
 9921 057d 23020000 		.4byte	0x223
 9922 0581 02       		.uleb128 0x2
 9923 0582 91       		.byte	0x91
 9924 0583 6C       		.sleb128 -20
 9925 0584 18       		.uleb128 0x18
 9926 0585 18020000 		.4byte	.LASF80
 9927 0589 01       		.byte	0x1
 9928 058a CB02     		.2byte	0x2cb
 9929 058c 7E000000 		.4byte	0x7e
 9930 0590 02       		.uleb128 0x2
 9931 0591 91       		.byte	0x91
 9932 0592 68       		.sleb128 -24
 9933 0593 19       		.uleb128 0x19
 9934 0594 3B010000 		.4byte	.LASF81
 9935 0598 01       		.byte	0x1
 9936 0599 CE02     		.2byte	0x2ce
 9937 059b 7E000000 		.4byte	0x7e
 9938 059f 02       		.uleb128 0x2
 9939 05a0 91       		.byte	0x91
 9940 05a1 74       		.sleb128 -12
 9941 05a2 1A       		.uleb128 0x1a
 9942 05a3 56000000 		.4byte	.LBB2
 9943 05a7 46000000 		.4byte	.LBE2-.LBB2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 237


 9944 05ab 14       		.uleb128 0x14
 9945 05ac 6E6600   		.ascii	"nf\000"
 9946 05af 01       		.byte	0x1
 9947 05b0 D902     		.2byte	0x2d9
 9948 05b2 4C000000 		.4byte	0x4c
 9949 05b6 02       		.uleb128 0x2
 9950 05b7 91       		.byte	0x91
 9951 05b8 73       		.sleb128 -13
 9952 05b9 00       		.byte	0
 9953 05ba 00       		.byte	0
 9954 05bb 17       		.uleb128 0x17
 9955 05bc 29020000 		.4byte	.LASF82
 9956 05c0 01       		.byte	0x1
 9957 05c1 F402     		.2byte	0x2f4
 9958 05c3 86030000 		.4byte	0x386
 9959 05c7 00000000 		.4byte	.LFB7
 9960 05cb 98010000 		.4byte	.LFE7-.LFB7
 9961 05cf 01       		.uleb128 0x1
 9962 05d0 9C       		.byte	0x9c
 9963 05d1 F3050000 		.4byte	0x5f3
 9964 05d5 13       		.uleb128 0x13
 9965 05d6 667300   		.ascii	"fs\000"
 9966 05d9 01       		.byte	0x1
 9967 05da F502     		.2byte	0x2f5
 9968 05dc 23020000 		.4byte	0x223
 9969 05e0 02       		.uleb128 0x2
 9970 05e1 91       		.byte	0x91
 9971 05e2 64       		.sleb128 -28
 9972 05e3 14       		.uleb128 0x14
 9973 05e4 72657300 		.ascii	"res\000"
 9974 05e8 01       		.byte	0x1
 9975 05e9 F802     		.2byte	0x2f8
 9976 05eb 86030000 		.4byte	0x386
 9977 05ef 02       		.uleb128 0x2
 9978 05f0 91       		.byte	0x91
 9979 05f1 6F       		.sleb128 -17
 9980 05f2 00       		.byte	0
 9981 05f3 1B       		.uleb128 0x1b
 9982 05f4 AC000000 		.4byte	.LASF84
 9983 05f8 01       		.byte	0x1
 9984 05f9 1D03     		.2byte	0x31d
 9985 05fb 7E000000 		.4byte	0x7e
 9986 05ff 00000000 		.4byte	.LFB8
 9987 0603 38000000 		.4byte	.LFE8-.LFB8
 9988 0607 01       		.uleb128 0x1
 9989 0608 9C       		.byte	0x9c
 9990 0609 2B060000 		.4byte	0x62b
 9991 060d 13       		.uleb128 0x13
 9992 060e 667300   		.ascii	"fs\000"
 9993 0611 01       		.byte	0x1
 9994 0612 1E03     		.2byte	0x31e
 9995 0614 23020000 		.4byte	0x223
 9996 0618 02       		.uleb128 0x2
 9997 0619 91       		.byte	0x91
 9998 061a 74       		.sleb128 -12
 9999 061b 18       		.uleb128 0x18
 10000 061c 28000000 		.4byte	.LASF83
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 238


 10001 0620 01       		.byte	0x1
 10002 0621 1F03     		.2byte	0x31f
 10003 0623 7E000000 		.4byte	0x7e
 10004 0627 02       		.uleb128 0x2
 10005 0628 91       		.byte	0x91
 10006 0629 70       		.sleb128 -16
 10007 062a 00       		.byte	0
 10008 062b 1C       		.uleb128 0x1c
 10009 062c EB010000 		.4byte	.LASF85
 10010 0630 01       		.byte	0x1
 10011 0631 2F03     		.2byte	0x32f
 10012 0633 7E000000 		.4byte	0x7e
 10013 0637 00000000 		.4byte	.LFB9
 10014 063b 5E010000 		.4byte	.LFE9-.LFB9
 10015 063f 01       		.uleb128 0x1
 10016 0640 9C       		.byte	0x9c
 10017 0641 8C060000 		.4byte	0x68c
 10018 0645 13       		.uleb128 0x13
 10019 0646 667300   		.ascii	"fs\000"
 10020 0649 01       		.byte	0x1
 10021 064a 3003     		.2byte	0x330
 10022 064c 23020000 		.4byte	0x223
 10023 0650 02       		.uleb128 0x2
 10024 0651 91       		.byte	0x91
 10025 0652 64       		.sleb128 -28
 10026 0653 18       		.uleb128 0x18
 10027 0654 28000000 		.4byte	.LASF83
 10028 0658 01       		.byte	0x1
 10029 0659 3103     		.2byte	0x331
 10030 065b 7E000000 		.4byte	0x7e
 10031 065f 02       		.uleb128 0x2
 10032 0660 91       		.byte	0x91
 10033 0661 60       		.sleb128 -32
 10034 0662 14       		.uleb128 0x14
 10035 0663 776300   		.ascii	"wc\000"
 10036 0666 01       		.byte	0x1
 10037 0667 3403     		.2byte	0x334
 10038 0669 2C000000 		.4byte	0x2c
 10039 066d 02       		.uleb128 0x2
 10040 066e 91       		.byte	0x91
 10041 066f 70       		.sleb128 -16
 10042 0670 14       		.uleb128 0x14
 10043 0671 626300   		.ascii	"bc\000"
 10044 0674 01       		.byte	0x1
 10045 0675 3403     		.2byte	0x334
 10046 0677 2C000000 		.4byte	0x2c
 10047 067b 02       		.uleb128 0x2
 10048 067c 91       		.byte	0x91
 10049 067d 74       		.sleb128 -12
 10050 067e 14       		.uleb128 0x14
 10051 067f 7000     		.ascii	"p\000"
 10052 0681 01       		.byte	0x1
 10053 0682 3503     		.2byte	0x335
 10054 0684 29020000 		.4byte	0x229
 10055 0688 02       		.uleb128 0x2
 10056 0689 91       		.byte	0x91
 10057 068a 6C       		.sleb128 -20
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 239


 10058 068b 00       		.byte	0
 10059 068c 1C       		.uleb128 0x1c
 10060 068d 2D000000 		.4byte	.LASF86
 10061 0691 01       		.byte	0x1
 10062 0692 5A03     		.2byte	0x35a
 10063 0694 86030000 		.4byte	0x386
 10064 0698 00000000 		.4byte	.LFB10
 10065 069c 32020000 		.4byte	.LFE10-.LFB10
 10066 06a0 01       		.uleb128 0x1
 10067 06a1 9C       		.byte	0x9c
 10068 06a2 FD060000 		.4byte	0x6fd
 10069 06a6 13       		.uleb128 0x13
 10070 06a7 667300   		.ascii	"fs\000"
 10071 06aa 01       		.byte	0x1
 10072 06ab 5B03     		.2byte	0x35b
 10073 06ad 23020000 		.4byte	0x223
 10074 06b1 02       		.uleb128 0x2
 10075 06b2 91       		.byte	0x91
 10076 06b3 5C       		.sleb128 -36
 10077 06b4 18       		.uleb128 0x18
 10078 06b5 28000000 		.4byte	.LASF83
 10079 06b9 01       		.byte	0x1
 10080 06ba 5C03     		.2byte	0x35c
 10081 06bc 7E000000 		.4byte	0x7e
 10082 06c0 02       		.uleb128 0x2
 10083 06c1 91       		.byte	0x91
 10084 06c2 58       		.sleb128 -40
 10085 06c3 13       		.uleb128 0x13
 10086 06c4 76616C00 		.ascii	"val\000"
 10087 06c8 01       		.byte	0x1
 10088 06c9 5D03     		.2byte	0x35d
 10089 06cb 7E000000 		.4byte	0x7e
 10090 06cf 02       		.uleb128 0x2
 10091 06d0 91       		.byte	0x91
 10092 06d1 54       		.sleb128 -44
 10093 06d2 14       		.uleb128 0x14
 10094 06d3 626300   		.ascii	"bc\000"
 10095 06d6 01       		.byte	0x1
 10096 06d7 6003     		.2byte	0x360
 10097 06d9 2C000000 		.4byte	0x2c
 10098 06dd 02       		.uleb128 0x2
 10099 06de 91       		.byte	0x91
 10100 06df 68       		.sleb128 -24
 10101 06e0 14       		.uleb128 0x14
 10102 06e1 7000     		.ascii	"p\000"
 10103 06e3 01       		.byte	0x1
 10104 06e4 6103     		.2byte	0x361
 10105 06e6 29020000 		.4byte	0x229
 10106 06ea 02       		.uleb128 0x2
 10107 06eb 91       		.byte	0x91
 10108 06ec 64       		.sleb128 -28
 10109 06ed 14       		.uleb128 0x14
 10110 06ee 72657300 		.ascii	"res\000"
 10111 06f2 01       		.byte	0x1
 10112 06f3 6203     		.2byte	0x362
 10113 06f5 86030000 		.4byte	0x386
 10114 06f9 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 240


 10115 06fa 91       		.byte	0x91
 10116 06fb 6F       		.sleb128 -17
 10117 06fc 00       		.byte	0
 10118 06fd 17       		.uleb128 0x17
 10119 06fe 11000000 		.4byte	.LASF87
 10120 0702 01       		.byte	0x1
 10121 0703 9903     		.2byte	0x399
 10122 0705 86030000 		.4byte	0x386
 10123 0709 00000000 		.4byte	.LFB11
 10124 070d BC000000 		.4byte	.LFE11-.LFB11
 10125 0711 01       		.uleb128 0x1
 10126 0712 9C       		.byte	0x9c
 10127 0713 53070000 		.4byte	0x753
 10128 0717 13       		.uleb128 0x13
 10129 0718 667300   		.ascii	"fs\000"
 10130 071b 01       		.byte	0x1
 10131 071c 9A03     		.2byte	0x39a
 10132 071e 23020000 		.4byte	0x223
 10133 0722 02       		.uleb128 0x2
 10134 0723 91       		.byte	0x91
 10135 0724 64       		.sleb128 -28
 10136 0725 18       		.uleb128 0x18
 10137 0726 28000000 		.4byte	.LASF83
 10138 072a 01       		.byte	0x1
 10139 072b 9B03     		.2byte	0x39b
 10140 072d 7E000000 		.4byte	0x7e
 10141 0731 02       		.uleb128 0x2
 10142 0732 91       		.byte	0x91
 10143 0733 60       		.sleb128 -32
 10144 0734 14       		.uleb128 0x14
 10145 0735 72657300 		.ascii	"res\000"
 10146 0739 01       		.byte	0x1
 10147 073a 9E03     		.2byte	0x39e
 10148 073c 86030000 		.4byte	0x386
 10149 0740 02       		.uleb128 0x2
 10150 0741 91       		.byte	0x91
 10151 0742 6F       		.sleb128 -17
 10152 0743 14       		.uleb128 0x14
 10153 0744 6E787400 		.ascii	"nxt\000"
 10154 0748 01       		.byte	0x1
 10155 0749 9F03     		.2byte	0x39f
 10156 074b 7E000000 		.4byte	0x7e
 10157 074f 02       		.uleb128 0x2
 10158 0750 91       		.byte	0x91
 10159 0751 68       		.sleb128 -24
 10160 0752 00       		.byte	0
 10161 0753 17       		.uleb128 0x17
 10162 0754 15050000 		.4byte	.LASF88
 10163 0758 01       		.byte	0x1
 10164 0759 CE03     		.2byte	0x3ce
 10165 075b 7E000000 		.4byte	0x7e
 10166 075f 00000000 		.4byte	.LFB12
 10167 0763 40010000 		.4byte	.LFE12-.LFB12
 10168 0767 01       		.uleb128 0x1
 10169 0768 9C       		.byte	0x9c
 10170 0769 C6070000 		.4byte	0x7c6
 10171 076d 13       		.uleb128 0x13
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 241


 10172 076e 667300   		.ascii	"fs\000"
 10173 0771 01       		.byte	0x1
 10174 0772 CF03     		.2byte	0x3cf
 10175 0774 23020000 		.4byte	0x223
 10176 0778 02       		.uleb128 0x2
 10177 0779 91       		.byte	0x91
 10178 077a 5C       		.sleb128 -36
 10179 077b 18       		.uleb128 0x18
 10180 077c 28000000 		.4byte	.LASF83
 10181 0780 01       		.byte	0x1
 10182 0781 D003     		.2byte	0x3d0
 10183 0783 7E000000 		.4byte	0x7e
 10184 0787 02       		.uleb128 0x2
 10185 0788 91       		.byte	0x91
 10186 0789 58       		.sleb128 -40
 10187 078a 14       		.uleb128 0x14
 10188 078b 637300   		.ascii	"cs\000"
 10189 078e 01       		.byte	0x1
 10190 078f D303     		.2byte	0x3d3
 10191 0791 7E000000 		.4byte	0x7e
 10192 0795 02       		.uleb128 0x2
 10193 0796 91       		.byte	0x91
 10194 0797 60       		.sleb128 -32
 10195 0798 14       		.uleb128 0x14
 10196 0799 6E636C00 		.ascii	"ncl\000"
 10197 079d 01       		.byte	0x1
 10198 079e D303     		.2byte	0x3d3
 10199 07a0 7E000000 		.4byte	0x7e
 10200 07a4 02       		.uleb128 0x2
 10201 07a5 91       		.byte	0x91
 10202 07a6 6C       		.sleb128 -20
 10203 07a7 14       		.uleb128 0x14
 10204 07a8 73636C00 		.ascii	"scl\000"
 10205 07ac 01       		.byte	0x1
 10206 07ad D303     		.2byte	0x3d3
 10207 07af 7E000000 		.4byte	0x7e
 10208 07b3 02       		.uleb128 0x2
 10209 07b4 91       		.byte	0x91
 10210 07b5 68       		.sleb128 -24
 10211 07b6 14       		.uleb128 0x14
 10212 07b7 72657300 		.ascii	"res\000"
 10213 07bb 01       		.byte	0x1
 10214 07bc D403     		.2byte	0x3d4
 10215 07be 86030000 		.4byte	0x386
 10216 07c2 02       		.uleb128 0x2
 10217 07c3 91       		.byte	0x91
 10218 07c4 67       		.sleb128 -25
 10219 07c5 00       		.byte	0
 10220 07c6 17       		.uleb128 0x17
 10221 07c7 3B050000 		.4byte	.LASF89
 10222 07cb 01       		.byte	0x1
 10223 07cc 2504     		.2byte	0x425
 10224 07ce 86030000 		.4byte	0x386
 10225 07d2 00000000 		.4byte	.LFB13
 10226 07d6 24010000 		.4byte	.LFE13-.LFB13
 10227 07da 01       		.uleb128 0x1
 10228 07db 9C       		.byte	0x9c
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 242


 10229 07dc 1B080000 		.4byte	0x81b
 10230 07e0 13       		.uleb128 0x13
 10231 07e1 646A00   		.ascii	"dj\000"
 10232 07e4 01       		.byte	0x1
 10233 07e5 2604     		.2byte	0x426
 10234 07e7 1B080000 		.4byte	0x81b
 10235 07eb 02       		.uleb128 0x2
 10236 07ec 91       		.byte	0x91
 10237 07ed 6C       		.sleb128 -20
 10238 07ee 13       		.uleb128 0x13
 10239 07ef 69647800 		.ascii	"idx\000"
 10240 07f3 01       		.byte	0x1
 10241 07f4 2704     		.2byte	0x427
 10242 07f6 65000000 		.4byte	0x65
 10243 07fa 02       		.uleb128 0x2
 10244 07fb 91       		.byte	0x91
 10245 07fc 6A       		.sleb128 -22
 10246 07fd 19       		.uleb128 0x19
 10247 07fe 28000000 		.4byte	.LASF83
 10248 0802 01       		.byte	0x1
 10249 0803 2A04     		.2byte	0x42a
 10250 0805 7E000000 		.4byte	0x7e
 10251 0809 02       		.uleb128 0x2
 10252 080a 91       		.byte	0x91
 10253 080b 74       		.sleb128 -12
 10254 080c 14       		.uleb128 0x14
 10255 080d 696300   		.ascii	"ic\000"
 10256 0810 01       		.byte	0x1
 10257 0811 2B04     		.2byte	0x42b
 10258 0813 65000000 		.4byte	0x65
 10259 0817 02       		.uleb128 0x2
 10260 0818 91       		.byte	0x91
 10261 0819 72       		.sleb128 -14
 10262 081a 00       		.byte	0
 10263 081b 0B       		.uleb128 0xb
 10264 081c 04       		.byte	0x4
 10265 081d A0020000 		.4byte	0x2a0
 10266 0821 17       		.uleb128 0x17
 10267 0822 2E020000 		.4byte	.LASF90
 10268 0826 01       		.byte	0x1
 10269 0827 5504     		.2byte	0x455
 10270 0829 86030000 		.4byte	0x386
 10271 082d 00000000 		.4byte	.LFB14
 10272 0831 DA010000 		.4byte	.LFE14-.LFB14
 10273 0835 01       		.uleb128 0x1
 10274 0836 9C       		.byte	0x9c
 10275 0837 8C080000 		.4byte	0x88c
 10276 083b 13       		.uleb128 0x13
 10277 083c 646A00   		.ascii	"dj\000"
 10278 083f 01       		.byte	0x1
 10279 0840 5604     		.2byte	0x456
 10280 0842 1B080000 		.4byte	0x81b
 10281 0846 02       		.uleb128 0x2
 10282 0847 91       		.byte	0x91
 10283 0848 64       		.sleb128 -28
 10284 0849 18       		.uleb128 0x18
 10285 084a AE050000 		.4byte	.LASF91
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 243


 10286 084e 01       		.byte	0x1
 10287 084f 5704     		.2byte	0x457
 10288 0851 25000000 		.4byte	0x25
 10289 0855 02       		.uleb128 0x2
 10290 0856 91       		.byte	0x91
 10291 0857 60       		.sleb128 -32
 10292 0858 19       		.uleb128 0x19
 10293 0859 28000000 		.4byte	.LASF83
 10294 085d 01       		.byte	0x1
 10295 085e 5A04     		.2byte	0x45a
 10296 0860 7E000000 		.4byte	0x7e
 10297 0864 02       		.uleb128 0x2
 10298 0865 91       		.byte	0x91
 10299 0866 6C       		.sleb128 -20
 10300 0867 14       		.uleb128 0x14
 10301 0868 6900     		.ascii	"i\000"
 10302 086a 01       		.byte	0x1
 10303 086b 5B04     		.2byte	0x45b
 10304 086d 65000000 		.4byte	0x65
 10305 0871 02       		.uleb128 0x2
 10306 0872 91       		.byte	0x91
 10307 0873 68       		.sleb128 -24
 10308 0874 1A       		.uleb128 0x1a
 10309 0875 B6000000 		.4byte	.LBB3
 10310 0879 DE000000 		.4byte	.LBE3-.LBB3
 10311 087d 14       		.uleb128 0x14
 10312 087e 6300     		.ascii	"c\000"
 10313 0880 01       		.byte	0x1
 10314 0881 7004     		.2byte	0x470
 10315 0883 4C000000 		.4byte	0x4c
 10316 0887 02       		.uleb128 0x2
 10317 0888 91       		.byte	0x91
 10318 0889 6B       		.sleb128 -21
 10319 088a 00       		.byte	0
 10320 088b 00       		.byte	0
 10321 088c 17       		.uleb128 0x17
 10322 088d 00000000 		.4byte	.LASF92
 10323 0891 01       		.byte	0x1
 10324 0892 4405     		.2byte	0x544
 10325 0894 86030000 		.4byte	0x386
 10326 0898 00000000 		.4byte	.LFB15
 10327 089c C2000000 		.4byte	.LFE15-.LFB15
 10328 08a0 01       		.uleb128 0x1
 10329 08a1 9C       		.byte	0x9c
 10330 08a2 E0080000 		.4byte	0x8e0
 10331 08a6 13       		.uleb128 0x13
 10332 08a7 646A00   		.ascii	"dj\000"
 10333 08aa 01       		.byte	0x1
 10334 08ab 4505     		.2byte	0x545
 10335 08ad 1B080000 		.4byte	0x81b
 10336 08b1 02       		.uleb128 0x2
 10337 08b2 91       		.byte	0x91
 10338 08b3 5C       		.sleb128 -36
 10339 08b4 14       		.uleb128 0x14
 10340 08b5 72657300 		.ascii	"res\000"
 10341 08b9 01       		.byte	0x1
 10342 08ba 4805     		.2byte	0x548
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 244


 10343 08bc 86030000 		.4byte	0x386
 10344 08c0 02       		.uleb128 0x2
 10345 08c1 91       		.byte	0x91
 10346 08c2 6F       		.sleb128 -17
 10347 08c3 14       		.uleb128 0x14
 10348 08c4 6300     		.ascii	"c\000"
 10349 08c6 01       		.byte	0x1
 10350 08c7 4905     		.2byte	0x549
 10351 08c9 4C000000 		.4byte	0x4c
 10352 08cd 02       		.uleb128 0x2
 10353 08ce 91       		.byte	0x91
 10354 08cf 67       		.sleb128 -25
 10355 08d0 14       		.uleb128 0x14
 10356 08d1 64697200 		.ascii	"dir\000"
 10357 08d5 01       		.byte	0x1
 10358 08d6 4905     		.2byte	0x549
 10359 08d8 29020000 		.4byte	0x229
 10360 08dc 02       		.uleb128 0x2
 10361 08dd 91       		.byte	0x91
 10362 08de 68       		.sleb128 -24
 10363 08df 00       		.byte	0
 10364 08e0 17       		.uleb128 0x17
 10365 08e1 6D020000 		.4byte	.LASF93
 10366 08e5 01       		.byte	0x1
 10367 08e6 8105     		.2byte	0x581
 10368 08e8 86030000 		.4byte	0x386
 10369 08ec 00000000 		.4byte	.LFB16
 10370 08f0 C2000000 		.4byte	.LFE16-.LFB16
 10371 08f4 01       		.uleb128 0x1
 10372 08f5 9C       		.byte	0x9c
 10373 08f6 34090000 		.4byte	0x934
 10374 08fa 13       		.uleb128 0x13
 10375 08fb 646A00   		.ascii	"dj\000"
 10376 08fe 01       		.byte	0x1
 10377 08ff 8205     		.2byte	0x582
 10378 0901 1B080000 		.4byte	0x81b
 10379 0905 02       		.uleb128 0x2
 10380 0906 91       		.byte	0x91
 10381 0907 5C       		.sleb128 -36
 10382 0908 14       		.uleb128 0x14
 10383 0909 72657300 		.ascii	"res\000"
 10384 090d 01       		.byte	0x1
 10385 090e 8505     		.2byte	0x585
 10386 0910 86030000 		.4byte	0x386
 10387 0914 02       		.uleb128 0x2
 10388 0915 91       		.byte	0x91
 10389 0916 6F       		.sleb128 -17
 10390 0917 14       		.uleb128 0x14
 10391 0918 6300     		.ascii	"c\000"
 10392 091a 01       		.byte	0x1
 10393 091b 8605     		.2byte	0x586
 10394 091d 4C000000 		.4byte	0x4c
 10395 0921 02       		.uleb128 0x2
 10396 0922 91       		.byte	0x91
 10397 0923 67       		.sleb128 -25
 10398 0924 14       		.uleb128 0x14
 10399 0925 64697200 		.ascii	"dir\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 245


 10400 0929 01       		.byte	0x1
 10401 092a 8605     		.2byte	0x586
 10402 092c 29020000 		.4byte	0x229
 10403 0930 02       		.uleb128 0x2
 10404 0931 91       		.byte	0x91
 10405 0932 68       		.sleb128 -24
 10406 0933 00       		.byte	0
 10407 0934 17       		.uleb128 0x17
 10408 0935 5D050000 		.4byte	.LASF94
 10409 0939 01       		.byte	0x1
 10410 093a BA05     		.2byte	0x5ba
 10411 093c 86030000 		.4byte	0x386
 10412 0940 00000000 		.4byte	.LFB17
 10413 0944 E8000000 		.4byte	.LFE17-.LFB17
 10414 0948 01       		.uleb128 0x1
 10415 0949 9C       		.byte	0x9c
 10416 094a 88090000 		.4byte	0x988
 10417 094e 13       		.uleb128 0x13
 10418 094f 646A00   		.ascii	"dj\000"
 10419 0952 01       		.byte	0x1
 10420 0953 BB05     		.2byte	0x5bb
 10421 0955 1B080000 		.4byte	0x81b
 10422 0959 02       		.uleb128 0x2
 10423 095a 91       		.byte	0x91
 10424 095b 64       		.sleb128 -28
 10425 095c 14       		.uleb128 0x14
 10426 095d 72657300 		.ascii	"res\000"
 10427 0961 01       		.byte	0x1
 10428 0962 BE05     		.2byte	0x5be
 10429 0964 86030000 		.4byte	0x386
 10430 0968 02       		.uleb128 0x2
 10431 0969 91       		.byte	0x91
 10432 096a 6F       		.sleb128 -17
 10433 096b 14       		.uleb128 0x14
 10434 096c 6300     		.ascii	"c\000"
 10435 096e 01       		.byte	0x1
 10436 096f BF05     		.2byte	0x5bf
 10437 0971 4C000000 		.4byte	0x4c
 10438 0975 02       		.uleb128 0x2
 10439 0976 91       		.byte	0x91
 10440 0977 6E       		.sleb128 -18
 10441 0978 14       		.uleb128 0x14
 10442 0979 64697200 		.ascii	"dir\000"
 10443 097d 01       		.byte	0x1
 10444 097e BF05     		.2byte	0x5bf
 10445 0980 29020000 		.4byte	0x229
 10446 0984 02       		.uleb128 0x2
 10447 0985 91       		.byte	0x91
 10448 0986 68       		.sleb128 -24
 10449 0987 00       		.byte	0
 10450 0988 17       		.uleb128 0x17
 10451 0989 BD050000 		.4byte	.LASF95
 10452 098d 01       		.byte	0x1
 10453 098e 2506     		.2byte	0x625
 10454 0990 86030000 		.4byte	0x386
 10455 0994 00000000 		.4byte	.LFB18
 10456 0998 68000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 246


 10457 099c 01       		.uleb128 0x1
 10458 099d 9C       		.byte	0x9c
 10459 099e C0090000 		.4byte	0x9c0
 10460 09a2 13       		.uleb128 0x13
 10461 09a3 646A00   		.ascii	"dj\000"
 10462 09a6 01       		.byte	0x1
 10463 09a7 2606     		.2byte	0x626
 10464 09a9 1B080000 		.4byte	0x81b
 10465 09ad 02       		.uleb128 0x2
 10466 09ae 91       		.byte	0x91
 10467 09af 64       		.sleb128 -28
 10468 09b0 14       		.uleb128 0x14
 10469 09b1 72657300 		.ascii	"res\000"
 10470 09b5 01       		.byte	0x1
 10471 09b6 2906     		.2byte	0x629
 10472 09b8 86030000 		.4byte	0x386
 10473 09bc 02       		.uleb128 0x2
 10474 09bd 91       		.byte	0x91
 10475 09be 6F       		.sleb128 -17
 10476 09bf 00       		.byte	0
 10477 09c0 17       		.uleb128 0x17
 10478 09c1 C5040000 		.4byte	.LASF96
 10479 09c5 01       		.byte	0x1
 10480 09c6 5206     		.2byte	0x652
 10481 09c8 86030000 		.4byte	0x386
 10482 09cc 00000000 		.4byte	.LFB19
 10483 09d0 1C020000 		.4byte	.LFE19-.LFB19
 10484 09d4 01       		.uleb128 0x1
 10485 09d5 9C       		.byte	0x9c
 10486 09d6 730A0000 		.4byte	0xa73
 10487 09da 13       		.uleb128 0x13
 10488 09db 646A00   		.ascii	"dj\000"
 10489 09de 01       		.byte	0x1
 10490 09df 5306     		.2byte	0x653
 10491 09e1 1B080000 		.4byte	0x81b
 10492 09e5 02       		.uleb128 0x2
 10493 09e6 91       		.byte	0x91
 10494 09e7 5C       		.sleb128 -36
 10495 09e8 18       		.uleb128 0x18
 10496 09e9 D9010000 		.4byte	.LASF97
 10497 09ed 01       		.byte	0x1
 10498 09ee 5406     		.2byte	0x654
 10499 09f0 730A0000 		.4byte	0xa73
 10500 09f4 02       		.uleb128 0x2
 10501 09f5 91       		.byte	0x91
 10502 09f6 58       		.sleb128 -40
 10503 09f7 19       		.uleb128 0x19
 10504 09f8 7D000000 		.4byte	.LASF98
 10505 09fc 01       		.byte	0x1
 10506 09fd 5806     		.2byte	0x658
 10507 09ff 940A0000 		.4byte	0xa94
 10508 0a03 05       		.uleb128 0x5
 10509 0a04 03       		.byte	0x3
 10510 0a05 10000000 		.4byte	excvt.5064
 10511 0a09 14       		.uleb128 0x14
 10512 0a0a 6200     		.ascii	"b\000"
 10513 0a0c 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 247


 10514 0a0d D506     		.2byte	0x6d5
 10515 0a0f 4C000000 		.4byte	0x4c
 10516 0a13 02       		.uleb128 0x2
 10517 0a14 91       		.byte	0x91
 10518 0a15 77       		.sleb128 -9
 10519 0a16 14       		.uleb128 0x14
 10520 0a17 6300     		.ascii	"c\000"
 10521 0a19 01       		.byte	0x1
 10522 0a1a D506     		.2byte	0x6d5
 10523 0a1c 4C000000 		.4byte	0x4c
 10524 0a20 02       		.uleb128 0x2
 10525 0a21 91       		.byte	0x91
 10526 0a22 76       		.sleb128 -10
 10527 0a23 1D       		.uleb128 0x1d
 10528 0a24 6400     		.ascii	"d\000"
 10529 0a26 01       		.byte	0x1
 10530 0a27 D506     		.2byte	0x6d5
 10531 0a29 4C000000 		.4byte	0x4c
 10532 0a2d 14       		.uleb128 0x14
 10533 0a2e 73666E00 		.ascii	"sfn\000"
 10534 0a32 01       		.byte	0x1
 10535 0a33 D506     		.2byte	0x6d5
 10536 0a35 29020000 		.4byte	0x229
 10537 0a39 02       		.uleb128 0x2
 10538 0a3a 91       		.byte	0x91
 10539 0a3b 60       		.sleb128 -32
 10540 0a3c 14       		.uleb128 0x14
 10541 0a3d 6E6900   		.ascii	"ni\000"
 10542 0a40 01       		.byte	0x1
 10543 0a41 D606     		.2byte	0x6d6
 10544 0a43 2C000000 		.4byte	0x2c
 10545 0a47 02       		.uleb128 0x2
 10546 0a48 91       		.byte	0x91
 10547 0a49 70       		.sleb128 -16
 10548 0a4a 14       		.uleb128 0x14
 10549 0a4b 736900   		.ascii	"si\000"
 10550 0a4e 01       		.byte	0x1
 10551 0a4f D606     		.2byte	0x6d6
 10552 0a51 2C000000 		.4byte	0x2c
 10553 0a55 02       		.uleb128 0x2
 10554 0a56 91       		.byte	0x91
 10555 0a57 6C       		.sleb128 -20
 10556 0a58 14       		.uleb128 0x14
 10557 0a59 6900     		.ascii	"i\000"
 10558 0a5b 01       		.byte	0x1
 10559 0a5c D606     		.2byte	0x6d6
 10560 0a5e 2C000000 		.4byte	0x2c
 10561 0a62 02       		.uleb128 0x2
 10562 0a63 91       		.byte	0x91
 10563 0a64 68       		.sleb128 -24
 10564 0a65 14       		.uleb128 0x14
 10565 0a66 7000     		.ascii	"p\000"
 10566 0a68 01       		.byte	0x1
 10567 0a69 D706     		.2byte	0x6d7
 10568 0a6b E8030000 		.4byte	0x3e8
 10569 0a6f 02       		.uleb128 0x2
 10570 0a70 91       		.byte	0x91
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 248


 10571 0a71 64       		.sleb128 -28
 10572 0a72 00       		.byte	0
 10573 0a73 0B       		.uleb128 0xb
 10574 0a74 04       		.byte	0x4
 10575 0a75 790A0000 		.4byte	0xa79
 10576 0a79 0B       		.uleb128 0xb
 10577 0a7a 04       		.byte	0x4
 10578 0a7b 7F0A0000 		.4byte	0xa7f
 10579 0a7f 11       		.uleb128 0x11
 10580 0a80 89000000 		.4byte	0x89
 10581 0a84 08       		.uleb128 0x8
 10582 0a85 4C000000 		.4byte	0x4c
 10583 0a89 940A0000 		.4byte	0xa94
 10584 0a8d 0D       		.uleb128 0xd
 10585 0a8e 86010000 		.4byte	0x186
 10586 0a92 7F       		.byte	0x7f
 10587 0a93 00       		.byte	0
 10588 0a94 11       		.uleb128 0x11
 10589 0a95 840A0000 		.4byte	0xa84
 10590 0a99 12       		.uleb128 0x12
 10591 0a9a DE010000 		.4byte	.LASF99
 10592 0a9e 01       		.byte	0x1
 10593 0a9f 2807     		.2byte	0x728
 10594 0aa1 00000000 		.4byte	.LFB20
 10595 0aa5 38010000 		.4byte	.LFE20-.LFB20
 10596 0aa9 01       		.uleb128 0x1
 10597 0aaa 9C       		.byte	0x9c
 10598 0aab 110B0000 		.4byte	0xb11
 10599 0aaf 13       		.uleb128 0x13
 10600 0ab0 646A00   		.ascii	"dj\000"
 10601 0ab3 01       		.byte	0x1
 10602 0ab4 2907     		.2byte	0x729
 10603 0ab6 1B080000 		.4byte	0x81b
 10604 0aba 02       		.uleb128 0x2
 10605 0abb 91       		.byte	0x91
 10606 0abc 5C       		.sleb128 -36
 10607 0abd 13       		.uleb128 0x13
 10608 0abe 666E6F00 		.ascii	"fno\000"
 10609 0ac2 01       		.byte	0x1
 10610 0ac3 2A07     		.2byte	0x72a
 10611 0ac5 110B0000 		.4byte	0xb11
 10612 0ac9 02       		.uleb128 0x2
 10613 0aca 91       		.byte	0x91
 10614 0acb 58       		.sleb128 -40
 10615 0acc 14       		.uleb128 0x14
 10616 0acd 6900     		.ascii	"i\000"
 10617 0acf 01       		.byte	0x1
 10618 0ad0 2D07     		.2byte	0x72d
 10619 0ad2 2C000000 		.4byte	0x2c
 10620 0ad6 02       		.uleb128 0x2
 10621 0ad7 91       		.byte	0x91
 10622 0ad8 74       		.sleb128 -12
 10623 0ad9 14       		.uleb128 0x14
 10624 0ada 6E7400   		.ascii	"nt\000"
 10625 0add 01       		.byte	0x1
 10626 0ade 2E07     		.2byte	0x72e
 10627 0ae0 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 249


 10628 0ae4 02       		.uleb128 0x2
 10629 0ae5 91       		.byte	0x91
 10630 0ae6 67       		.sleb128 -25
 10631 0ae7 14       		.uleb128 0x14
 10632 0ae8 64697200 		.ascii	"dir\000"
 10633 0aec 01       		.byte	0x1
 10634 0aed 2E07     		.2byte	0x72e
 10635 0aef 29020000 		.4byte	0x229
 10636 0af3 02       		.uleb128 0x2
 10637 0af4 91       		.byte	0x91
 10638 0af5 68       		.sleb128 -24
 10639 0af6 14       		.uleb128 0x14
 10640 0af7 7000     		.ascii	"p\000"
 10641 0af9 01       		.byte	0x1
 10642 0afa 2F07     		.2byte	0x72f
 10643 0afc 170B0000 		.4byte	0xb17
 10644 0b00 02       		.uleb128 0x2
 10645 0b01 91       		.byte	0x91
 10646 0b02 70       		.sleb128 -16
 10647 0b03 14       		.uleb128 0x14
 10648 0b04 6300     		.ascii	"c\000"
 10649 0b06 01       		.byte	0x1
 10650 0b07 2F07     		.2byte	0x72f
 10651 0b09 89000000 		.4byte	0x89
 10652 0b0d 02       		.uleb128 0x2
 10653 0b0e 91       		.byte	0x91
 10654 0b0f 6F       		.sleb128 -17
 10655 0b10 00       		.byte	0
 10656 0b11 0B       		.uleb128 0xb
 10657 0b12 04       		.byte	0x4
 10658 0b13 00030000 		.4byte	0x300
 10659 0b17 0B       		.uleb128 0xb
 10660 0b18 04       		.byte	0x4
 10661 0b19 89000000 		.4byte	0x89
 10662 0b1d 17       		.uleb128 0x17
 10663 0b1e B5010000 		.4byte	.LASF100
 10664 0b22 01       		.byte	0x1
 10665 0b23 7A07     		.2byte	0x77a
 10666 0b25 86030000 		.4byte	0x386
 10667 0b29 00000000 		.4byte	.LFB21
 10668 0b2d 26010000 		.4byte	.LFE21-.LFB21
 10669 0b31 01       		.uleb128 0x1
 10670 0b32 9C       		.byte	0x9c
 10671 0b33 810B0000 		.4byte	0xb81
 10672 0b37 13       		.uleb128 0x13
 10673 0b38 646A00   		.ascii	"dj\000"
 10674 0b3b 01       		.byte	0x1
 10675 0b3c 7B07     		.2byte	0x77b
 10676 0b3e 1B080000 		.4byte	0x81b
 10677 0b42 02       		.uleb128 0x2
 10678 0b43 91       		.byte	0x91
 10679 0b44 64       		.sleb128 -28
 10680 0b45 18       		.uleb128 0x18
 10681 0b46 D9010000 		.4byte	.LASF97
 10682 0b4a 01       		.byte	0x1
 10683 0b4b 7C07     		.2byte	0x77c
 10684 0b4d 790A0000 		.4byte	0xa79
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 250


 10685 0b51 02       		.uleb128 0x2
 10686 0b52 91       		.byte	0x91
 10687 0b53 60       		.sleb128 -32
 10688 0b54 14       		.uleb128 0x14
 10689 0b55 72657300 		.ascii	"res\000"
 10690 0b59 01       		.byte	0x1
 10691 0b5a 7F07     		.2byte	0x77f
 10692 0b5c 86030000 		.4byte	0x386
 10693 0b60 02       		.uleb128 0x2
 10694 0b61 91       		.byte	0x91
 10695 0b62 6F       		.sleb128 -17
 10696 0b63 14       		.uleb128 0x14
 10697 0b64 64697200 		.ascii	"dir\000"
 10698 0b68 01       		.byte	0x1
 10699 0b69 8007     		.2byte	0x780
 10700 0b6b 29020000 		.4byte	0x229
 10701 0b6f 02       		.uleb128 0x2
 10702 0b70 91       		.byte	0x91
 10703 0b71 68       		.sleb128 -24
 10704 0b72 14       		.uleb128 0x14
 10705 0b73 6E7300   		.ascii	"ns\000"
 10706 0b76 01       		.byte	0x1
 10707 0b77 8007     		.2byte	0x780
 10708 0b79 4C000000 		.4byte	0x4c
 10709 0b7d 02       		.uleb128 0x2
 10710 0b7e 91       		.byte	0x91
 10711 0b7f 6E       		.sleb128 -18
 10712 0b80 00       		.byte	0
 10713 0b81 17       		.uleb128 0x17
 10714 0b82 82010000 		.4byte	.LASF101
 10715 0b86 01       		.byte	0x1
 10716 0b87 B907     		.2byte	0x7b9
 10717 0b89 4C000000 		.4byte	0x4c
 10718 0b8d 00000000 		.4byte	.LFB22
 10719 0b91 CC000000 		.4byte	.LFE22-.LFB22
 10720 0b95 01       		.uleb128 0x1
 10721 0b96 9C       		.byte	0x9c
 10722 0b97 B90B0000 		.4byte	0xbb9
 10723 0b9b 13       		.uleb128 0x13
 10724 0b9c 667300   		.ascii	"fs\000"
 10725 0b9f 01       		.byte	0x1
 10726 0ba0 BA07     		.2byte	0x7ba
 10727 0ba2 23020000 		.4byte	0x223
 10728 0ba6 02       		.uleb128 0x2
 10729 0ba7 91       		.byte	0x91
 10730 0ba8 74       		.sleb128 -12
 10731 0ba9 18       		.uleb128 0x18
 10732 0baa 5D020000 		.4byte	.LASF38
 10733 0bae 01       		.byte	0x1
 10734 0baf BB07     		.2byte	0x7bb
 10735 0bb1 7E000000 		.4byte	0x7e
 10736 0bb5 02       		.uleb128 0x2
 10737 0bb6 91       		.byte	0x91
 10738 0bb7 70       		.sleb128 -16
 10739 0bb8 00       		.byte	0
 10740 0bb9 17       		.uleb128 0x17
 10741 0bba A2050000 		.4byte	.LASF102
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 251


 10742 0bbe 01       		.byte	0x1
 10743 0bbf D307     		.2byte	0x7d3
 10744 0bc1 86030000 		.4byte	0x386
 10745 0bc5 00000000 		.4byte	.LFB23
 10746 0bc9 D8050000 		.4byte	.LFE23-.LFB23
 10747 0bcd 01       		.uleb128 0x1
 10748 0bce 9C       		.byte	0x9c
 10749 0bcf D20C0000 		.4byte	0xcd2
 10750 0bd3 18       		.uleb128 0x18
 10751 0bd4 D9010000 		.4byte	.LASF97
 10752 0bd8 01       		.byte	0x1
 10753 0bd9 D407     		.2byte	0x7d4
 10754 0bdb 730A0000 		.4byte	0xa73
 10755 0bdf 03       		.uleb128 0x3
 10756 0be0 91       		.byte	0x91
 10757 0be1 B47F     		.sleb128 -76
 10758 0be3 13       		.uleb128 0x13
 10759 0be4 72667300 		.ascii	"rfs\000"
 10760 0be8 01       		.byte	0x1
 10761 0be9 D507     		.2byte	0x7d5
 10762 0beb D20C0000 		.4byte	0xcd2
 10763 0bef 03       		.uleb128 0x3
 10764 0bf0 91       		.byte	0x91
 10765 0bf1 B07F     		.sleb128 -80
 10766 0bf3 18       		.uleb128 0x18
 10767 0bf4 AB020000 		.4byte	.LASF103
 10768 0bf8 01       		.byte	0x1
 10769 0bf9 D607     		.2byte	0x7d6
 10770 0bfb 4C000000 		.4byte	0x4c
 10771 0bff 03       		.uleb128 0x3
 10772 0c00 91       		.byte	0x91
 10773 0c01 AF7F     		.sleb128 -81
 10774 0c03 14       		.uleb128 0x14
 10775 0c04 666D7400 		.ascii	"fmt\000"
 10776 0c08 01       		.byte	0x1
 10777 0c09 D907     		.2byte	0x7d9
 10778 0c0b 4C000000 		.4byte	0x4c
 10779 0c0f 02       		.uleb128 0x2
 10780 0c10 91       		.byte	0x91
 10781 0c11 6F       		.sleb128 -17
 10782 0c12 14       		.uleb128 0x14
 10783 0c13 6200     		.ascii	"b\000"
 10784 0c15 01       		.byte	0x1
 10785 0c16 D907     		.2byte	0x7d9
 10786 0c18 4C000000 		.4byte	0x4c
 10787 0c1c 02       		.uleb128 0x2
 10788 0c1d 91       		.byte	0x91
 10789 0c1e 47       		.sleb128 -57
 10790 0c1f 14       		.uleb128 0x14
 10791 0c20 74626C00 		.ascii	"tbl\000"
 10792 0c24 01       		.byte	0x1
 10793 0c25 D907     		.2byte	0x7d9
 10794 0c27 29020000 		.4byte	0x229
 10795 0c2b 02       		.uleb128 0x2
 10796 0c2c 91       		.byte	0x91
 10797 0c2d 48       		.sleb128 -56
 10798 0c2e 14       		.uleb128 0x14
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 252


 10799 0c2f 766F6C00 		.ascii	"vol\000"
 10800 0c33 01       		.byte	0x1
 10801 0c34 DA07     		.2byte	0x7da
 10802 0c36 2C000000 		.4byte	0x2c
 10803 0c3a 02       		.uleb128 0x2
 10804 0c3b 91       		.byte	0x91
 10805 0c3c 68       		.sleb128 -24
 10806 0c3d 19       		.uleb128 0x19
 10807 0c3e 78010000 		.4byte	.LASF104
 10808 0c42 01       		.byte	0x1
 10809 0c43 DB07     		.2byte	0x7db
 10810 0c45 91030000 		.4byte	0x391
 10811 0c49 02       		.uleb128 0x2
 10812 0c4a 91       		.byte	0x91
 10813 0c4b 4F       		.sleb128 -49
 10814 0c4c 19       		.uleb128 0x19
 10815 0c4d 0F050000 		.4byte	.LASF105
 10816 0c51 01       		.byte	0x1
 10817 0c52 DC07     		.2byte	0x7dc
 10818 0c54 7E000000 		.4byte	0x7e
 10819 0c58 02       		.uleb128 0x2
 10820 0c59 91       		.byte	0x91
 10821 0c5a 64       		.sleb128 -28
 10822 0c5b 19       		.uleb128 0x19
 10823 0c5c 95020000 		.4byte	.LASF106
 10824 0c60 01       		.byte	0x1
 10825 0c61 DC07     		.2byte	0x7dc
 10826 0c63 7E000000 		.4byte	0x7e
 10827 0c67 02       		.uleb128 0x2
 10828 0c68 91       		.byte	0x91
 10829 0c69 60       		.sleb128 -32
 10830 0c6a 19       		.uleb128 0x19
 10831 0c6b 12020000 		.4byte	.LASF107
 10832 0c6f 01       		.byte	0x1
 10833 0c70 DC07     		.2byte	0x7dc
 10834 0c72 7E000000 		.4byte	0x7e
 10835 0c76 02       		.uleb128 0x2
 10836 0c77 91       		.byte	0x91
 10837 0c78 5C       		.sleb128 -36
 10838 0c79 19       		.uleb128 0x19
 10839 0c7a C8050000 		.4byte	.LASF108
 10840 0c7e 01       		.byte	0x1
 10841 0c7f DC07     		.2byte	0x7dc
 10842 0c81 7E000000 		.4byte	0x7e
 10843 0c85 02       		.uleb128 0x2
 10844 0c86 91       		.byte	0x91
 10845 0c87 40       		.sleb128 -64
 10846 0c88 19       		.uleb128 0x19
 10847 0c89 03010000 		.4byte	.LASF109
 10848 0c8d 01       		.byte	0x1
 10849 0c8e DC07     		.2byte	0x7dc
 10850 0c90 7E000000 		.4byte	0x7e
 10851 0c94 03       		.uleb128 0x3
 10852 0c95 91       		.byte	0x91
 10853 0c96 BC7F     		.sleb128 -68
 10854 0c98 19       		.uleb128 0x19
 10855 0c99 61030000 		.4byte	.LASF110
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 253


 10856 0c9d 01       		.byte	0x1
 10857 0c9e DC07     		.2byte	0x7dc
 10858 0ca0 7E000000 		.4byte	0x7e
 10859 0ca4 02       		.uleb128 0x2
 10860 0ca5 91       		.byte	0x91
 10861 0ca6 58       		.sleb128 -40
 10862 0ca7 19       		.uleb128 0x19
 10863 0ca8 75050000 		.4byte	.LASF111
 10864 0cac 01       		.byte	0x1
 10865 0cad DD07     		.2byte	0x7dd
 10866 0caf 65000000 		.4byte	0x65
 10867 0cb3 02       		.uleb128 0x2
 10868 0cb4 91       		.byte	0x91
 10869 0cb5 44       		.sleb128 -60
 10870 0cb6 14       		.uleb128 0x14
 10871 0cb7 7000     		.ascii	"p\000"
 10872 0cb9 01       		.byte	0x1
 10873 0cba DE07     		.2byte	0x7de
 10874 0cbc 790A0000 		.4byte	0xa79
 10875 0cc0 02       		.uleb128 0x2
 10876 0cc1 91       		.byte	0x91
 10877 0cc2 54       		.sleb128 -44
 10878 0cc3 14       		.uleb128 0x14
 10879 0cc4 667300   		.ascii	"fs\000"
 10880 0cc7 01       		.byte	0x1
 10881 0cc8 DF07     		.2byte	0x7df
 10882 0cca 23020000 		.4byte	0x223
 10883 0cce 02       		.uleb128 0x2
 10884 0ccf 91       		.byte	0x91
 10885 0cd0 50       		.sleb128 -48
 10886 0cd1 00       		.byte	0
 10887 0cd2 0B       		.uleb128 0xb
 10888 0cd3 04       		.byte	0x4
 10889 0cd4 23020000 		.4byte	0x223
 10890 0cd8 17       		.uleb128 0x17
 10891 0cd9 F8050000 		.4byte	.LASF112
 10892 0cdd 01       		.byte	0x1
 10893 0cde 7808     		.2byte	0x878
 10894 0ce0 86030000 		.4byte	0x386
 10895 0ce4 00000000 		.4byte	.LFB24
 10896 0ce8 4E000000 		.4byte	.LFE24-.LFB24
 10897 0cec 01       		.uleb128 0x1
 10898 0ced 9C       		.byte	0x9c
 10899 0cee 0F0D0000 		.4byte	0xd0f
 10900 0cf2 13       		.uleb128 0x13
 10901 0cf3 667300   		.ascii	"fs\000"
 10902 0cf6 01       		.byte	0x1
 10903 0cf7 7908     		.2byte	0x879
 10904 0cf9 23020000 		.4byte	0x223
 10905 0cfd 02       		.uleb128 0x2
 10906 0cfe 91       		.byte	0x91
 10907 0cff 74       		.sleb128 -12
 10908 0d00 13       		.uleb128 0x13
 10909 0d01 696400   		.ascii	"id\000"
 10910 0d04 01       		.byte	0x1
 10911 0d05 7A08     		.2byte	0x87a
 10912 0d07 65000000 		.4byte	0x65
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 254


 10913 0d0b 02       		.uleb128 0x2
 10914 0d0c 91       		.byte	0x91
 10915 0d0d 72       		.sleb128 -14
 10916 0d0e 00       		.byte	0
 10917 0d0f 1B       		.uleb128 0x1b
 10918 0d10 4C040000 		.4byte	.LASF113
 10919 0d14 01       		.byte	0x1
 10920 0d15 9708     		.2byte	0x897
 10921 0d17 86030000 		.4byte	0x386
 10922 0d1b 00000000 		.4byte	.LFB25
 10923 0d1f 58000000 		.4byte	.LFE25-.LFB25
 10924 0d23 01       		.uleb128 0x1
 10925 0d24 9C       		.byte	0x9c
 10926 0d25 560D0000 		.4byte	0xd56
 10927 0d29 13       		.uleb128 0x13
 10928 0d2a 766F6C00 		.ascii	"vol\000"
 10929 0d2e 01       		.byte	0x1
 10930 0d2f 9808     		.2byte	0x898
 10931 0d31 4C000000 		.4byte	0x4c
 10932 0d35 02       		.uleb128 0x2
 10933 0d36 91       		.byte	0x91
 10934 0d37 6F       		.sleb128 -17
 10935 0d38 13       		.uleb128 0x13
 10936 0d39 667300   		.ascii	"fs\000"
 10937 0d3c 01       		.byte	0x1
 10938 0d3d 9908     		.2byte	0x899
 10939 0d3f 23020000 		.4byte	0x223
 10940 0d43 02       		.uleb128 0x2
 10941 0d44 91       		.byte	0x91
 10942 0d45 68       		.sleb128 -24
 10943 0d46 14       		.uleb128 0x14
 10944 0d47 72667300 		.ascii	"rfs\000"
 10945 0d4b 01       		.byte	0x1
 10946 0d4c 9C08     		.2byte	0x89c
 10947 0d4e 23020000 		.4byte	0x223
 10948 0d52 02       		.uleb128 0x2
 10949 0d53 91       		.byte	0x91
 10950 0d54 74       		.sleb128 -12
 10951 0d55 00       		.byte	0
 10952 0d56 1C       		.uleb128 0x1c
 10953 0d57 94010000 		.4byte	.LASF114
 10954 0d5b 01       		.byte	0x1
 10955 0d5c BF08     		.2byte	0x8bf
 10956 0d5e 86030000 		.4byte	0x386
 10957 0d62 00000000 		.4byte	.LFB26
 10958 0d66 4A030000 		.4byte	.LFE26-.LFB26
 10959 0d6a 01       		.uleb128 0x1
 10960 0d6b 9C       		.byte	0x9c
 10961 0d6c 020E0000 		.4byte	0xe02
 10962 0d70 13       		.uleb128 0x13
 10963 0d71 667000   		.ascii	"fp\000"
 10964 0d74 01       		.byte	0x1
 10965 0d75 C008     		.2byte	0x8c0
 10966 0d77 020E0000 		.4byte	0xe02
 10967 0d7b 03       		.uleb128 0x3
 10968 0d7c 91       		.byte	0x91
 10969 0d7d B47F     		.sleb128 -76
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 255


 10970 0d7f 18       		.uleb128 0x18
 10971 0d80 D9010000 		.4byte	.LASF97
 10972 0d84 01       		.byte	0x1
 10973 0d85 C108     		.2byte	0x8c1
 10974 0d87 790A0000 		.4byte	0xa79
 10975 0d8b 03       		.uleb128 0x3
 10976 0d8c 91       		.byte	0x91
 10977 0d8d B07F     		.sleb128 -80
 10978 0d8f 18       		.uleb128 0x18
 10979 0d90 A7000000 		.4byte	.LASF115
 10980 0d94 01       		.byte	0x1
 10981 0d95 C208     		.2byte	0x8c2
 10982 0d97 4C000000 		.4byte	0x4c
 10983 0d9b 03       		.uleb128 0x3
 10984 0d9c 91       		.byte	0x91
 10985 0d9d AF7F     		.sleb128 -81
 10986 0d9f 14       		.uleb128 0x14
 10987 0da0 72657300 		.ascii	"res\000"
 10988 0da4 01       		.byte	0x1
 10989 0da5 C508     		.2byte	0x8c5
 10990 0da7 86030000 		.4byte	0x386
 10991 0dab 02       		.uleb128 0x2
 10992 0dac 91       		.byte	0x91
 10993 0dad 6F       		.sleb128 -17
 10994 0dae 14       		.uleb128 0x14
 10995 0daf 646A00   		.ascii	"dj\000"
 10996 0db2 01       		.byte	0x1
 10997 0db3 C608     		.2byte	0x8c6
 10998 0db5 A0020000 		.4byte	0x2a0
 10999 0db9 02       		.uleb128 0x2
 11000 0dba 91       		.byte	0x91
 11001 0dbb 44       		.sleb128 -60
 11002 0dbc 14       		.uleb128 0x14
 11003 0dbd 64697200 		.ascii	"dir\000"
 11004 0dc1 01       		.byte	0x1
 11005 0dc2 C708     		.2byte	0x8c7
 11006 0dc4 29020000 		.4byte	0x229
 11007 0dc8 02       		.uleb128 0x2
 11008 0dc9 91       		.byte	0x91
 11009 0dca 68       		.sleb128 -24
 11010 0dcb 14       		.uleb128 0x14
 11011 0dcc 73666E00 		.ascii	"sfn\000"
 11012 0dd0 01       		.byte	0x1
 11013 0dd1 C808     		.2byte	0x8c8
 11014 0dd3 080E0000 		.4byte	0xe08
 11015 0dd7 03       		.uleb128 0x3
 11016 0dd8 91       		.byte	0x91
 11017 0dd9 B87F     		.sleb128 -72
 11018 0ddb 1A       		.uleb128 0x1a
 11019 0ddc 9A000000 		.4byte	.LBB4
 11020 0de0 96010000 		.4byte	.LBE4-.LBB4
 11021 0de4 14       		.uleb128 0x14
 11022 0de5 647700   		.ascii	"dw\000"
 11023 0de8 01       		.byte	0x1
 11024 0de9 E408     		.2byte	0x8e4
 11025 0deb 7E000000 		.4byte	0x7e
 11026 0def 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 256


 11027 0df0 91       		.byte	0x91
 11028 0df1 64       		.sleb128 -28
 11029 0df2 14       		.uleb128 0x14
 11030 0df3 636C00   		.ascii	"cl\000"
 11031 0df6 01       		.byte	0x1
 11032 0df7 E408     		.2byte	0x8e4
 11033 0df9 7E000000 		.4byte	0x7e
 11034 0dfd 02       		.uleb128 0x2
 11035 0dfe 91       		.byte	0x91
 11036 0dff 60       		.sleb128 -32
 11037 0e00 00       		.byte	0
 11038 0e01 00       		.byte	0
 11039 0e02 0B       		.uleb128 0xb
 11040 0e03 04       		.byte	0x4
 11041 0e04 2F020000 		.4byte	0x22f
 11042 0e08 08       		.uleb128 0x8
 11043 0e09 4C000000 		.4byte	0x4c
 11044 0e0d 180E0000 		.4byte	0xe18
 11045 0e11 0D       		.uleb128 0xd
 11046 0e12 86010000 		.4byte	0x186
 11047 0e16 0B       		.byte	0xb
 11048 0e17 00       		.byte	0
 11049 0e18 1C       		.uleb128 0x1c
 11050 0e19 0B020000 		.4byte	.LASF116
 11051 0e1d 01       		.byte	0x1
 11052 0e1e 4109     		.2byte	0x941
 11053 0e20 86030000 		.4byte	0x386
 11054 0e24 00000000 		.4byte	.LFB27
 11055 0e28 8A020000 		.4byte	.LFE27-.LFB27
 11056 0e2c 01       		.uleb128 0x1
 11057 0e2d 9C       		.byte	0x9c
 11058 0e2e E40E0000 		.4byte	0xee4
 11059 0e32 13       		.uleb128 0x13
 11060 0e33 667000   		.ascii	"fp\000"
 11061 0e36 01       		.byte	0x1
 11062 0e37 4209     		.2byte	0x942
 11063 0e39 020E0000 		.4byte	0xe02
 11064 0e3d 02       		.uleb128 0x2
 11065 0e3e 91       		.byte	0x91
 11066 0e3f 4C       		.sleb128 -52
 11067 0e40 18       		.uleb128 0x18
 11068 0e41 7D010000 		.4byte	.LASF117
 11069 0e45 01       		.byte	0x1
 11070 0e46 4309     		.2byte	0x943
 11071 0e48 E6030000 		.4byte	0x3e6
 11072 0e4c 02       		.uleb128 0x2
 11073 0e4d 91       		.byte	0x91
 11074 0e4e 48       		.sleb128 -56
 11075 0e4f 13       		.uleb128 0x13
 11076 0e50 62747200 		.ascii	"btr\000"
 11077 0e54 01       		.byte	0x1
 11078 0e55 4409     		.2byte	0x944
 11079 0e57 2C000000 		.4byte	0x2c
 11080 0e5b 02       		.uleb128 0x2
 11081 0e5c 91       		.byte	0x91
 11082 0e5d 44       		.sleb128 -60
 11083 0e5e 13       		.uleb128 0x13
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 257


 11084 0e5f 627200   		.ascii	"br\000"
 11085 0e62 01       		.byte	0x1
 11086 0e63 4509     		.2byte	0x945
 11087 0e65 E40E0000 		.4byte	0xee4
 11088 0e69 02       		.uleb128 0x2
 11089 0e6a 91       		.byte	0x91
 11090 0e6b 40       		.sleb128 -64
 11091 0e6c 14       		.uleb128 0x14
 11092 0e6d 72657300 		.ascii	"res\000"
 11093 0e71 01       		.byte	0x1
 11094 0e72 4809     		.2byte	0x948
 11095 0e74 86030000 		.4byte	0x386
 11096 0e78 02       		.uleb128 0x2
 11097 0e79 91       		.byte	0x91
 11098 0e7a 5F       		.sleb128 -33
 11099 0e7b 19       		.uleb128 0x19
 11100 0e7c 28000000 		.4byte	.LASF83
 11101 0e80 01       		.byte	0x1
 11102 0e81 4909     		.2byte	0x949
 11103 0e83 7E000000 		.4byte	0x7e
 11104 0e87 02       		.uleb128 0x2
 11105 0e88 91       		.byte	0x91
 11106 0e89 6C       		.sleb128 -20
 11107 0e8a 19       		.uleb128 0x19
 11108 0e8b 5D020000 		.4byte	.LASF38
 11109 0e8f 01       		.byte	0x1
 11110 0e90 4909     		.2byte	0x949
 11111 0e92 7E000000 		.4byte	0x7e
 11112 0e96 02       		.uleb128 0x2
 11113 0e97 91       		.byte	0x91
 11114 0e98 50       		.sleb128 -48
 11115 0e99 19       		.uleb128 0x19
 11116 0e9a 15040000 		.4byte	.LASF118
 11117 0e9e 01       		.byte	0x1
 11118 0e9f 4909     		.2byte	0x949
 11119 0ea1 7E000000 		.4byte	0x7e
 11120 0ea5 02       		.uleb128 0x2
 11121 0ea6 91       		.byte	0x91
 11122 0ea7 58       		.sleb128 -40
 11123 0ea8 19       		.uleb128 0x19
 11124 0ea9 28050000 		.4byte	.LASF119
 11125 0ead 01       		.byte	0x1
 11126 0eae 4A09     		.2byte	0x94a
 11127 0eb0 2C000000 		.4byte	0x2c
 11128 0eb4 02       		.uleb128 0x2
 11129 0eb5 91       		.byte	0x91
 11130 0eb6 68       		.sleb128 -24
 11131 0eb7 14       		.uleb128 0x14
 11132 0eb8 636300   		.ascii	"cc\000"
 11133 0ebb 01       		.byte	0x1
 11134 0ebc 4A09     		.2byte	0x94a
 11135 0ebe 2C000000 		.4byte	0x2c
 11136 0ec2 02       		.uleb128 0x2
 11137 0ec3 91       		.byte	0x91
 11138 0ec4 64       		.sleb128 -28
 11139 0ec5 19       		.uleb128 0x19
 11140 0ec6 37020000 		.4byte	.LASF120
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 258


 11141 0eca 01       		.byte	0x1
 11142 0ecb 4B09     		.2byte	0x94b
 11143 0ecd 4C000000 		.4byte	0x4c
 11144 0ed1 02       		.uleb128 0x2
 11145 0ed2 91       		.byte	0x91
 11146 0ed3 57       		.sleb128 -41
 11147 0ed4 19       		.uleb128 0x19
 11148 0ed5 FB040000 		.4byte	.LASF121
 11149 0ed9 01       		.byte	0x1
 11150 0eda 4B09     		.2byte	0x94b
 11151 0edc 29020000 		.4byte	0x229
 11152 0ee0 02       		.uleb128 0x2
 11153 0ee1 91       		.byte	0x91
 11154 0ee2 60       		.sleb128 -32
 11155 0ee3 00       		.byte	0
 11156 0ee4 0B       		.uleb128 0xb
 11157 0ee5 04       		.byte	0x4
 11158 0ee6 2C000000 		.4byte	0x2c
 11159 0eea 1C       		.uleb128 0x1c
 11160 0eeb A3030000 		.4byte	.LASF122
 11161 0eef 01       		.byte	0x1
 11162 0ef0 A609     		.2byte	0x9a6
 11163 0ef2 86030000 		.4byte	0x386
 11164 0ef6 00000000 		.4byte	.LFB28
 11165 0efa 3C030000 		.4byte	.LFE28-.LFB28
 11166 0efe 01       		.uleb128 0x1
 11167 0eff 9C       		.byte	0x9c
 11168 0f00 A70F0000 		.4byte	0xfa7
 11169 0f04 13       		.uleb128 0x13
 11170 0f05 667000   		.ascii	"fp\000"
 11171 0f08 01       		.byte	0x1
 11172 0f09 A709     		.2byte	0x9a7
 11173 0f0b 020E0000 		.4byte	0xe02
 11174 0f0f 02       		.uleb128 0x2
 11175 0f10 91       		.byte	0x91
 11176 0f11 54       		.sleb128 -44
 11177 0f12 18       		.uleb128 0x18
 11178 0f13 7D010000 		.4byte	.LASF117
 11179 0f17 01       		.byte	0x1
 11180 0f18 A809     		.2byte	0x9a8
 11181 0f1a 51040000 		.4byte	0x451
 11182 0f1e 02       		.uleb128 0x2
 11183 0f1f 91       		.byte	0x91
 11184 0f20 50       		.sleb128 -48
 11185 0f21 13       		.uleb128 0x13
 11186 0f22 62747700 		.ascii	"btw\000"
 11187 0f26 01       		.byte	0x1
 11188 0f27 A909     		.2byte	0x9a9
 11189 0f29 2C000000 		.4byte	0x2c
 11190 0f2d 02       		.uleb128 0x2
 11191 0f2e 91       		.byte	0x91
 11192 0f2f 4C       		.sleb128 -52
 11193 0f30 13       		.uleb128 0x13
 11194 0f31 627700   		.ascii	"bw\000"
 11195 0f34 01       		.byte	0x1
 11196 0f35 AA09     		.2byte	0x9aa
 11197 0f37 E40E0000 		.4byte	0xee4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 259


 11198 0f3b 02       		.uleb128 0x2
 11199 0f3c 91       		.byte	0x91
 11200 0f3d 48       		.sleb128 -56
 11201 0f3e 14       		.uleb128 0x14
 11202 0f3f 72657300 		.ascii	"res\000"
 11203 0f43 01       		.byte	0x1
 11204 0f44 AD09     		.2byte	0x9ad
 11205 0f46 86030000 		.4byte	0x386
 11206 0f4a 02       		.uleb128 0x2
 11207 0f4b 91       		.byte	0x91
 11208 0f4c 5F       		.sleb128 -33
 11209 0f4d 19       		.uleb128 0x19
 11210 0f4e 28000000 		.4byte	.LASF83
 11211 0f52 01       		.byte	0x1
 11212 0f53 AE09     		.2byte	0x9ae
 11213 0f55 7E000000 		.4byte	0x7e
 11214 0f59 02       		.uleb128 0x2
 11215 0f5a 91       		.byte	0x91
 11216 0f5b 6C       		.sleb128 -20
 11217 0f5c 19       		.uleb128 0x19
 11218 0f5d 5D020000 		.4byte	.LASF38
 11219 0f61 01       		.byte	0x1
 11220 0f62 AE09     		.2byte	0x9ae
 11221 0f64 7E000000 		.4byte	0x7e
 11222 0f68 02       		.uleb128 0x2
 11223 0f69 91       		.byte	0x91
 11224 0f6a 58       		.sleb128 -40
 11225 0f6b 19       		.uleb128 0x19
 11226 0f6c 82040000 		.4byte	.LASF123
 11227 0f70 01       		.byte	0x1
 11228 0f71 AF09     		.2byte	0x9af
 11229 0f73 2C000000 		.4byte	0x2c
 11230 0f77 02       		.uleb128 0x2
 11231 0f78 91       		.byte	0x91
 11232 0f79 68       		.sleb128 -24
 11233 0f7a 14       		.uleb128 0x14
 11234 0f7b 636300   		.ascii	"cc\000"
 11235 0f7e 01       		.byte	0x1
 11236 0f7f AF09     		.2byte	0x9af
 11237 0f81 2C000000 		.4byte	0x2c
 11238 0f85 02       		.uleb128 0x2
 11239 0f86 91       		.byte	0x91
 11240 0f87 64       		.sleb128 -28
 11241 0f88 19       		.uleb128 0x19
 11242 0f89 83000000 		.4byte	.LASF124
 11243 0f8d 01       		.byte	0x1
 11244 0f8e B009     		.2byte	0x9b0
 11245 0f90 58040000 		.4byte	0x458
 11246 0f94 02       		.uleb128 0x2
 11247 0f95 91       		.byte	0x91
 11248 0f96 60       		.sleb128 -32
 11249 0f97 19       		.uleb128 0x19
 11250 0f98 37020000 		.4byte	.LASF120
 11251 0f9c 01       		.byte	0x1
 11252 0f9d B109     		.2byte	0x9b1
 11253 0f9f 4C000000 		.4byte	0x4c
 11254 0fa3 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 260


 11255 0fa4 91       		.byte	0x91
 11256 0fa5 5E       		.sleb128 -34
 11257 0fa6 00       		.byte	0
 11258 0fa7 1C       		.uleb128 0x1c
 11259 0fa8 EC040000 		.4byte	.LASF125
 11260 0fac 01       		.byte	0x1
 11261 0fad 1D0A     		.2byte	0xa1d
 11262 0faf 86030000 		.4byte	0x386
 11263 0fb3 00000000 		.4byte	.LFB29
 11264 0fb7 70010000 		.4byte	.LFE29-.LFB29
 11265 0fbb 01       		.uleb128 0x1
 11266 0fbc 9C       		.byte	0x9c
 11267 0fbd FD0F0000 		.4byte	0xffd
 11268 0fc1 13       		.uleb128 0x13
 11269 0fc2 667000   		.ascii	"fp\000"
 11270 0fc5 01       		.byte	0x1
 11271 0fc6 1E0A     		.2byte	0xa1e
 11272 0fc8 020E0000 		.4byte	0xe02
 11273 0fcc 02       		.uleb128 0x2
 11274 0fcd 91       		.byte	0x91
 11275 0fce 5C       		.sleb128 -36
 11276 0fcf 14       		.uleb128 0x14
 11277 0fd0 72657300 		.ascii	"res\000"
 11278 0fd4 01       		.byte	0x1
 11279 0fd5 210A     		.2byte	0xa21
 11280 0fd7 86030000 		.4byte	0x386
 11281 0fdb 02       		.uleb128 0x2
 11282 0fdc 91       		.byte	0x91
 11283 0fdd 6F       		.sleb128 -17
 11284 0fde 14       		.uleb128 0x14
 11285 0fdf 74696D00 		.ascii	"tim\000"
 11286 0fe3 01       		.byte	0x1
 11287 0fe4 220A     		.2byte	0xa22
 11288 0fe6 7E000000 		.4byte	0x7e
 11289 0fea 02       		.uleb128 0x2
 11290 0feb 91       		.byte	0x91
 11291 0fec 64       		.sleb128 -28
 11292 0fed 14       		.uleb128 0x14
 11293 0fee 64697200 		.ascii	"dir\000"
 11294 0ff2 01       		.byte	0x1
 11295 0ff3 230A     		.2byte	0xa23
 11296 0ff5 29020000 		.4byte	0x229
 11297 0ff9 02       		.uleb128 0x2
 11298 0ffa 91       		.byte	0x91
 11299 0ffb 68       		.sleb128 -24
 11300 0ffc 00       		.byte	0
 11301 0ffd 1C       		.uleb128 0x1c
 11302 0ffe D1010000 		.4byte	.LASF126
 11303 1002 01       		.byte	0x1
 11304 1003 4C0A     		.2byte	0xa4c
 11305 1005 86030000 		.4byte	0x386
 11306 1009 00000000 		.4byte	.LFB30
 11307 100d 36000000 		.4byte	.LFE30-.LFB30
 11308 1011 01       		.uleb128 0x1
 11309 1012 9C       		.byte	0x9c
 11310 1013 35100000 		.4byte	0x1035
 11311 1017 13       		.uleb128 0x13
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 261


 11312 1018 667000   		.ascii	"fp\000"
 11313 101b 01       		.byte	0x1
 11314 101c 4D0A     		.2byte	0xa4d
 11315 101e 020E0000 		.4byte	0xe02
 11316 1022 02       		.uleb128 0x2
 11317 1023 91       		.byte	0x91
 11318 1024 64       		.sleb128 -28
 11319 1025 14       		.uleb128 0x14
 11320 1026 72657300 		.ascii	"res\000"
 11321 102a 01       		.byte	0x1
 11322 102b 500A     		.2byte	0xa50
 11323 102d 86030000 		.4byte	0x386
 11324 1031 02       		.uleb128 0x2
 11325 1032 91       		.byte	0x91
 11326 1033 6F       		.sleb128 -17
 11327 1034 00       		.byte	0
 11328 1035 1C       		.uleb128 0x1c
 11329 1036 9C040000 		.4byte	.LASF127
 11330 103a 01       		.byte	0x1
 11331 103b F00A     		.2byte	0xaf0
 11332 103d 86030000 		.4byte	0x386
 11333 1041 00000000 		.4byte	.LFB31
 11334 1045 62020000 		.4byte	.LFE31-.LFB31
 11335 1049 01       		.uleb128 0x1
 11336 104a 9C       		.byte	0x9c
 11337 104b C2100000 		.4byte	0x10c2
 11338 104f 13       		.uleb128 0x13
 11339 1050 667000   		.ascii	"fp\000"
 11340 1053 01       		.byte	0x1
 11341 1054 F10A     		.2byte	0xaf1
 11342 1056 020E0000 		.4byte	0xe02
 11343 105a 02       		.uleb128 0x2
 11344 105b 91       		.byte	0x91
 11345 105c 54       		.sleb128 -44
 11346 105d 13       		.uleb128 0x13
 11347 105e 6F667300 		.ascii	"ofs\000"
 11348 1062 01       		.byte	0x1
 11349 1063 F20A     		.2byte	0xaf2
 11350 1065 7E000000 		.4byte	0x7e
 11351 1069 02       		.uleb128 0x2
 11352 106a 91       		.byte	0x91
 11353 106b 50       		.sleb128 -48
 11354 106c 14       		.uleb128 0x14
 11355 106d 72657300 		.ascii	"res\000"
 11356 1071 01       		.byte	0x1
 11357 1072 F50A     		.2byte	0xaf5
 11358 1074 86030000 		.4byte	0x386
 11359 1078 02       		.uleb128 0x2
 11360 1079 91       		.byte	0x91
 11361 107a 67       		.sleb128 -25
 11362 107b 1A       		.uleb128 0x1a
 11363 107c 44000000 		.4byte	.LBB5
 11364 1080 10020000 		.4byte	.LBE5-.LBB5
 11365 1084 19       		.uleb128 0x19
 11366 1085 28000000 		.4byte	.LASF83
 11367 1089 01       		.byte	0x1
 11368 108a 380B     		.2byte	0xb38
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 262


 11369 108c 7E000000 		.4byte	0x7e
 11370 1090 02       		.uleb128 0x2
 11371 1091 91       		.byte	0x91
 11372 1092 6C       		.sleb128 -20
 11373 1093 14       		.uleb128 0x14
 11374 1094 62637300 		.ascii	"bcs\000"
 11375 1098 01       		.byte	0x1
 11376 1099 380B     		.2byte	0xb38
 11377 109b 7E000000 		.4byte	0x7e
 11378 109f 02       		.uleb128 0x2
 11379 10a0 91       		.byte	0x91
 11380 10a1 5C       		.sleb128 -36
 11381 10a2 19       		.uleb128 0x19
 11382 10a3 0F040000 		.4byte	.LASF128
 11383 10a7 01       		.byte	0x1
 11384 10a8 380B     		.2byte	0xb38
 11385 10aa 7E000000 		.4byte	0x7e
 11386 10ae 02       		.uleb128 0x2
 11387 10af 91       		.byte	0x91
 11388 10b0 68       		.sleb128 -24
 11389 10b1 19       		.uleb128 0x19
 11390 10b2 C1010000 		.4byte	.LASF129
 11391 10b6 01       		.byte	0x1
 11392 10b7 380B     		.2byte	0xb38
 11393 10b9 7E000000 		.4byte	0x7e
 11394 10bd 02       		.uleb128 0x2
 11395 10be 91       		.byte	0x91
 11396 10bf 60       		.sleb128 -32
 11397 10c0 00       		.byte	0
 11398 10c1 00       		.byte	0
 11399 10c2 1C       		.uleb128 0x1c
 11400 10c3 01020000 		.4byte	.LASF130
 11401 10c7 01       		.byte	0x1
 11402 10c8 8E0B     		.2byte	0xb8e
 11403 10ca 86030000 		.4byte	0x386
 11404 10ce 00000000 		.4byte	.LFB32
 11405 10d2 F8000000 		.4byte	.LFE32-.LFB32
 11406 10d6 01       		.uleb128 0x1
 11407 10d7 9C       		.byte	0x9c
 11408 10d8 18110000 		.4byte	0x1118
 11409 10dc 13       		.uleb128 0x13
 11410 10dd 646A00   		.ascii	"dj\000"
 11411 10e0 01       		.byte	0x1
 11412 10e1 8F0B     		.2byte	0xb8f
 11413 10e3 1B080000 		.4byte	0x81b
 11414 10e7 02       		.uleb128 0x2
 11415 10e8 91       		.byte	0x91
 11416 10e9 5C       		.sleb128 -36
 11417 10ea 18       		.uleb128 0x18
 11418 10eb D9010000 		.4byte	.LASF97
 11419 10ef 01       		.byte	0x1
 11420 10f0 900B     		.2byte	0xb90
 11421 10f2 790A0000 		.4byte	0xa79
 11422 10f6 02       		.uleb128 0x2
 11423 10f7 91       		.byte	0x91
 11424 10f8 58       		.sleb128 -40
 11425 10f9 14       		.uleb128 0x14
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 263


 11426 10fa 72657300 		.ascii	"res\000"
 11427 10fe 01       		.byte	0x1
 11428 10ff 930B     		.2byte	0xb93
 11429 1101 86030000 		.4byte	0x386
 11430 1105 02       		.uleb128 0x2
 11431 1106 91       		.byte	0x91
 11432 1107 6F       		.sleb128 -17
 11433 1108 14       		.uleb128 0x14
 11434 1109 73666E00 		.ascii	"sfn\000"
 11435 110d 01       		.byte	0x1
 11436 110e 940B     		.2byte	0xb94
 11437 1110 080E0000 		.4byte	0xe08
 11438 1114 02       		.uleb128 0x2
 11439 1115 91       		.byte	0x91
 11440 1116 60       		.sleb128 -32
 11441 1117 00       		.byte	0
 11442 1118 1C       		.uleb128 0x1c
 11443 1119 1E000000 		.4byte	.LASF131
 11444 111d 01       		.byte	0x1
 11445 111e B60B     		.2byte	0xbb6
 11446 1120 86030000 		.4byte	0x386
 11447 1124 00000000 		.4byte	.LFB33
 11448 1128 C4000000 		.4byte	.LFE33-.LFB33
 11449 112c 01       		.uleb128 0x1
 11450 112d 9C       		.byte	0x9c
 11451 112e 6E110000 		.4byte	0x116e
 11452 1132 13       		.uleb128 0x13
 11453 1133 646A00   		.ascii	"dj\000"
 11454 1136 01       		.byte	0x1
 11455 1137 B70B     		.2byte	0xbb7
 11456 1139 1B080000 		.4byte	0x81b
 11457 113d 02       		.uleb128 0x2
 11458 113e 91       		.byte	0x91
 11459 113f 5C       		.sleb128 -36
 11460 1140 13       		.uleb128 0x13
 11461 1141 666E6F00 		.ascii	"fno\000"
 11462 1145 01       		.byte	0x1
 11463 1146 B80B     		.2byte	0xbb8
 11464 1148 110B0000 		.4byte	0xb11
 11465 114c 02       		.uleb128 0x2
 11466 114d 91       		.byte	0x91
 11467 114e 58       		.sleb128 -40
 11468 114f 14       		.uleb128 0x14
 11469 1150 72657300 		.ascii	"res\000"
 11470 1154 01       		.byte	0x1
 11471 1155 BB0B     		.2byte	0xbbb
 11472 1157 86030000 		.4byte	0x386
 11473 115b 02       		.uleb128 0x2
 11474 115c 91       		.byte	0x91
 11475 115d 6F       		.sleb128 -17
 11476 115e 14       		.uleb128 0x14
 11477 115f 73666E00 		.ascii	"sfn\000"
 11478 1163 01       		.byte	0x1
 11479 1164 BC0B     		.2byte	0xbbc
 11480 1166 080E0000 		.4byte	0xe08
 11481 116a 02       		.uleb128 0x2
 11482 116b 91       		.byte	0x91
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 264


 11483 116c 60       		.sleb128 -32
 11484 116d 00       		.byte	0
 11485 116e 1C       		.uleb128 0x1c
 11486 116f CF050000 		.4byte	.LASF132
 11487 1173 01       		.byte	0x1
 11488 1174 E00B     		.2byte	0xbe0
 11489 1176 86030000 		.4byte	0x386
 11490 117a 00000000 		.4byte	.LFB34
 11491 117e 86000000 		.4byte	.LFE34-.LFB34
 11492 1182 01       		.uleb128 0x1
 11493 1183 9C       		.byte	0x9c
 11494 1184 D5110000 		.4byte	0x11d5
 11495 1188 18       		.uleb128 0x18
 11496 1189 D9010000 		.4byte	.LASF97
 11497 118d 01       		.byte	0x1
 11498 118e E10B     		.2byte	0xbe1
 11499 1190 790A0000 		.4byte	0xa79
 11500 1194 03       		.uleb128 0x3
 11501 1195 91       		.byte	0x91
 11502 1196 BC7F     		.sleb128 -68
 11503 1198 13       		.uleb128 0x13
 11504 1199 666E6F00 		.ascii	"fno\000"
 11505 119d 01       		.byte	0x1
 11506 119e E20B     		.2byte	0xbe2
 11507 11a0 110B0000 		.4byte	0xb11
 11508 11a4 03       		.uleb128 0x3
 11509 11a5 91       		.byte	0x91
 11510 11a6 B87F     		.sleb128 -72
 11511 11a8 14       		.uleb128 0x14
 11512 11a9 72657300 		.ascii	"res\000"
 11513 11ad 01       		.byte	0x1
 11514 11ae E50B     		.2byte	0xbe5
 11515 11b0 86030000 		.4byte	0x386
 11516 11b4 02       		.uleb128 0x2
 11517 11b5 91       		.byte	0x91
 11518 11b6 6F       		.sleb128 -17
 11519 11b7 14       		.uleb128 0x14
 11520 11b8 646A00   		.ascii	"dj\000"
 11521 11bb 01       		.byte	0x1
 11522 11bc E60B     		.2byte	0xbe6
 11523 11be A0020000 		.4byte	0x2a0
 11524 11c2 02       		.uleb128 0x2
 11525 11c3 91       		.byte	0x91
 11526 11c4 50       		.sleb128 -48
 11527 11c5 14       		.uleb128 0x14
 11528 11c6 73666E00 		.ascii	"sfn\000"
 11529 11ca 01       		.byte	0x1
 11530 11cb E70B     		.2byte	0xbe7
 11531 11cd 080E0000 		.4byte	0xe08
 11532 11d1 02       		.uleb128 0x2
 11533 11d2 91       		.byte	0x91
 11534 11d3 44       		.sleb128 -60
 11535 11d4 00       		.byte	0
 11536 11d5 1C       		.uleb128 0x1c
 11537 11d6 A4040000 		.4byte	.LASF133
 11538 11da 01       		.byte	0x1
 11539 11db 010C     		.2byte	0xc01
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 265


 11540 11dd 86030000 		.4byte	0x386
 11541 11e1 00000000 		.4byte	.LFB35
 11542 11e5 BC010000 		.4byte	.LFE35-.LFB35
 11543 11e9 01       		.uleb128 0x1
 11544 11ea 9C       		.byte	0x9c
 11545 11eb 8F120000 		.4byte	0x128f
 11546 11ef 18       		.uleb128 0x18
 11547 11f0 D9010000 		.4byte	.LASF97
 11548 11f4 01       		.byte	0x1
 11549 11f5 020C     		.2byte	0xc02
 11550 11f7 790A0000 		.4byte	0xa79
 11551 11fb 02       		.uleb128 0x2
 11552 11fc 91       		.byte	0x91
 11553 11fd 4C       		.sleb128 -52
 11554 11fe 18       		.uleb128 0x18
 11555 11ff 03010000 		.4byte	.LASF109
 11556 1203 01       		.byte	0x1
 11557 1204 030C     		.2byte	0xc03
 11558 1206 8F120000 		.4byte	0x128f
 11559 120a 02       		.uleb128 0x2
 11560 120b 91       		.byte	0x91
 11561 120c 48       		.sleb128 -56
 11562 120d 18       		.uleb128 0x18
 11563 120e DF000000 		.4byte	.LASF134
 11564 1212 01       		.byte	0x1
 11565 1213 040C     		.2byte	0xc04
 11566 1215 D20C0000 		.4byte	0xcd2
 11567 1219 02       		.uleb128 0x2
 11568 121a 91       		.byte	0x91
 11569 121b 44       		.sleb128 -60
 11570 121c 14       		.uleb128 0x14
 11571 121d 72657300 		.ascii	"res\000"
 11572 1221 01       		.byte	0x1
 11573 1222 070C     		.2byte	0xc07
 11574 1224 86030000 		.4byte	0x386
 11575 1228 02       		.uleb128 0x2
 11576 1229 91       		.byte	0x91
 11577 122a 6F       		.sleb128 -17
 11578 122b 14       		.uleb128 0x14
 11579 122c 6E00     		.ascii	"n\000"
 11580 122e 01       		.byte	0x1
 11581 122f 080C     		.2byte	0xc08
 11582 1231 7E000000 		.4byte	0x7e
 11583 1235 02       		.uleb128 0x2
 11584 1236 91       		.byte	0x91
 11585 1237 68       		.sleb128 -24
 11586 1238 19       		.uleb128 0x19
 11587 1239 28000000 		.4byte	.LASF83
 11588 123d 01       		.byte	0x1
 11589 123e 080C     		.2byte	0xc08
 11590 1240 7E000000 		.4byte	0x7e
 11591 1244 02       		.uleb128 0x2
 11592 1245 91       		.byte	0x91
 11593 1246 64       		.sleb128 -28
 11594 1247 19       		.uleb128 0x19
 11595 1248 5D020000 		.4byte	.LASF38
 11596 124c 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 266


 11597 124d 080C     		.2byte	0xc08
 11598 124f 7E000000 		.4byte	0x7e
 11599 1253 02       		.uleb128 0x2
 11600 1254 91       		.byte	0x91
 11601 1255 60       		.sleb128 -32
 11602 1256 19       		.uleb128 0x19
 11603 1257 78010000 		.4byte	.LASF104
 11604 125b 01       		.byte	0x1
 11605 125c 080C     		.2byte	0xc08
 11606 125e 7E000000 		.4byte	0x7e
 11607 1262 02       		.uleb128 0x2
 11608 1263 91       		.byte	0x91
 11609 1264 50       		.sleb128 -48
 11610 1265 14       		.uleb128 0x14
 11611 1266 6900     		.ascii	"i\000"
 11612 1268 01       		.byte	0x1
 11613 1269 090C     		.2byte	0xc09
 11614 126b 2C000000 		.4byte	0x2c
 11615 126f 02       		.uleb128 0x2
 11616 1270 91       		.byte	0x91
 11617 1271 5C       		.sleb128 -36
 11618 1272 14       		.uleb128 0x14
 11619 1273 66617400 		.ascii	"fat\000"
 11620 1277 01       		.byte	0x1
 11621 1278 0A0C     		.2byte	0xc0a
 11622 127a 4C000000 		.4byte	0x4c
 11623 127e 02       		.uleb128 0x2
 11624 127f 91       		.byte	0x91
 11625 1280 57       		.sleb128 -41
 11626 1281 14       		.uleb128 0x14
 11627 1282 7000     		.ascii	"p\000"
 11628 1284 01       		.byte	0x1
 11629 1285 0A0C     		.2byte	0xc0a
 11630 1287 29020000 		.4byte	0x229
 11631 128b 02       		.uleb128 0x2
 11632 128c 91       		.byte	0x91
 11633 128d 58       		.sleb128 -40
 11634 128e 00       		.byte	0
 11635 128f 0B       		.uleb128 0xb
 11636 1290 04       		.byte	0x4
 11637 1291 7E000000 		.4byte	0x7e
 11638 1295 1C       		.uleb128 0x1c
 11639 1296 CE000000 		.4byte	.LASF135
 11640 129a 01       		.byte	0x1
 11641 129b 420C     		.2byte	0xc42
 11642 129d 86030000 		.4byte	0x386
 11643 12a1 00000000 		.4byte	.LFB36
 11644 12a5 60010000 		.4byte	.LFE36-.LFB36
 11645 12a9 01       		.uleb128 0x1
 11646 12aa 9C       		.byte	0x9c
 11647 12ab DC120000 		.4byte	0x12dc
 11648 12af 13       		.uleb128 0x13
 11649 12b0 667000   		.ascii	"fp\000"
 11650 12b3 01       		.byte	0x1
 11651 12b4 430C     		.2byte	0xc43
 11652 12b6 020E0000 		.4byte	0xe02
 11653 12ba 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 267


 11654 12bb 91       		.byte	0x91
 11655 12bc 64       		.sleb128 -28
 11656 12bd 14       		.uleb128 0x14
 11657 12be 72657300 		.ascii	"res\000"
 11658 12c2 01       		.byte	0x1
 11659 12c3 460C     		.2byte	0xc46
 11660 12c5 86030000 		.4byte	0x386
 11661 12c9 02       		.uleb128 0x2
 11662 12ca 91       		.byte	0x91
 11663 12cb 6F       		.sleb128 -17
 11664 12cc 14       		.uleb128 0x14
 11665 12cd 6E636C00 		.ascii	"ncl\000"
 11666 12d1 01       		.byte	0x1
 11667 12d2 470C     		.2byte	0xc47
 11668 12d4 7E000000 		.4byte	0x7e
 11669 12d8 02       		.uleb128 0x2
 11670 12d9 91       		.byte	0x91
 11671 12da 68       		.sleb128 -24
 11672 12db 00       		.byte	0
 11673 12dc 1C       		.uleb128 0x1c
 11674 12dd 51010000 		.4byte	.LASF136
 11675 12e1 01       		.byte	0x1
 11676 12e2 720C     		.2byte	0xc72
 11677 12e4 86030000 		.4byte	0x386
 11678 12e8 00000000 		.4byte	.LFB37
 11679 12ec C2010000 		.4byte	.LFE37-.LFB37
 11680 12f0 01       		.uleb128 0x1
 11681 12f1 9C       		.byte	0x9c
 11682 12f2 62130000 		.4byte	0x1362
 11683 12f6 18       		.uleb128 0x18
 11684 12f7 D9010000 		.4byte	.LASF97
 11685 12fb 01       		.byte	0x1
 11686 12fc 730C     		.2byte	0xc73
 11687 12fe 790A0000 		.4byte	0xa79
 11688 1302 03       		.uleb128 0x3
 11689 1303 91       		.byte	0x91
 11690 1304 9C7F     		.sleb128 -100
 11691 1306 14       		.uleb128 0x14
 11692 1307 72657300 		.ascii	"res\000"
 11693 130b 01       		.byte	0x1
 11694 130c 760C     		.2byte	0xc76
 11695 130e 86030000 		.4byte	0x386
 11696 1312 02       		.uleb128 0x2
 11697 1313 91       		.byte	0x91
 11698 1314 6F       		.sleb128 -17
 11699 1315 14       		.uleb128 0x14
 11700 1316 646A00   		.ascii	"dj\000"
 11701 1319 01       		.byte	0x1
 11702 131a 770C     		.2byte	0xc77
 11703 131c A0020000 		.4byte	0x2a0
 11704 1320 02       		.uleb128 0x2
 11705 1321 91       		.byte	0x91
 11706 1322 48       		.sleb128 -56
 11707 1323 14       		.uleb128 0x14
 11708 1324 73646A00 		.ascii	"sdj\000"
 11709 1328 01       		.byte	0x1
 11710 1329 770C     		.2byte	0xc77
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 268


 11711 132b A0020000 		.4byte	0x2a0
 11712 132f 03       		.uleb128 0x3
 11713 1330 91       		.byte	0x91
 11714 1331 AC7F     		.sleb128 -84
 11715 1333 14       		.uleb128 0x14
 11716 1334 64697200 		.ascii	"dir\000"
 11717 1338 01       		.byte	0x1
 11718 1339 780C     		.2byte	0xc78
 11719 133b 29020000 		.4byte	0x229
 11720 133f 02       		.uleb128 0x2
 11721 1340 91       		.byte	0x91
 11722 1341 68       		.sleb128 -24
 11723 1342 19       		.uleb128 0x19
 11724 1343 7C040000 		.4byte	.LASF137
 11725 1347 01       		.byte	0x1
 11726 1348 790C     		.2byte	0xc79
 11727 134a 7E000000 		.4byte	0x7e
 11728 134e 02       		.uleb128 0x2
 11729 134f 91       		.byte	0x91
 11730 1350 64       		.sleb128 -28
 11731 1351 14       		.uleb128 0x14
 11732 1352 73666E00 		.ascii	"sfn\000"
 11733 1356 01       		.byte	0x1
 11734 1357 7A0C     		.2byte	0xc7a
 11735 1359 080E0000 		.4byte	0xe08
 11736 135d 03       		.uleb128 0x3
 11737 135e 91       		.byte	0x91
 11738 135f A07F     		.sleb128 -96
 11739 1361 00       		.byte	0
 11740 1362 1C       		.uleb128 0x1c
 11741 1363 6A010000 		.4byte	.LASF138
 11742 1367 01       		.byte	0x1
 11743 1368 B60C     		.2byte	0xcb6
 11744 136a 86030000 		.4byte	0x386
 11745 136e 00000000 		.4byte	.LFB38
 11746 1372 5C030000 		.4byte	.LFE38-.LFB38
 11747 1376 01       		.uleb128 0x1
 11748 1377 9C       		.byte	0x9c
 11749 1378 13140000 		.4byte	0x1413
 11750 137c 18       		.uleb128 0x18
 11751 137d D9010000 		.4byte	.LASF97
 11752 1381 01       		.byte	0x1
 11753 1382 B70C     		.2byte	0xcb7
 11754 1384 790A0000 		.4byte	0xa79
 11755 1388 03       		.uleb128 0x3
 11756 1389 91       		.byte	0x91
 11757 138a AC7F     		.sleb128 -84
 11758 138c 14       		.uleb128 0x14
 11759 138d 72657300 		.ascii	"res\000"
 11760 1391 01       		.byte	0x1
 11761 1392 BA0C     		.2byte	0xcba
 11762 1394 86030000 		.4byte	0x386
 11763 1398 02       		.uleb128 0x2
 11764 1399 91       		.byte	0x91
 11765 139a 6F       		.sleb128 -17
 11766 139b 14       		.uleb128 0x14
 11767 139c 646A00   		.ascii	"dj\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 269


 11768 139f 01       		.byte	0x1
 11769 13a0 BB0C     		.2byte	0xcbb
 11770 13a2 A0020000 		.4byte	0x2a0
 11771 13a6 03       		.uleb128 0x3
 11772 13a7 91       		.byte	0x91
 11773 13a8 BC7F     		.sleb128 -68
 11774 13aa 14       		.uleb128 0x14
 11775 13ab 64697200 		.ascii	"dir\000"
 11776 13af 01       		.byte	0x1
 11777 13b0 BC0C     		.2byte	0xcbc
 11778 13b2 29020000 		.4byte	0x229
 11779 13b6 02       		.uleb128 0x2
 11780 13b7 91       		.byte	0x91
 11781 13b8 58       		.sleb128 -40
 11782 13b9 14       		.uleb128 0x14
 11783 13ba 6E00     		.ascii	"n\000"
 11784 13bc 01       		.byte	0x1
 11785 13bd BC0C     		.2byte	0xcbc
 11786 13bf 4C000000 		.4byte	0x4c
 11787 13c3 02       		.uleb128 0x2
 11788 13c4 91       		.byte	0x91
 11789 13c5 6E       		.sleb128 -18
 11790 13c6 14       		.uleb128 0x14
 11791 13c7 64736300 		.ascii	"dsc\000"
 11792 13cb 01       		.byte	0x1
 11793 13cc BD0C     		.2byte	0xcbd
 11794 13ce 7E000000 		.4byte	0x7e
 11795 13d2 02       		.uleb128 0x2
 11796 13d3 91       		.byte	0x91
 11797 13d4 68       		.sleb128 -24
 11798 13d5 14       		.uleb128 0x14
 11799 13d6 64636C00 		.ascii	"dcl\000"
 11800 13da 01       		.byte	0x1
 11801 13db BD0C     		.2byte	0xcbd
 11802 13dd 7E000000 		.4byte	0x7e
 11803 13e1 02       		.uleb128 0x2
 11804 13e2 91       		.byte	0x91
 11805 13e3 5C       		.sleb128 -36
 11806 13e4 14       		.uleb128 0x14
 11807 13e5 70636C00 		.ascii	"pcl\000"
 11808 13e9 01       		.byte	0x1
 11809 13ea BD0C     		.2byte	0xcbd
 11810 13ec 7E000000 		.4byte	0x7e
 11811 13f0 02       		.uleb128 0x2
 11812 13f1 91       		.byte	0x91
 11813 13f2 64       		.sleb128 -28
 11814 13f3 14       		.uleb128 0x14
 11815 13f4 74696D00 		.ascii	"tim\000"
 11816 13f8 01       		.byte	0x1
 11817 13f9 BD0C     		.2byte	0xcbd
 11818 13fb 7E000000 		.4byte	0x7e
 11819 13ff 02       		.uleb128 0x2
 11820 1400 91       		.byte	0x91
 11821 1401 60       		.sleb128 -32
 11822 1402 14       		.uleb128 0x14
 11823 1403 73666E00 		.ascii	"sfn\000"
 11824 1407 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 270


 11825 1408 BE0C     		.2byte	0xcbe
 11826 140a 080E0000 		.4byte	0xe08
 11827 140e 03       		.uleb128 0x3
 11828 140f 91       		.byte	0x91
 11829 1410 B07F     		.sleb128 -80
 11830 1412 00       		.byte	0
 11831 1413 1C       		.uleb128 0x1c
 11832 1414 01060000 		.4byte	.LASF139
 11833 1418 01       		.byte	0x1
 11834 1419 FF0C     		.2byte	0xcff
 11835 141b 86030000 		.4byte	0x386
 11836 141f 00000000 		.4byte	.LFB39
 11837 1423 DC000000 		.4byte	.LFE39-.LFB39
 11838 1427 01       		.uleb128 0x1
 11839 1428 9C       		.byte	0x9c
 11840 1429 99140000 		.4byte	0x1499
 11841 142d 18       		.uleb128 0x18
 11842 142e D9010000 		.4byte	.LASF97
 11843 1432 01       		.byte	0x1
 11844 1433 000D     		.2byte	0xd00
 11845 1435 790A0000 		.4byte	0xa79
 11846 1439 03       		.uleb128 0x3
 11847 143a 91       		.byte	0x91
 11848 143b BC7F     		.sleb128 -68
 11849 143d 18       		.uleb128 0x18
 11850 143e 72010000 		.4byte	.LASF140
 11851 1442 01       		.byte	0x1
 11852 1443 010D     		.2byte	0xd01
 11853 1445 4C000000 		.4byte	0x4c
 11854 1449 03       		.uleb128 0x3
 11855 144a 91       		.byte	0x91
 11856 144b BB7F     		.sleb128 -69
 11857 144d 18       		.uleb128 0x18
 11858 144e 7D030000 		.4byte	.LASF141
 11859 1452 01       		.byte	0x1
 11860 1453 020D     		.2byte	0xd02
 11861 1455 4C000000 		.4byte	0x4c
 11862 1459 03       		.uleb128 0x3
 11863 145a 91       		.byte	0x91
 11864 145b BA7F     		.sleb128 -70
 11865 145d 14       		.uleb128 0x14
 11866 145e 72657300 		.ascii	"res\000"
 11867 1462 01       		.byte	0x1
 11868 1463 050D     		.2byte	0xd05
 11869 1465 86030000 		.4byte	0x386
 11870 1469 02       		.uleb128 0x2
 11871 146a 91       		.byte	0x91
 11872 146b 6F       		.sleb128 -17
 11873 146c 14       		.uleb128 0x14
 11874 146d 646A00   		.ascii	"dj\000"
 11875 1470 01       		.byte	0x1
 11876 1471 060D     		.2byte	0xd06
 11877 1473 A0020000 		.4byte	0x2a0
 11878 1477 02       		.uleb128 0x2
 11879 1478 91       		.byte	0x91
 11880 1479 4C       		.sleb128 -52
 11881 147a 14       		.uleb128 0x14
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 271


 11882 147b 64697200 		.ascii	"dir\000"
 11883 147f 01       		.byte	0x1
 11884 1480 070D     		.2byte	0xd07
 11885 1482 29020000 		.4byte	0x229
 11886 1486 02       		.uleb128 0x2
 11887 1487 91       		.byte	0x91
 11888 1488 68       		.sleb128 -24
 11889 1489 14       		.uleb128 0x14
 11890 148a 73666E00 		.ascii	"sfn\000"
 11891 148e 01       		.byte	0x1
 11892 148f 080D     		.2byte	0xd08
 11893 1491 080E0000 		.4byte	0xe08
 11894 1495 02       		.uleb128 0x2
 11895 1496 91       		.byte	0x91
 11896 1497 40       		.sleb128 -64
 11897 1498 00       		.byte	0
 11898 1499 1C       		.uleb128 0x1c
 11899 149a 50000000 		.4byte	.LASF142
 11900 149e 01       		.byte	0x1
 11901 149f 290D     		.2byte	0xd29
 11902 14a1 86030000 		.4byte	0x386
 11903 14a5 00000000 		.4byte	.LFB40
 11904 14a9 D2000000 		.4byte	.LFE40-.LFB40
 11905 14ad 01       		.uleb128 0x1
 11906 14ae 9C       		.byte	0x9c
 11907 14af 0F150000 		.4byte	0x150f
 11908 14b3 18       		.uleb128 0x18
 11909 14b4 D9010000 		.4byte	.LASF97
 11910 14b8 01       		.byte	0x1
 11911 14b9 2A0D     		.2byte	0xd2a
 11912 14bb 790A0000 		.4byte	0xa79
 11913 14bf 03       		.uleb128 0x3
 11914 14c0 91       		.byte	0x91
 11915 14c1 BC7F     		.sleb128 -68
 11916 14c3 13       		.uleb128 0x13
 11917 14c4 666E6F00 		.ascii	"fno\000"
 11918 14c8 01       		.byte	0x1
 11919 14c9 2B0D     		.2byte	0xd2b
 11920 14cb 0F150000 		.4byte	0x150f
 11921 14cf 03       		.uleb128 0x3
 11922 14d0 91       		.byte	0x91
 11923 14d1 B87F     		.sleb128 -72
 11924 14d3 14       		.uleb128 0x14
 11925 14d4 72657300 		.ascii	"res\000"
 11926 14d8 01       		.byte	0x1
 11927 14d9 2E0D     		.2byte	0xd2e
 11928 14db 86030000 		.4byte	0x386
 11929 14df 02       		.uleb128 0x2
 11930 14e0 91       		.byte	0x91
 11931 14e1 6F       		.sleb128 -17
 11932 14e2 14       		.uleb128 0x14
 11933 14e3 646A00   		.ascii	"dj\000"
 11934 14e6 01       		.byte	0x1
 11935 14e7 2F0D     		.2byte	0xd2f
 11936 14e9 A0020000 		.4byte	0x2a0
 11937 14ed 02       		.uleb128 0x2
 11938 14ee 91       		.byte	0x91
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 272


 11939 14ef 4C       		.sleb128 -52
 11940 14f0 14       		.uleb128 0x14
 11941 14f1 64697200 		.ascii	"dir\000"
 11942 14f5 01       		.byte	0x1
 11943 14f6 300D     		.2byte	0xd30
 11944 14f8 29020000 		.4byte	0x229
 11945 14fc 02       		.uleb128 0x2
 11946 14fd 91       		.byte	0x91
 11947 14fe 68       		.sleb128 -24
 11948 14ff 14       		.uleb128 0x14
 11949 1500 73666E00 		.ascii	"sfn\000"
 11950 1504 01       		.byte	0x1
 11951 1505 310D     		.2byte	0xd31
 11952 1507 080E0000 		.4byte	0xe08
 11953 150b 02       		.uleb128 0x2
 11954 150c 91       		.byte	0x91
 11955 150d 40       		.sleb128 -64
 11956 150e 00       		.byte	0
 11957 150f 0B       		.uleb128 0xb
 11958 1510 04       		.byte	0x4
 11959 1511 15150000 		.4byte	0x1515
 11960 1515 11       		.uleb128 0x11
 11961 1516 00030000 		.4byte	0x300
 11962 151a 1C       		.uleb128 0x1c
 11963 151b A2020000 		.4byte	.LASF143
 11964 151f 01       		.byte	0x1
 11965 1520 520D     		.2byte	0xd52
 11966 1522 86030000 		.4byte	0x386
 11967 1526 00000000 		.4byte	.LFB41
 11968 152a 90020000 		.4byte	.LFE41-.LFB41
 11969 152e 01       		.uleb128 0x1
 11970 152f 9C       		.byte	0x9c
 11971 1530 C0150000 		.4byte	0x15c0
 11972 1534 18       		.uleb128 0x18
 11973 1535 1B010000 		.4byte	.LASF144
 11974 1539 01       		.byte	0x1
 11975 153a 530D     		.2byte	0xd53
 11976 153c 790A0000 		.4byte	0xa79
 11977 1540 03       		.uleb128 0x3
 11978 1541 91       		.byte	0x91
 11979 1542 847F     		.sleb128 -124
 11980 1544 18       		.uleb128 0x18
 11981 1545 F3010000 		.4byte	.LASF145
 11982 1549 01       		.byte	0x1
 11983 154a 540D     		.2byte	0xd54
 11984 154c 790A0000 		.4byte	0xa79
 11985 1550 03       		.uleb128 0x3
 11986 1551 91       		.byte	0x91
 11987 1552 807F     		.sleb128 -128
 11988 1554 14       		.uleb128 0x14
 11989 1555 72657300 		.ascii	"res\000"
 11990 1559 01       		.byte	0x1
 11991 155a 570D     		.2byte	0xd57
 11992 155c 86030000 		.4byte	0x386
 11993 1560 02       		.uleb128 0x2
 11994 1561 91       		.byte	0x91
 11995 1562 6F       		.sleb128 -17
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 273


 11996 1563 14       		.uleb128 0x14
 11997 1564 646A6F00 		.ascii	"djo\000"
 11998 1568 01       		.byte	0x1
 11999 1569 580D     		.2byte	0xd58
 12000 156b A0020000 		.4byte	0x2a0
 12001 156f 02       		.uleb128 0x2
 12002 1570 91       		.byte	0x91
 12003 1571 48       		.sleb128 -56
 12004 1572 14       		.uleb128 0x14
 12005 1573 646A6E00 		.ascii	"djn\000"
 12006 1577 01       		.byte	0x1
 12007 1578 580D     		.2byte	0xd58
 12008 157a A0020000 		.4byte	0x2a0
 12009 157e 03       		.uleb128 0x3
 12010 157f 91       		.byte	0x91
 12011 1580 AC7F     		.sleb128 -84
 12012 1582 14       		.uleb128 0x14
 12013 1583 62756600 		.ascii	"buf\000"
 12014 1587 01       		.byte	0x1
 12015 1588 590D     		.2byte	0xd59
 12016 158a C0150000 		.4byte	0x15c0
 12017 158e 03       		.uleb128 0x3
 12018 158f 91       		.byte	0x91
 12019 1590 947F     		.sleb128 -108
 12020 1592 14       		.uleb128 0x14
 12021 1593 64697200 		.ascii	"dir\000"
 12022 1597 01       		.byte	0x1
 12023 1598 590D     		.2byte	0xd59
 12024 159a 29020000 		.4byte	0x229
 12025 159e 02       		.uleb128 0x2
 12026 159f 91       		.byte	0x91
 12027 15a0 68       		.sleb128 -24
 12028 15a1 14       		.uleb128 0x14
 12029 15a2 647700   		.ascii	"dw\000"
 12030 15a5 01       		.byte	0x1
 12031 15a6 5A0D     		.2byte	0xd5a
 12032 15a8 7E000000 		.4byte	0x7e
 12033 15ac 02       		.uleb128 0x2
 12034 15ad 91       		.byte	0x91
 12035 15ae 64       		.sleb128 -28
 12036 15af 14       		.uleb128 0x14
 12037 15b0 73666E00 		.ascii	"sfn\000"
 12038 15b4 01       		.byte	0x1
 12039 15b5 5B0D     		.2byte	0xd5b
 12040 15b7 080E0000 		.4byte	0xe08
 12041 15bb 03       		.uleb128 0x3
 12042 15bc 91       		.byte	0x91
 12043 15bd 887F     		.sleb128 -120
 12044 15bf 00       		.byte	0
 12045 15c0 08       		.uleb128 0x8
 12046 15c1 4C000000 		.4byte	0x4c
 12047 15c5 D0150000 		.4byte	0x15d0
 12048 15c9 0D       		.uleb128 0xd
 12049 15ca 86010000 		.4byte	0x186
 12050 15ce 14       		.byte	0x14
 12051 15cf 00       		.byte	0
 12052 15d0 08       		.uleb128 0x8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 274


 12053 15d1 23020000 		.4byte	0x223
 12054 15d5 E0150000 		.4byte	0x15e0
 12055 15d9 0D       		.uleb128 0xd
 12056 15da 86010000 		.4byte	0x186
 12057 15de 00       		.byte	0
 12058 15df 00       		.byte	0
 12059 15e0 19       		.uleb128 0x19
 12060 15e1 B5030000 		.4byte	.LASF146
 12061 15e5 01       		.byte	0x1
 12062 15e6 CC01     		.2byte	0x1cc
 12063 15e8 D0150000 		.4byte	0x15d0
 12064 15ec 05       		.uleb128 0x5
 12065 15ed 03       		.byte	0x3
 12066 15ee 00000000 		.4byte	FatFs
 12067 15f2 19       		.uleb128 0x19
 12068 15f3 68030000 		.4byte	.LASF147
 12069 15f7 01       		.byte	0x1
 12070 15f8 D201     		.2byte	0x1d2
 12071 15fa 65000000 		.4byte	0x65
 12072 15fe 05       		.uleb128 0x5
 12073 15ff 03       		.byte	0x3
 12074 1600 04000000 		.4byte	Fsid
 12075 1604 00       		.byte	0
 12076              		.section	.debug_abbrev,"",%progbits
 12077              	.Ldebug_abbrev0:
 12078 0000 01       		.uleb128 0x1
 12079 0001 11       		.uleb128 0x11
 12080 0002 01       		.byte	0x1
 12081 0003 25       		.uleb128 0x25
 12082 0004 0E       		.uleb128 0xe
 12083 0005 13       		.uleb128 0x13
 12084 0006 0B       		.uleb128 0xb
 12085 0007 03       		.uleb128 0x3
 12086 0008 0E       		.uleb128 0xe
 12087 0009 1B       		.uleb128 0x1b
 12088 000a 0E       		.uleb128 0xe
 12089 000b 55       		.uleb128 0x55
 12090 000c 17       		.uleb128 0x17
 12091 000d 11       		.uleb128 0x11
 12092 000e 01       		.uleb128 0x1
 12093 000f 10       		.uleb128 0x10
 12094 0010 17       		.uleb128 0x17
 12095 0011 00       		.byte	0
 12096 0012 00       		.byte	0
 12097 0013 02       		.uleb128 0x2
 12098 0014 24       		.uleb128 0x24
 12099 0015 00       		.byte	0
 12100 0016 0B       		.uleb128 0xb
 12101 0017 0B       		.uleb128 0xb
 12102 0018 3E       		.uleb128 0x3e
 12103 0019 0B       		.uleb128 0xb
 12104 001a 03       		.uleb128 0x3
 12105 001b 08       		.uleb128 0x8
 12106 001c 00       		.byte	0
 12107 001d 00       		.byte	0
 12108 001e 03       		.uleb128 0x3
 12109 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 275


 12110 0020 00       		.byte	0
 12111 0021 03       		.uleb128 0x3
 12112 0022 0E       		.uleb128 0xe
 12113 0023 3A       		.uleb128 0x3a
 12114 0024 0B       		.uleb128 0xb
 12115 0025 3B       		.uleb128 0x3b
 12116 0026 0B       		.uleb128 0xb
 12117 0027 49       		.uleb128 0x49
 12118 0028 13       		.uleb128 0x13
 12119 0029 00       		.byte	0
 12120 002a 00       		.byte	0
 12121 002b 04       		.uleb128 0x4
 12122 002c 24       		.uleb128 0x24
 12123 002d 00       		.byte	0
 12124 002e 0B       		.uleb128 0xb
 12125 002f 0B       		.uleb128 0xb
 12126 0030 3E       		.uleb128 0x3e
 12127 0031 0B       		.uleb128 0xb
 12128 0032 03       		.uleb128 0x3
 12129 0033 0E       		.uleb128 0xe
 12130 0034 00       		.byte	0
 12131 0035 00       		.byte	0
 12132 0036 05       		.uleb128 0x5
 12133 0037 13       		.uleb128 0x13
 12134 0038 01       		.byte	0x1
 12135 0039 0B       		.uleb128 0xb
 12136 003a 05       		.uleb128 0x5
 12137 003b 3A       		.uleb128 0x3a
 12138 003c 0B       		.uleb128 0xb
 12139 003d 3B       		.uleb128 0x3b
 12140 003e 0B       		.uleb128 0xb
 12141 003f 01       		.uleb128 0x1
 12142 0040 13       		.uleb128 0x13
 12143 0041 00       		.byte	0
 12144 0042 00       		.byte	0
 12145 0043 06       		.uleb128 0x6
 12146 0044 0D       		.uleb128 0xd
 12147 0045 00       		.byte	0
 12148 0046 03       		.uleb128 0x3
 12149 0047 0E       		.uleb128 0xe
 12150 0048 3A       		.uleb128 0x3a
 12151 0049 0B       		.uleb128 0xb
 12152 004a 3B       		.uleb128 0x3b
 12153 004b 0B       		.uleb128 0xb
 12154 004c 49       		.uleb128 0x49
 12155 004d 13       		.uleb128 0x13
 12156 004e 38       		.uleb128 0x38
 12157 004f 0B       		.uleb128 0xb
 12158 0050 00       		.byte	0
 12159 0051 00       		.byte	0
 12160 0052 07       		.uleb128 0x7
 12161 0053 0D       		.uleb128 0xd
 12162 0054 00       		.byte	0
 12163 0055 03       		.uleb128 0x3
 12164 0056 08       		.uleb128 0x8
 12165 0057 3A       		.uleb128 0x3a
 12166 0058 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 276


 12167 0059 3B       		.uleb128 0x3b
 12168 005a 0B       		.uleb128 0xb
 12169 005b 49       		.uleb128 0x49
 12170 005c 13       		.uleb128 0x13
 12171 005d 38       		.uleb128 0x38
 12172 005e 0B       		.uleb128 0xb
 12173 005f 00       		.byte	0
 12174 0060 00       		.byte	0
 12175 0061 08       		.uleb128 0x8
 12176 0062 01       		.uleb128 0x1
 12177 0063 01       		.byte	0x1
 12178 0064 49       		.uleb128 0x49
 12179 0065 13       		.uleb128 0x13
 12180 0066 01       		.uleb128 0x1
 12181 0067 13       		.uleb128 0x13
 12182 0068 00       		.byte	0
 12183 0069 00       		.byte	0
 12184 006a 09       		.uleb128 0x9
 12185 006b 21       		.uleb128 0x21
 12186 006c 00       		.byte	0
 12187 006d 49       		.uleb128 0x49
 12188 006e 13       		.uleb128 0x13
 12189 006f 2F       		.uleb128 0x2f
 12190 0070 05       		.uleb128 0x5
 12191 0071 00       		.byte	0
 12192 0072 00       		.byte	0
 12193 0073 0A       		.uleb128 0xa
 12194 0074 13       		.uleb128 0x13
 12195 0075 01       		.byte	0x1
 12196 0076 0B       		.uleb128 0xb
 12197 0077 0B       		.uleb128 0xb
 12198 0078 3A       		.uleb128 0x3a
 12199 0079 0B       		.uleb128 0xb
 12200 007a 3B       		.uleb128 0x3b
 12201 007b 0B       		.uleb128 0xb
 12202 007c 01       		.uleb128 0x1
 12203 007d 13       		.uleb128 0x13
 12204 007e 00       		.byte	0
 12205 007f 00       		.byte	0
 12206 0080 0B       		.uleb128 0xb
 12207 0081 0F       		.uleb128 0xf
 12208 0082 00       		.byte	0
 12209 0083 0B       		.uleb128 0xb
 12210 0084 0B       		.uleb128 0xb
 12211 0085 49       		.uleb128 0x49
 12212 0086 13       		.uleb128 0x13
 12213 0087 00       		.byte	0
 12214 0088 00       		.byte	0
 12215 0089 0C       		.uleb128 0xc
 12216 008a 16       		.uleb128 0x16
 12217 008b 00       		.byte	0
 12218 008c 03       		.uleb128 0x3
 12219 008d 08       		.uleb128 0x8
 12220 008e 3A       		.uleb128 0x3a
 12221 008f 0B       		.uleb128 0xb
 12222 0090 3B       		.uleb128 0x3b
 12223 0091 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 277


 12224 0092 49       		.uleb128 0x49
 12225 0093 13       		.uleb128 0x13
 12226 0094 00       		.byte	0
 12227 0095 00       		.byte	0
 12228 0096 0D       		.uleb128 0xd
 12229 0097 21       		.uleb128 0x21
 12230 0098 00       		.byte	0
 12231 0099 49       		.uleb128 0x49
 12232 009a 13       		.uleb128 0x13
 12233 009b 2F       		.uleb128 0x2f
 12234 009c 0B       		.uleb128 0xb
 12235 009d 00       		.byte	0
 12236 009e 00       		.byte	0
 12237 009f 0E       		.uleb128 0xe
 12238 00a0 04       		.uleb128 0x4
 12239 00a1 01       		.byte	0x1
 12240 00a2 0B       		.uleb128 0xb
 12241 00a3 0B       		.uleb128 0xb
 12242 00a4 3A       		.uleb128 0x3a
 12243 00a5 0B       		.uleb128 0xb
 12244 00a6 3B       		.uleb128 0x3b
 12245 00a7 0B       		.uleb128 0xb
 12246 00a8 01       		.uleb128 0x1
 12247 00a9 13       		.uleb128 0x13
 12248 00aa 00       		.byte	0
 12249 00ab 00       		.byte	0
 12250 00ac 0F       		.uleb128 0xf
 12251 00ad 28       		.uleb128 0x28
 12252 00ae 00       		.byte	0
 12253 00af 03       		.uleb128 0x3
 12254 00b0 0E       		.uleb128 0xe
 12255 00b1 1C       		.uleb128 0x1c
 12256 00b2 0D       		.uleb128 0xd
 12257 00b3 00       		.byte	0
 12258 00b4 00       		.byte	0
 12259 00b5 10       		.uleb128 0x10
 12260 00b6 0F       		.uleb128 0xf
 12261 00b7 00       		.byte	0
 12262 00b8 0B       		.uleb128 0xb
 12263 00b9 0B       		.uleb128 0xb
 12264 00ba 00       		.byte	0
 12265 00bb 00       		.byte	0
 12266 00bc 11       		.uleb128 0x11
 12267 00bd 26       		.uleb128 0x26
 12268 00be 00       		.byte	0
 12269 00bf 49       		.uleb128 0x49
 12270 00c0 13       		.uleb128 0x13
 12271 00c1 00       		.byte	0
 12272 00c2 00       		.byte	0
 12273 00c3 12       		.uleb128 0x12
 12274 00c4 2E       		.uleb128 0x2e
 12275 00c5 01       		.byte	0x1
 12276 00c6 03       		.uleb128 0x3
 12277 00c7 0E       		.uleb128 0xe
 12278 00c8 3A       		.uleb128 0x3a
 12279 00c9 0B       		.uleb128 0xb
 12280 00ca 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 278


 12281 00cb 05       		.uleb128 0x5
 12282 00cc 27       		.uleb128 0x27
 12283 00cd 19       		.uleb128 0x19
 12284 00ce 11       		.uleb128 0x11
 12285 00cf 01       		.uleb128 0x1
 12286 00d0 12       		.uleb128 0x12
 12287 00d1 06       		.uleb128 0x6
 12288 00d2 40       		.uleb128 0x40
 12289 00d3 18       		.uleb128 0x18
 12290 00d4 9742     		.uleb128 0x2117
 12291 00d6 19       		.uleb128 0x19
 12292 00d7 01       		.uleb128 0x1
 12293 00d8 13       		.uleb128 0x13
 12294 00d9 00       		.byte	0
 12295 00da 00       		.byte	0
 12296 00db 13       		.uleb128 0x13
 12297 00dc 05       		.uleb128 0x5
 12298 00dd 00       		.byte	0
 12299 00de 03       		.uleb128 0x3
 12300 00df 08       		.uleb128 0x8
 12301 00e0 3A       		.uleb128 0x3a
 12302 00e1 0B       		.uleb128 0xb
 12303 00e2 3B       		.uleb128 0x3b
 12304 00e3 05       		.uleb128 0x5
 12305 00e4 49       		.uleb128 0x49
 12306 00e5 13       		.uleb128 0x13
 12307 00e6 02       		.uleb128 0x2
 12308 00e7 18       		.uleb128 0x18
 12309 00e8 00       		.byte	0
 12310 00e9 00       		.byte	0
 12311 00ea 14       		.uleb128 0x14
 12312 00eb 34       		.uleb128 0x34
 12313 00ec 00       		.byte	0
 12314 00ed 03       		.uleb128 0x3
 12315 00ee 08       		.uleb128 0x8
 12316 00ef 3A       		.uleb128 0x3a
 12317 00f0 0B       		.uleb128 0xb
 12318 00f1 3B       		.uleb128 0x3b
 12319 00f2 05       		.uleb128 0x5
 12320 00f3 49       		.uleb128 0x49
 12321 00f4 13       		.uleb128 0x13
 12322 00f5 02       		.uleb128 0x2
 12323 00f6 18       		.uleb128 0x18
 12324 00f7 00       		.byte	0
 12325 00f8 00       		.byte	0
 12326 00f9 15       		.uleb128 0x15
 12327 00fa 26       		.uleb128 0x26
 12328 00fb 00       		.byte	0
 12329 00fc 00       		.byte	0
 12330 00fd 00       		.byte	0
 12331 00fe 16       		.uleb128 0x16
 12332 00ff 2E       		.uleb128 0x2e
 12333 0100 01       		.byte	0x1
 12334 0101 03       		.uleb128 0x3
 12335 0102 0E       		.uleb128 0xe
 12336 0103 3A       		.uleb128 0x3a
 12337 0104 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 279


 12338 0105 3B       		.uleb128 0x3b
 12339 0106 05       		.uleb128 0x5
 12340 0107 27       		.uleb128 0x27
 12341 0108 19       		.uleb128 0x19
 12342 0109 49       		.uleb128 0x49
 12343 010a 13       		.uleb128 0x13
 12344 010b 11       		.uleb128 0x11
 12345 010c 01       		.uleb128 0x1
 12346 010d 12       		.uleb128 0x12
 12347 010e 06       		.uleb128 0x6
 12348 010f 40       		.uleb128 0x40
 12349 0110 18       		.uleb128 0x18
 12350 0111 9742     		.uleb128 0x2117
 12351 0113 19       		.uleb128 0x19
 12352 0114 01       		.uleb128 0x1
 12353 0115 13       		.uleb128 0x13
 12354 0116 00       		.byte	0
 12355 0117 00       		.byte	0
 12356 0118 17       		.uleb128 0x17
 12357 0119 2E       		.uleb128 0x2e
 12358 011a 01       		.byte	0x1
 12359 011b 03       		.uleb128 0x3
 12360 011c 0E       		.uleb128 0xe
 12361 011d 3A       		.uleb128 0x3a
 12362 011e 0B       		.uleb128 0xb
 12363 011f 3B       		.uleb128 0x3b
 12364 0120 05       		.uleb128 0x5
 12365 0121 27       		.uleb128 0x27
 12366 0122 19       		.uleb128 0x19
 12367 0123 49       		.uleb128 0x49
 12368 0124 13       		.uleb128 0x13
 12369 0125 11       		.uleb128 0x11
 12370 0126 01       		.uleb128 0x1
 12371 0127 12       		.uleb128 0x12
 12372 0128 06       		.uleb128 0x6
 12373 0129 40       		.uleb128 0x40
 12374 012a 18       		.uleb128 0x18
 12375 012b 9642     		.uleb128 0x2116
 12376 012d 19       		.uleb128 0x19
 12377 012e 01       		.uleb128 0x1
 12378 012f 13       		.uleb128 0x13
 12379 0130 00       		.byte	0
 12380 0131 00       		.byte	0
 12381 0132 18       		.uleb128 0x18
 12382 0133 05       		.uleb128 0x5
 12383 0134 00       		.byte	0
 12384 0135 03       		.uleb128 0x3
 12385 0136 0E       		.uleb128 0xe
 12386 0137 3A       		.uleb128 0x3a
 12387 0138 0B       		.uleb128 0xb
 12388 0139 3B       		.uleb128 0x3b
 12389 013a 05       		.uleb128 0x5
 12390 013b 49       		.uleb128 0x49
 12391 013c 13       		.uleb128 0x13
 12392 013d 02       		.uleb128 0x2
 12393 013e 18       		.uleb128 0x18
 12394 013f 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 280


 12395 0140 00       		.byte	0
 12396 0141 19       		.uleb128 0x19
 12397 0142 34       		.uleb128 0x34
 12398 0143 00       		.byte	0
 12399 0144 03       		.uleb128 0x3
 12400 0145 0E       		.uleb128 0xe
 12401 0146 3A       		.uleb128 0x3a
 12402 0147 0B       		.uleb128 0xb
 12403 0148 3B       		.uleb128 0x3b
 12404 0149 05       		.uleb128 0x5
 12405 014a 49       		.uleb128 0x49
 12406 014b 13       		.uleb128 0x13
 12407 014c 02       		.uleb128 0x2
 12408 014d 18       		.uleb128 0x18
 12409 014e 00       		.byte	0
 12410 014f 00       		.byte	0
 12411 0150 1A       		.uleb128 0x1a
 12412 0151 0B       		.uleb128 0xb
 12413 0152 01       		.byte	0x1
 12414 0153 11       		.uleb128 0x11
 12415 0154 01       		.uleb128 0x1
 12416 0155 12       		.uleb128 0x12
 12417 0156 06       		.uleb128 0x6
 12418 0157 00       		.byte	0
 12419 0158 00       		.byte	0
 12420 0159 1B       		.uleb128 0x1b
 12421 015a 2E       		.uleb128 0x2e
 12422 015b 01       		.byte	0x1
 12423 015c 3F       		.uleb128 0x3f
 12424 015d 19       		.uleb128 0x19
 12425 015e 03       		.uleb128 0x3
 12426 015f 0E       		.uleb128 0xe
 12427 0160 3A       		.uleb128 0x3a
 12428 0161 0B       		.uleb128 0xb
 12429 0162 3B       		.uleb128 0x3b
 12430 0163 05       		.uleb128 0x5
 12431 0164 27       		.uleb128 0x27
 12432 0165 19       		.uleb128 0x19
 12433 0166 49       		.uleb128 0x49
 12434 0167 13       		.uleb128 0x13
 12435 0168 11       		.uleb128 0x11
 12436 0169 01       		.uleb128 0x1
 12437 016a 12       		.uleb128 0x12
 12438 016b 06       		.uleb128 0x6
 12439 016c 40       		.uleb128 0x40
 12440 016d 18       		.uleb128 0x18
 12441 016e 9742     		.uleb128 0x2117
 12442 0170 19       		.uleb128 0x19
 12443 0171 01       		.uleb128 0x1
 12444 0172 13       		.uleb128 0x13
 12445 0173 00       		.byte	0
 12446 0174 00       		.byte	0
 12447 0175 1C       		.uleb128 0x1c
 12448 0176 2E       		.uleb128 0x2e
 12449 0177 01       		.byte	0x1
 12450 0178 3F       		.uleb128 0x3f
 12451 0179 19       		.uleb128 0x19
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 281


 12452 017a 03       		.uleb128 0x3
 12453 017b 0E       		.uleb128 0xe
 12454 017c 3A       		.uleb128 0x3a
 12455 017d 0B       		.uleb128 0xb
 12456 017e 3B       		.uleb128 0x3b
 12457 017f 05       		.uleb128 0x5
 12458 0180 27       		.uleb128 0x27
 12459 0181 19       		.uleb128 0x19
 12460 0182 49       		.uleb128 0x49
 12461 0183 13       		.uleb128 0x13
 12462 0184 11       		.uleb128 0x11
 12463 0185 01       		.uleb128 0x1
 12464 0186 12       		.uleb128 0x12
 12465 0187 06       		.uleb128 0x6
 12466 0188 40       		.uleb128 0x40
 12467 0189 18       		.uleb128 0x18
 12468 018a 9642     		.uleb128 0x2116
 12469 018c 19       		.uleb128 0x19
 12470 018d 01       		.uleb128 0x1
 12471 018e 13       		.uleb128 0x13
 12472 018f 00       		.byte	0
 12473 0190 00       		.byte	0
 12474 0191 1D       		.uleb128 0x1d
 12475 0192 34       		.uleb128 0x34
 12476 0193 00       		.byte	0
 12477 0194 03       		.uleb128 0x3
 12478 0195 08       		.uleb128 0x8
 12479 0196 3A       		.uleb128 0x3a
 12480 0197 0B       		.uleb128 0xb
 12481 0198 3B       		.uleb128 0x3b
 12482 0199 05       		.uleb128 0x5
 12483 019a 49       		.uleb128 0x49
 12484 019b 13       		.uleb128 0x13
 12485 019c 00       		.byte	0
 12486 019d 00       		.byte	0
 12487 019e 00       		.byte	0
 12488              		.section	.debug_aranges,"",%progbits
 12489 0000 54010000 		.4byte	0x154
 12490 0004 0200     		.2byte	0x2
 12491 0006 00000000 		.4byte	.Ldebug_info0
 12492 000a 04       		.byte	0x4
 12493 000b 00       		.byte	0
 12494 000c 0000     		.2byte	0
 12495 000e 0000     		.2byte	0
 12496 0010 00000000 		.4byte	.LFB2
 12497 0014 36000000 		.4byte	.LFE2-.LFB2
 12498 0018 00000000 		.4byte	.LFB3
 12499 001c 2E000000 		.4byte	.LFE3-.LFB3
 12500 0020 00000000 		.4byte	.LFB4
 12501 0024 4A000000 		.4byte	.LFE4-.LFB4
 12502 0028 00000000 		.4byte	.LFB5
 12503 002c 32000000 		.4byte	.LFE5-.LFB5
 12504 0030 00000000 		.4byte	.LFB6
 12505 0034 D8000000 		.4byte	.LFE6-.LFB6
 12506 0038 00000000 		.4byte	.LFB7
 12507 003c 98010000 		.4byte	.LFE7-.LFB7
 12508 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 282


 12509 0044 38000000 		.4byte	.LFE8-.LFB8
 12510 0048 00000000 		.4byte	.LFB9
 12511 004c 5E010000 		.4byte	.LFE9-.LFB9
 12512 0050 00000000 		.4byte	.LFB10
 12513 0054 32020000 		.4byte	.LFE10-.LFB10
 12514 0058 00000000 		.4byte	.LFB11
 12515 005c BC000000 		.4byte	.LFE11-.LFB11
 12516 0060 00000000 		.4byte	.LFB12
 12517 0064 40010000 		.4byte	.LFE12-.LFB12
 12518 0068 00000000 		.4byte	.LFB13
 12519 006c 24010000 		.4byte	.LFE13-.LFB13
 12520 0070 00000000 		.4byte	.LFB14
 12521 0074 DA010000 		.4byte	.LFE14-.LFB14
 12522 0078 00000000 		.4byte	.LFB15
 12523 007c C2000000 		.4byte	.LFE15-.LFB15
 12524 0080 00000000 		.4byte	.LFB16
 12525 0084 C2000000 		.4byte	.LFE16-.LFB16
 12526 0088 00000000 		.4byte	.LFB17
 12527 008c E8000000 		.4byte	.LFE17-.LFB17
 12528 0090 00000000 		.4byte	.LFB18
 12529 0094 68000000 		.4byte	.LFE18-.LFB18
 12530 0098 00000000 		.4byte	.LFB19
 12531 009c 1C020000 		.4byte	.LFE19-.LFB19
 12532 00a0 00000000 		.4byte	.LFB20
 12533 00a4 38010000 		.4byte	.LFE20-.LFB20
 12534 00a8 00000000 		.4byte	.LFB21
 12535 00ac 26010000 		.4byte	.LFE21-.LFB21
 12536 00b0 00000000 		.4byte	.LFB22
 12537 00b4 CC000000 		.4byte	.LFE22-.LFB22
 12538 00b8 00000000 		.4byte	.LFB23
 12539 00bc D8050000 		.4byte	.LFE23-.LFB23
 12540 00c0 00000000 		.4byte	.LFB24
 12541 00c4 4E000000 		.4byte	.LFE24-.LFB24
 12542 00c8 00000000 		.4byte	.LFB25
 12543 00cc 58000000 		.4byte	.LFE25-.LFB25
 12544 00d0 00000000 		.4byte	.LFB26
 12545 00d4 4A030000 		.4byte	.LFE26-.LFB26
 12546 00d8 00000000 		.4byte	.LFB27
 12547 00dc 8A020000 		.4byte	.LFE27-.LFB27
 12548 00e0 00000000 		.4byte	.LFB28
 12549 00e4 3C030000 		.4byte	.LFE28-.LFB28
 12550 00e8 00000000 		.4byte	.LFB29
 12551 00ec 70010000 		.4byte	.LFE29-.LFB29
 12552 00f0 00000000 		.4byte	.LFB30
 12553 00f4 36000000 		.4byte	.LFE30-.LFB30
 12554 00f8 00000000 		.4byte	.LFB31
 12555 00fc 62020000 		.4byte	.LFE31-.LFB31
 12556 0100 00000000 		.4byte	.LFB32
 12557 0104 F8000000 		.4byte	.LFE32-.LFB32
 12558 0108 00000000 		.4byte	.LFB33
 12559 010c C4000000 		.4byte	.LFE33-.LFB33
 12560 0110 00000000 		.4byte	.LFB34
 12561 0114 86000000 		.4byte	.LFE34-.LFB34
 12562 0118 00000000 		.4byte	.LFB35
 12563 011c BC010000 		.4byte	.LFE35-.LFB35
 12564 0120 00000000 		.4byte	.LFB36
 12565 0124 60010000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 283


 12566 0128 00000000 		.4byte	.LFB37
 12567 012c C2010000 		.4byte	.LFE37-.LFB37
 12568 0130 00000000 		.4byte	.LFB38
 12569 0134 5C030000 		.4byte	.LFE38-.LFB38
 12570 0138 00000000 		.4byte	.LFB39
 12571 013c DC000000 		.4byte	.LFE39-.LFB39
 12572 0140 00000000 		.4byte	.LFB40
 12573 0144 D2000000 		.4byte	.LFE40-.LFB40
 12574 0148 00000000 		.4byte	.LFB41
 12575 014c 90020000 		.4byte	.LFE41-.LFB41
 12576 0150 00000000 		.4byte	0
 12577 0154 00000000 		.4byte	0
 12578              		.section	.debug_ranges,"",%progbits
 12579              	.Ldebug_ranges0:
 12580 0000 00000000 		.4byte	.LFB2
 12581 0004 36000000 		.4byte	.LFE2
 12582 0008 00000000 		.4byte	.LFB3
 12583 000c 2E000000 		.4byte	.LFE3
 12584 0010 00000000 		.4byte	.LFB4
 12585 0014 4A000000 		.4byte	.LFE4
 12586 0018 00000000 		.4byte	.LFB5
 12587 001c 32000000 		.4byte	.LFE5
 12588 0020 00000000 		.4byte	.LFB6
 12589 0024 D8000000 		.4byte	.LFE6
 12590 0028 00000000 		.4byte	.LFB7
 12591 002c 98010000 		.4byte	.LFE7
 12592 0030 00000000 		.4byte	.LFB8
 12593 0034 38000000 		.4byte	.LFE8
 12594 0038 00000000 		.4byte	.LFB9
 12595 003c 5E010000 		.4byte	.LFE9
 12596 0040 00000000 		.4byte	.LFB10
 12597 0044 32020000 		.4byte	.LFE10
 12598 0048 00000000 		.4byte	.LFB11
 12599 004c BC000000 		.4byte	.LFE11
 12600 0050 00000000 		.4byte	.LFB12
 12601 0054 40010000 		.4byte	.LFE12
 12602 0058 00000000 		.4byte	.LFB13
 12603 005c 24010000 		.4byte	.LFE13
 12604 0060 00000000 		.4byte	.LFB14
 12605 0064 DA010000 		.4byte	.LFE14
 12606 0068 00000000 		.4byte	.LFB15
 12607 006c C2000000 		.4byte	.LFE15
 12608 0070 00000000 		.4byte	.LFB16
 12609 0074 C2000000 		.4byte	.LFE16
 12610 0078 00000000 		.4byte	.LFB17
 12611 007c E8000000 		.4byte	.LFE17
 12612 0080 00000000 		.4byte	.LFB18
 12613 0084 68000000 		.4byte	.LFE18
 12614 0088 00000000 		.4byte	.LFB19
 12615 008c 1C020000 		.4byte	.LFE19
 12616 0090 00000000 		.4byte	.LFB20
 12617 0094 38010000 		.4byte	.LFE20
 12618 0098 00000000 		.4byte	.LFB21
 12619 009c 26010000 		.4byte	.LFE21
 12620 00a0 00000000 		.4byte	.LFB22
 12621 00a4 CC000000 		.4byte	.LFE22
 12622 00a8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 284


 12623 00ac D8050000 		.4byte	.LFE23
 12624 00b0 00000000 		.4byte	.LFB24
 12625 00b4 4E000000 		.4byte	.LFE24
 12626 00b8 00000000 		.4byte	.LFB25
 12627 00bc 58000000 		.4byte	.LFE25
 12628 00c0 00000000 		.4byte	.LFB26
 12629 00c4 4A030000 		.4byte	.LFE26
 12630 00c8 00000000 		.4byte	.LFB27
 12631 00cc 8A020000 		.4byte	.LFE27
 12632 00d0 00000000 		.4byte	.LFB28
 12633 00d4 3C030000 		.4byte	.LFE28
 12634 00d8 00000000 		.4byte	.LFB29
 12635 00dc 70010000 		.4byte	.LFE29
 12636 00e0 00000000 		.4byte	.LFB30
 12637 00e4 36000000 		.4byte	.LFE30
 12638 00e8 00000000 		.4byte	.LFB31
 12639 00ec 62020000 		.4byte	.LFE31
 12640 00f0 00000000 		.4byte	.LFB32
 12641 00f4 F8000000 		.4byte	.LFE32
 12642 00f8 00000000 		.4byte	.LFB33
 12643 00fc C4000000 		.4byte	.LFE33
 12644 0100 00000000 		.4byte	.LFB34
 12645 0104 86000000 		.4byte	.LFE34
 12646 0108 00000000 		.4byte	.LFB35
 12647 010c BC010000 		.4byte	.LFE35
 12648 0110 00000000 		.4byte	.LFB36
 12649 0114 60010000 		.4byte	.LFE36
 12650 0118 00000000 		.4byte	.LFB37
 12651 011c C2010000 		.4byte	.LFE37
 12652 0120 00000000 		.4byte	.LFB38
 12653 0124 5C030000 		.4byte	.LFE38
 12654 0128 00000000 		.4byte	.LFB39
 12655 012c DC000000 		.4byte	.LFE39
 12656 0130 00000000 		.4byte	.LFB40
 12657 0134 D2000000 		.4byte	.LFE40
 12658 0138 00000000 		.4byte	.LFB41
 12659 013c 90020000 		.4byte	.LFE41
 12660 0140 00000000 		.4byte	0
 12661 0144 00000000 		.4byte	0
 12662              		.section	.debug_line,"",%progbits
 12663              	.Ldebug_line0:
 12664 0000 400B0000 		.section	.debug_str,"MS",%progbits,1
 12664      02004100 
 12664      00000201 
 12664      FB0E0D00 
 12664      01010101 
 12665              	.LASF92:
 12666 0000 6469725F 		.ascii	"dir_find\000"
 12666      66696E64 
 12666      00
 12667              	.LASF75:
 12668 0009 6D656D5F 		.ascii	"mem_cpy\000"
 12668      63707900 
 12669              	.LASF87:
 12670 0011 72656D6F 		.ascii	"remove_chain\000"
 12670      76655F63 
 12670      6861696E 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 285


 12670      00
 12671              	.LASF131:
 12672 001e 665F7265 		.ascii	"f_readdir\000"
 12672      61646469 
 12672      7200
 12673              	.LASF83:
 12674 0028 636C7374 		.ascii	"clst\000"
 12674      00
 12675              	.LASF86:
 12676 002d 7075745F 		.ascii	"put_fat\000"
 12676      66617400 
 12677              	.LASF36:
 12678 0035 6469725F 		.ascii	"dir_ptr\000"
 12678      70747200 
 12679              	.LASF47:
 12680 003d 46525F4E 		.ascii	"FR_NOT_READY\000"
 12680      4F545F52 
 12680      45414459 
 12680      00
 12681              	.LASF28:
 12682 004a 46415446 		.ascii	"FATFS\000"
 12682      5300
 12683              	.LASF142:
 12684 0050 665F7574 		.ascii	"f_utime\000"
 12684      696D6500 
 12685              	.LASF0:
 12686 0058 756E7369 		.ascii	"unsigned int\000"
 12686      676E6564 
 12686      20696E74 
 12686      00
 12687              	.LASF55:
 12688 0065 46525F49 		.ascii	"FR_INVALID_DRIVE\000"
 12688      4E56414C 
 12688      49445F44 
 12688      52495645 
 12688      00
 12689              	.LASF14:
 12690 0076 6E5F6661 		.ascii	"n_fats\000"
 12690      747300
 12691              	.LASF98:
 12692 007d 65786376 		.ascii	"excvt\000"
 12692      7400
 12693              	.LASF124:
 12694 0083 77627566 		.ascii	"wbuff\000"
 12694      6600
 12695              	.LASF58:
 12696 0089 46525F4D 		.ascii	"FR_MKFS_ABORTED\000"
 12696      4B46535F 
 12696      41424F52 
 12696      54454400 
 12697              	.LASF34:
 12698 0099 64736563 		.ascii	"dsect\000"
 12698      7400
 12699              	.LASF26:
 12700 009f 77696E73 		.ascii	"winsect\000"
 12700      65637400 
 12701              	.LASF115:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 286


 12702 00a7 6D6F6465 		.ascii	"mode\000"
 12702      00
 12703              	.LASF84:
 12704 00ac 636C7573 		.ascii	"clust2sect\000"
 12704      74327365 
 12704      637400
 12705              	.LASF62:
 12706 00b7 46525F54 		.ascii	"FR_TOO_MANY_OPEN_FILES\000"
 12706      4F4F5F4D 
 12706      414E595F 
 12706      4F50454E 
 12706      5F46494C 
 12707              	.LASF135:
 12708 00ce 665F7472 		.ascii	"f_truncate\000"
 12708      756E6361 
 12708      746500
 12709              	.LASF39:
 12710 00d9 66646174 		.ascii	"fdate\000"
 12710      6500
 12711              	.LASF134:
 12712 00df 66617466 		.ascii	"fatfs\000"
 12712      7300
 12713              	.LASF16:
 12714 00e5 6673695F 		.ascii	"fsi_flag\000"
 12714      666C6167 
 12714      00
 12715              	.LASF35:
 12716 00ee 6469725F 		.ascii	"dir_sect\000"
 12716      73656374 
 12716      00
 12717              	.LASF73:
 12718 00f7 666C6F61 		.ascii	"float\000"
 12718      7400
 12719              	.LASF40:
 12720 00fd 6674696D 		.ascii	"ftime\000"
 12720      6500
 12721              	.LASF109:
 12722 0103 6E636C73 		.ascii	"nclst\000"
 12722      7400
 12723              	.LASF37:
 12724 0109 696E6465 		.ascii	"index\000"
 12724      7800
 12725              	.LASF10:
 12726 010f 44574F52 		.ascii	"DWORD\000"
 12726      4400
 12727              	.LASF11:
 12728 0115 54434841 		.ascii	"TCHAR\000"
 12728      5200
 12729              	.LASF144:
 12730 011b 70617468 		.ascii	"path_old\000"
 12730      5F6F6C64 
 12730      00
 12731              	.LASF72:
 12732 0124 6C6F6E67 		.ascii	"long long unsigned int\000"
 12732      206C6F6E 
 12732      6720756E 
 12732      7369676E 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 287


 12732      65642069 
 12733              	.LASF81:
 12734 013b 77736563 		.ascii	"wsect\000"
 12734      7400
 12735              	.LASF46:
 12736 0141 46525F49 		.ascii	"FR_INT_ERR\000"
 12736      4E545F45 
 12736      525200
 12737              	.LASF30:
 12738 014c 70616431 		.ascii	"pad1\000"
 12738      00
 12739              	.LASF136:
 12740 0151 665F756E 		.ascii	"f_unlink\000"
 12740      6C696E6B 
 12740      00
 12741              	.LASF12:
 12742 015a 66735F74 		.ascii	"fs_type\000"
 12742      79706500 
 12743              	.LASF23:
 12744 0162 66617462 		.ascii	"fatbase\000"
 12744      61736500 
 12745              	.LASF138:
 12746 016a 665F6D6B 		.ascii	"f_mkdir\000"
 12746      64697200 
 12747              	.LASF140:
 12748 0172 76616C75 		.ascii	"value\000"
 12748      6500
 12749              	.LASF104:
 12750 0178 73746174 		.ascii	"stat\000"
 12750      00
 12751              	.LASF117:
 12752 017d 62756666 		.ascii	"buff\000"
 12752      00
 12753              	.LASF101:
 12754 0182 63686563 		.ascii	"check_fs\000"
 12754      6B5F6673 
 12754      00
 12755              	.LASF52:
 12756 018b 46525F45 		.ascii	"FR_EXIST\000"
 12756      58495354 
 12756      00
 12757              	.LASF114:
 12758 0194 665F6F70 		.ascii	"f_open\000"
 12758      656E00
 12759              	.LASF53:
 12760 019b 46525F49 		.ascii	"FR_INVALID_OBJECT\000"
 12760      4E56414C 
 12760      49445F4F 
 12760      424A4543 
 12760      5400
 12761              	.LASF78:
 12762 01ad 63686B5F 		.ascii	"chk_chr\000"
 12762      63687200 
 12763              	.LASF100:
 12764 01b5 666F6C6C 		.ascii	"follow_path\000"
 12764      6F775F70 
 12764      61746800 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 288


 12765              	.LASF129:
 12766 01c1 69667074 		.ascii	"ifptr\000"
 12766      7200
 12767              	.LASF60:
 12768 01c7 46525F4C 		.ascii	"FR_LOCKED\000"
 12768      4F434B45 
 12768      4400
 12769              	.LASF126:
 12770 01d1 665F636C 		.ascii	"f_close\000"
 12770      6F736500 
 12771              	.LASF97:
 12772 01d9 70617468 		.ascii	"path\000"
 12772      00
 12773              	.LASF99:
 12774 01de 6765745F 		.ascii	"get_fileinfo\000"
 12774      66696C65 
 12774      696E666F 
 12774      00
 12775              	.LASF85:
 12776 01eb 6765745F 		.ascii	"get_fat\000"
 12776      66617400 
 12777              	.LASF145:
 12778 01f3 70617468 		.ascii	"path_new\000"
 12778      5F6E6577 
 12778      00
 12779              	.LASF1:
 12780 01fc 63686172 		.ascii	"char\000"
 12780      00
 12781              	.LASF130:
 12782 0201 665F6F70 		.ascii	"f_opendir\000"
 12782      656E6469 
 12782      7200
 12783              	.LASF116:
 12784 020b 665F7265 		.ascii	"f_read\000"
 12784      616400
 12785              	.LASF107:
 12786 0212 74736563 		.ascii	"tsect\000"
 12786      7400
 12787              	.LASF80:
 12788 0218 73656374 		.ascii	"sector\000"
 12788      6F7200
 12789              	.LASF66:
 12790 021f 5245535F 		.ascii	"RES_ERROR\000"
 12790      4552524F 
 12790      5200
 12791              	.LASF82:
 12792 0229 73796E63 		.ascii	"sync\000"
 12792      00
 12793              	.LASF90:
 12794 022e 6469725F 		.ascii	"dir_next\000"
 12794      6E657874 
 12794      00
 12795              	.LASF120:
 12796 0237 63736563 		.ascii	"csect\000"
 12796      7400
 12797              	.LASF18:
 12798 023d 6C617374 		.ascii	"last_clust\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 289


 12798      5F636C75 
 12798      737400
 12799              	.LASF20:
 12800 0248 6673695F 		.ascii	"fsi_sector\000"
 12800      73656374 
 12800      6F7200
 12801              	.LASF51:
 12802 0253 46525F44 		.ascii	"FR_DENIED\000"
 12802      454E4945 
 12802      4400
 12803              	.LASF38:
 12804 025d 73656374 		.ascii	"sect\000"
 12804      00
 12805              	.LASF19:
 12806 0262 66726565 		.ascii	"free_clust\000"
 12806      5F636C75 
 12806      737400
 12807              	.LASF93:
 12808 026d 6469725F 		.ascii	"dir_read\000"
 12808      72656164 
 12808      00
 12809              	.LASF57:
 12810 0276 46525F4E 		.ascii	"FR_NO_FILESYSTEM\000"
 12810      4F5F4649 
 12810      4C455359 
 12810      5354454D 
 12810      00
 12811              	.LASF71:
 12812 0287 6C6F6E67 		.ascii	"long long int\000"
 12812      206C6F6E 
 12812      6720696E 
 12812      7400
 12813              	.LASF106:
 12814 0295 66617369 		.ascii	"fasize\000"
 12814      7A6500
 12815              	.LASF22:
 12816 029c 6673697A 		.ascii	"fsize\000"
 12816      6500
 12817              	.LASF143:
 12818 02a2 665F7265 		.ascii	"f_rename\000"
 12818      6E616D65 
 12818      00
 12819              	.LASF103:
 12820 02ab 63686B5F 		.ascii	"chk_wp\000"
 12820      777000
 12821              	.LASF15:
 12822 02b2 77666C61 		.ascii	"wflag\000"
 12822      6700
 12823              	.LASF48:
 12824 02b8 46525F4E 		.ascii	"FR_NO_FILE\000"
 12824      4F5F4649 
 12824      4C4500
 12825              	.LASF4:
 12826 02c3 42595445 		.ascii	"BYTE\000"
 12826      00
 12827              	.LASF148:
 12828 02c8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 290


 12828      4320342E 
 12828      392E3320 
 12828      32303135 
 12828      30333033 
 12829 02fb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 12829      20726576 
 12829      6973696F 
 12829      6E203232 
 12829      31323230 
 12830 032e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 12830      66756E63 
 12830      74696F6E 
 12830      2D736563 
 12830      74696F6E 
 12831              	.LASF7:
 12832 0356 574F5244 		.ascii	"WORD\000"
 12832      00
 12833              	.LASF13:
 12834 035b 6373697A 		.ascii	"csize\000"
 12834      6500
 12835              	.LASF110:
 12836 0361 737A6266 		.ascii	"szbfat\000"
 12836      617400
 12837              	.LASF147:
 12838 0368 46736964 		.ascii	"Fsid\000"
 12838      00
 12839              	.LASF69:
 12840 036d 5245535F 		.ascii	"RES_PARERR\000"
 12840      50415245 
 12840      525200
 12841              	.LASF31:
 12842 0378 66707472 		.ascii	"fptr\000"
 12842      00
 12843              	.LASF141:
 12844 037d 6D61736B 		.ascii	"mask\000"
 12844      00
 12845              	.LASF21:
 12846 0382 6E5F6661 		.ascii	"n_fatent\000"
 12846      74656E74 
 12846      00
 12847              	.LASF67:
 12848 038b 5245535F 		.ascii	"RES_WRPRT\000"
 12848      57525052 
 12848      5400
 12849              	.LASF24:
 12850 0395 64697262 		.ascii	"dirbase\000"
 12850      61736500 
 12851              	.LASF42:
 12852 039d 666E616D 		.ascii	"fname\000"
 12852      6500
 12853              	.LASF122:
 12854 03a3 665F7772 		.ascii	"f_write\000"
 12854      69746500 
 12855              	.LASF149:
 12856 03ab 2E5C6666 		.ascii	".\\ff\\ff.c\000"
 12856      5C66662E 
 12856      6300
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 291


 12857              	.LASF146:
 12858 03b5 46617446 		.ascii	"FatFs\000"
 12858      7300
 12859              	.LASF150:
 12860 03bb 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\vesion 2\\fw\\fin"
 12860      79707265 
 12860      73735C73 
 12860      79737465 
 12860      6D2D7374 
 12861 03e9 6973685C 		.ascii	"ish\\sandbox\\v2\\SD\\SD FF.cydsn\000"
 12861      73616E64 
 12861      626F785C 
 12861      76325C53 
 12861      445C5344 
 12862              	.LASF76:
 12863 0407 6D656D5F 		.ascii	"mem_set\000"
 12863      73657400 
 12864              	.LASF128:
 12865 040f 6E736563 		.ascii	"nsect\000"
 12865      7400
 12866              	.LASF118:
 12867 0415 72656D61 		.ascii	"remain\000"
 12867      696E00
 12868              	.LASF49:
 12869 041c 46525F4E 		.ascii	"FR_NO_PATH\000"
 12869      4F5F5041 
 12869      544800
 12870              	.LASF56:
 12871 0427 46525F4E 		.ascii	"FR_NOT_ENABLED\000"
 12871      4F545F45 
 12871      4E41424C 
 12871      454400
 12872              	.LASF45:
 12873 0436 46525F44 		.ascii	"FR_DISK_ERR\000"
 12873      49534B5F 
 12873      45525200 
 12874              	.LASF5:
 12875 0442 73686F72 		.ascii	"short int\000"
 12875      7420696E 
 12875      7400
 12876              	.LASF113:
 12877 044c 665F6D6F 		.ascii	"f_mount\000"
 12877      756E7400 
 12878              	.LASF61:
 12879 0454 46525F4E 		.ascii	"FR_NOT_ENOUGH_CORE\000"
 12879      4F545F45 
 12879      4E4F5547 
 12879      485F434F 
 12879      524500
 12880              	.LASF8:
 12881 0467 6C6F6E67 		.ascii	"long int\000"
 12881      20696E74 
 12881      00
 12882              	.LASF79:
 12883 0470 6D6F7665 		.ascii	"move_window\000"
 12883      5F77696E 
 12883      646F7700 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 292


 12884              	.LASF137:
 12885 047c 64636C73 		.ascii	"dclst\000"
 12885      7400
 12886              	.LASF123:
 12887 0482 77636E74 		.ascii	"wcnt\000"
 12887      00
 12888              	.LASF50:
 12889 0487 46525F49 		.ascii	"FR_INVALID_NAME\000"
 12889      4E56414C 
 12889      49445F4E 
 12889      414D4500 
 12890              	.LASF29:
 12891 0497 666C6167 		.ascii	"flag\000"
 12891      00
 12892              	.LASF127:
 12893 049c 665F6C73 		.ascii	"f_lseek\000"
 12893      65656B00 
 12894              	.LASF133:
 12895 04a4 665F6765 		.ascii	"f_getfree\000"
 12895      74667265 
 12895      6500
 12896              	.LASF17:
 12897 04ae 6E5F726F 		.ascii	"n_rootdir\000"
 12897      6F746469 
 12897      7200
 12898              	.LASF41:
 12899 04b8 66617474 		.ascii	"fattrib\000"
 12899      72696200 
 12900              	.LASF3:
 12901 04c0 55494E54 		.ascii	"UINT\000"
 12901      00
 12902              	.LASF96:
 12903 04c5 63726561 		.ascii	"create_name\000"
 12903      74655F6E 
 12903      616D6500 
 12904              	.LASF27:
 12905 04d1 73697A65 		.ascii	"sizetype\000"
 12905      74797065 
 12905      00
 12906              	.LASF9:
 12907 04da 6C6F6E67 		.ascii	"long unsigned int\000"
 12907      20756E73 
 12907      69676E65 
 12907      6420696E 
 12907      7400
 12908              	.LASF125:
 12909 04ec 665F7379 		.ascii	"f_sync\000"
 12909      6E6300
 12910              	.LASF63:
 12911 04f3 46524553 		.ascii	"FRESULT\000"
 12911      554C5400 
 12912              	.LASF121:
 12913 04fb 72627566 		.ascii	"rbuff\000"
 12913      6600
 12914              	.LASF77:
 12915 0501 6D656D5F 		.ascii	"mem_cmp\000"
 12915      636D7000 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 293


 12916              	.LASF44:
 12917 0509 46525F4F 		.ascii	"FR_OK\000"
 12917      4B00
 12918              	.LASF105:
 12919 050f 62736563 		.ascii	"bsect\000"
 12919      7400
 12920              	.LASF88:
 12921 0515 63726561 		.ascii	"create_chain\000"
 12921      74655F63 
 12921      6861696E 
 12921      00
 12922              	.LASF33:
 12923 0522 636C7573 		.ascii	"clust\000"
 12923      7400
 12924              	.LASF119:
 12925 0528 72636E74 		.ascii	"rcnt\000"
 12925      00
 12926              	.LASF2:
 12927 052d 756E7369 		.ascii	"unsigned char\000"
 12927      676E6564 
 12927      20636861 
 12927      7200
 12928              	.LASF89:
 12929 053b 6469725F 		.ascii	"dir_sdi\000"
 12929      73646900 
 12930              	.LASF59:
 12931 0543 46525F54 		.ascii	"FR_TIMEOUT\000"
 12931      494D454F 
 12931      555400
 12932              	.LASF64:
 12933 054e 44535441 		.ascii	"DSTATUS\000"
 12933      54555300 
 12934              	.LASF65:
 12935 0556 5245535F 		.ascii	"RES_OK\000"
 12935      4F4B00
 12936              	.LASF94:
 12937 055d 6469725F 		.ascii	"dir_register\000"
 12937      72656769 
 12937      73746572 
 12937      00
 12938              	.LASF68:
 12939 056a 5245535F 		.ascii	"RES_NOTRDY\000"
 12939      4E4F5452 
 12939      445900
 12940              	.LASF111:
 12941 0575 6E727376 		.ascii	"nrsv\000"
 12941      00
 12942              	.LASF70:
 12943 057a 7369676E 		.ascii	"signed char\000"
 12943      65642063 
 12943      68617200 
 12944              	.LASF6:
 12945 0586 73686F72 		.ascii	"short unsigned int\000"
 12945      7420756E 
 12945      7369676E 
 12945      65642069 
 12945      6E7400
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccyRNGcP.s 			page 294


 12946              	.LASF25:
 12947 0599 64617461 		.ascii	"database\000"
 12947      62617365 
 12947      00
 12948              	.LASF102:
 12949 05a2 63686B5F 		.ascii	"chk_mounted\000"
 12949      6D6F756E 
 12949      74656400 
 12950              	.LASF91:
 12951 05ae 73747265 		.ascii	"stretch\000"
 12951      74636800 
 12952              	.LASF74:
 12953 05b6 646F7562 		.ascii	"double\000"
 12953      6C6500
 12954              	.LASF95:
 12955 05bd 6469725F 		.ascii	"dir_remove\000"
 12955      72656D6F 
 12955      766500
 12956              	.LASF108:
 12957 05c8 73797365 		.ascii	"sysect\000"
 12957      637400
 12958              	.LASF132:
 12959 05cf 665F7374 		.ascii	"f_stat\000"
 12959      617400
 12960              	.LASF54:
 12961 05d6 46525F57 		.ascii	"FR_WRITE_PROTECTED\000"
 12961      52495445 
 12961      5F50524F 
 12961      54454354 
 12961      454400
 12962              	.LASF43:
 12963 05e9 46494C49 		.ascii	"FILINFO\000"
 12963      4E464F00 
 12964              	.LASF32:
 12965 05f1 73636C75 		.ascii	"sclust\000"
 12965      737400
 12966              	.LASF112:
 12967 05f8 76616C69 		.ascii	"validate\000"
 12967      64617465 
 12967      00
 12968              	.LASF139:
 12969 0601 665F6368 		.ascii	"f_chmod\000"
 12969      6D6F6400 
 12970              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
